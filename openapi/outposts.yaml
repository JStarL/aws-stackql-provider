openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: outposts
  x-aws-serviceName: outposts
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2019-12-03'
  title: AWS Outposts
  description: |-
    Amazon Web Services Outposts is a fully managed service that extends Amazon Web Services infrastructure, APIs, and tools to customer premises. By providing local access to Amazon Web Services managed infrastructure, Amazon Web Services Outposts enables customers to build and run applications on premises using the same programming interfaces as in Amazon Web Services Regions, while using local compute and storage resources for lower latency and local data processing needs.
servers:
- description: The AWS Outposts regional endpoint
  url: https://outposts.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /outposts/{OutpostIdentifier}/capacity/{CapacityTaskId}:
    post:
      operationId: CancelCapacityTask
      description: |-
        Cancels the capacity task.
      parameters:
      - name: CapacityTaskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CapacityTaskId'
      - name: OutpostIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetCapacityTask
      description: |-
        Gets details of the specified capacity task.
      parameters:
      - name: CapacityTaskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CapacityTaskId'
      - name: OutpostIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /orders/{OrderId}/cancel:
    post:
      operationId: CancelOrder
      description: |-
        Cancels the specified order for an Outpost.
      parameters:
      - name: OrderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OrderId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /orders:
    post:
      operationId: CreateOrder
      description: |-
        Creates an order for an Outpost.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OutpostIdentifier:
                  $ref: '#/components/schemas/OutpostIdentifier'
                LineItems:
                  $ref: '#/components/schemas/LineItemRequestListDefinition'
                PaymentOption:
                  $ref: '#/components/schemas/PaymentOption'
                PaymentTerm:
                  $ref: '#/components/schemas/PaymentTerm'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '402':
          description: |-
            You have exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /outposts:
    post:
      operationId: CreateOutpost
      description: |-
        Creates an Outpost.

        You can specify either an Availability one or an AZ ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/OutpostName'
                Description:
                  $ref: '#/components/schemas/OutpostDescription'
                SiteId:
                  $ref: '#/components/schemas/SiteId'
                AvailabilityZone:
                  $ref: '#/components/schemas/AvailabilityZone'
                AvailabilityZoneId:
                  $ref: '#/components/schemas/AvailabilityZoneId'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                SupportedHardwareType:
                  $ref: '#/components/schemas/SupportedHardwareType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '402':
          description: |-
            You have exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListOutposts
      description: |-
        Lists the Outposts for your Amazon Web Services account.

        Use filters to return specific results. If you specify multiple filters, the results include only the resources that match all of the specified filters. For a filter where you can specify multiple values, the results include items that match any of the values that you specify for the filter.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      - name: LifeCycleStatusFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LifeCycleStatusList'
      - name: AvailabilityZoneFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AvailabilityZoneList'
      - name: AvailabilityZoneIdFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AvailabilityZoneIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sites:
    post:
      operationId: CreateSite
      description: |-
        Creates a site for an Outpost.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/SiteName'
                Description:
                  $ref: '#/components/schemas/SiteDescription'
                Notes:
                  $ref: '#/components/schemas/SiteNotes'
                Tags:
                  $ref: '#/components/schemas/TagMap'
                OperatingAddress:
                  $ref: '#/components/schemas/Address'
                ShippingAddress:
                  $ref: '#/components/schemas/Address'
                RackPhysicalProperties:
                  $ref: '#/components/schemas/RackPhysicalProperties'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            You have exceeded a service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListSites
      description: |-
        Lists the Outpost sites for your Amazon Web Services account. Use filters to return specific results.

        Use filters to return specific results. If you specify multiple filters, the results include only the resources that match all of the specified filters. For a filter where you can specify multiple values, the results include items that match any of the values that you specify for the filter.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      - name: OperatingAddressCountryCodeFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CountryCodeList'
      - name: OperatingAddressStateOrRegionFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/StateOrRegionList'
      - name: OperatingAddressCityFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CityList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /outposts/{OutpostId}:
    delete:
      operationId: DeleteOutpost
      description: |-
        Deletes the specified Outpost.
      parameters:
      - name: OutpostId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetOutpost
      description: |-
        Gets information about the specified Outpost.
      parameters:
      - name: OutpostId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateOutpost
      description: |-
        Updates an Outpost.
      parameters:
      - name: OutpostId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/OutpostName'
                Description:
                  $ref: '#/components/schemas/OutpostDescription'
                SupportedHardwareType:
                  $ref: '#/components/schemas/SupportedHardwareType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sites/{SiteId}:
    delete:
      operationId: DeleteSite
      description: |-
        Deletes the specified site.
      parameters:
      - name: SiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SiteId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetSite
      description: |-
        Gets information about the specified Outpost site.
      parameters:
      - name: SiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SiteId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateSite
      description: |-
        Updates the specified site.
      parameters:
      - name: SiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/SiteName'
                Description:
                  $ref: '#/components/schemas/SiteDescription'
                Notes:
                  $ref: '#/components/schemas/SiteNotes'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog/item/{CatalogItemId}:
    get:
      operationId: GetCatalogItem
      description: |-
        Gets information about the specified catalog item.
      parameters:
      - name: CatalogItemId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SkuCode'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /connections/{ConnectionId}:
    get:
      operationId: GetConnection
      description: |-
        Amazon Web Services uses this action to install Outpost servers.

        Gets information about the specified connection.

        Use CloudTrail to monitor this action or Amazon Web Services managed policy for Amazon Web Services Outposts to secure it. For more information, see [ Amazon Web Services managed policies for Amazon Web Services Outposts](https://docs.aws.amazon.com/outposts/latest/userguide/security-iam-awsmanpol.html) and [ Logging Amazon Web Services Outposts API calls with Amazon Web Services CloudTrail](https://docs.aws.amazon.com/outposts/latest/userguide/logging-using-cloudtrail.html) in the _Amazon Web Services Outposts User Guide_.
      parameters:
      - name: ConnectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ConnectionId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /orders/{OrderId}:
    get:
      operationId: GetOrder
      description: |-
        Gets information about the specified order.
      parameters:
      - name: OrderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OrderId'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /outposts/{OutpostId}/instanceTypes:
    get:
      operationId: GetOutpostInstanceTypes
      description: |-
        Gets the instance types for the specified Outpost.
      parameters:
      - name: OutpostId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostId'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /outposts/{OutpostIdentifier}/supportedInstanceTypes:
    get:
      operationId: GetOutpostSupportedInstanceTypes
      description: |-
        Gets the instance types that an Outpost can support in `InstanceTypeCapacity`. This will generally include instance types that are not currently configured and therefore cannot be launched with the current Outpost capacity configuration.
      parameters:
      - name: OutpostIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      - name: OrderId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OrderId'
      - name: AssetId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetIdInput'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sites/{SiteId}/address:
    get:
      operationId: GetSiteAddress
      description: |-
        Gets the site address of the specified site.
      parameters:
      - name: SiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SiteId'
      - name: AddressType
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AddressType'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateSiteAddress
      description: |-
        Updates the address of the specified site.

        You can't update a site address if there is an order in progress. You must wait for the order to complete or cancel the order.

        You can update the operating address before you place an order at the site, or after all Outposts that belong to the site have been deactivated.
      parameters:
      - name: SiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AddressType:
                  $ref: '#/components/schemas/AddressType'
                Address:
                  $ref: '#/components/schemas/Address'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /outposts/{OutpostIdentifier}/assetInstances:
    get:
      operationId: ListAssetInstances
      description: |-
        A list of Amazon EC2 instances, belonging to all accounts, running on the specified Outpost. Does not include Amazon EBS or Amazon S3 instances.
      parameters:
      - name: OutpostIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      - name: AssetIdFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AssetIdList'
      - name: InstanceTypeFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OutpostInstanceTypeList'
      - name: AccountIdFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountIdList'
      - name: AwsServiceFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AWSServiceNameList'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /outposts/{OutpostIdentifier}/assets:
    get:
      operationId: ListAssets
      description: |-
        Lists the hardware assets for the specified Outpost.

        Use filters to return specific results. If you specify multiple filters, the results include only the resources that match all of the specified filters. For a filter where you can specify multiple values, the results include items that match any of the values that you specify for the filter.
      parameters:
      - name: OutpostIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      - name: HostIdFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/HostIdList'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: StatusFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/StatusList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /outposts/{OutpostIdentifier}/capacity/{CapacityTaskId}/blockingInstances:
    get:
      operationId: ListBlockingInstancesForCapacityTask
      description: |-
        A list of Amazon EC2 instances running on the Outpost and belonging to the account that initiated the capacity task. Use this list to specify the instances you cannot stop to free up capacity to run the capacity task.
      parameters:
      - name: OutpostIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      - name: CapacityTaskId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CapacityTaskId'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /capacity/tasks:
    get:
      operationId: ListCapacityTasks
      description: |-
        Lists the capacity tasks for your Amazon Web Services account.

        Use filters to return specific results. If you specify multiple filters, the results include only the resources that match all of the specified filters. For a filter where you can specify multiple values, the results include items that match any of the values that you specify for the filter.
      parameters:
      - name: OutpostIdentifierFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: CapacityTaskStatusFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CapacityTaskStatusList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /catalog/items:
    get:
      operationId: ListCatalogItems
      description: |-
        Lists the items in the catalog.

        Use filters to return specific results. If you specify multiple filters, the results include only the resources that match all of the specified filters. For a filter where you can specify multiple values, the results include items that match any of the values that you specify for the filter.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      - name: ItemClassFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CatalogItemClassList'
      - name: SupportedStorageFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SupportedStorageList'
      - name: EC2FamilyFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EC2FamilyList'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-orders:
    get:
      operationId: ListOrders
      description: |-
        Lists the Outpost orders for your Amazon Web Services account.
      parameters:
      - name: OutpostIdentifierFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Token'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults1000'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags for the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds tags to the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /outposts/{OutpostIdentifier}/capacity:
    post:
      operationId: StartCapacityTask
      description: |-
        Starts the specified capacity task. You can have one active capacity task for each order and each Outpost.
      parameters:
      - name: OutpostIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/OutpostIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OrderId:
                  $ref: '#/components/schemas/OrderId'
                AssetId:
                  $ref: '#/components/schemas/AssetIdInput'
                InstancePools:
                  $ref: '#/components/schemas/RequestedInstancePools'
                InstancesToExclude:
                  $ref: '#/components/schemas/InstancesToExclude'
                DryRun:
                  $ref: '#/components/schemas/DryRun'
                TaskActionOnBlockingInstances:
                  $ref: '#/components/schemas/TaskActionOnBlockingInstances'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /connections:
    post:
      operationId: StartConnection
      description: |-
        Amazon Web Services uses this action to install Outpost servers.

        Starts the connection required for Outpost server installation.

        Use CloudTrail to monitor this action or Amazon Web Services managed policy for Amazon Web Services Outposts to secure it. For more information, see [ Amazon Web Services managed policies for Amazon Web Services Outposts](https://docs.aws.amazon.com/outposts/latest/userguide/security-iam-awsmanpol.html) and [ Logging Amazon Web Services Outposts API calls with Amazon Web Services CloudTrail](https://docs.aws.amazon.com/outposts/latest/userguide/logging-using-cloudtrail.html) in the _Amazon Web Services Outposts User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                DeviceSerialNumber:
                  $ref: '#/components/schemas/DeviceSerialNumber'
                AssetId:
                  $ref: '#/components/schemas/AssetId'
                ClientPublicKey:
                  $ref: '#/components/schemas/WireGuardPublicKey'
                NetworkInterfaceDeviceIndex:
                  $ref: '#/components/schemas/NetworkInterfaceDeviceIndex'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /sites/{SiteId}/rackPhysicalProperties:
    patch:
      operationId: UpdateSiteRackPhysicalProperties
      description: |-
        Update the physical and logistical details for a rack at a site. For more information about hardware requirements for racks, see [Network readiness checklist](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#checklist) in the Amazon Web Services Outposts User Guide.

        To update a rack at a site with an order of `IN_PROGRESS`, you must wait for the order to complete or cancel the order.
      parameters:
      - name: SiteId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SiteId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PowerDrawKva:
                  $ref: '#/components/schemas/PowerDrawKva'
                PowerPhase:
                  $ref: '#/components/schemas/PowerPhase'
                PowerConnector:
                  $ref: '#/components/schemas/PowerConnector'
                PowerFeedDrop:
                  $ref: '#/components/schemas/PowerFeedDrop'
                UplinkGbps:
                  $ref: '#/components/schemas/UplinkGbps'
                UplinkCount:
                  $ref: '#/components/schemas/UplinkCount'
                FiberOpticCableType:
                  $ref: '#/components/schemas/FiberOpticCableType'
                OpticalStandard:
                  $ref: '#/components/schemas/OpticalStandard'
                MaximumSupportedWeightLbs:
                  $ref: '#/components/schemas/MaximumSupportedWeightLbs'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have permission to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting this resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified request is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AWSServiceName:
      type: string
      enum:
      - AWS
      - EC2
      - ELASTICACHE
      - ELB
      - RDS
      - ROUTE53
    AWSServiceNameList:
      type: array
      items:
        $ref: '#/components/schemas/AWSServiceName'
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You do not have permission to perform this operation.
    AccountId:
      type: string
      pattern: ^\d{12}$
      minLength: 12
      maxLength: 12
    AccountIdList:
      type: array
      items:
        $ref: '#/components/schemas/AccountId'
    Address:
      type: object
      properties:
        ContactName:
          allOf:
          - $ref: '#/components/schemas/ContactName'
          description: The name of the contact.
        ContactPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/ContactPhoneNumber'
          description: The phone number of the contact.
        AddressLine1:
          allOf:
          - $ref: '#/components/schemas/AddressLine1'
          description: The first line of the address.
        AddressLine2:
          allOf:
          - $ref: '#/components/schemas/AddressLine2'
          description: The second line of the address.
        AddressLine3:
          allOf:
          - $ref: '#/components/schemas/AddressLine3'
          description: The third line of the address.
        City:
          allOf:
          - $ref: '#/components/schemas/City'
          description: The city for the address.
        StateOrRegion:
          allOf:
          - $ref: '#/components/schemas/StateOrRegion'
          description: The state for the address.
        DistrictOrCounty:
          allOf:
          - $ref: '#/components/schemas/DistrictOrCounty'
          description: The district or county for the address.
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/PostalCode'
          description: The postal code for the address.
        CountryCode:
          allOf:
          - $ref: '#/components/schemas/CountryCode'
          description: The ISO-3166 two-letter country code for the address.
        Municipality:
          allOf:
          - $ref: '#/components/schemas/Municipality'
          description: The municipality for the address.
      required:
      - AddressLine1
      - City
      - StateOrRegion
      - PostalCode
      - CountryCode
      description: Information about an address.
    AddressLine1:
      type: string
      pattern: ^\S[\S ]*$
      minLength: 1
      maxLength: 180
    AddressLine2:
      type: string
      pattern: ^\S[\S ]*$
      minLength: 0
      maxLength: 60
    AddressLine3:
      type: string
      pattern: ^\S[\S ]*$
      minLength: 0
      maxLength: 60
    AddressType:
      type: string
      enum:
      - SHIPPING_ADDRESS
      - OPERATING_ADDRESS
    Arn:
      type: string
      pattern: ^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:([a-z\d-]+)/)[a-z]{2,8}-[a-f0-9]{17}$
      minLength: 0
      maxLength: 1011
    AssetId:
      type: string
      pattern: ^(\w+)$
      minLength: 1
      maxLength: 100
    AssetIdInput:
      type: string
      pattern: ^\d{10}$
      minLength: 10
      maxLength: 10
    AssetIdList:
      type: array
      items:
        $ref: '#/components/schemas/AssetId'
    AssetInfo:
      type: object
      properties:
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          description: The ID of the asset. An Outpost asset can be a single server
            within an Outposts rack or an Outposts server configuration.
        RackId:
          allOf:
          - $ref: '#/components/schemas/RackId'
          description: The rack ID of the asset.
        AssetType:
          allOf:
          - $ref: '#/components/schemas/AssetType'
          description: The type of the asset.
        ComputeAttributes:
          allOf:
          - $ref: '#/components/schemas/ComputeAttributes'
          description: Information about compute hardware assets.
        AssetLocation:
          allOf:
          - $ref: '#/components/schemas/AssetLocation'
          description: The position of an asset in a rack.
      description: Information about hardware assets.
    AssetInstance:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The ID of the instance.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/OutpostInstanceType'
          description: The type of instance.
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          description: The ID of the asset. An Outpost asset can be a single server
            within an Outposts rack or an Outposts server configuration.
        AccountId:
          $ref: '#/components/schemas/AccountId'
        AwsServiceName:
          allOf:
          - $ref: '#/components/schemas/AWSServiceName'
          description: The Amazon Web Services service name of the instance.
      description: An Amazon EC2 instance.
    AssetInstanceCapacityList:
      type: array
      items:
        $ref: '#/components/schemas/AssetInstanceTypeCapacity'
    AssetInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/AssetInstance'
    AssetInstanceTypeCapacity:
      type: object
      properties:
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceTypeName'
          description: The type of instance.
        Count:
          allOf:
          - $ref: '#/components/schemas/InstanceTypeCount'
          description: The number of each instance type.
      required:
      - InstanceType
      - Count
      description: The capacity for each instance type.
    AssetListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/AssetInfo'
    AssetLocation:
      type: object
      properties:
        RackElevation:
          allOf:
          - $ref: '#/components/schemas/RackElevation'
          description: The position of an asset in a rack measured in rack units.
      description: Information about the position of the asset in a rack.
    AssetState:
      type: string
      enum:
      - ACTIVE
      - RETIRING
      - ISOLATED
    AssetType:
      type: string
      enum:
      - COMPUTE
    AvailabilityZone:
      type: string
      pattern: ^([a-zA-Z]+-){1,3}([a-zA-Z]+)?(\d+[a-zA-Z]?)?$
      minLength: 1
      maxLength: 1000
    AvailabilityZoneId:
      type: string
      pattern: ^[a-zA-Z]+\d-[a-zA-Z]+\d$
      minLength: 1
      maxLength: 255
    AvailabilityZoneIdList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZoneId'
    AvailabilityZoneList:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    BlockingInstance:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/InstanceId'
          description: The ID of the blocking instance.
        AccountId:
          $ref: '#/components/schemas/AccountId'
        AwsServiceName:
          allOf:
          - $ref: '#/components/schemas/AWSServiceName'
          description: The Amazon Web Services service name that owns the specified
            blocking instance.
      description: A running Amazon EC2 instance that can be stopped to free up capacity
        needed to run the capacity task.
    BlockingInstancesList:
      type: array
      items:
        $ref: '#/components/schemas/BlockingInstance'
    CIDR:
      type: string
      pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}/[0-9]{1,2}$
      minLength: 9
      maxLength: 18
    CIDRList:
      type: array
      items:
        $ref: '#/components/schemas/CIDR'
    CancelCapacityTaskInput:
      type: object
      properties:
        CapacityTaskId:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskId'
          description: ID of the capacity task that you want to cancel.
        OutpostIdentifier:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: ID or ARN of the Outpost associated with the capacity task
            that you want to cancel.
      required:
      - CapacityTaskId
      - OutpostIdentifier
    CancelCapacityTaskOutput:
      type: object
      properties: {}
    CancelOrderInput:
      type: object
      properties:
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: The ID of the order.
      required:
      - OrderId
    CancelOrderOutput:
      type: object
      properties: {}
    CapacityTaskFailure:
      type: object
      properties:
        Reason:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskStatusReason'
          description: The reason that the specified capacity task failed.
        Type:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskFailureType'
          description: The type of failure.
      required:
      - Reason
      description: The capacity tasks that failed.
    CapacityTaskFailureType:
      type: string
      enum:
      - UNSUPPORTED_CAPACITY_CONFIGURATION
      - UNEXPECTED_ASSET_STATE
      - BLOCKING_INSTANCES_NOT_EVACUATED
      - INTERNAL_SERVER_ERROR
      - RESOURCE_NOT_FOUND
    CapacityTaskId:
      type: string
      pattern: ^cap-[a-f0-9]{17}$
      minLength: 21
      maxLength: 21
    CapacityTaskList:
      type: array
      items:
        $ref: '#/components/schemas/CapacityTaskSummary'
    CapacityTaskStatus:
      type: string
      enum:
      - REQUESTED
      - IN_PROGRESS
      - FAILED
      - COMPLETED
      - WAITING_FOR_EVACUATION
      - CANCELLATION_IN_PROGRESS
      - CANCELLED
    CapacityTaskStatusList:
      type: array
      items:
        $ref: '#/components/schemas/CapacityTaskStatus'
    CapacityTaskStatusReason:
      type: string
      minLength: 0
      maxLength: 128
    CapacityTaskSummary:
      type: object
      properties:
        CapacityTaskId:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskId'
          description: The ID of the specified capacity task.
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID of the Outpost associated with the specified capacity
            task.
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: The ID of the Amazon Web Services Outposts order of the host
            associated with the capacity task.
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          description: The ID of the asset. An Outpost asset can be a single server
            within an Outposts rack or an Outposts server configuration.
        CapacityTaskStatus:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskStatus'
          description: The status of the capacity task.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The date that the specified capacity task was created.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The date that the specified capacity task successfully ran.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The date that the specified capacity was last modified.
      description: The summary of the capacity task.
    CatalogItem:
      type: object
      properties:
        CatalogItemId:
          allOf:
          - $ref: '#/components/schemas/SkuCode'
          description: The ID of the catalog item.
        ItemStatus:
          allOf:
          - $ref: '#/components/schemas/CatalogItemStatus'
          description: The status of a catalog item.
        EC2Capacities:
          allOf:
          - $ref: '#/components/schemas/EC2CapacityListDefinition'
          description: Information about the EC2 capacity of an item.
        PowerKva:
          allOf:
          - $ref: '#/components/schemas/CatalogItemPowerKva'
          description: Information about the power draw of an item.
        WeightLbs:
          allOf:
          - $ref: '#/components/schemas/CatalogItemWeightLbs'
          description: The weight of the item in pounds.
        SupportedUplinkGbps:
          allOf:
          - $ref: '#/components/schemas/SupportedUplinkGbpsListDefinition'
          description: The uplink speed this catalog item requires for the connection
            to the Region.
        SupportedStorage:
          allOf:
          - $ref: '#/components/schemas/SupportedStorageList'
          description: The supported storage options for the catalog item.
      description: Information about a catalog item.
    CatalogItemClass:
      type: string
      enum:
      - RACK
      - SERVER
    CatalogItemClassList:
      type: array
      items:
        $ref: '#/components/schemas/CatalogItemClass'
    CatalogItemListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/CatalogItem'
    CatalogItemPowerKva:
      type: number
      format: float
    CatalogItemStatus:
      type: string
      enum:
      - AVAILABLE
      - DISCONTINUED
    CatalogItemWeightLbs:
      type: integer
    City:
      type: string
      pattern: ^\S[\S ]*$
      minLength: 1
      maxLength: 50
    CityList:
      type: array
      items:
        $ref: '#/components/schemas/City'
    ComputeAssetState:
      type: string
      enum:
      - ACTIVE
      - ISOLATED
      - RETIRING
    ComputeAttributes:
      type: object
      properties:
        HostId:
          allOf:
          - $ref: '#/components/schemas/HostId'
          description: The host ID of the Dedicated Host on the asset.
        State:
          allOf:
          - $ref: '#/components/schemas/ComputeAssetState'
          description: "The state.\n\n  * ACTIVE - The asset is available and can\
            \ provide capacity for new compute resources.\n\n  * ISOLATED - The asset\
            \ is undergoing maintenance and can't provide capacity for new compute\
            \ resources. Existing compute resources on the asset are not affected.\n\
            \n  * RETIRING - The underlying hardware for the asset is degraded. Capacity\
            \ for new compute resources is reduced. Amazon Web Services sends notifications\
            \ for resources that must be stopped before the asset can be replaced."
        InstanceFamilies:
          allOf:
          - $ref: '#/components/schemas/InstanceFamilies'
          description: A list of the names of instance families that are currently
            associated with a given asset.
        InstanceTypeCapacities:
          allOf:
          - $ref: '#/components/schemas/AssetInstanceCapacityList'
          description: The instance type capacities configured for this asset. This
            can be changed through a capacity task.
        MaxVcpus:
          allOf:
          - $ref: '#/components/schemas/VCPUCount'
          description: The maximum number of vCPUs possible for the specified asset.
      description: Information about compute hardware assets.
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the resource causing the conflict.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of the resource causing the conflict.
      description: Updating or deleting this resource can cause an inconsistent state.
    ConnectionDetails:
      type: object
      properties:
        ClientPublicKey:
          allOf:
          - $ref: '#/components/schemas/WireGuardPublicKey'
          description: The public key of the client.
        ServerPublicKey:
          allOf:
          - $ref: '#/components/schemas/WireGuardPublicKey'
          description: The public key of the server.
        ServerEndpoint:
          allOf:
          - $ref: '#/components/schemas/ServerEndpoint'
          description: The endpoint for the server.
        ClientTunnelAddress:
          allOf:
          - $ref: '#/components/schemas/CIDR'
          description: The client tunnel address.
        ServerTunnelAddress:
          allOf:
          - $ref: '#/components/schemas/CIDR'
          description: The server tunnel address.
        AllowedIps:
          allOf:
          - $ref: '#/components/schemas/CIDRList'
          description: The allowed IP addresses.
      description: Information about a connection.
    ConnectionId:
      type: string
      pattern: ^[a-zA-Z0-9+/=]{1,1024}$
      minLength: 1
      maxLength: 1024
    ContactName:
      type: string
      pattern: ^\S[\S ]*$
      minLength: 1
      maxLength: 255
    ContactPhoneNumber:
      type: string
      pattern: ^[\S ]+$
      minLength: 1
      maxLength: 20
    CountryCode:
      type: string
      pattern: ^[A-Z]{2}$
      minLength: 2
      maxLength: 2
    CountryCodeList:
      type: array
      items:
        $ref: '#/components/schemas/CountryCode'
    CreateOrderInput:
      type: object
      properties:
        OutpostIdentifier:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: The ID or the Amazon Resource Name (ARN) of the Outpost.
        LineItems:
          allOf:
          - $ref: '#/components/schemas/LineItemRequestListDefinition'
          description: The line items that make up the order.
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          description: The payment option.
        PaymentTerm:
          allOf:
          - $ref: '#/components/schemas/PaymentTerm'
          description: The payment terms.
      required:
      - OutpostIdentifier
      - LineItems
      - PaymentOption
    CreateOrderOutput:
      type: object
      properties:
        Order:
          allOf:
          - $ref: '#/components/schemas/Order'
          description: Information about this order.
    CreateOutpostInput:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/OutpostName'
        Description:
          $ref: '#/components/schemas/OutpostDescription'
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID or the Amazon Resource Name (ARN) of the site.
        AvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
        AvailabilityZoneId:
          $ref: '#/components/schemas/AvailabilityZoneId'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to apply to the Outpost.
        SupportedHardwareType:
          allOf:
          - $ref: '#/components/schemas/SupportedHardwareType'
          description: The type of hardware for this Outpost.
      required:
      - Name
      - SiteId
    CreateOutpostOutput:
      type: object
      properties:
        Outpost:
          $ref: '#/components/schemas/Outpost'
    CreateSiteInput:
      type: object
      properties:
        Name:
          $ref: '#/components/schemas/SiteName'
        Description:
          $ref: '#/components/schemas/SiteDescription'
        Notes:
          allOf:
          - $ref: '#/components/schemas/SiteNotes'
          description: Additional information that you provide about site access requirements,
            electrician scheduling, personal protective equipment, or regulation of
            equipment materials that could affect your installation process.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to apply to a site.
        OperatingAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The location to install and power on the hardware. This address
            might be different from the shipping address.
        ShippingAddress:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The location to ship the hardware. This address might be different
            from the operating address.
        RackPhysicalProperties:
          allOf:
          - $ref: '#/components/schemas/RackPhysicalProperties'
          description: Information about the physical and logistical details for the
            rack at this site. For more information about hardware requirements for
            racks, see [Network readiness checklist](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#checklist)
            in the Amazon Web Services Outposts User Guide.
      required:
      - Name
    CreateSiteOutput:
      type: object
      properties:
        Site:
          $ref: '#/components/schemas/Site'
    DeleteOutpostInput:
      type: object
      properties:
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID or ARN of the Outpost.
      required:
      - OutpostId
    DeleteOutpostOutput:
      type: object
      properties: {}
    DeleteSiteInput:
      type: object
      properties:
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID or the Amazon Resource Name (ARN) of the site.
      required:
      - SiteId
    DeleteSiteOutput:
      type: object
      properties: {}
    DeviceSerialNumber:
      type: string
      pattern: ^(\w+)$
      minLength: 1
      maxLength: 100
    DistrictOrCounty:
      type: string
      pattern: ^\S[\S ]*$
      minLength: 1
      maxLength: 60
    DryRun:
      type: boolean
      default: false
    EC2Capacity:
      type: object
      properties:
        Family:
          allOf:
          - $ref: '#/components/schemas/Family'
          description: The family of the EC2 capacity.
        MaxSize:
          allOf:
          - $ref: '#/components/schemas/MaxSize'
          description: The maximum size of the EC2 capacity.
        Quantity:
          allOf:
          - $ref: '#/components/schemas/Quantity'
          description: The quantity of the EC2 capacity.
      description: Information about EC2 capacity.
    EC2CapacityListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/EC2Capacity'
    EC2FamilyList:
      type: array
      items:
        $ref: '#/components/schemas/Family'
    ErrorMessage:
      type: string
      pattern: ^[\S \n]+$
      minLength: 1
      maxLength: 1000
    Family:
      type: string
      pattern: ^[a-z0-9]+$
      minLength: 1
      maxLength: 10
    FiberOpticCableType:
      type: string
      enum:
      - SINGLE_MODE
      - MULTI_MODE
    GetCapacityTaskInput:
      type: object
      properties:
        CapacityTaskId:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskId'
          description: ID of the capacity task.
        OutpostIdentifier:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: ID or ARN of the Outpost associated with the specified capacity
            task.
      required:
      - CapacityTaskId
      - OutpostIdentifier
    GetCapacityTaskOutput:
      type: object
      properties:
        CapacityTaskId:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskId'
          description: ID of the capacity task.
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: ID of the Outpost associated with the specified capacity task.
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: ID of the Amazon Web Services Outposts order associated with
            the specified capacity task.
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          description: The ID of the Outpost asset. An Outpost asset can be a single
            server within an Outposts rack or an Outposts server configuration.
        RequestedInstancePools:
          allOf:
          - $ref: '#/components/schemas/RequestedInstancePools'
          description: List of instance pools requested in the capacity task.
        InstancesToExclude:
          allOf:
          - $ref: '#/components/schemas/InstancesToExclude'
          description: Instances that the user specified they cannot stop in order
            to free up the capacity needed to run the capacity task.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/DryRun'
          description: Performs a dry run to determine if you are above or below instance
            capacity.
        CapacityTaskStatus:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskStatus'
          description: "Status of the capacity task.\n\nA capacity task can have one\
            \ of the following statuses:\n\n  * `REQUESTED` \\- The capacity task\
            \ was created and is awaiting the next step by Amazon Web Services Outposts.\n\
            \n  * `IN_PROGRESS` \\- The capacity task is running and cannot be cancelled.\n\
            \n  * `FAILED` \\- The capacity task could not be completed.\n\n  * `COMPLETED`\
            \ \\- The capacity task has completed successfully.\n\n  * `WAITING_FOR_EVACUATION`\
            \ \\- The capacity task requires capacity to run. You must stop the recommended\
            \ EC2 running instances to free up capacity for the task to run.\n\n \
            \ * `CANCELLATION_IN_PROGRESS` \\- The capacity task has been cancelled\
            \ and is in the process of cleaning up resources.\n\n  * `CANCELLED` \\\
            - The capacity task is cancelled."
        Failed:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskFailure'
          description: Reason why the capacity task failed.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The date the capacity task was created.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The date the capacity task ran successfully.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The date the capacity task was last modified.
        TaskActionOnBlockingInstances:
          allOf:
          - $ref: '#/components/schemas/TaskActionOnBlockingInstances'
          description: "User-specified option in case an instance is blocking the\
            \ capacity task from running. Shows one of the following options:\n\n\
            \  * `WAIT_FOR_EVACUATION` \\- Checks every 10 minutes over 48 hours to\
            \ determine if instances have stopped and capacity is available to complete\
            \ the task.\n\n  * `FAIL_TASK` \\- The capacity task fails."
    GetCatalogItemInput:
      type: object
      properties:
        CatalogItemId:
          allOf:
          - $ref: '#/components/schemas/SkuCode'
          description: The ID of the catalog item.
      required:
      - CatalogItemId
    GetCatalogItemOutput:
      type: object
      properties:
        CatalogItem:
          allOf:
          - $ref: '#/components/schemas/CatalogItem'
          description: Information about this catalog item.
    GetConnectionRequest:
      type: object
      properties:
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the connection.
      required:
      - ConnectionId
    GetConnectionResponse:
      type: object
      properties:
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the connection.
        ConnectionDetails:
          allOf:
          - $ref: '#/components/schemas/ConnectionDetails'
          description: Information about the connection.
    GetOrderInput:
      type: object
      properties:
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: The ID of the order.
      required:
      - OrderId
    GetOrderOutput:
      type: object
      properties:
        Order:
          $ref: '#/components/schemas/Order'
    GetOutpostInput:
      type: object
      properties:
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID or ARN of the Outpost.
      required:
      - OutpostId
    GetOutpostInstanceTypesInput:
      type: object
      properties:
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID or ARN of the Outpost.
        NextToken:
          $ref: '#/components/schemas/Token'
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
      required:
      - OutpostId
    GetOutpostInstanceTypesOutput:
      type: object
      properties:
        InstanceTypes:
          $ref: '#/components/schemas/InstanceTypeListDefinition'
        NextToken:
          $ref: '#/components/schemas/Token'
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID of the Outpost.
        OutpostArn:
          $ref: '#/components/schemas/OutpostArn'
    GetOutpostOutput:
      type: object
      properties:
        Outpost:
          $ref: '#/components/schemas/Outpost'
    GetOutpostSupportedInstanceTypesInput:
      type: object
      properties:
        OutpostIdentifier:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: The ID or ARN of the Outpost.
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: The ID for the Amazon Web Services Outposts order.
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetIdInput'
          description: The ID of the Outpost asset. An Outpost asset can be a single
            server within an Outposts rack or an Outposts server configuration.
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
        NextToken:
          $ref: '#/components/schemas/Token'
      required:
      - OutpostIdentifier
    GetOutpostSupportedInstanceTypesOutput:
      type: object
      properties:
        InstanceTypes:
          $ref: '#/components/schemas/InstanceTypeListDefinition'
        NextToken:
          $ref: '#/components/schemas/Token'
    GetSiteAddressInput:
      type: object
      properties:
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID or the Amazon Resource Name (ARN) of the site.
        AddressType:
          allOf:
          - $ref: '#/components/schemas/AddressType'
          description: The type of the address you request.
      required:
      - SiteId
      - AddressType
    GetSiteAddressOutput:
      type: object
      properties:
        SiteId:
          $ref: '#/components/schemas/SiteId'
        AddressType:
          allOf:
          - $ref: '#/components/schemas/AddressType'
          description: The type of the address you receive.
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: Information about the address.
    GetSiteInput:
      type: object
      properties:
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID or the Amazon Resource Name (ARN) of the site.
      required:
      - SiteId
    GetSiteOutput:
      type: object
      properties:
        Site:
          $ref: '#/components/schemas/Site'
    HostId:
      type: string
      pattern: ^[A-Za-z0-9-]*$
      minLength: 1
      maxLength: 50
    HostIdList:
      type: array
      items:
        $ref: '#/components/schemas/HostId'
    ISO8601Timestamp:
      type: string
      format: date-time
    InstanceFamilies:
      type: array
      items:
        $ref: '#/components/schemas/InstanceFamilyName'
    InstanceFamilyName:
      type: string
      pattern: ^(?:.{1,200}/)?(?:[a-z0-9-_A-Z])+$
      minLength: 1
      maxLength: 200
    InstanceId:
      type: string
      pattern: ^i-[0-9a-z]+$
      minLength: 11
      maxLength: 32
    InstanceIdList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceId'
    InstanceType:
      type: string
    InstanceTypeCapacity:
      type: object
      properties:
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceTypeName'
          description: The instance type of the hosts.
        Count:
          allOf:
          - $ref: '#/components/schemas/InstanceTypeCount'
          description: The number of instances for the specified instance type.
      required:
      - InstanceType
      - Count
      description: The instance type that you specify determines the combination of
        CPU, memory, storage, and networking capacity.
    InstanceTypeCount:
      type: integer
      default: 0
      minimum: 0
      maximum: 9999
    InstanceTypeItem:
      type: object
      properties:
        InstanceType:
          $ref: '#/components/schemas/InstanceType'
        VCPUs:
          allOf:
          - $ref: '#/components/schemas/VCPUCount'
          description: The number of default VCPUs in an instance type.
      description: Information about an instance type.
    InstanceTypeListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/InstanceTypeItem'
      description: <p>Information about the instance types.</p>
    InstanceTypeName:
      type: string
      pattern: ^[a-z0-9\-]+\.[a-z0-9\-]+$
      minLength: 1
      maxLength: 64
    InstancesToExclude:
      type: object
      properties:
        Instances:
          allOf:
          - $ref: '#/components/schemas/InstanceIdList'
          description: List of user-specified instances that must not be stopped.
        AccountIds:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: IDs of the accounts that own each instance that must not be
            stopped.
        Services:
          allOf:
          - $ref: '#/components/schemas/AWSServiceNameList'
          description: Names of the services that own each instance that must not
            be stopped in order to free up the capacity needed to run the capacity
            task.
      description: User-specified instances that must not be stopped. These instances
        will not appear in the list of instances that Amazon Web Services recommends
        to stop in order to free up capacity.
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An internal error has occurred.
    LifeCycleStatus:
      type: string
      pattern: ^[ A-Za-z]+$
      minLength: 1
      maxLength: 20
    LifeCycleStatusList:
      type: array
      items:
        $ref: '#/components/schemas/LifeCycleStatus'
    LineItem:
      type: object
      properties:
        CatalogItemId:
          allOf:
          - $ref: '#/components/schemas/SkuCode'
          description: The ID of the catalog item.
        LineItemId:
          allOf:
          - $ref: '#/components/schemas/LineItemId'
          description: The ID of the line item.
        Quantity:
          allOf:
          - $ref: '#/components/schemas/LineItemQuantity'
          description: The quantity of the line item.
        Status:
          allOf:
          - $ref: '#/components/schemas/LineItemStatus'
          description: The status of the line item.
        ShipmentInformation:
          allOf:
          - $ref: '#/components/schemas/ShipmentInformation'
          description: Information about a line item shipment.
        AssetInformationList:
          allOf:
          - $ref: '#/components/schemas/LineItemAssetInformationList'
          description: Information about assets.
        PreviousLineItemId:
          allOf:
          - $ref: '#/components/schemas/LineItemId'
          description: The ID of the previous line item.
        PreviousOrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: The ID of the previous order.
      description: Information about a line item.
    LineItemAssetInformation:
      type: object
      properties:
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          description: The ID of the asset. An Outpost asset can be a single server
            within an Outposts rack or an Outposts server configuration.
        MacAddressList:
          allOf:
          - $ref: '#/components/schemas/MacAddressList'
          description: The MAC addresses of the asset.
      description: Information about a line item asset.
    LineItemAssetInformationList:
      type: array
      items:
        $ref: '#/components/schemas/LineItemAssetInformation'
    LineItemId:
      type: string
      pattern: ^ooi-[a-f0-9]{17}$
    LineItemListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/LineItem'
    LineItemQuantity:
      type: integer
      minimum: 1
    LineItemRequest:
      type: object
      properties:
        CatalogItemId:
          allOf:
          - $ref: '#/components/schemas/SkuCode'
          description: The ID of the catalog item.
        Quantity:
          allOf:
          - $ref: '#/components/schemas/LineItemQuantity'
          description: The quantity of a line item request.
      description: Information about a line item request.
    LineItemRequestListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/LineItemRequest'
    LineItemStatus:
      type: string
      enum:
      - PREPARING
      - BUILDING
      - SHIPPED
      - DELIVERED
      - INSTALLING
      - INSTALLED
      - ERROR
      - CANCELLED
      - REPLACED
    LineItemStatusCounts:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LineItemQuantity'
    ListAssetInstancesInput:
      type: object
      properties:
        OutpostIdentifier:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: The ID of the Outpost.
        AssetIdFilter:
          allOf:
          - $ref: '#/components/schemas/AssetIdList'
          description: Filters the results by asset ID.
        InstanceTypeFilter:
          allOf:
          - $ref: '#/components/schemas/OutpostInstanceTypeList'
          description: Filters the results by instance ID.
        AccountIdFilter:
          allOf:
          - $ref: '#/components/schemas/AccountIdList'
          description: Filters the results by account ID.
        AwsServiceFilter:
          allOf:
          - $ref: '#/components/schemas/AWSServiceNameList'
          description: Filters the results by Amazon Web Services service.
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
        NextToken:
          $ref: '#/components/schemas/Token'
      required:
      - OutpostIdentifier
    ListAssetInstancesOutput:
      type: object
      properties:
        AssetInstances:
          allOf:
          - $ref: '#/components/schemas/AssetInstanceList'
          description: List of instances owned by all accounts on the Outpost. Does
            not include Amazon EBS or Amazon S3 instances.
        NextToken:
          $ref: '#/components/schemas/Token'
    ListAssetsInput:
      type: object
      properties:
        OutpostIdentifier:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: The ID or the Amazon Resource Name (ARN) of the Outpost.
        HostIdFilter:
          allOf:
          - $ref: '#/components/schemas/HostIdList'
          description: Filters the results by the host ID of a Dedicated Host.
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
        NextToken:
          $ref: '#/components/schemas/Token'
        StatusFilter:
          allOf:
          - $ref: '#/components/schemas/StatusList'
          description: Filters the results by state.
      required:
      - OutpostIdentifier
    ListAssetsOutput:
      type: object
      properties:
        Assets:
          allOf:
          - $ref: '#/components/schemas/AssetListDefinition'
          description: Information about the hardware assets.
        NextToken:
          $ref: '#/components/schemas/Token'
    ListBlockingInstancesForCapacityTaskInput:
      type: object
      properties:
        OutpostIdentifier:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: The ID or ARN of the Outpost associated with the specified
            capacity task.
        CapacityTaskId:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskId'
          description: The ID of the capacity task.
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
        NextToken:
          $ref: '#/components/schemas/Token'
      required:
      - OutpostIdentifier
      - CapacityTaskId
    ListBlockingInstancesForCapacityTaskOutput:
      type: object
      properties:
        BlockingInstances:
          allOf:
          - $ref: '#/components/schemas/BlockingInstancesList'
          description: A list of all running Amazon EC2 instances on the Outpost.
            Stopping one or more of these instances can free up the capacity needed
            to run the capacity task.
        NextToken:
          $ref: '#/components/schemas/Token'
    ListCapacityTasksInput:
      type: object
      properties:
        OutpostIdentifierFilter:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: Filters the results by an Outpost ID or an Outpost ARN.
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
        NextToken:
          $ref: '#/components/schemas/Token'
        CapacityTaskStatusFilter:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskStatusList'
          description: A list of statuses. For example, `REQUESTED` or `WAITING_FOR_EVACUATION`.
    ListCapacityTasksOutput:
      type: object
      properties:
        CapacityTasks:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskList'
          description: Lists all the capacity tasks.
        NextToken:
          $ref: '#/components/schemas/Token'
    ListCatalogItemsInput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/Token'
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
        ItemClassFilter:
          allOf:
          - $ref: '#/components/schemas/CatalogItemClassList'
          description: Filters the results by item class.
        SupportedStorageFilter:
          allOf:
          - $ref: '#/components/schemas/SupportedStorageList'
          description: Filters the results by storage option.
        EC2FamilyFilter:
          allOf:
          - $ref: '#/components/schemas/EC2FamilyList'
          description: Filters the results by EC2 family (for example, M5).
    ListCatalogItemsOutput:
      type: object
      properties:
        CatalogItems:
          allOf:
          - $ref: '#/components/schemas/CatalogItemListDefinition'
          description: Information about the catalog items.
        NextToken:
          $ref: '#/components/schemas/Token'
    ListOrdersInput:
      type: object
      properties:
        OutpostIdentifierFilter:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: The ID or the Amazon Resource Name (ARN) of the Outpost.
        NextToken:
          $ref: '#/components/schemas/Token'
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
    ListOrdersOutput:
      type: object
      properties:
        Orders:
          allOf:
          - $ref: '#/components/schemas/OrderSummaryListDefinition'
          description: Information about the orders.
        NextToken:
          $ref: '#/components/schemas/Token'
    ListOutpostsInput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/Token'
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
        LifeCycleStatusFilter:
          allOf:
          - $ref: '#/components/schemas/LifeCycleStatusList'
          description: Filters the results by the lifecycle status.
        AvailabilityZoneFilter:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneList'
          description: Filters the results by Availability Zone (for example, `us-east-1a`).
        AvailabilityZoneIdFilter:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZoneIdList'
          description: Filters the results by AZ ID (for example, `use1-az1`).
    ListOutpostsOutput:
      type: object
      properties:
        Outposts:
          $ref: '#/components/schemas/outpostListDefinition'
        NextToken:
          $ref: '#/components/schemas/Token'
    ListSitesInput:
      type: object
      properties:
        NextToken:
          $ref: '#/components/schemas/Token'
        MaxResults:
          $ref: '#/components/schemas/MaxResults1000'
        OperatingAddressCountryCodeFilter:
          allOf:
          - $ref: '#/components/schemas/CountryCodeList'
          description: Filters the results by country code.
        OperatingAddressStateOrRegionFilter:
          allOf:
          - $ref: '#/components/schemas/StateOrRegionList'
          description: Filters the results by state or region.
        OperatingAddressCityFilter:
          allOf:
          - $ref: '#/components/schemas/CityList'
          description: Filters the results by city.
    ListSitesOutput:
      type: object
      properties:
        Sites:
          $ref: '#/components/schemas/siteListDefinition'
        NextToken:
          $ref: '#/components/schemas/Token'
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The resource tags.
    MacAddress:
      type: string
      pattern: ^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$
      minLength: 17
      maxLength: 17
    MacAddressList:
      type: array
      items:
        $ref: '#/components/schemas/MacAddress'
    MaxResults1000:
      type: integer
      minimum: 1
      maximum: 1000
      description: <p>The maximum page size.</p>
    MaxSize:
      type: string
    MaximumSupportedWeightLbs:
      type: string
      enum:
      - NO_LIMIT
      - MAX_1400_LBS
      - MAX_1600_LBS
      - MAX_1800_LBS
      - MAX_2000_LBS
    Municipality:
      type: string
      pattern: ^\S[\S ]*$
      minLength: 0
      maxLength: 180
    NetworkInterfaceDeviceIndex:
      type: integer
      default: 0
      minimum: 0
      maximum: 1
    NotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The specified request is not valid.
    OpticalStandard:
      type: string
      enum:
      - OPTIC_10GBASE_SR
      - OPTIC_10GBASE_IR
      - OPTIC_10GBASE_LR
      - OPTIC_40GBASE_SR
      - OPTIC_40GBASE_ESR
      - OPTIC_40GBASE_IR4_LR4L
      - OPTIC_40GBASE_LR4
      - OPTIC_100GBASE_SR4
      - OPTIC_100GBASE_CWDM4
      - OPTIC_100GBASE_LR4
      - OPTIC_100G_PSM4_MSA
      - OPTIC_1000BASE_LX
      - OPTIC_1000BASE_SX
    Order:
      type: object
      properties:
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostIdOnly'
          description: The ID of the Outpost in the order.
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: The ID of the order.
        Status:
          allOf:
          - $ref: '#/components/schemas/OrderStatus'
          description: "The status of the order.\n\n  * `PREPARING` \\- Order is received\
            \ and being prepared.\n\n  * `IN_PROGRESS` \\- Order is either being built\
            \ or shipped. To get more details, see the line item status.\n\n  * `DELIVERED`\
            \ \\- Order was delivered to the Outpost site.\n\n  * `COMPLETED` \\-\
            \ Order is complete.\n\n  * `CANCELLED` \\- Order is cancelled.\n\n  *\
            \ `ERROR` \\- Customer should contact support.\n\nThe following status\
            \ are deprecated: `RECEIVED`, `PENDING`, `PROCESSING`, `INSTALLING`, and\
            \ `FULFILLED`."
        LineItems:
          allOf:
          - $ref: '#/components/schemas/LineItemListDefinition'
          description: The line items for the order
        PaymentOption:
          allOf:
          - $ref: '#/components/schemas/PaymentOption'
          description: The payment option for the order.
        OrderSubmissionDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The submission date for the order.
        OrderFulfilledDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The fulfillment date of the order.
        PaymentTerm:
          allOf:
          - $ref: '#/components/schemas/PaymentTerm'
          description: The payment term.
        OrderType:
          allOf:
          - $ref: '#/components/schemas/OrderType'
          description: The type of order.
      description: Information about an order.
    OrderId:
      type: string
      pattern: ^oo-[a-f0-9]{17}$
      minLength: 1
      maxLength: 20
    OrderStatus:
      type: string
      enum:
      - RECEIVED
      - PENDING
      - PROCESSING
      - INSTALLING
      - FULFILLED
      - CANCELLED
      - PREPARING
      - IN_PROGRESS
      - DELIVERED
      - COMPLETED
      - ERROR
    OrderSummary:
      type: object
      properties:
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostIdOnly'
          description: The ID of the Outpost.
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: The ID of the order.
        OrderType:
          allOf:
          - $ref: '#/components/schemas/OrderType'
          description: The type of order.
        Status:
          allOf:
          - $ref: '#/components/schemas/OrderStatus'
          description: "The status of the order.\n\n  * `PREPARING` \\- Order is received\
            \ and is being prepared.\n\n  * `IN_PROGRESS` \\- Order is either being\
            \ built, shipped, or installed. For more information, see the `LineItem`\
            \ status.\n\n  * `COMPLETED` \\- Order is complete.\n\n  * `CANCELLED`\
            \ \\- Order is cancelled.\n\n  * `ERROR` \\- Customer should contact support.\n\
            \nThe following statuses are deprecated: `RECEIVED`, `PENDING`, `PROCESSING`,\
            \ `INSTALLING`, and `FULFILLED`."
        LineItemCountsByStatus:
          allOf:
          - $ref: '#/components/schemas/LineItemStatusCounts'
          description: The status of all line items in the order.
        OrderSubmissionDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The submission date for the order.
        OrderFulfilledDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: The fulfilment date for the order.
      description: A summary of line items in your order.
    OrderSummaryListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/OrderSummary'
    OrderType:
      type: string
      enum:
      - OUTPOST
      - REPLACEMENT
    Outpost:
      type: object
      properties:
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID of the Outpost.
        OwnerId:
          $ref: '#/components/schemas/OwnerId'
        OutpostArn:
          $ref: '#/components/schemas/OutpostArn'
        SiteId:
          $ref: '#/components/schemas/SiteId'
        Name:
          $ref: '#/components/schemas/OutpostName'
        Description:
          $ref: '#/components/schemas/OutpostDescription'
        LifeCycleStatus:
          $ref: '#/components/schemas/LifeCycleStatus'
        AvailabilityZone:
          $ref: '#/components/schemas/AvailabilityZone'
        AvailabilityZoneId:
          $ref: '#/components/schemas/AvailabilityZoneId'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The Outpost tags.
        SiteArn:
          $ref: '#/components/schemas/SiteArn'
        SupportedHardwareType:
          allOf:
          - $ref: '#/components/schemas/SupportedHardwareType'
          description: The hardware type.
      description: Information about an Outpost.
    OutpostArn:
      type: string
      pattern: ^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/op-[a-f0-9]{17}$
      minLength: 1
      maxLength: 255
    OutpostDescription:
      type: string
      pattern: ^[\S ]*$
      minLength: 0
      maxLength: 1000
    OutpostId:
      type: string
      pattern: ^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$
      minLength: 1
      maxLength: 180
    OutpostIdOnly:
      type: string
      pattern: ^op-[a-f0-9]{17}$
      minLength: 1
      maxLength: 20
    OutpostIdentifier:
      type: string
      pattern: ^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:outpost/)?op-[a-f0-9]{17}$
      minLength: 1
      maxLength: 180
    OutpostInstanceType:
      type: string
      pattern: ^[a-z0-9\-\.]+$
      minLength: 3
      maxLength: 30
    OutpostInstanceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/OutpostInstanceType'
    OutpostName:
      type: string
      pattern: ^[\S ]+$
      minLength: 1
      maxLength: 255
    OwnerId:
      type: string
      pattern: ^\d{12}$
      minLength: 12
      maxLength: 12
    PaymentOption:
      type: string
      enum:
      - ALL_UPFRONT
      - NO_UPFRONT
      - PARTIAL_UPFRONT
    PaymentTerm:
      type: string
      enum:
      - THREE_YEARS
      - ONE_YEAR
      - FIVE_YEARS
    PostalCode:
      type: string
      pattern: ^[a-zA-Z0-9 -]+$
      minLength: 1
      maxLength: 20
    PowerConnector:
      type: string
      enum:
      - L6_30P
      - IEC309
      - AH530P7W
      - AH532P6W
      - CS8365C
    PowerDrawKva:
      type: string
      enum:
      - POWER_5_KVA
      - POWER_10_KVA
      - POWER_15_KVA
      - POWER_30_KVA
    PowerFeedDrop:
      type: string
      enum:
      - ABOVE_RACK
      - BELOW_RACK
    PowerPhase:
      type: string
      enum:
      - SINGLE_PHASE
      - THREE_PHASE
    Quantity:
      type: string
    RackElevation:
      type: number
      format: float
      minimum: 0
      maximum: 99
    RackId:
      type: string
      pattern: ^[\S \n]+$
      minLength: 5
      maxLength: 20
    RackPhysicalProperties:
      type: object
      properties:
        PowerDrawKva:
          allOf:
          - $ref: '#/components/schemas/PowerDrawKva'
          description: The power draw available at the hardware placement position
            for the rack.
        PowerPhase:
          allOf:
          - $ref: '#/components/schemas/PowerPhase'
          description: The power option that you can provide for hardware.
        PowerConnector:
          allOf:
          - $ref: '#/components/schemas/PowerConnector'
          description: The power connector for the hardware.
        PowerFeedDrop:
          allOf:
          - $ref: '#/components/schemas/PowerFeedDrop'
          description: The position of the power feed.
        UplinkGbps:
          allOf:
          - $ref: '#/components/schemas/UplinkGbps'
          description: The uplink speed the rack supports for the connection to the
            Region.
        UplinkCount:
          allOf:
          - $ref: '#/components/schemas/UplinkCount'
          description: The number of uplinks each Outpost network device.
        FiberOpticCableType:
          allOf:
          - $ref: '#/components/schemas/FiberOpticCableType'
          description: The type of fiber used to attach the Outpost to the network.
        OpticalStandard:
          allOf:
          - $ref: '#/components/schemas/OpticalStandard'
          description: The type of optical standard used to attach the Outpost to
            the network. This field is dependent on uplink speed, fiber type, and
            distance to the upstream device. For more information about networking
            requirements for racks, see [Network](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#facility-networking)
            in the Amazon Web Services Outposts User Guide.
        MaximumSupportedWeightLbs:
          allOf:
          - $ref: '#/components/schemas/MaximumSupportedWeightLbs'
          description: The maximum rack weight that this site can support. `NO_LIMIT`
            is over 2000 lbs (907 kg).
      description: Information about the physical and logistical details for racks
        at sites. For more information about hardware requirements for racks, see
        [Network readiness checklist](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#checklist)
        in the Amazon Web Services Outposts User Guide.
    RequestedInstancePools:
      type: array
      items:
        $ref: '#/components/schemas/InstanceTypeCapacity'
    ResourceType:
      type: string
      enum:
      - OUTPOST
      - ORDER
    ServerEndpoint:
      type: string
      pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}:[0-9]{1,5}$
      minLength: 9
      maxLength: 21
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You have exceeded a service quota.
    ShipmentCarrier:
      type: string
      enum:
      - DHL
      - DBS
      - FEDEX
      - UPS
      - EXPEDITORS
    ShipmentInformation:
      type: object
      properties:
        ShipmentTrackingNumber:
          allOf:
          - $ref: '#/components/schemas/TrackingId'
          description: The tracking number of the shipment.
        ShipmentCarrier:
          allOf:
          - $ref: '#/components/schemas/ShipmentCarrier'
          description: The carrier of the shipment.
      description: Information about a line item shipment.
    Site:
      type: object
      properties:
        SiteId:
          $ref: '#/components/schemas/SiteId'
        AccountId:
          $ref: '#/components/schemas/AccountId'
        Name:
          $ref: '#/components/schemas/SiteName'
        Description:
          $ref: '#/components/schemas/SiteDescription'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The site tags.
        SiteArn:
          $ref: '#/components/schemas/SiteArn'
        Notes:
          allOf:
          - $ref: '#/components/schemas/SiteNotes'
          description: Notes about a site.
        OperatingAddressCountryCode:
          allOf:
          - $ref: '#/components/schemas/CountryCode'
          description: The ISO-3166 two-letter country code where the hardware is
            installed and powered on.
        OperatingAddressStateOrRegion:
          allOf:
          - $ref: '#/components/schemas/StateOrRegion'
          description: State or region where the hardware is installed and powered
            on.
        OperatingAddressCity:
          allOf:
          - $ref: '#/components/schemas/City'
          description: City where the hardware is installed and powered on.
        RackPhysicalProperties:
          allOf:
          - $ref: '#/components/schemas/RackPhysicalProperties'
          description: Information about the physical and logistical details for a
            rack at the site.
      description: Information about a site.
    SiteArn:
      type: string
      pattern: ^arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:site/(os-[a-f0-9]{17})$
      minLength: 1
      maxLength: 255
    SiteDescription:
      type: string
      pattern: ^[\S ]+$
      minLength: 1
      maxLength: 1001
    SiteId:
      type: string
      pattern: ^(arn:aws([a-z-]+)?:outposts:[a-z\d-]+:\d{12}:site/)?(os-[a-f0-9]{17})$
      minLength: 1
      maxLength: 255
    SiteName:
      type: string
      pattern: ^[\S ]+$
      minLength: 1
      maxLength: 1000
    SiteNotes:
      type: string
      pattern: ^[\S \n]+$
      minLength: 1
      maxLength: 2000
    SkuCode:
      type: string
      pattern: ^OR-[A-Z0-9]{7}$
      minLength: 1
      maxLength: 10
    StartCapacityTaskInput:
      type: object
      properties:
        OutpostIdentifier:
          allOf:
          - $ref: '#/components/schemas/OutpostIdentifier'
          description: The ID or ARN of the Outposts associated with the specified
            capacity task.
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: The ID of the Amazon Web Services Outposts order associated
            with the specified capacity task.
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetIdInput'
          description: The ID of the Outpost asset. An Outpost asset can be a single
            server within an Outposts rack or an Outposts server configuration.
        InstancePools:
          allOf:
          - $ref: '#/components/schemas/RequestedInstancePools'
          description: The instance pools specified in the capacity task.
        InstancesToExclude:
          allOf:
          - $ref: '#/components/schemas/InstancesToExclude'
          description: List of user-specified running instances that must not be stopped
            in order to free up the capacity needed to run the capacity task.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/DryRun'
          description: You can request a dry run to determine if the instance type
            and instance size changes is above or below available instance capacity.
            Requesting a dry run does not make any changes to your plan.
        TaskActionOnBlockingInstances:
          allOf:
          - $ref: '#/components/schemas/TaskActionOnBlockingInstances'
          description: "Specify one of the following options in case an instance is\
            \ blocking the capacity task from running.\n\n  * `WAIT_FOR_EVACUATION`\
            \ \\- Checks every 10 minutes over 48 hours to determine if instances\
            \ have stopped and capacity is available to complete the task.\n\n  *\
            \ `FAIL_TASK` \\- The capacity task fails."
      required:
      - OutpostIdentifier
      - InstancePools
    StartCapacityTaskOutput:
      type: object
      properties:
        CapacityTaskId:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskId'
          description: ID of the capacity task that you want to start.
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: ID of the Outpost associated with the capacity task.
        OrderId:
          allOf:
          - $ref: '#/components/schemas/OrderId'
          description: ID of the Amazon Web Services Outposts order of the host associated
            with the capacity task.
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          description: The ID of the asset. An Outpost asset can be a single server
            within an Outposts rack or an Outposts server configuration.
        RequestedInstancePools:
          allOf:
          - $ref: '#/components/schemas/RequestedInstancePools'
          description: List of the instance pools requested in the specified capacity
            task.
        InstancesToExclude:
          allOf:
          - $ref: '#/components/schemas/InstancesToExclude'
          description: User-specified instances that must not be stopped in order
            to free up the capacity needed to run the capacity task.
        DryRun:
          allOf:
          - $ref: '#/components/schemas/DryRun'
          description: Results of the dry run showing if the specified capacity task
            is above or below the available instance capacity.
        CapacityTaskStatus:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskStatus'
          description: Status of the specified capacity task.
        Failed:
          allOf:
          - $ref: '#/components/schemas/CapacityTaskFailure'
          description: Reason that the specified capacity task failed.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: Date that the specified capacity task was created.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: Date that the specified capacity task ran successfully.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/ISO8601Timestamp'
          description: Date that the specified capacity task was last modified.
        TaskActionOnBlockingInstances:
          allOf:
          - $ref: '#/components/schemas/TaskActionOnBlockingInstances'
          description: "User-specified option in case an instance is blocking the\
            \ capacity task from running.\n\n  * `WAIT_FOR_EVACUATION` \\- Checks\
            \ every 10 minutes over 48 hours to determine if instances have stopped\
            \ and capacity is available to complete the task.\n\n  * `FAIL_TASK` \\\
            - The capacity task fails."
    StartConnectionRequest:
      type: object
      properties:
        DeviceSerialNumber:
          allOf:
          - $ref: '#/components/schemas/DeviceSerialNumber'
          description: The serial number of the dongle.
        AssetId:
          allOf:
          - $ref: '#/components/schemas/AssetId'
          description: The ID of the Outpost server.
        ClientPublicKey:
          allOf:
          - $ref: '#/components/schemas/WireGuardPublicKey'
          description: The public key of the client.
        NetworkInterfaceDeviceIndex:
          allOf:
          - $ref: '#/components/schemas/NetworkInterfaceDeviceIndex'
          description: The device index of the network interface on the Outpost server.
      required:
      - AssetId
      - ClientPublicKey
      - NetworkInterfaceDeviceIndex
    StartConnectionResponse:
      type: object
      properties:
        ConnectionId:
          allOf:
          - $ref: '#/components/schemas/ConnectionId'
          description: The ID of the connection.
        UnderlayIpAddress:
          allOf:
          - $ref: '#/components/schemas/UnderlayIpAddress'
          description: The underlay IP address.
    StateOrRegion:
      type: string
      pattern: ^\S[\S ]*$
      minLength: 1
      maxLength: 50
    StateOrRegionList:
      type: array
      items:
        $ref: '#/components/schemas/StateOrRegion'
    StatusList:
      type: array
      items:
        $ref: '#/components/schemas/AssetState'
    String:
      type: string
      pattern: ^[\S \n]+$
      minLength: 1
      maxLength: 1000
    SupportedHardwareType:
      type: string
      enum:
      - RACK
      - SERVER
    SupportedStorageEnum:
      type: string
      enum:
      - EBS
      - S3
    SupportedStorageList:
      type: array
      items:
        $ref: '#/components/schemas/SupportedStorageEnum'
    SupportedUplinkGbps:
      type: integer
      default: 0
    SupportedUplinkGbpsListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/SupportedUplinkGbps'
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to add to the resource.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[\S \n]+$
      minLength: 0
      maxLength: 256
    TaskActionOnBlockingInstances:
      type: string
      enum:
      - WAIT_FOR_EVACUATION
      - FAIL_TASK
    Token:
      type: string
      pattern: ^(\d+)##(\S+)$
      minLength: 1
      maxLength: 2048
    TrackingId:
      type: string
      pattern: ^[a-zA-Z0-9]+$
      minLength: 6
      maxLength: 42
    UnderlayIpAddress:
      type: string
      pattern: ^([0-9]{1,3}\.){3}[0-9]{1,3}$
      minLength: 7
      maxLength: 15
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateOutpostInput:
      type: object
      properties:
        OutpostId:
          allOf:
          - $ref: '#/components/schemas/OutpostId'
          description: The ID or ARN of the Outpost.
        Name:
          $ref: '#/components/schemas/OutpostName'
        Description:
          $ref: '#/components/schemas/OutpostDescription'
        SupportedHardwareType:
          allOf:
          - $ref: '#/components/schemas/SupportedHardwareType'
          description: The type of hardware for this Outpost.
      required:
      - OutpostId
    UpdateOutpostOutput:
      type: object
      properties:
        Outpost:
          $ref: '#/components/schemas/Outpost'
    UpdateSiteAddressInput:
      type: object
      properties:
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID or the Amazon Resource Name (ARN) of the site.
        AddressType:
          allOf:
          - $ref: '#/components/schemas/AddressType'
          description: The type of the address.
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: The address for the site.
      required:
      - SiteId
      - AddressType
      - Address
    UpdateSiteAddressOutput:
      type: object
      properties:
        AddressType:
          allOf:
          - $ref: '#/components/schemas/AddressType'
          description: The type of the address.
        Address:
          allOf:
          - $ref: '#/components/schemas/Address'
          description: Information about an address.
    UpdateSiteInput:
      type: object
      properties:
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID or the Amazon Resource Name (ARN) of the site.
        Name:
          $ref: '#/components/schemas/SiteName'
        Description:
          $ref: '#/components/schemas/SiteDescription'
        Notes:
          allOf:
          - $ref: '#/components/schemas/SiteNotes'
          description: Notes about a site.
      required:
      - SiteId
    UpdateSiteOutput:
      type: object
      properties:
        Site:
          $ref: '#/components/schemas/Site'
    UpdateSiteRackPhysicalPropertiesInput:
      type: object
      properties:
        SiteId:
          allOf:
          - $ref: '#/components/schemas/SiteId'
          description: The ID or the Amazon Resource Name (ARN) of the site.
        PowerDrawKva:
          allOf:
          - $ref: '#/components/schemas/PowerDrawKva'
          description: The power draw, in kVA, available at the hardware placement
            position for the rack.
        PowerPhase:
          allOf:
          - $ref: '#/components/schemas/PowerPhase'
          description: "The power option that you can provide for hardware.\n\n  *\
            \ Single-phase AC feed: 200 V to 277 V, 50 Hz or 60 Hz\n\n  * Three-phase\
            \ AC feed: 346 V to 480 V, 50 Hz or 60 Hz"
        PowerConnector:
          allOf:
          - $ref: '#/components/schemas/PowerConnector'
          description: "The power connector that Amazon Web Services should plan to\
            \ provide for connections to the hardware. Note the correlation between\
            \ `PowerPhase` and `PowerConnector`.\n\n  * Single-phase AC feed\n\n \
            \   * **L6-30P** – (common in US); 30A; single phase\n\n    * **IEC309\
            \ (blue)** – P+N+E, 6hr; 32 A; single phase\n\n  * Three-phase AC feed\n\
            \n    * **AH530P7W (red)** – 3P+N+E, 7hr; 30A; three phase\n\n    * **AH532P6W\
            \ (red)** – 3P+N+E, 6hr; 32A; three phase\n\n    * **CS8365C** – (common\
            \ in US); 3P+E, 50A; three phase"
        PowerFeedDrop:
          allOf:
          - $ref: '#/components/schemas/PowerFeedDrop'
          description: Indicates whether the power feed comes above or below the rack.
        UplinkGbps:
          allOf:
          - $ref: '#/components/schemas/UplinkGbps'
          description: The uplink speed the rack should support for the connection
            to the Region.
        UplinkCount:
          allOf:
          - $ref: '#/components/schemas/UplinkCount'
          description: "Racks come with two Outpost network devices. Depending on\
            \ the supported uplink speed at the site, the Outpost network devices\
            \ provide a variable number of uplinks. Specify the number of uplinks\
            \ for each Outpost network device that you intend to use to connect the\
            \ rack to your network. Note the correlation between `UplinkGbps` and\
            \ `UplinkCount`.\n\n  * 1Gbps - Uplinks available: 1, 2, 4, 6, 8\n\n \
            \ * 10Gbps - Uplinks available: 1, 2, 4, 8, 12, 16\n\n  * 40 and 100 Gbps-\
            \ Uplinks available: 1, 2, 4"
        FiberOpticCableType:
          allOf:
          - $ref: '#/components/schemas/FiberOpticCableType'
          description: The type of fiber that you will use to attach the Outpost to
            your network.
        OpticalStandard:
          allOf:
          - $ref: '#/components/schemas/OpticalStandard'
          description: "The type of optical standard that you will use to attach the\
            \ Outpost to your network. This field is dependent on uplink speed, fiber\
            \ type, and distance to the upstream device. For more information about\
            \ networking requirements for racks, see [Network](https://docs.aws.amazon.com/outposts/latest/userguide/outposts-requirements.html#facility-networking)\
            \ in the Amazon Web Services Outposts User Guide.\n\n  * `OPTIC_10GBASE_SR`:\
            \ 10GBASE-SR\n\n  * `OPTIC_10GBASE_IR`: 10GBASE-IR\n\n  * `OPTIC_10GBASE_LR`:\
            \ 10GBASE-LR\n\n  * `OPTIC_40GBASE_SR`: 40GBASE-SR\n\n  * `OPTIC_40GBASE_ESR`:\
            \ 40GBASE-ESR\n\n  * `OPTIC_40GBASE_IR4_LR4L`: 40GBASE-IR (LR4L)\n\n \
            \ * `OPTIC_40GBASE_LR4`: 40GBASE-LR4\n\n  * `OPTIC_100GBASE_SR4`: 100GBASE-SR4\n\
            \n  * `OPTIC_100GBASE_CWDM4`: 100GBASE-CWDM4\n\n  * `OPTIC_100GBASE_LR4`:\
            \ 100GBASE-LR4\n\n  * `OPTIC_100G_PSM4_MSA`: 100G PSM4 MSA\n\n  * `OPTIC_1000BASE_LX`:\
            \ 1000Base-LX\n\n  * `OPTIC_1000BASE_SX` : 1000Base-SX"
        MaximumSupportedWeightLbs:
          allOf:
          - $ref: '#/components/schemas/MaximumSupportedWeightLbs'
          description: The maximum rack weight that this site can support. `NO_LIMIT`
            is over 2000lbs.
      required:
      - SiteId
    UpdateSiteRackPhysicalPropertiesOutput:
      type: object
      properties:
        Site:
          $ref: '#/components/schemas/Site'
    UplinkCount:
      type: string
      enum:
      - UPLINK_COUNT_1
      - UPLINK_COUNT_2
      - UPLINK_COUNT_3
      - UPLINK_COUNT_4
      - UPLINK_COUNT_5
      - UPLINK_COUNT_6
      - UPLINK_COUNT_7
      - UPLINK_COUNT_8
      - UPLINK_COUNT_12
      - UPLINK_COUNT_16
    UplinkGbps:
      type: string
      enum:
      - UPLINK_1G
      - UPLINK_10G
      - UPLINK_40G
      - UPLINK_100G
    VCPUCount:
      type: integer
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A parameter is not valid.
    WireGuardPublicKey:
      type: string
      pattern: ^[a-zA-Z0-9/+]{43}=$
      minLength: 44
      maxLength: 44
    outpostListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/Outpost'
      description: <p>Information about the Outposts.</p>
    siteListDefinition:
      type: array
      items:
        $ref: '#/components/schemas/Site'
      description: <p>Information about the sites.</p>
