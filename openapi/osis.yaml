openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: osis
  x-aws-serviceName: osis
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2022-01-01'
  title: Amazon OpenSearch Ingestion
  description: |-
    Use the Amazon OpenSearch Ingestion API to create and manage ingestion pipelines. OpenSearch Ingestion is a fully managed data collector that delivers real-time log and trace data to OpenSearch Service domains. For more information, see [Getting data into your cluster using OpenSearch Ingestion](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ingestion.html).
servers:
- description: The Amazon OpenSearch Ingestion regional endpoint
  url: https://osis.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /2022-01-01/osis/createPipeline:
    post:
      operationId: CreatePipeline
      description: |-
        Creates an OpenSearch Ingestion pipeline. For more information, see [Creating Amazon OpenSearch Ingestion pipelines](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PipelineName:
                  $ref: '#/components/schemas/PipelineName'
                MinUnits:
                  $ref: '#/components/schemas/PipelineUnits'
                MaxUnits:
                  $ref: '#/components/schemas/PipelineUnits'
                PipelineConfigurationBody:
                  $ref: '#/components/schemas/PipelineConfigurationBody'
                LogPublishingOptions:
                  $ref: '#/components/schemas/LogPublishingOptions'
                VpcOptions:
                  $ref: '#/components/schemas/VpcOptions'
                BufferOptions:
                  $ref: '#/components/schemas/BufferOptions'
                EncryptionAtRestOptions:
                  $ref: '#/components/schemas/EncryptionAtRestOptions'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            You attempted to create a resource that already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceAlreadyExistsException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/deletePipeline/{PipelineName}:
    delete:
      operationId: DeletePipeline
      description: |-
        Deletes an OpenSearch Ingestion pipeline. For more information, see [Deleting Amazon OpenSearch Ingestion pipelines](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/delete-pipeline.html).
      parameters:
      - name: PipelineName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PipelineName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/getPipeline/{PipelineName}:
    get:
      operationId: GetPipeline
      description: |-
        Retrieves information about an OpenSearch Ingestion pipeline.
      parameters:
      - name: PipelineName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PipelineName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/getPipelineBlueprint/{BlueprintName}:
    get:
      operationId: GetPipelineBlueprint
      description: |-
        Retrieves information about a specific blueprint for OpenSearch Ingestion. Blueprints are templates for the configuration needed for a `CreatePipeline` request. For more information, see [Using blueprints to create a pipeline](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html#pipeline-blueprint).
      parameters:
      - name: BlueprintName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: format
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BlueprintFormat'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/getPipelineChangeProgress/{PipelineName}:
    get:
      operationId: GetPipelineChangeProgress
      description: |-
        Returns progress information for the current change happening on an OpenSearch Ingestion pipeline. Currently, this operation only returns information when a pipeline is being created.

        For more information, see [Tracking the status of pipeline creation](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html#get-pipeline-progress).
      parameters:
      - name: PipelineName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PipelineName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/listPipelineBlueprints:
    post:
      operationId: ListPipelineBlueprints
      description: |-
        Retrieves a list of all available blueprints for Data Prepper. For more information, see [Using blueprints to create a pipeline](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html#pipeline-blueprint).
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/listPipelines:
    get:
      operationId: ListPipelines
      description: |-
        Lists all OpenSearch Ingestion pipelines in the current Amazon Web Services account and Region. For more information, see [Viewing Amazon OpenSearch Ingestion pipelines](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/list-pipeline.html).
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/listTagsForResource:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists all resource tags associated with an OpenSearch Ingestion pipeline. For more information, see [Tagging Amazon OpenSearch Ingestion pipelines](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-pipeline.html).
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PipelineArn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/startPipeline/{PipelineName}:
    put:
      operationId: StartPipeline
      description: |-
        Starts an OpenSearch Ingestion pipeline. For more information, see [Starting an OpenSearch Ingestion pipeline](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/pipeline--stop-start.html#pipeline--start).
      parameters:
      - name: PipelineName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PipelineName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/stopPipeline/{PipelineName}:
    put:
      operationId: StopPipeline
      description: |-
        Stops an OpenSearch Ingestion pipeline. For more information, see [Stopping an OpenSearch Ingestion pipeline](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/pipeline--stop-start.html#pipeline--stop).
      parameters:
      - name: PipelineName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PipelineName'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/tagResource:
    post:
      operationId: TagResource
      description: |-
        Tags an OpenSearch Ingestion pipeline. For more information, see [Tagging Amazon OpenSearch Ingestion pipelines](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-pipeline.html).
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PipelineArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            You attempted to create more than the allowed number of tags.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/untagResource:
    post:
      operationId: UntagResource
      description: |-
        Removes one or more tags from an OpenSearch Ingestion pipeline. For more information, see [Tagging Amazon OpenSearch Ingestion pipelines](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-pipeline.html).
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/PipelineArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TagKeys:
                  $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/updatePipeline/{PipelineName}:
    put:
      operationId: UpdatePipeline
      description: |-
        Updates an OpenSearch Ingestion pipeline. For more information, see [Updating Amazon OpenSearch Ingestion pipelines](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/update-pipeline.html).
      parameters:
      - name: PipelineName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/PipelineName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MinUnits:
                  $ref: '#/components/schemas/PipelineUnits'
                MaxUnits:
                  $ref: '#/components/schemas/PipelineUnits'
                PipelineConfigurationBody:
                  $ref: '#/components/schemas/PipelineConfigurationBody'
                LogPublishingOptions:
                  $ref: '#/components/schemas/LogPublishingOptions'
                BufferOptions:
                  $ref: '#/components/schemas/BufferOptions'
                EncryptionAtRestOptions:
                  $ref: '#/components/schemas/EncryptionAtRestOptions'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '404':
          description: |-
            You attempted to access or delete a resource that does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /2022-01-01/osis/validatePipeline:
    post:
      operationId: ValidatePipeline
      description: |-
        Checks whether an OpenSearch Ingestion pipeline configuration is valid prior to creation. For more information, see [Creating Amazon OpenSearch Ingestion pipelines](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/creating-pipeline.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PipelineConfigurationBody:
                  $ref: '#/components/schemas/PipelineConfigurationBody'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have permissions to access the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Exception is thrown when an operation has been disabled.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisabledOperationException'
        '500':
          description: |-
            The request failed because of an unknown error, exception, or failure (the failure is internal to the service).
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalException'
        '400':
          description: |-
            An exception for missing or invalid input fields.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You don't have permissions to access the resource.
    BlueprintFormat:
      type: string
      pattern: ^(YAML|JSON)$
    Boolean:
      type: boolean
    BufferOptions:
      type: object
      properties:
        PersistentBufferEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether persistent buffering should be enabled.
      required:
      - PersistentBufferEnabled
      description: Options that specify the configuration of a persistent buffer.
        To configure how OpenSearch Ingestion encrypts this data, set the `EncryptionAtRestOptions`.
        For more information, see [Persistent buffering](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/osis-features-overview.html#persistent-buffering).
    ChangeProgressStage:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the stage.
        Status:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStageStatuses'
          description: The current status of the stage that the change is in.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the stage.
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The most recent updated timestamp of the stage.
      description: Progress details for a specific stage of a pipeline configuration
        change.
    ChangeProgressStageList:
      type: array
      items:
        $ref: '#/components/schemas/ChangeProgressStage'
    ChangeProgressStageStatuses:
      type: string
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
    ChangeProgressStatus:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the configuration change is made on the pipeline.
        Status:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStatuses'
          description: The overall status of the pipeline configuration change.
        TotalNumberOfStages:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of stages required for the pipeline configuration
            change.
        ChangeProgressStages:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStageList'
          description: Information about the stages that the pipeline is going through
            to perform the configuration change.
      description: The progress details of a pipeline configuration change.
    ChangeProgressStatusList:
      type: array
      items:
        $ref: '#/components/schemas/ChangeProgressStatus'
    ChangeProgressStatuses:
      type: string
      enum:
      - PENDING
      - IN_PROGRESS
      - COMPLETED
      - FAILED
    CidrBlock:
      type: string
      pattern: ^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)/(3[0-2]|[12]?[0-9])$
    CloudWatchLogDestination:
      type: object
      properties:
        LogGroup:
          allOf:
          - $ref: '#/components/schemas/LogGroup'
          description: The name of the CloudWatch Logs group to send pipeline logs
            to. You can specify an existing log group or create a new one. For example,
            `/aws/vendedlogs/OpenSearchService/pipelines`.
      required:
      - LogGroup
      description: The destination for OpenSearch Ingestion logs sent to Amazon CloudWatch.
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The client attempted to remove a resource that is currently in
        use.
    CreatePipelineRequest:
      type: object
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          description: The name of the OpenSearch Ingestion pipeline to create. Pipeline
            names are unique across the pipelines owned by an account within an Amazon
            Web Services Region.
        MinUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          description: The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
        MaxUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          description: The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/PipelineConfigurationBody'
          description: The pipeline configuration in YAML format. The command accepts
            the pipeline configuration as a string or within a .yaml file. If you
            provide the configuration as a string, each new line must be escaped with
            `\n`.
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/LogPublishingOptions'
          description: Key-value pairs to configure log publishing.
        VpcOptions:
          allOf:
          - $ref: '#/components/schemas/VpcOptions'
          description: Container for the values required to configure VPC access for
            the pipeline. If you don't specify these values, OpenSearch Ingestion
            creates the pipeline with a public endpoint.
        BufferOptions:
          allOf:
          - $ref: '#/components/schemas/BufferOptions'
          description: Key-value pairs to configure persistent buffering for the pipeline.
        EncryptionAtRestOptions:
          allOf:
          - $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: Key-value pairs to configure encryption for data that is written
            to a persistent buffer.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: List of tags to add to the pipeline upon creation.
      required:
      - PipelineName
      - MinUnits
      - MaxUnits
      - PipelineConfigurationBody
    CreatePipelineResponse:
      type: object
      properties:
        Pipeline:
          allOf:
          - $ref: '#/components/schemas/Pipeline'
          description: Container for information about the created pipeline.
    DeletePipelineRequest:
      type: object
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to delete.
      required:
      - PipelineName
    DeletePipelineResponse:
      type: object
      properties: {}
    DisabledOperationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: Exception is thrown when an operation has been disabled.
    EncryptionAtRestOptions:
      type: object
      properties:
        KmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/KmsKeyArn'
          description: The ARN of the KMS key used to encrypt buffer data. By default,
            data is encrypted using an Amazon Web Services owned key.
      required:
      - KmsKeyArn
      description: Options to control how OpenSearch encrypts buffer data.
    ErrorMessage:
      type: string
    GetPipelineBlueprintRequest:
      type: object
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the blueprint to retrieve.
        Format:
          allOf:
          - $ref: '#/components/schemas/BlueprintFormat'
          description: The format format of the blueprint to retrieve.
      required:
      - BlueprintName
    GetPipelineBlueprintResponse:
      type: object
      properties:
        Blueprint:
          allOf:
          - $ref: '#/components/schemas/PipelineBlueprint'
          description: The requested blueprint in YAML format.
        Format:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The format of the blueprint.
    GetPipelineChangeProgressRequest:
      type: object
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
      required:
      - PipelineName
    GetPipelineChangeProgressResponse:
      type: object
      properties:
        ChangeProgressStatuses:
          allOf:
          - $ref: '#/components/schemas/ChangeProgressStatusList'
          description: The current status of the change happening on the pipeline.
    GetPipelineRequest:
      type: object
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
      required:
      - PipelineName
    GetPipelineResponse:
      type: object
      properties:
        Pipeline:
          allOf:
          - $ref: '#/components/schemas/Pipeline'
          description: Detailed information about the requested pipeline.
    IngestEndpointUrlsList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    Integer:
      type: integer
      default: 0
    InternalException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The request failed because of an unknown error, exception, or failure
        (the failure is internal to the service).
    InvalidPaginationTokenException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An invalid pagination token provided in the request.
    KmsKeyArn:
      type: string
      minLength: 7
      maxLength: 2048
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You attempted to create more than the allowed number of tags.
    ListPipelineBlueprintsRequest:
      type: object
      properties: {}
    ListPipelineBlueprintsResponse:
      type: object
      properties:
        Blueprints:
          allOf:
          - $ref: '#/components/schemas/PipelineBlueprintsSummaryList'
          description: A list of available blueprints for Data Prepper.
    ListPipelinesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: An optional parameter that specifies the maximum number of
            results to return. You can use `nextToken` to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If your initial `ListPipelines` operation returns a `nextToken`,
            you can include the returned `nextToken` in subsequent `ListPipelines`
            operations, which returns results in the next page.
    ListPipelinesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: When `nextToken` is returned, there are more results available.
            The value of `nextToken` is a unique pagination token for each page. Make
            the call again using the returned token to retrieve the next page.
        Pipelines:
          allOf:
          - $ref: '#/components/schemas/PipelineSummaryList'
          description: A list of all existing Data Prepper pipelines.
    ListTagsForResourceRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline to retrieve
            tags for.
      required:
      - Arn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of tags associated with the given pipeline.
    LogGroup:
      type: string
      pattern: ^\/aws\/vendedlogs\/[\.\-_/#A-Za-z0-9]+$
      minLength: 1
      maxLength: 512
    LogPublishingOptions:
      type: object
      properties:
        IsLoggingEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether logs should be published.
        CloudWatchLogDestination:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLogDestination'
          description: The destination for OpenSearch Ingestion logs sent to Amazon
            CloudWatch Logs. This parameter is required if `IsLoggingEnabled` is set
            to `true`.
      description: Container for the values required to configure logging for the
        pipeline. If you don't specify these values, OpenSearch Ingestion will not
        publish logs from your application to CloudWatch Logs.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      pattern: ^([\s\S]*)$
      minLength: 0
      maxLength: 3000
    Pipeline:
      type: object
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the pipeline.
        PipelineArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the pipeline.
        MinUnits:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
        MaxUnits:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
        Status:
          allOf:
          - $ref: '#/components/schemas/PipelineStatus'
          description: The current status of the pipeline.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/PipelineStatusReason'
          description: The reason for the current status of the pipeline.
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Data Prepper pipeline configuration in YAML format.
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the pipeline was created.
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the pipeline was last updated.
        IngestEndpointUrls:
          allOf:
          - $ref: '#/components/schemas/IngestEndpointUrlsList'
          description: The ingestion endpoints for the pipeline, which you can send
            data to.
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/LogPublishingOptions'
          description: Key-value pairs that represent log publishing settings.
        VpcEndpoints:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointsList'
          description: The VPC interface endpoints that have access to the pipeline.
        BufferOptions:
          $ref: '#/components/schemas/BufferOptions'
        EncryptionAtRestOptions:
          $ref: '#/components/schemas/EncryptionAtRestOptions'
        VpcEndpointService:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The VPC endpoint service name for the pipeline.
        ServiceVpcEndpoints:
          allOf:
          - $ref: '#/components/schemas/ServiceVpcEndpointsList'
          description: A list of VPC endpoints that OpenSearch Ingestion has created
            to other Amazon Web Services services.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/PipelineDestinationList'
          description: Destinations to which the pipeline writes data.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of tags associated with the given pipeline.
      description: Information about an existing OpenSearch Ingestion pipeline.
    PipelineArn:
      type: string
      pattern: ^arn:(aws|aws\-cn|aws\-us\-gov|aws\-iso|aws\-iso\-b):osis:.+:pipeline\/.+$
      minLength: 46
      maxLength: 76
    PipelineBlueprint:
      type: object
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the blueprint.
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The YAML configuration of the blueprint.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The display name of the blueprint.
        DisplayDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the blueprint.
        Service:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the service that the blueprint is associated with.
        UseCase:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The use case that the blueprint relates to.
      description: Container for information about an OpenSearch Ingestion blueprint.
    PipelineBlueprintSummary:
      type: object
      properties:
        BlueprintName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the blueprint.
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The display name of the blueprint.
        DisplayDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the blueprint.
        Service:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the service that the blueprint is associated with.
        UseCase:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The use case that the blueprint relates to.
      description: A summary of an OpenSearch Ingestion blueprint.
    PipelineBlueprintsSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineBlueprintSummary'
    PipelineConfigurationBody:
      type: string
      minLength: 1
      maxLength: 24000
    PipelineDestination:
      type: object
      properties:
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the service receiving data from the pipeline.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The endpoint receiving data from the pipeline.
      description: An object representing the destination of a pipeline.
    PipelineDestinationList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineDestination'
    PipelineName:
      type: string
      pattern: ^[a-z][a-z0-9\-]+$
      minLength: 3
      maxLength: 28
    PipelineStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - UPDATING
      - DELETING
      - CREATE_FAILED
      - UPDATE_FAILED
      - STARTING
      - START_FAILED
      - STOPPING
      - STOPPED
    PipelineStatusReason:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of why a pipeline has a certain status.
      description: Information about a pipeline's current status.
    PipelineSummary:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/PipelineStatus'
          description: The current status of the pipeline.
        StatusReason:
          $ref: '#/components/schemas/PipelineStatusReason'
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline.
        PipelineArn:
          allOf:
          - $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline.
        MinUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          description: The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
        MaxUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          description: The maximum pipeline capacity, in Ingestion Compute Units (ICUs).
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the pipeline was created.
        LastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the pipeline was last updated.
        Destinations:
          allOf:
          - $ref: '#/components/schemas/PipelineDestinationList'
          description: A list of destinations to which the pipeline writes data.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: A list of tags associated with the given pipeline.
      description: Summary information for an OpenSearch Ingestion pipeline.
    PipelineSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/PipelineSummary'
    PipelineUnits:
      type: integer
      minimum: 1
    ResourceAlreadyExistsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You attempted to create a resource that already exists.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: You attempted to access or delete a resource that does not exist.
    SecurityGroupId:
      type: string
      pattern: ^sg-\w{8}(\w{9})?$
      minLength: 11
      maxLength: 20
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    ServiceVpcEndpoint:
      type: object
      properties:
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointServiceName'
          description: The name of the service for which a VPC endpoint was created.
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the VPC endpoint that was created.
      description: A container for information about VPC endpoints that were created
        to other services
    ServiceVpcEndpointsList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceVpcEndpoint'
    StartPipelineRequest:
      type: object
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to start.
      required:
      - PipelineName
    StartPipelineResponse:
      type: object
      properties:
        Pipeline:
          $ref: '#/components/schemas/Pipeline'
    StopPipelineRequest:
      type: object
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to stop.
      required:
      - PipelineName
    StopPipelineResponse:
      type: object
      properties:
        Pipeline:
          $ref: '#/components/schemas/Pipeline'
    String:
      type: string
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/String'
    SubnetId:
      type: string
      pattern: ^subnet-\w{8}(\w{9})?$
      minLength: 15
      maxLength: 24
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The tag key. Tag keys must be unique for the pipeline to which
            they are attached.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: 'The value assigned to the corresponding tag key. Tag values
            can be null and don''t have to be unique in a tag set. For example, you
            can have a key value pair in a tag set of `project : Trinity` and `cost-center
            : Trinity`'
      required:
      - Key
      - Value
      description: A tag (key-value pair) for an OpenSearch Ingestion pipeline.
    TagKey:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 128
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline to tag.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The list of key-value tags to add to the pipeline.
      required:
      - Arn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 256
    Timestamp:
      type: string
      format: date-time
    UntagResourceRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/PipelineArn'
          description: The Amazon Resource Name (ARN) of the pipeline to remove tags
            from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The tag keys to remove.
      required:
      - Arn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdatePipelineRequest:
      type: object
      properties:
        PipelineName:
          allOf:
          - $ref: '#/components/schemas/PipelineName'
          description: The name of the pipeline to update.
        MinUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          description: The minimum pipeline capacity, in Ingestion Compute Units (ICUs).
        MaxUnits:
          allOf:
          - $ref: '#/components/schemas/PipelineUnits'
          description: The maximum pipeline capacity, in Ingestion Compute Units (ICUs)
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/PipelineConfigurationBody'
          description: The pipeline configuration in YAML format. The command accepts
            the pipeline configuration as a string or within a .yaml file. If you
            provide the configuration as a string, each new line must be escaped with
            `\n`.
        LogPublishingOptions:
          allOf:
          - $ref: '#/components/schemas/LogPublishingOptions'
          description: Key-value pairs to configure log publishing.
        BufferOptions:
          allOf:
          - $ref: '#/components/schemas/BufferOptions'
          description: Key-value pairs to configure persistent buffering for the pipeline.
        EncryptionAtRestOptions:
          allOf:
          - $ref: '#/components/schemas/EncryptionAtRestOptions'
          description: Key-value pairs to configure encryption for data that is written
            to a persistent buffer.
      required:
      - PipelineName
    UpdatePipelineResponse:
      type: object
      properties:
        Pipeline:
          allOf:
          - $ref: '#/components/schemas/Pipeline'
          description: Container for information about the updated pipeline.
    ValidatePipelineRequest:
      type: object
      properties:
        PipelineConfigurationBody:
          allOf:
          - $ref: '#/components/schemas/PipelineConfigurationBody'
          description: The pipeline configuration in YAML format. The command accepts
            the pipeline configuration as a string or within a .yaml file. If you
            provide the configuration as a string, each new line must be escaped with
            `\n`.
      required:
      - PipelineConfigurationBody
    ValidatePipelineResponse:
      type: object
      properties:
        isValid:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean indicating whether or not the pipeline configuration
            is valid.
        Errors:
          allOf:
          - $ref: '#/components/schemas/ValidationMessageList'
          description: A list of errors if the configuration is invalid.
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An exception for missing or invalid input fields.
    ValidationMessage:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The validation message.
      description: A validation message associated with a `ValidatePipeline` request
        in OpenSearch Ingestion.
    ValidationMessageList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationMessage'
    VpcAttachmentOptions:
      type: object
      properties:
        AttachToVpc:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether a VPC is attached to the pipeline.
        CidrBlock:
          allOf:
          - $ref: '#/components/schemas/CidrBlock'
          description: The CIDR block to be reserved for OpenSearch Ingestion to create
            elastic network interfaces (ENIs).
      required:
      - AttachToVpc
      description: Options for attaching a VPC to pipeline.
    VpcEndpoint:
      type: object
      properties:
        VpcEndpointId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique identifier of the endpoint.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID for your VPC. Amazon Web Services PrivateLink generates
            this value when you create a VPC.
        VpcOptions:
          allOf:
          - $ref: '#/components/schemas/VpcOptions'
          description: Information about the VPC, including associated subnets and
            security groups.
      description: An OpenSearch Ingestion-managed VPC endpoint that will access one
        or more pipelines.
    VpcEndpointManagement:
      type: string
      enum:
      - CUSTOMER
      - SERVICE
    VpcEndpointServiceName:
      type: string
      enum:
      - OPENSEARCH_SERVERLESS
    VpcEndpointsList:
      type: array
      items:
        $ref: '#/components/schemas/VpcEndpoint'
    VpcOptions:
      type: object
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          description: A list of subnet IDs associated with the VPC endpoint.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          description: A list of security groups associated with the VPC endpoint.
        VpcAttachmentOptions:
          allOf:
          - $ref: '#/components/schemas/VpcAttachmentOptions'
          description: Options for attaching a VPC to a pipeline.
        VpcEndpointManagement:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointManagement'
          description: Defines whether you or Amazon OpenSearch Ingestion service
            create and manage the VPC endpoint configured for the pipeline.
      required:
      - SubnetIds
      description: Options that specify the subnets and security groups for an OpenSearch
        Ingestion VPC endpoint.
