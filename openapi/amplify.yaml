openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: amplify
  x-aws-serviceName: amplify
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2017-07-25'
  title: AWS Amplify
  description: |-
    Amplify enables developers to develop and deploy cloud-powered mobile and web apps. Amplify Hosting provides a continuous delivery and hosting service for web applications. For more information, see the [Amplify Hosting User Guide](https://docs.aws.amazon.com/amplify/latest/userguide/welcome.html). The Amplify Framework is a comprehensive set of SDKs, libraries, tools, and documentation for client app development. For more information, see the [Amplify Framework.](https://docs.amplify.aws/)
servers:
- description: The AWS Amplify regional endpoint
  url: https://amplify.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /apps:
    post:
      operationId: CreateApp
      description: |-
        Creates a new Amplify app.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                description:
                  $ref: '#/components/schemas/Description'
                repository:
                  $ref: '#/components/schemas/Repository'
                platform:
                  $ref: '#/components/schemas/Platform'
                computeRoleArn:
                  $ref: '#/components/schemas/ComputeRoleArn'
                iamServiceRoleArn:
                  $ref: '#/components/schemas/ServiceRoleArn'
                oauthToken:
                  $ref: '#/components/schemas/OauthToken'
                accessToken:
                  $ref: '#/components/schemas/AccessToken'
                environmentVariables:
                  $ref: '#/components/schemas/EnvironmentVariables'
                enableBranchAutoBuild:
                  $ref: '#/components/schemas/EnableBranchAutoBuild'
                enableBranchAutoDeletion:
                  $ref: '#/components/schemas/EnableBranchAutoDeletion'
                enableBasicAuth:
                  $ref: '#/components/schemas/EnableBasicAuth'
                basicAuthCredentials:
                  $ref: '#/components/schemas/BasicAuthCredentials'
                customRules:
                  $ref: '#/components/schemas/CustomRules'
                tags:
                  $ref: '#/components/schemas/TagMap'
                buildSpec:
                  $ref: '#/components/schemas/BuildSpec'
                customHeaders:
                  $ref: '#/components/schemas/CustomHeaders'
                enableAutoBranchCreation:
                  $ref: '#/components/schemas/EnableAutoBranchCreation'
                autoBranchCreationPatterns:
                  $ref: '#/components/schemas/AutoBranchCreationPatterns'
                autoBranchCreationConfig:
                  $ref: '#/components/schemas/AutoBranchCreationConfig'
                cacheConfig:
                  $ref: '#/components/schemas/CacheConfig'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListApps
      description: |-
        Returns a list of the existing Amplify apps.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResultsForListApps'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/backendenvironments:
    post:
      operationId: CreateBackendEnvironment
      description: |-
        Creates a new backend environment for an Amplify app.

        This API is available only to Amplify Gen 1 applications where the backend is created using Amplify Studio or the Amplify command line interface (CLI). This API isn’t available to Amplify Gen 2 applications. When you deploy an application with Amplify Gen 2, you provision the app's backend infrastructure using Typescript code.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                environmentName:
                  $ref: '#/components/schemas/EnvironmentName'
                stackName:
                  $ref: '#/components/schemas/StackName'
                deploymentArtifacts:
                  $ref: '#/components/schemas/DeploymentArtifacts'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListBackendEnvironments
      description: |-
        Lists the backend environments for an Amplify app.

        This API is available only to Amplify Gen 1 applications where the backend is created using Amplify Studio or the Amplify command line interface (CLI). This API isn’t available to Amplify Gen 2 applications. When you deploy an application with Amplify Gen 2, you provision the app's backend infrastructure using Typescript code.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: environmentName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/branches:
    post:
      operationId: CreateBranch
      description: |-
        Creates a new branch for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branchName:
                  $ref: '#/components/schemas/BranchName'
                description:
                  $ref: '#/components/schemas/Description'
                stage:
                  $ref: '#/components/schemas/Stage'
                framework:
                  $ref: '#/components/schemas/Framework'
                enableNotification:
                  $ref: '#/components/schemas/EnableNotification'
                enableAutoBuild:
                  $ref: '#/components/schemas/EnableAutoBuild'
                enableSkewProtection:
                  $ref: '#/components/schemas/EnableSkewProtection'
                environmentVariables:
                  $ref: '#/components/schemas/EnvironmentVariables'
                basicAuthCredentials:
                  $ref: '#/components/schemas/BasicAuthCredentials'
                enableBasicAuth:
                  $ref: '#/components/schemas/EnableBasicAuth'
                enablePerformanceMode:
                  $ref: '#/components/schemas/EnablePerformanceMode'
                tags:
                  $ref: '#/components/schemas/TagMap'
                buildSpec:
                  $ref: '#/components/schemas/BuildSpec'
                ttl:
                  $ref: '#/components/schemas/TTL'
                displayName:
                  $ref: '#/components/schemas/DisplayName'
                enablePullRequestPreview:
                  $ref: '#/components/schemas/EnablePullRequestPreview'
                pullRequestEnvironmentName:
                  $ref: '#/components/schemas/PullRequestEnvironmentName'
                backendEnvironmentArn:
                  $ref: '#/components/schemas/BackendEnvironmentArn'
                backend:
                  $ref: '#/components/schemas/Backend'
                computeRoleArn:
                  $ref: '#/components/schemas/ComputeRoleArn'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListBranches
      description: |-
        Lists the branches of an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/branches/{branchName}/deployments:
    post:
      operationId: CreateDeployment
      description: |-
        Creates a deployment for a manually deployed Amplify app. Manually deployed apps are not connected to a Git repository.

        The maximum duration between the `CreateDeployment` call and the `StartDeployment` call cannot exceed 8 hours. If the duration exceeds 8 hours, the `StartDeployment` call and the associated `Job` will fail.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fileMap:
                  $ref: '#/components/schemas/FileMap'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/domains:
    post:
      operationId: CreateDomainAssociation
      description: |-
        Creates a new domain association for an Amplify app. This action associates a custom domain with the Amplify app
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                domainName:
                  $ref: '#/components/schemas/DomainName'
                enableAutoSubDomain:
                  $ref: '#/components/schemas/EnableAutoSubDomain'
                subDomainSettings:
                  $ref: '#/components/schemas/SubDomainSettings'
                autoSubDomainCreationPatterns:
                  $ref: '#/components/schemas/AutoSubDomainCreationPatterns'
                autoSubDomainIAMRole:
                  $ref: '#/components/schemas/AutoSubDomainIAMRole'
                certificateSettings:
                  $ref: '#/components/schemas/CertificateSettings'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListDomainAssociations
      description: |-
        Returns the domain associations for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/webhooks:
    post:
      operationId: CreateWebhook
      description: |-
        Creates a new webhook on an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branchName:
                  $ref: '#/components/schemas/BranchName'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListWebhooks
      description: |-
        Returns a list of webhooks for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}:
    delete:
      operationId: DeleteApp
      description: |-
        Deletes an existing Amplify app specified by an app ID.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetApp
      description: |-
        Returns an existing Amplify app specified by an app ID.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: UpdateApp
      description: |-
        Updates an existing Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                description:
                  $ref: '#/components/schemas/Description'
                platform:
                  $ref: '#/components/schemas/Platform'
                computeRoleArn:
                  $ref: '#/components/schemas/ComputeRoleArn'
                iamServiceRoleArn:
                  $ref: '#/components/schemas/ServiceRoleArn'
                environmentVariables:
                  $ref: '#/components/schemas/EnvironmentVariables'
                enableBranchAutoBuild:
                  $ref: '#/components/schemas/EnableAutoBuild'
                enableBranchAutoDeletion:
                  $ref: '#/components/schemas/EnableBranchAutoDeletion'
                enableBasicAuth:
                  $ref: '#/components/schemas/EnableBasicAuth'
                basicAuthCredentials:
                  $ref: '#/components/schemas/BasicAuthCredentials'
                customRules:
                  $ref: '#/components/schemas/CustomRules'
                buildSpec:
                  $ref: '#/components/schemas/BuildSpec'
                customHeaders:
                  $ref: '#/components/schemas/CustomHeaders'
                enableAutoBranchCreation:
                  $ref: '#/components/schemas/EnableAutoBranchCreation'
                autoBranchCreationPatterns:
                  $ref: '#/components/schemas/AutoBranchCreationPatterns'
                autoBranchCreationConfig:
                  $ref: '#/components/schemas/AutoBranchCreationConfig'
                repository:
                  $ref: '#/components/schemas/Repository'
                oauthToken:
                  $ref: '#/components/schemas/OauthToken'
                accessToken:
                  $ref: '#/components/schemas/AccessToken'
                cacheConfig:
                  $ref: '#/components/schemas/CacheConfig'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/backendenvironments/{environmentName}:
    delete:
      operationId: DeleteBackendEnvironment
      description: |-
        Deletes a backend environment for an Amplify app.

        This API is available only to Amplify Gen 1 applications where the backend is created using Amplify Studio or the Amplify command line interface (CLI). This API isn’t available to Amplify Gen 2 applications. When you deploy an application with Amplify Gen 2, you provision the app's backend infrastructure using Typescript code.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetBackendEnvironment
      description: |-
        Returns a backend environment for an Amplify app.

        This API is available only to Amplify Gen 1 applications where the backend is created using Amplify Studio or the Amplify command line interface (CLI). This API isn’t available to Amplify Gen 2 applications. When you deploy an application with Amplify Gen 2, you provision the app's backend infrastructure using Typescript code.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: environmentName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EnvironmentName'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/branches/{branchName}:
    delete:
      operationId: DeleteBranch
      description: |-
        Deletes a branch for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetBranch
      description: |-
        Returns a branch for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: UpdateBranch
      description: |-
        Updates a branch for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/Description'
                framework:
                  $ref: '#/components/schemas/Framework'
                stage:
                  $ref: '#/components/schemas/Stage'
                enableNotification:
                  $ref: '#/components/schemas/EnableNotification'
                enableAutoBuild:
                  $ref: '#/components/schemas/EnableAutoBuild'
                enableSkewProtection:
                  $ref: '#/components/schemas/EnableSkewProtection'
                environmentVariables:
                  $ref: '#/components/schemas/EnvironmentVariables'
                basicAuthCredentials:
                  $ref: '#/components/schemas/BasicAuthCredentials'
                enableBasicAuth:
                  $ref: '#/components/schemas/EnableBasicAuth'
                enablePerformanceMode:
                  $ref: '#/components/schemas/EnablePerformanceMode'
                buildSpec:
                  $ref: '#/components/schemas/BuildSpec'
                ttl:
                  $ref: '#/components/schemas/TTL'
                displayName:
                  $ref: '#/components/schemas/DisplayName'
                enablePullRequestPreview:
                  $ref: '#/components/schemas/EnablePullRequestPreview'
                pullRequestEnvironmentName:
                  $ref: '#/components/schemas/PullRequestEnvironmentName'
                backendEnvironmentArn:
                  $ref: '#/components/schemas/BackendEnvironmentArn'
                backend:
                  $ref: '#/components/schemas/Backend'
                computeRoleArn:
                  $ref: '#/components/schemas/ComputeRoleArn'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/domains/{domainName}:
    delete:
      operationId: DeleteDomainAssociation
      description: |-
        Deletes a domain association for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: domainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetDomainAssociation
      description: |-
        Returns the domain information for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: domainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: UpdateDomainAssociation
      description: |-
        Creates a new domain association for an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: domainName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DomainName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                enableAutoSubDomain:
                  $ref: '#/components/schemas/EnableAutoSubDomain'
                subDomainSettings:
                  $ref: '#/components/schemas/SubDomainSettings'
                autoSubDomainCreationPatterns:
                  $ref: '#/components/schemas/AutoSubDomainCreationPatterns'
                autoSubDomainIAMRole:
                  $ref: '#/components/schemas/AutoSubDomainIAMRole'
                certificateSettings:
                  $ref: '#/components/schemas/CertificateSettings'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/branches/{branchName}/jobs/{jobId}:
    delete:
      operationId: DeleteJob
      description: |-
        Deletes a job for a branch of an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetJob
      description: |-
        Returns a job for a branch of an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /webhooks/{webhookId}:
    delete:
      operationId: DeleteWebhook
      description: |-
        Deletes a webhook.
      parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WebhookId'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: GetWebhook
      description: |-
        Returns the webhook information that corresponds to a specified webhook ID.
      parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WebhookId'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: UpdateWebhook
      description: |-
        Updates a webhook.
      parameters:
      - name: webhookId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/WebhookId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                branchName:
                  $ref: '#/components/schemas/BranchName'
                description:
                  $ref: '#/components/schemas/Description'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '503':
          description: |-
            An operation failed because a dependent service threw an exception.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependentServiceFailureException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/accesslogs:
    post:
      operationId: GenerateAccessLogs
      description: |-
        Returns the website access logs for a specific time range using a presigned URL.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startTime:
                  $ref: '#/components/schemas/StartTime'
                endTime:
                  $ref: '#/components/schemas/EndTime'
                domainName:
                  $ref: '#/components/schemas/DomainName'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /artifacts/{artifactId}:
    get:
      operationId: GetArtifactUrl
      description: |-
        Returns the artifact info that corresponds to an artifact id.
      parameters:
      - name: artifactId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ArtifactId'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/branches/{branchName}/jobs/{jobId}/artifacts:
    get:
      operationId: ListArtifacts
      description: |-
        Returns a list of end-to-end testing artifacts for a specified app, branch, and job.

        To return the build artifacts, use the [GetJob](https://docs.aws.amazon.com/amplify/latest/APIReference/API_GetJob.html) API.

        For more information about Amplify testing support, see [Setting up end-to-end Cypress tests for your Amplify application](https://docs.aws.amazon.com/amplify/latest/userguide/running-tests.html) in the _Amplify Hosting User Guide_.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/branches/{branchName}/jobs:
    get:
      operationId: ListJobs
      description: |-
        Lists the jobs for a branch of an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    post:
      operationId: StartJob
      description: |-
        Starts a new job for a branch of an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobId:
                  $ref: '#/components/schemas/JobId'
                jobType:
                  $ref: '#/components/schemas/JobType'
                jobReason:
                  $ref: '#/components/schemas/JobReason'
                commitId:
                  $ref: '#/components/schemas/CommitId'
                commitMessage:
                  $ref: '#/components/schemas/CommitMessage'
                commitTime:
                  $ref: '#/components/schemas/CommitTime'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of tags for a specified Amazon Resource Name (ARN).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An operation failed due to a non-existent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    post:
      operationId: TagResource
      description: |-
        Tags the resource with a tag key and value.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An operation failed due to a non-existent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
    delete:
      operationId: UntagResource
      description: |-
        Untags a resource with a specified Amazon Resource Name (ARN).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '404':
          description: |-
            An operation failed due to a non-existent resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /apps/{appId}/branches/{branchName}/deployments/start:
    post:
      operationId: StartDeployment
      description: |-
        Starts a deployment for a manually deployed app. Manually deployed apps are not connected to a Git repository.

        The maximum duration between the `CreateDeployment` call and the `StartDeployment` call cannot exceed 8 hours. If the duration exceeds 8 hours, the `StartDeployment` call and the associated `Job` will fail.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobId:
                  $ref: '#/components/schemas/JobId'
                sourceUrl:
                  $ref: '#/components/schemas/SourceUrl'
                sourceUrlType:
                  $ref: '#/components/schemas/SourceUrlType'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /apps/{appId}/branches/{branchName}/jobs/{jobId}/stop:
    delete:
      operationId: StopJob
      description: |-
        Stops a job that is in progress for a branch of an Amplify app.
      parameters:
      - name: appId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AppId'
      - name: branchName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BranchName'
      - name: jobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobId'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            The service failed to perform an operation due to an internal issue.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalFailureException'
        '429':
          description: |-
            A resource could not be created because service quotas were exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
        '404':
          description: |-
            An entity was not found during an operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            An operation failed due to a lack of access.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
components:
  schemas:
    AccessToken:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 255
    ActiveJobId:
      type: string
      minLength: 0
      maxLength: 1000
    App:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID of the Amplify app.
        appArn:
          allOf:
          - $ref: '#/components/schemas/AppArn'
          description: The Amazon Resource Name (ARN) of the Amplify app.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name for the Amplify app.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tag for the Amplify app.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for the Amplify app.
        repository:
          allOf:
          - $ref: '#/components/schemas/Repository'
          description: The Git repository for the Amplify app.
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          description: 'The platform for the Amplify app. For a static app, set the
            platform type to `WEB`. For a dynamic server-side rendered (SSR) app,
            set the platform type to `WEB_COMPUTE`. For an app requiring Amplify Hosting''s
            original SSR support only, set the platform type to `WEB_DYNAMIC`.


            If you are deploying an SSG only app with Next.js 14 or later, you must
            use the platform type `WEB_COMPUTE`.'
        createTime:
          allOf:
          - $ref: '#/components/schemas/CreateTime'
          description: A timestamp of when Amplify created the application.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          description: A timestamp of when Amplify updated the application.
        computeRoleArn:
          allOf:
          - $ref: '#/components/schemas/ComputeRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role for an SSR app.
            The Compute role allows the Amplify Hosting compute service to securely
            access specific Amazon Web Services resources based on the role's permissions.
            For more information about the SSR Compute role, see [Adding an SSR Compute
            role](https://docs.aws.amazon.com/amplify/latest/userguide/amplify-SSR-compute-role.html)
            in the _Amplify User Guide_.
        iamServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM service role for
            the Amplify app.
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          description: 'The environment variables for the Amplify app.


            For a list of the environment variables that are accessible to Amplify
            by default, see [Amplify Environment variables](https://docs.aws.amazon.com/amplify/latest/userguide/amplify-console-environment-variables.html)
            in the _Amplify Hosting User Guide_.'
        defaultDomain:
          allOf:
          - $ref: '#/components/schemas/DefaultDomain'
          description: The default domain for the Amplify app.
        enableBranchAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoBuild'
          description: Enables the auto-building of branches for the Amplify app.
        enableBranchAutoDeletion:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoDeletion'
          description: Automatically disconnect a branch in the Amplify console when
            you delete a branch from your Git repository.
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          description: Enables basic authorization for the Amplify app's branches.
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          description: The basic authorization credentials for branches for the Amplify
            app. You must base64-encode the authorization credentials and provide
            them in the format `user:password`.
        customRules:
          allOf:
          - $ref: '#/components/schemas/CustomRules'
          description: Describes the custom redirect and rewrite rules for the Amplify
            app.
        productionBranch:
          allOf:
          - $ref: '#/components/schemas/ProductionBranch'
          description: Describes the information about a production branch of the
            Amplify app.
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          description: Describes the content of the build specification (build spec)
            for the Amplify app.
        customHeaders:
          allOf:
          - $ref: '#/components/schemas/CustomHeaders'
          description: Describes the custom HTTP headers for the Amplify app.
        enableAutoBranchCreation:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBranchCreation'
          description: Enables automated branch creation for the Amplify app.
        autoBranchCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationPatterns'
          description: Describes the automated branch creation glob patterns for the
            Amplify app.
        autoBranchCreationConfig:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationConfig'
          description: Describes the automated branch creation configuration for the
            Amplify app.
        repositoryCloneMethod:
          allOf:
          - $ref: '#/components/schemas/RepositoryCloneMethod'
          description: 'This is for internal use.


            The Amplify service uses this parameter to specify the authentication
            protocol to use to access the Git repository for an Amplify app. Amplify
            specifies `TOKEN` for a GitHub repository, `SIGV4` for an Amazon Web Services
            CodeCommit repository, and `SSH` for GitLab and Bitbucket repositories.'
        cacheConfig:
          allOf:
          - $ref: '#/components/schemas/CacheConfig'
          description: The cache configuration for the Amplify app. If you don't specify
            the cache configuration `type`, Amplify uses the default `AMPLIFY_MANAGED`
            setting.
        webhookCreateTime:
          allOf:
          - $ref: '#/components/schemas/webhookCreateTime'
          description: A timestamp of when Amplify created the webhook in your Git
            repository.
        wafConfiguration:
          allOf:
          - $ref: '#/components/schemas/WafConfiguration'
          description: Describes the Firewall configuration for the Amplify app. Firewall
            support enables you to protect your hosted applications with a direct
            integration with WAF.
      required:
      - appId
      - appArn
      - name
      - description
      - repository
      - platform
      - createTime
      - updateTime
      - environmentVariables
      - defaultDomain
      - enableBranchAutoBuild
      - enableBasicAuth
      description: Represents the different branches of a repository for building,
        deploying, and hosting an Amplify app.
    AppArn:
      type: string
      minLength: 0
      maxLength: 1000
    AppId:
      type: string
      pattern: ^d[a-z0-9]+$
      minLength: 1
      maxLength: 20
    Apps:
      type: array
      items:
        $ref: '#/components/schemas/App'
    Artifact:
      type: object
      properties:
        artifactFileName:
          allOf:
          - $ref: '#/components/schemas/ArtifactFileName'
          description: The file name for the artifact.
        artifactId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          description: The unique ID for the artifact.
      required:
      - artifactFileName
      - artifactId
      description: Describes an artifact.
    ArtifactFileName:
      type: string
      minLength: 0
      maxLength: 1000
    ArtifactId:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    ArtifactUrl:
      type: string
      minLength: 0
      maxLength: 1000
    Artifacts:
      type: array
      items:
        $ref: '#/components/schemas/Artifact'
    ArtifactsUrl:
      type: string
      minLength: 0
      maxLength: 1000
    AssociatedResource:
      type: string
      minLength: 1
      maxLength: 2048
    AssociatedResources:
      type: array
      items:
        $ref: '#/components/schemas/AssociatedResource'
    AutoBranchCreationConfig:
      type: object
      properties:
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          description: Describes the current stage for the autocreated branch.
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          description: The framework for the autocreated branch.
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          description: Enables auto building for the autocreated branch.
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          description: The environment variables for the autocreated branch.
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          description: The basic authorization credentials for the autocreated branch.
            You must base64-encode the authorization credentials and provide them
            in the format `user:password`.
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          description: Enables basic authorization for the autocreated branch.
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          description: 'Enables performance mode for the branch.


            Performance mode optimizes for faster hosting performance by keeping content
            cached at the edge for a longer interval. When performance mode is enabled,
            hosting configuration or code changes can take up to 10 minutes to roll
            out.'
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          description: The build specification (build spec) for the autocreated branch.
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          description: Enables pull request previews for the autocreated branch.
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          description: The Amplify environment name for the pull request.
      description: Describes the automated branch creation configuration.
    AutoBranchCreationPattern:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 2048
    AutoBranchCreationPatterns:
      type: array
      items:
        $ref: '#/components/schemas/AutoBranchCreationPattern'
    AutoSubDomainCreationPattern:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 2048
    AutoSubDomainCreationPatterns:
      type: array
      items:
        $ref: '#/components/schemas/AutoSubDomainCreationPattern'
    AutoSubDomainIAMRole:
      type: string
      pattern: ^$|^arn:aws:iam::\d{12}:role.+$
      minLength: 0
      maxLength: 1000
    Backend:
      type: object
      properties:
        stackArn:
          allOf:
          - $ref: '#/components/schemas/StackArn'
          description: The Amazon Resource Name (ARN) for the CloudFormation stack.
      description: 'Describes the backend associated with an Amplify `Branch`.


        This property is available to Amplify Gen 2 apps only. When you deploy an
        application with Amplify Gen 2, you provision the app''s backend infrastructure
        using Typescript code.'
    BackendEnvironment:
      type: object
      properties:
        backendEnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironmentArn'
          description: The Amazon Resource Name (ARN) for a backend environment that
            is part of an Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name for a backend environment that is part of an Amplify
            app.
        stackName:
          allOf:
          - $ref: '#/components/schemas/StackName'
          description: The AWS CloudFormation stack name of a backend environment.
        deploymentArtifacts:
          allOf:
          - $ref: '#/components/schemas/DeploymentArtifacts'
          description: The name of deployment artifacts.
        createTime:
          allOf:
          - $ref: '#/components/schemas/CreateTime'
          description: The creation date and time for a backend environment that is
            part of an Amplify app.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          description: The last updated date and time for a backend environment that
            is part of an Amplify app.
      required:
      - backendEnvironmentArn
      - environmentName
      - createTime
      - updateTime
      description: Describes the backend environment associated with a `Branch` of
        a Gen 1 Amplify app. Amplify Gen 1 applications are created using Amplify
        Studio or the Amplify command line interface (CLI).
    BackendEnvironmentArn:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 1000
    BackendEnvironments:
      type: array
      items:
        $ref: '#/components/schemas/BackendEnvironment'
    BadRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A request contains unexpected data.
    BasicAuthCredentials:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 2000
    Branch:
      type: object
      properties:
        branchArn:
          allOf:
          - $ref: '#/components/schemas/BranchArn'
          description: The Amazon Resource Name (ARN) for a branch that is part of
            an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name for the branch that is part of an Amplify app.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for the branch that is part of an Amplify app.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tag for the branch of an Amplify app.
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          description: The current stage for the branch that is part of an Amplify
            app.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name for the branch. This is used as the default
            domain prefix.
        enableNotification:
          allOf:
          - $ref: '#/components/schemas/EnableNotification'
          description: Enables notifications for a branch that is part of an Amplify
            app.
        createTime:
          allOf:
          - $ref: '#/components/schemas/CreateTime'
          description: A timestamp of when Amplify created the branch.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          description: A timestamp for the last updated time for a branch.
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          description: The environment variables specific to a branch of an Amplify
            app.
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          description: Enables auto-building on push for a branch of an Amplify app.
        enableSkewProtection:
          allOf:
          - $ref: '#/components/schemas/EnableSkewProtection'
          description: 'Specifies whether the skew protection feature is enabled for
            the branch.


            Deployment skew protection is available to Amplify applications to eliminate
            version skew issues between client and servers in web applications. When
            you apply skew protection to a branch, you can ensure that your clients
            always interact with the correct version of server-side assets, regardless
            of when a deployment occurs. For more information about skew protection,
            see [Skew protection for Amplify deployments](https://docs.aws.amazon.com/amplify/latest/userguide/skew-protection.html)
            in the _Amplify User Guide_.'
        customDomains:
          allOf:
          - $ref: '#/components/schemas/CustomDomains'
          description: The custom domains for a branch of an Amplify app.
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          description: The framework for a branch of an Amplify app.
        activeJobId:
          allOf:
          - $ref: '#/components/schemas/ActiveJobId'
          description: The ID of the active job for a branch of an Amplify app.
        totalNumberOfJobs:
          allOf:
          - $ref: '#/components/schemas/TotalNumberOfJobs'
          description: The total number of jobs that are part of an Amplify app.
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          description: Enables basic authorization for a branch of an Amplify app.
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          description: 'Enables performance mode for the branch.


            Performance mode optimizes for faster hosting performance by keeping content
            cached at the edge for a longer interval. When performance mode is enabled,
            hosting configuration or code changes can take up to 10 minutes to roll
            out.'
        thumbnailUrl:
          allOf:
          - $ref: '#/components/schemas/ThumbnailUrl'
          description: The thumbnail URL for the branch of an Amplify app.
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          description: The basic authorization credentials for a branch of an Amplify
            app. You must base64-encode the authorization credentials and provide
            them in the format `user:password`.
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          description: The build specification (build spec) content for the branch
            of an Amplify app.
        ttl:
          allOf:
          - $ref: '#/components/schemas/TTL'
          description: The content Time to Live (TTL) for the website in seconds.
        associatedResources:
          allOf:
          - $ref: '#/components/schemas/AssociatedResources'
          description: A list of custom resources that are linked to this branch.
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          description: Enables pull request previews for the branch.
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          description: The Amplify environment name for the pull request.
        destinationBranch:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The destination branch if the branch is a pull request branch.
        sourceBranch:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The source branch if the branch is a pull request branch.
        backendEnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironmentArn'
          description: 'The Amazon Resource Name (ARN) for a backend environment that
            is part of an Amplify app.


            This property is available to Amplify Gen 1 apps only. When you deploy
            an application with Amplify Gen 2, you provision the app''s backend infrastructure
            using Typescript code.'
        backend:
          $ref: '#/components/schemas/Backend'
        computeRoleArn:
          allOf:
          - $ref: '#/components/schemas/ComputeRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role for a branch
            of an SSR app. The Compute role allows the Amplify Hosting compute service
            to securely access specific Amazon Web Services resources based on the
            role's permissions. For more information about the SSR Compute role, see
            [Adding an SSR Compute role](https://docs.aws.amazon.com/amplify/latest/userguide/amplify-SSR-compute-role.html)
            in the _Amplify User Guide_.
      required:
      - branchArn
      - branchName
      - description
      - stage
      - displayName
      - enableNotification
      - createTime
      - updateTime
      - environmentVariables
      - enableAutoBuild
      - customDomains
      - framework
      - activeJobId
      - totalNumberOfJobs
      - enableBasicAuth
      - ttl
      - enablePullRequestPreview
      description: The branch for an Amplify app, which maps to a third-party repository
        branch.
    BranchArn:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 1000
    BranchName:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 255
    Branches:
      type: array
      items:
        $ref: '#/components/schemas/Branch'
    BuildSpec:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 25000
    CacheConfig:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/CacheConfigType'
          description: 'The type of cache configuration to use for an Amplify app.


            The `AMPLIFY_MANAGED` cache configuration automatically applies an optimized
            cache configuration for your app based on its platform, routing rules,
            and rewrite rules. This is the default setting.


            The `AMPLIFY_MANAGED_NO_COOKIES` cache configuration type is the same
            as `AMPLIFY_MANAGED`, except that it excludes all cookies from the cache
            key.'
      required:
      - type
      description: 'Describes the cache configuration for an Amplify app.


        For more information about how Amplify applies an optimal cache configuration
        for your app based on the type of content that is being served, see [Managing
        cache configuration](https://docs.aws.amazon.com/amplify/latest/userguide/managing-cache-configuration)
        in the _Amplify User guide_.'
    CacheConfigType:
      type: string
      enum:
      - AMPLIFY_MANAGED
      - AMPLIFY_MANAGED_NO_COOKIES
    Certificate:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/CertificateType'
          description: 'The type of SSL/TLS certificate that you want to use.


            Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify
            provisions for you.


            Specify `CUSTOM` to use your own certificate that you have already added
            to Certificate Manager in your Amazon Web Services account. Make sure
            you request (or import) the certificate in the US East (N. Virginia) Region
            (us-east-1). For more information about using ACM, see [Importing certificates
            into Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html)
            in the _ACM User guide_.'
        customCertificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: 'The Amazon resource name (ARN) for a custom certificate that
            you have already added to Certificate Manager in your Amazon Web Services
            account.


            This field is required only when the certificate type is `CUSTOM`.'
        certificateVerificationDNSRecord:
          allOf:
          - $ref: '#/components/schemas/CertificateVerificationDNSRecord'
          description: The DNS record for certificate verification.
      required:
      - type
      description: Describes the current SSL/TLS certificate that is in use for the
        domain. If you are using `CreateDomainAssociation` to create a new domain
        association, `Certificate` describes the new certificate that you are creating.
    CertificateArn:
      type: string
      pattern: ^arn:aws:acm:[a-z0-9-]+:\d{12}:certificate\/.+$
      minLength: 0
      maxLength: 1000
    CertificateSettings:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/CertificateType'
          description: 'The certificate type.


            Specify `AMPLIFY_MANAGED` to use the default certificate that Amplify
            provisions for you.


            Specify `CUSTOM` to use your own certificate that you have already added
            to Certificate Manager in your Amazon Web Services account. Make sure
            you request (or import) the certificate in the US East (N. Virginia) Region
            (us-east-1). For more information about using ACM, see [Importing certificates
            into Certificate Manager](https://docs.aws.amazon.com/acm/latest/userguide/import-certificate.html)
            in the _ACM User guide_.'
        customCertificateArn:
          allOf:
          - $ref: '#/components/schemas/CertificateArn'
          description: 'The Amazon resource name (ARN) for the custom certificate
            that you have already added to Certificate Manager in your Amazon Web
            Services account.


            This field is required only when the certificate type is `CUSTOM`.'
      required:
      - type
      description: The type of SSL/TLS certificate to use for your custom domain.
        If a certificate type isn't specified, Amplify uses the default `AMPLIFY_MANAGED`
        certificate.
    CertificateType:
      type: string
      enum:
      - AMPLIFY_MANAGED
      - CUSTOM
    CertificateVerificationDNSRecord:
      type: string
      minLength: 0
      maxLength: 1000
    Code:
      type: string
    CommitId:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    CommitMessage:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 10000
    CommitTime:
      type: string
      format: date-time
    ComputeRoleArn:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 1000
    Condition:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 2048
    Context:
      type: string
    CreateAppRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the Amplify app.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description of the Amplify app.
        repository:
          allOf:
          - $ref: '#/components/schemas/Repository'
          description: The Git repository for the Amplify app.
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          description: 'The platform for the Amplify app. For a static app, set the
            platform type to `WEB`. For a dynamic server-side rendered (SSR) app,
            set the platform type to `WEB_COMPUTE`. For an app requiring Amplify Hosting''s
            original SSR support only, set the platform type to `WEB_DYNAMIC`.


            If you are deploying an SSG only app with Next.js version 14 or later,
            you must set the platform type to `WEB_COMPUTE` and set the artifacts
            `baseDirectory` to `.next` in the application''s build settings. For an
            example of the build specification settings, see [Amplify build settings
            for a Next.js 14 SSG application](https://docs.aws.amazon.com/amplify/latest/userguide/deploy-nextjs-app.html#build-setting-detection-ssg-14)
            in the _Amplify Hosting User Guide_.'
        computeRoleArn:
          allOf:
          - $ref: '#/components/schemas/ComputeRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role to assign to
            an SSR app. The SSR Compute role allows the Amplify Hosting compute service
            to securely access specific Amazon Web Services resources based on the
            role's permissions. For more information about the SSR Compute role, see
            [Adding an SSR Compute role](https://docs.aws.amazon.com/amplify/latest/userguide/amplify-SSR-compute-role.html)
            in the _Amplify User Guide_.
        iamServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM service role for
            the Amplify app.
        oauthToken:
          allOf:
          - $ref: '#/components/schemas/OauthToken'
          description: 'The OAuth token for a third-party source control system for
            an Amplify app. The OAuth token is used to create a webhook and a read-only
            deploy key using SSH cloning. The OAuth token is not stored.


            Use `oauthToken` for repository providers other than GitHub, such as Bitbucket
            or CodeCommit. To authorize access to GitHub as your repository provider,
            use `accessToken`.


            You must specify either `oauthToken` or `accessToken` when you create
            a new app.


            Existing Amplify apps deployed from a GitHub repository using OAuth continue
            to work with CI/CD. However, we strongly recommend that you migrate these
            apps to use the GitHub App. For more information, see [Migrating an existing
            OAuth app to the Amplify GitHub App](https://docs.aws.amazon.com/amplify/latest/userguide/setting-up-GitHub-access.html#migrating-to-github-app-auth)
            in the _Amplify User Guide_ .'
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          description: 'The personal access token for a GitHub repository for an Amplify
            app. The personal access token is used to authorize access to a GitHub
            repository using the Amplify GitHub App. The token is not stored.


            Use `accessToken` for GitHub repositories only. To authorize access to
            a repository provider such as Bitbucket or CodeCommit, use `oauthToken`.


            You must specify either `accessToken` or `oauthToken` when you create
            a new app.


            Existing Amplify apps deployed from a GitHub repository using OAuth continue
            to work with CI/CD. However, we strongly recommend that you migrate these
            apps to use the GitHub App. For more information, see [Migrating an existing
            OAuth app to the Amplify GitHub App](https://docs.aws.amazon.com/amplify/latest/userguide/setting-up-GitHub-access.html#migrating-to-github-app-auth)
            in the _Amplify User Guide_ .'
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          description: 'The environment variables map for an Amplify app.


            For a list of the environment variables that are accessible to Amplify
            by default, see [Amplify Environment variables](https://docs.aws.amazon.com/amplify/latest/userguide/amplify-console-environment-variables.html)
            in the _Amplify Hosting User Guide_.'
        enableBranchAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoBuild'
          description: Enables the auto building of branches for an Amplify app.
        enableBranchAutoDeletion:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoDeletion'
          description: Automatically disconnects a branch in the Amplify console when
            you delete a branch from your Git repository.
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          description: Enables basic authorization for an Amplify app. This will apply
            to all branches that are part of this app.
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          description: The credentials for basic authorization for an Amplify app.
            You must base64-encode the authorization credentials and provide them
            in the format `user:password`.
        customRules:
          allOf:
          - $ref: '#/components/schemas/CustomRules'
          description: The custom rewrite and redirect rules for an Amplify app.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tag for an Amplify app.
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          description: The build specification (build spec) for an Amplify app.
        customHeaders:
          allOf:
          - $ref: '#/components/schemas/CustomHeaders'
          description: The custom HTTP headers for an Amplify app.
        enableAutoBranchCreation:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBranchCreation'
          description: Enables automated branch creation for an Amplify app.
        autoBranchCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationPatterns'
          description: The automated branch creation glob patterns for an Amplify
            app.
        autoBranchCreationConfig:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationConfig'
          description: The automated branch creation configuration for an Amplify
            app.
        cacheConfig:
          allOf:
          - $ref: '#/components/schemas/CacheConfig'
          description: The cache configuration for the Amplify app.
      required:
      - name
      description: The request structure used to create apps in Amplify.
    CreateAppResult:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/App'
      required:
      - app
    CreateBackendEnvironmentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name for the backend environment.
        stackName:
          allOf:
          - $ref: '#/components/schemas/StackName'
          description: The AWS CloudFormation stack name of a backend environment.
        deploymentArtifacts:
          allOf:
          - $ref: '#/components/schemas/DeploymentArtifacts'
          description: The name of deployment artifacts.
      required:
      - appId
      - environmentName
      description: The request structure for the backend environment create request.
    CreateBackendEnvironmentResult:
      type: object
      properties:
        backendEnvironment:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironment'
          description: Describes the backend environment for an Amplify app.
      required:
      - backendEnvironment
      description: The result structure for the create backend environment request.
    CreateBranchRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name for the branch.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for the branch.
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          description: Describes the current stage for the branch.
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          description: The framework for the branch.
        enableNotification:
          allOf:
          - $ref: '#/components/schemas/EnableNotification'
          description: Enables notifications for the branch.
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          description: Enables auto building for the branch.
        enableSkewProtection:
          allOf:
          - $ref: '#/components/schemas/EnableSkewProtection'
          description: 'Specifies whether the skew protection feature is enabled for
            the branch.


            Deployment skew protection is available to Amplify applications to eliminate
            version skew issues between client and servers in web applications. When
            you apply skew protection to a branch, you can ensure that your clients
            always interact with the correct version of server-side assets, regardless
            of when a deployment occurs. For more information about skew protection,
            see [Skew protection for Amplify deployments](https://docs.aws.amazon.com/amplify/latest/userguide/skew-protection.html)
            in the _Amplify User Guide_.'
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          description: The environment variables for the branch.
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          description: The basic authorization credentials for the branch. You must
            base64-encode the authorization credentials and provide them in the format
            `user:password`.
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          description: Enables basic authorization for the branch.
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          description: 'Enables performance mode for the branch.


            Performance mode optimizes for faster hosting performance by keeping content
            cached at the edge for a longer interval. When performance mode is enabled,
            hosting configuration or code changes can take up to 10 minutes to roll
            out.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tag for the branch.
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          description: The build specification (build spec) for the branch.
        ttl:
          allOf:
          - $ref: '#/components/schemas/TTL'
          description: The content Time To Live (TTL) for the website in seconds.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name for a branch. This is used as the default
            domain prefix.
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          description: Enables pull request previews for this branch.
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          description: The Amplify environment name for the pull request.
        backendEnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironmentArn'
          description: 'The Amazon Resource Name (ARN) for a backend environment that
            is part of a Gen 1 Amplify app.


            This field is available to Amplify Gen 1 apps only where the backend is
            created using Amplify Studio or the Amplify command line interface (CLI).'
        backend:
          allOf:
          - $ref: '#/components/schemas/Backend'
          description: 'The backend for a `Branch` of an Amplify app. Use for a backend
            created from an CloudFormation stack.


            This field is available to Amplify Gen 2 apps only. When you deploy an
            application with Amplify Gen 2, you provision the app''s backend infrastructure
            using Typescript code.'
        computeRoleArn:
          allOf:
          - $ref: '#/components/schemas/ComputeRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role to assign to
            a branch of an SSR app. The SSR Compute role allows the Amplify Hosting
            compute service to securely access specific Amazon Web Services resources
            based on the role's permissions. For more information about the SSR Compute
            role, see [Adding an SSR Compute role](https://docs.aws.amazon.com/amplify/latest/userguide/amplify-SSR-compute-role.html)
            in the _Amplify User Guide_.
      required:
      - appId
      - branchName
      description: The request structure for the create branch request.
    CreateBranchResult:
      type: object
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          description: Describes the branch for an Amplify app, which maps to a third-party
            repository branch.
      required:
      - branch
      description: The result structure for create branch request.
    CreateDeploymentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch to use for the job.
        fileMap:
          allOf:
          - $ref: '#/components/schemas/FileMap'
          description: An optional file map that contains the file name as the key
            and the file content md5 hash as the value. If this argument is provided,
            the service will generate a unique upload URL per file. Otherwise, the
            service will only generate a single upload URL for the zipped files.
      required:
      - appId
      - branchName
      description: The request structure for the create a new deployment request.
    CreateDeploymentResult:
      type: object
      properties:
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for this deployment. will supply to start deployment
            api.
        fileUploadUrls:
          allOf:
          - $ref: '#/components/schemas/FileUploadUrls'
          description: When the `fileMap` argument is provided in the request, `fileUploadUrls`
            will contain a map of file names to upload URLs.
        zipUploadUrl:
          allOf:
          - $ref: '#/components/schemas/UploadUrl'
          description: When the `fileMap` argument is not provided in the request,
            this `zipUploadUrl` is returned.
      required:
      - fileUploadUrls
      - zipUploadUrl
      description: The result structure for the create a new deployment request.
    CreateDomainAssociationRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The domain name for the domain association.
        enableAutoSubDomain:
          allOf:
          - $ref: '#/components/schemas/EnableAutoSubDomain'
          description: Enables the automated creation of subdomains for branches.
        subDomainSettings:
          allOf:
          - $ref: '#/components/schemas/SubDomainSettings'
          description: The setting for the subdomain.
        autoSubDomainCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainCreationPatterns'
          description: Sets the branch patterns for automatic subdomain creation.
        autoSubDomainIAMRole:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainIAMRole'
          description: The required AWS Identity and Access Management (IAM) service
            role for the Amazon Resource Name (ARN) for automatically creating subdomains.
        certificateSettings:
          allOf:
          - $ref: '#/components/schemas/CertificateSettings'
          description: The type of SSL/TLS certificate to use for your custom domain.
            If you don't specify a certificate type, Amplify uses the default certificate
            that it provisions and manages for you.
      required:
      - appId
      - domainName
      - subDomainSettings
      description: The request structure for the create domain association request.
    CreateDomainAssociationResult:
      type: object
      properties:
        domainAssociation:
          allOf:
          - $ref: '#/components/schemas/DomainAssociation'
          description: Describes the structure of a domain association, which associates
            a custom domain with an Amplify app.
      required:
      - domainAssociation
      description: The result structure for the create domain association request.
    CreateTime:
      type: string
      format: date-time
    CreateWebhookRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name for a branch that is part of an Amplify app.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for a webhook.
      required:
      - appId
      - branchName
      description: The request structure for the create webhook request.
    CreateWebhookResult:
      type: object
      properties:
        webhook:
          allOf:
          - $ref: '#/components/schemas/Webhook'
          description: Describes a webhook that connects repository events to an Amplify
            app.
      required:
      - webhook
      description: The result structure for the create webhook request.
    CustomDomain:
      type: string
      minLength: 0
      maxLength: 255
    CustomDomains:
      type: array
      items:
        $ref: '#/components/schemas/CustomDomain'
    CustomHeaders:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 25000
    CustomRule:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/Source'
          description: The source pattern for a URL rewrite or redirect rule.
        target:
          allOf:
          - $ref: '#/components/schemas/Target'
          description: The target pattern for a URL rewrite or redirect rule.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: "The status code for a URL rewrite or redirect rule.\n\n200\n\
            \n    \n\nRepresents a 200 rewrite rule.\n\n301\n\n    \n\nRepresents\
            \ a 301 (moved permanently) redirect rule. This and all future requests\
            \ should be directed to the target URL.\n\n302\n\n    \n\nRepresents a\
            \ 302 temporary redirect rule.\n\n404\n\n    \n\nRepresents a 404 redirect\
            \ rule.\n\n404-200\n\n    \n\nRepresents a 404 rewrite rule."
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          description: The condition for a URL rewrite or redirect rule, such as a
            country code.
      required:
      - source
      - target
      description: Describes a custom rewrite or redirect rule.
    CustomRules:
      type: array
      items:
        $ref: '#/components/schemas/CustomRule'
    DNSRecord:
      type: string
      minLength: 0
      maxLength: 1000
    DefaultDomain:
      type: string
      minLength: 1
      maxLength: 1000
    DeleteAppRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
      required:
      - appId
      description: Describes the request structure for the delete app request.
    DeleteAppResult:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/App'
      required:
      - app
      description: The result structure for the delete app request.
    DeleteBackendEnvironmentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID of an Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of a backend environment of an Amplify app.
      required:
      - appId
      - environmentName
      description: The request structure for the delete backend environment request.
    DeleteBackendEnvironmentResult:
      type: object
      properties:
        backendEnvironment:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironment'
          description: Describes the backend environment for an Amplify app.
      required:
      - backendEnvironment
      description: The result structure of the delete backend environment result.
    DeleteBranchRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch.
      required:
      - appId
      - branchName
      description: The request structure for the delete branch request.
    DeleteBranchResult:
      type: object
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          description: The branch for an Amplify app, which maps to a third-party
            repository branch.
      required:
      - branch
      description: The result structure for the delete branch request.
    DeleteDomainAssociationRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique id for an Amplify app.
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
      required:
      - appId
      - domainName
      description: The request structure for the delete domain association request.
    DeleteDomainAssociationResult:
      type: object
      properties:
        domainAssociation:
          $ref: '#/components/schemas/DomainAssociation'
      required:
      - domainAssociation
    DeleteJobRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch to use for the job.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique ID for the job.
      required:
      - appId
      - branchName
      - jobId
      description: The request structure for the delete job request.
    DeleteJobResult:
      type: object
      properties:
        jobSummary:
          $ref: '#/components/schemas/JobSummary'
      required:
      - jobSummary
      description: The result structure for the delete job request.
    DeleteWebhookRequest:
      type: object
      properties:
        webhookId:
          allOf:
          - $ref: '#/components/schemas/WebhookId'
          description: The unique ID for a webhook.
      required:
      - webhookId
      description: The request structure for the delete webhook request.
    DeleteWebhookResult:
      type: object
      properties:
        webhook:
          allOf:
          - $ref: '#/components/schemas/Webhook'
          description: Describes a webhook that connects repository events to an Amplify
            app.
      required:
      - webhook
      description: The result structure for the delete webhook request.
    DependentServiceFailureException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An operation failed because a dependent service threw an exception.
    DeploymentArtifacts:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 1000
    Description:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 1000
    DisplayName:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    DomainAssociation:
      type: object
      properties:
        domainAssociationArn:
          allOf:
          - $ref: '#/components/schemas/DomainAssociationArn'
          description: The Amazon Resource Name (ARN) for the domain association.
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        enableAutoSubDomain:
          allOf:
          - $ref: '#/components/schemas/EnableAutoSubDomain'
          description: Enables the automated creation of subdomains for branches.
        autoSubDomainCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainCreationPatterns'
          description: Sets branch patterns for automatic subdomain creation.
        autoSubDomainIAMRole:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainIAMRole'
          description: The required AWS Identity and Access Management (IAM) service
            role for the Amazon Resource Name (ARN) for automatically creating subdomains.
        domainStatus:
          allOf:
          - $ref: '#/components/schemas/DomainStatus'
          description: The current status of the domain association.
        updateStatus:
          allOf:
          - $ref: '#/components/schemas/UpdateStatus'
          description: "The status of the domain update operation that is currently\
            \ in progress. The following list describes the valid update states.\n\
            \nREQUESTING_CERTIFICATE\n\n    \n\nThe certificate is in the process\
            \ of being updated.\n\nPENDING_VERIFICATION\n\n    \n\nIndicates that\
            \ an Amplify managed certificate is in the process of being verified.\
            \ This occurs during the creation of a custom domain or when a custom\
            \ domain is updated to use a managed certificate.\n\nIMPORTING_CUSTOM_CERTIFICATE\n\
            \n    \n\nIndicates that an Amplify custom certificate is in the process\
            \ of being imported. This occurs during the creation of a custom domain\
            \ or when a custom domain is updated to use a custom certificate.\n\n\
            PENDING_DEPLOYMENT\n\n    \n\nIndicates that the subdomain or certificate\
            \ changes are being propagated.\n\nAWAITING_APP_CNAME\n\n    \n\nAmplify\
            \ is waiting for CNAME records corresponding to subdomains to be propagated.\
            \ If your custom domain is on Route 53, Amplify handles this for you automatically.\
            \ For more information about custom domains, see [Setting up custom domains](https://docs.aws.amazon.com/amplify/latest/userguide/custom-domains.html)\
            \ in the _Amplify Hosting User Guide_.\n\nUPDATE_COMPLETE\n\n    \n\n\
            The certificate has been associated with a domain.\n\nUPDATE_FAILED\n\n\
            \    \n\nThe certificate has failed to be provisioned or associated, and\
            \ there is no existing active certificate to roll back to."
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: Additional information that describes why the domain association
            is in the current state.
        certificateVerificationDNSRecord:
          allOf:
          - $ref: '#/components/schemas/CertificateVerificationDNSRecord'
          description: The DNS record for certificate verification.
        subDomains:
          allOf:
          - $ref: '#/components/schemas/SubDomains'
          description: The subdomains for the domain association.
        certificate:
          allOf:
          - $ref: '#/components/schemas/Certificate'
          description: 'Describes the SSL/TLS certificate for the domain association.
            This can be your own custom certificate or the default certificate that
            Amplify provisions for you.


            If you are updating your domain to use a different certificate, `certificate`
            points to the new certificate that is being created instead of the current
            active certificate. Otherwise, `certificate` points to the current active
            certificate.'
      required:
      - domainAssociationArn
      - domainName
      - enableAutoSubDomain
      - domainStatus
      - statusReason
      - subDomains
      description: Describes the association between a custom domain and an Amplify
        app.
    DomainAssociationArn:
      type: string
      minLength: 0
      maxLength: 1000
    DomainAssociations:
      type: array
      items:
        $ref: '#/components/schemas/DomainAssociation'
    DomainName:
      type: string
      pattern: ^(((?!-)[A-Za-z0-9-]{0,62}[A-Za-z0-9])\.)+((?!-)[A-Za-z0-9-]{1,62}[A-Za-z0-9])(\.)?$
      minLength: 0
      maxLength: 64
    DomainPrefix:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    DomainStatus:
      type: string
      enum:
      - PENDING_VERIFICATION
      - IN_PROGRESS
      - AVAILABLE
      - IMPORTING_CUSTOM_CERTIFICATE
      - PENDING_DEPLOYMENT
      - AWAITING_APP_CNAME
      - FAILED
      - CREATING
      - REQUESTING_CERTIFICATE
      - UPDATING
    EnableAutoBranchCreation:
      type: boolean
    EnableAutoBuild:
      type: boolean
    EnableAutoSubDomain:
      type: boolean
    EnableBasicAuth:
      type: boolean
    EnableBranchAutoBuild:
      type: boolean
    EnableBranchAutoDeletion:
      type: boolean
    EnableNotification:
      type: boolean
    EnablePerformanceMode:
      type: boolean
    EnablePullRequestPreview:
      type: boolean
    EnableSkewProtection:
      type: boolean
    EndTime:
      type: string
      format: date-time
    EnvKey:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    EnvValue:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 5500
    EnvironmentName:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 255
    EnvironmentVariables:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EnvValue'
    ErrorMessage:
      type: string
      minLength: 0
      maxLength: 255
    FileMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MD5Hash'
    FileName:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    FileUploadUrls:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UploadUrl'
    Framework:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    GenerateAccessLogsRequest:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          description: The time at which the logs should start. The time range specified
            is inclusive of the start time.
        endTime:
          allOf:
          - $ref: '#/components/schemas/EndTime'
          description: The time at which the logs should end. The time range specified
            is inclusive of the end time.
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
      required:
      - domainName
      - appId
      description: The request structure for the generate access logs request.
    GenerateAccessLogsResult:
      type: object
      properties:
        logUrl:
          allOf:
          - $ref: '#/components/schemas/LogUrl'
          description: The pre-signed URL for the requested access logs.
      description: The result structure for the generate access logs request.
    GetAppRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
      required:
      - appId
      description: The request structure for the get app request.
    GetAppResult:
      type: object
      properties:
        app:
          $ref: '#/components/schemas/App'
      required:
      - app
    GetArtifactUrlRequest:
      type: object
      properties:
        artifactId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          description: The unique ID for an artifact.
      required:
      - artifactId
      description: Returns the request structure for the get artifact request.
    GetArtifactUrlResult:
      type: object
      properties:
        artifactId:
          allOf:
          - $ref: '#/components/schemas/ArtifactId'
          description: The unique ID for an artifact.
        artifactUrl:
          allOf:
          - $ref: '#/components/schemas/ArtifactUrl'
          description: The presigned URL for the artifact.
      required:
      - artifactId
      - artifactUrl
      description: Returns the result structure for the get artifact request.
    GetBackendEnvironmentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique id for an Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name for the backend environment.
      required:
      - appId
      - environmentName
      description: The request structure for the get backend environment request.
    GetBackendEnvironmentResult:
      type: object
      properties:
        backendEnvironment:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironment'
          description: Describes the backend environment for an Amplify app.
      required:
      - backendEnvironment
      description: The result structure for the get backend environment result.
    GetBranchRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch.
      required:
      - appId
      - branchName
      description: The request structure for the get branch request.
    GetBranchResult:
      type: object
      properties:
        branch:
          $ref: '#/components/schemas/Branch'
      required:
      - branch
    GetDomainAssociationRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique id for an Amplify app.
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
      required:
      - appId
      - domainName
      description: The request structure for the get domain association request.
    GetDomainAssociationResult:
      type: object
      properties:
        domainAssociation:
          allOf:
          - $ref: '#/components/schemas/DomainAssociation'
          description: Describes the structure of a domain association, which associates
            a custom domain with an Amplify app.
      required:
      - domainAssociation
      description: The result structure for the get domain association request.
    GetJobRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch to use for the job.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique ID for the job.
      required:
      - appId
      - branchName
      - jobId
      description: The request structure for the get job request.
    GetJobResult:
      type: object
      properties:
        job:
          $ref: '#/components/schemas/Job'
      required:
      - job
    GetWebhookRequest:
      type: object
      properties:
        webhookId:
          allOf:
          - $ref: '#/components/schemas/WebhookId'
          description: The unique ID for a webhook.
      required:
      - webhookId
      description: The request structure for the get webhook request.
    GetWebhookResult:
      type: object
      properties:
        webhook:
          allOf:
          - $ref: '#/components/schemas/Webhook'
          description: Describes the structure of a webhook.
      required:
      - webhook
      description: The result structure for the get webhook request.
    InternalFailureException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: The service failed to perform an operation due to an internal issue.
    Job:
      type: object
      properties:
        summary:
          allOf:
          - $ref: '#/components/schemas/JobSummary'
          description: Describes the summary for an execution job for an Amplify app.
        steps:
          allOf:
          - $ref: '#/components/schemas/Steps'
          description: The execution steps for an execution job, for an Amplify app.
      required:
      - summary
      - steps
      description: Describes an execution job for an Amplify app.
    JobArn:
      type: string
      minLength: 0
      maxLength: 1000
    JobId:
      type: string
      pattern: ^[0-9]+$
      minLength: 0
      maxLength: 255
    JobReason:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    JobStatus:
      type: string
      enum:
      - CREATED
      - PENDING
      - PROVISIONING
      - RUNNING
      - FAILED
      - SUCCEED
      - CANCELLING
      - CANCELLED
    JobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/JobSummary'
    JobSummary:
      type: object
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: The Amazon Resource Name (ARN) for the job.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique ID for the job.
        commitId:
          allOf:
          - $ref: '#/components/schemas/CommitId'
          description: The commit ID from a third-party repository provider for the
            job.
        commitMessage:
          allOf:
          - $ref: '#/components/schemas/CommitMessage'
          description: The commit message from a third-party repository provider for
            the job.
        commitTime:
          allOf:
          - $ref: '#/components/schemas/CommitTime'
          description: The commit date and time for the job.
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          description: The start date and time for the job.
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The current status for the job.
        endTime:
          allOf:
          - $ref: '#/components/schemas/EndTime'
          description: The end date and time for the job.
        jobType:
          allOf:
          - $ref: '#/components/schemas/JobType'
          description: 'The type for the job. If the value is `RELEASE`, the job was
            manually released from its source by using the `StartJob` API. This value
            is available only for apps that are connected to a repository.


            If the value is `RETRY`, the job was manually retried using the `StartJob`
            API. If the value is `WEB_HOOK`, the job was automatically triggered by
            webhooks. If the value is `MANUAL`, the job is for a manually deployed
            app. Manually deployed apps are not connected to a Git repository.'
        sourceUrl:
          allOf:
          - $ref: '#/components/schemas/SourceUrl'
          description: The source URL for the files to deploy. The source URL can
            be either an HTTP GET URL that is publicly accessible and downloads a
            single .zip file, or an Amazon S3 bucket and prefix.
        sourceUrlType:
          allOf:
          - $ref: '#/components/schemas/SourceUrlType'
          description: The type of source specified by the `sourceURL`. If the value
            is `ZIP`, the source is a .zip file. If the value is `BUCKET_PREFIX`,
            the source is an Amazon S3 bucket and prefix. If no value is specified,
            the default is `ZIP`.
      required:
      - jobArn
      - jobId
      - commitId
      - commitMessage
      - commitTime
      - startTime
      - status
      - jobType
      description: Describes the summary for an execution job for an Amplify app.
    JobType:
      type: string
      enum:
      - RELEASE
      - RETRY
      - MANUAL
      - WEB_HOOK
    LastDeployTime:
      type: string
      format: date-time
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: A resource could not be created because service quotas were exceeded.
    ListAppsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. If non-null, the pagination token is returned
            in a result. Pass its value in another request to retrieve more entries.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultsForListApps'
          description: The maximum number of records to list in a single response.
      description: The request structure for the list apps request.
    ListAppsResult:
      type: object
      properties:
        apps:
          allOf:
          - $ref: '#/components/schemas/Apps'
          description: A list of Amplify apps.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. Set to null to start listing apps from
            start. If non-null, the pagination token is returned in a result. Pass
            its value in here to list more projects.
      required:
      - apps
      description: The result structure for an Amplify app list request.
    ListArtifactsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of a branch that is part of an Amplify app.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique ID for a job.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. Set to null to start listing artifacts
            from start. If a non-null pagination token is returned in a result, pass
            its value in here to list more artifacts.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of records to list in a single response.
      required:
      - appId
      - branchName
      - jobId
      description: Describes the request structure for the list artifacts request.
    ListArtifactsResult:
      type: object
      properties:
        artifacts:
          allOf:
          - $ref: '#/components/schemas/Artifacts'
          description: A list of artifacts.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. If a non-null pagination token is returned
            in a result, pass its value in another request to retrieve more entries.
      required:
      - artifacts
      description: The result structure for the list artifacts request.
    ListBackendEnvironmentsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        environmentName:
          allOf:
          - $ref: '#/components/schemas/EnvironmentName'
          description: The name of the backend environment
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. Set to null to start listing backend environments
            from the start. If a non-null pagination token is returned in a result,
            pass its value in here to list more backend environments.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of records to list in a single response.
      required:
      - appId
      description: The request structure for the list backend environments request.
    ListBackendEnvironmentsResult:
      type: object
      properties:
        backendEnvironments:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironments'
          description: The list of backend environments for an Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. If a non-null pagination token is returned
            in a result, pass its value in another request to retrieve more entries.
      required:
      - backendEnvironments
      description: The result structure for the list backend environments result.
    ListBranchesRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. Set to null to start listing branches from
            the start. If a non-null pagination token is returned in a result, pass
            its value in here to list more branches.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of records to list in a single response.
      required:
      - appId
      description: The request structure for the list branches request.
    ListBranchesResult:
      type: object
      properties:
        branches:
          allOf:
          - $ref: '#/components/schemas/Branches'
          description: A list of branches for an Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. If a non-null pagination token is returned
            in a result, pass its value in another request to retrieve more entries.
      required:
      - branches
      description: The result structure for the list branches request.
    ListDomainAssociationsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. Set to null to start listing apps from
            the start. If non-null, a pagination token is returned in a result. Pass
            its value in here to list more projects.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of records to list in a single response.
      required:
      - appId
      description: The request structure for the list domain associations request.
    ListDomainAssociationsResult:
      type: object
      properties:
        domainAssociations:
          allOf:
          - $ref: '#/components/schemas/DomainAssociations'
          description: A list of domain associations.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. If non-null, a pagination token is returned
            in a result. Pass its value in another request to retrieve more entries.
      required:
      - domainAssociations
      description: The result structure for the list domain association request.
    ListJobsRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch to use for the request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. Set to null to start listing steps from
            the start. If a non-null pagination token is returned in a result, pass
            its value in here to list more steps.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of records to list in a single response.
      required:
      - appId
      - branchName
      description: The request structure for the list jobs request.
    ListJobsResult:
      type: object
      properties:
        jobSummaries:
          allOf:
          - $ref: '#/components/schemas/JobSummaries'
          description: The result structure for the list job result request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. If non-null the pagination token is returned
            in a result. Pass its value in another request to retrieve more entries.
      required:
      - jobSummaries
      description: The maximum number of records to list in a single response.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) to use to list tags.
      required:
      - resourceArn
      description: The request structure to use to list tags for a resource.
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags for the specified The Amazon Resource Name (ARN).
      description: The response for the list tags for resource request.
    ListWebhooksRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. Set to null to start listing webhooks from
            the start. If non-null,the pagination token is returned in a result. Pass
            its value in here to list more webhooks.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of records to list in a single response.
      required:
      - appId
      description: The request structure for the list webhooks request.
    ListWebhooksResult:
      type: object
      properties:
        webhooks:
          allOf:
          - $ref: '#/components/schemas/Webhooks'
          description: A list of webhooks.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: A pagination token. If non-null, the pagination token is returned
            in a result. Pass its value in another request to retrieve more entries.
      required:
      - webhooks
      description: The result structure for the list webhooks request.
    LogUrl:
      type: string
      minLength: 0
      maxLength: 1000
    MD5Hash:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 32
    MaxResults:
      type: integer
      default: 0
      minimum: 0
      maximum: 50
    MaxResultsForListApps:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    Name:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 255
    NextToken:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 2000
    NotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An entity was not found during an operation.
    OauthToken:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 1000
    Platform:
      type: string
      enum:
      - WEB
      - WEB_DYNAMIC
      - WEB_COMPUTE
    ProductionBranch:
      type: object
      properties:
        lastDeployTime:
          allOf:
          - $ref: '#/components/schemas/LastDeployTime'
          description: The last deploy time of the production branch.
        status:
          allOf:
          - $ref: '#/components/schemas/Status'
          description: The status of the production branch.
        thumbnailUrl:
          allOf:
          - $ref: '#/components/schemas/ThumbnailUrl'
          description: The thumbnail URL for the production branch.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The branch name for the production branch.
      description: Describes the information about a production branch for an Amplify
        app.
    PullRequestEnvironmentName:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 20
    Repository:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 1000
    RepositoryCloneMethod:
      type: string
      enum:
      - SSH
      - TOKEN
      - SIGV4
    ResourceArn:
      type: string
      pattern: '^arn:aws:amplify:'
      minLength: 0
      maxLength: 2048
    ResourceNotFoundException:
      type: object
      properties:
        code:
          $ref: '#/components/schemas/Code'
        message:
          $ref: '#/components/schemas/ErrorMessage'
      required:
      - code
      - message
      description: An operation failed due to a non-existent resource.
    Screenshots:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ThumbnailUrl'
    ServiceRoleArn:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 1000
    Source:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 2048
    SourceUrl:
      type: string
      pattern: ^(s3|https|http)://
      minLength: 0
      maxLength: 3000
    SourceUrlType:
      type: string
      enum:
      - ZIP
      - BUCKET_PREFIX
    StackArn:
      type: string
      pattern: ^arn:aws:cloudformation:[a-z0-9-]+:\d{12}:stack/.+/.+$
      minLength: 20
      maxLength: 2048
    StackName:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 255
    Stage:
      type: string
      enum:
      - PRODUCTION
      - BETA
      - DEVELOPMENT
      - EXPERIMENTAL
      - PULL_REQUEST
    StartDeploymentRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch to use for the deployment job.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The job ID for this deployment that is generated by the `CreateDeployment`
            request.
        sourceUrl:
          allOf:
          - $ref: '#/components/schemas/SourceUrl'
          description: The source URL for the deployment that is used when calling
            `StartDeployment` without `CreateDeployment`. The source URL can be either
            an HTTP GET URL that is publicly accessible and downloads a single .zip
            file, or an Amazon S3 bucket and prefix.
        sourceUrlType:
          allOf:
          - $ref: '#/components/schemas/SourceUrlType'
          description: The type of source specified by the `sourceURL`. If the value
            is `ZIP`, the source is a .zip file. If the value is `BUCKET_PREFIX`,
            the source is an Amazon S3 bucket and prefix. If no value is specified,
            the default is `ZIP`.
      required:
      - appId
      - branchName
      description: The request structure for the start a deployment request.
    StartDeploymentResult:
      type: object
      properties:
        jobSummary:
          allOf:
          - $ref: '#/components/schemas/JobSummary'
          description: The summary for the job.
      required:
      - jobSummary
      description: The result structure for the start a deployment request.
    StartJobRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch to use for the job.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique ID for an existing job. This is required if the
            value of `jobType` is `RETRY`.
        jobType:
          allOf:
          - $ref: '#/components/schemas/JobType'
          description: 'Describes the type for the job. The job type `RELEASE` starts
            a new job with the latest change from the specified branch. This value
            is available only for apps that are connected to a repository.


            The job type `RETRY` retries an existing job. If the job type value is
            `RETRY`, the `jobId` is also required.'
        jobReason:
          allOf:
          - $ref: '#/components/schemas/JobReason'
          description: A descriptive reason for starting the job.
        commitId:
          allOf:
          - $ref: '#/components/schemas/CommitId'
          description: The commit ID from a third-party repository provider for the
            job.
        commitMessage:
          allOf:
          - $ref: '#/components/schemas/CommitMessage'
          description: The commit message from a third-party repository provider for
            the job.
        commitTime:
          allOf:
          - $ref: '#/components/schemas/CommitTime'
          description: The commit date and time for the job.
      required:
      - appId
      - branchName
      - jobType
      description: The request structure for the start job request.
    StartJobResult:
      type: object
      properties:
        jobSummary:
          allOf:
          - $ref: '#/components/schemas/JobSummary'
          description: The summary for the job.
      required:
      - jobSummary
      description: The result structure for the run job request.
    StartTime:
      type: string
      format: date-time
    Status:
      type: string
      pattern: ^.{3,7}$
      minLength: 3
      maxLength: 7
    StatusReason:
      type: string
      minLength: 0
      maxLength: 1000
    Step:
      type: object
      properties:
        stepName:
          allOf:
          - $ref: '#/components/schemas/StepName'
          description: The name of the execution step.
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          description: The start date and time of the execution step.
        status:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the execution step.
        endTime:
          allOf:
          - $ref: '#/components/schemas/EndTime'
          description: The end date and time of the execution step.
        logUrl:
          allOf:
          - $ref: '#/components/schemas/LogUrl'
          description: The URL to the logs for the execution step.
        artifactsUrl:
          allOf:
          - $ref: '#/components/schemas/ArtifactsUrl'
          description: The URL to the build artifact for the execution step.
        testArtifactsUrl:
          allOf:
          - $ref: '#/components/schemas/TestArtifactsUrl'
          description: The URL to the test artifact for the execution step.
        testConfigUrl:
          allOf:
          - $ref: '#/components/schemas/TestConfigUrl'
          description: The URL to the test configuration for the execution step.
        screenshots:
          allOf:
          - $ref: '#/components/schemas/Screenshots'
          description: The list of screenshot URLs for the execution step, if relevant.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: The reason for the current step status.
        context:
          allOf:
          - $ref: '#/components/schemas/Context'
          description: The context for the current step. Includes a build image if
            the step is build.
      required:
      - stepName
      - startTime
      - status
      - endTime
      description: Describes an execution step, for an execution job, for an Amplify
        app.
    StepName:
      type: string
      minLength: 0
      maxLength: 255
    Steps:
      type: array
      items:
        $ref: '#/components/schemas/Step'
    StopJobRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch to use for the stop job request.
        jobId:
          allOf:
          - $ref: '#/components/schemas/JobId'
          description: The unique id for the job.
      required:
      - appId
      - branchName
      - jobId
      description: The request structure for the stop job request.
    StopJobResult:
      type: object
      properties:
        jobSummary:
          allOf:
          - $ref: '#/components/schemas/JobSummary'
          description: The summary for the job.
      required:
      - jobSummary
      description: The result structure for the stop job request.
    SubDomain:
      type: object
      properties:
        subDomainSetting:
          allOf:
          - $ref: '#/components/schemas/SubDomainSetting'
          description: Describes the settings for the subdomain.
        verified:
          allOf:
          - $ref: '#/components/schemas/Verified'
          description: The verified status of the subdomain
        dnsRecord:
          allOf:
          - $ref: '#/components/schemas/DNSRecord'
          description: The DNS record for the subdomain.
      required:
      - subDomainSetting
      - verified
      - dnsRecord
      description: The subdomain for the domain association.
    SubDomainSetting:
      type: object
      properties:
        prefix:
          allOf:
          - $ref: '#/components/schemas/DomainPrefix'
          description: The prefix setting for the subdomain.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The branch name setting for the subdomain.
      required:
      - prefix
      - branchName
      description: Describes the settings for the subdomain.
    SubDomainSettings:
      type: array
      items:
        $ref: '#/components/schemas/SubDomainSetting'
    SubDomains:
      type: array
      items:
        $ref: '#/components/schemas/SubDomain'
    TTL:
      type: string
      pattern: ^\d*$
      minLength: 0
      maxLength: 32
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) to use to tag a resource.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags used to tag the resource.
      required:
      - resourceArn
      - tags
      description: The request structure to tag a resource with a tag key and value.
    TagResourceResponse:
      type: object
      properties: {}
      description: The response for the tag resource request.
    TagValue:
      type: string
      pattern: ^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$
      minLength: 0
      maxLength: 256
    Target:
      type: string
      pattern: ^(?s).+$
      minLength: 1
      maxLength: 2048
    TestArtifactsUrl:
      type: string
      minLength: 0
      maxLength: 1000
    TestConfigUrl:
      type: string
      minLength: 0
      maxLength: 1000
    ThumbnailName:
      type: string
      minLength: 0
      maxLength: 256
    ThumbnailUrl:
      type: string
      minLength: 1
      maxLength: 2000
    TotalNumberOfJobs:
      type: string
      minLength: 0
      maxLength: 1000
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorMessage'
      description: An operation failed due to a lack of access.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) to use to untag a resource.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys to use to untag a resource.
      required:
      - resourceArn
      - tagKeys
      description: The request structure for the untag resource request.
    UntagResourceResponse:
      type: object
      properties: {}
      description: The response for the untag resource request.
    UpdateAppRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name for an Amplify app.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for an Amplify app.
        platform:
          allOf:
          - $ref: '#/components/schemas/Platform'
          description: 'The platform for the Amplify app. For a static app, set the
            platform type to `WEB`. For a dynamic server-side rendered (SSR) app,
            set the platform type to `WEB_COMPUTE`. For an app requiring Amplify Hosting''s
            original SSR support only, set the platform type to `WEB_DYNAMIC`.


            If you are deploying an SSG only app with Next.js version 14 or later,
            you must set the platform type to `WEB_COMPUTE`.'
        computeRoleArn:
          allOf:
          - $ref: '#/components/schemas/ComputeRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role to assign to
            an SSR app. The SSR Compute role allows the Amplify Hosting compute service
            to securely access specific Amazon Web Services resources based on the
            role's permissions. For more information about the SSR Compute role, see
            [Adding an SSR Compute role](https://docs.aws.amazon.com/amplify/latest/userguide/amplify-SSR-compute-role.html)
            in the _Amplify User Guide_.
        iamServiceRoleArn:
          allOf:
          - $ref: '#/components/schemas/ServiceRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM service role for
            the Amplify app.
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          description: The environment variables for an Amplify app.
        enableBranchAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          description: Enables branch auto-building for an Amplify app.
        enableBranchAutoDeletion:
          allOf:
          - $ref: '#/components/schemas/EnableBranchAutoDeletion'
          description: Automatically disconnects a branch in the Amplify console when
            you delete a branch from your Git repository.
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          description: Enables basic authorization for an Amplify app.
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          description: The basic authorization credentials for an Amplify app. You
            must base64-encode the authorization credentials and provide them in the
            format `user:password`.
        customRules:
          allOf:
          - $ref: '#/components/schemas/CustomRules'
          description: The custom redirect and rewrite rules for an Amplify app.
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          description: The build specification (build spec) for an Amplify app.
        customHeaders:
          allOf:
          - $ref: '#/components/schemas/CustomHeaders'
          description: The custom HTTP headers for an Amplify app.
        enableAutoBranchCreation:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBranchCreation'
          description: Enables automated branch creation for an Amplify app.
        autoBranchCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationPatterns'
          description: Describes the automated branch creation glob patterns for an
            Amplify app.
        autoBranchCreationConfig:
          allOf:
          - $ref: '#/components/schemas/AutoBranchCreationConfig'
          description: The automated branch creation configuration for an Amplify
            app.
        repository:
          allOf:
          - $ref: '#/components/schemas/Repository'
          description: The name of the Git repository for an Amplify app.
        oauthToken:
          allOf:
          - $ref: '#/components/schemas/OauthToken'
          description: 'The OAuth token for a third-party source control system for
            an Amplify app. The OAuth token is used to create a webhook and a read-only
            deploy key using SSH cloning. The OAuth token is not stored.


            Use `oauthToken` for repository providers other than GitHub, such as Bitbucket
            or CodeCommit.


            To authorize access to GitHub as your repository provider, use `accessToken`.


            You must specify either `oauthToken` or `accessToken` when you update
            an app.


            Existing Amplify apps deployed from a GitHub repository using OAuth continue
            to work with CI/CD. However, we strongly recommend that you migrate these
            apps to use the GitHub App. For more information, see [Migrating an existing
            OAuth app to the Amplify GitHub App](https://docs.aws.amazon.com/amplify/latest/userguide/setting-up-GitHub-access.html#migrating-to-github-app-auth)
            in the _Amplify User Guide_ .'
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessToken'
          description: 'The personal access token for a GitHub repository for an Amplify
            app. The personal access token is used to authorize access to a GitHub
            repository using the Amplify GitHub App. The token is not stored.


            Use `accessToken` for GitHub repositories only. To authorize access to
            a repository provider such as Bitbucket or CodeCommit, use `oauthToken`.


            You must specify either `accessToken` or `oauthToken` when you update
            an app.


            Existing Amplify apps deployed from a GitHub repository using OAuth continue
            to work with CI/CD. However, we strongly recommend that you migrate these
            apps to use the GitHub App. For more information, see [Migrating an existing
            OAuth app to the Amplify GitHub App](https://docs.aws.amazon.com/amplify/latest/userguide/setting-up-GitHub-access.html#migrating-to-github-app-auth)
            in the _Amplify User Guide_ .'
        cacheConfig:
          allOf:
          - $ref: '#/components/schemas/CacheConfig'
          description: The cache configuration for the Amplify app.
      required:
      - appId
      description: The request structure for the update app request.
    UpdateAppResult:
      type: object
      properties:
        app:
          allOf:
          - $ref: '#/components/schemas/App'
          description: Represents the updated Amplify app.
      required:
      - app
      description: The result structure for an Amplify app update request.
    UpdateBranchRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name of the branch.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for the branch.
        framework:
          allOf:
          - $ref: '#/components/schemas/Framework'
          description: The framework for the branch.
        stage:
          allOf:
          - $ref: '#/components/schemas/Stage'
          description: Describes the current stage for the branch.
        enableNotification:
          allOf:
          - $ref: '#/components/schemas/EnableNotification'
          description: Enables notifications for the branch.
        enableAutoBuild:
          allOf:
          - $ref: '#/components/schemas/EnableAutoBuild'
          description: Enables auto building for the branch.
        enableSkewProtection:
          allOf:
          - $ref: '#/components/schemas/EnableSkewProtection'
          description: 'Specifies whether the skew protection feature is enabled for
            the branch.


            Deployment skew protection is available to Amplify applications to eliminate
            version skew issues between client and servers in web applications. When
            you apply skew protection to a branch, you can ensure that your clients
            always interact with the correct version of server-side assets, regardless
            of when a deployment occurs. For more information about skew protection,
            see [Skew protection for Amplify deployments](https://docs.aws.amazon.com/amplify/latest/userguide/skew-protection.html)
            in the _Amplify User Guide_.'
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariables'
          description: The environment variables for the branch.
        basicAuthCredentials:
          allOf:
          - $ref: '#/components/schemas/BasicAuthCredentials'
          description: The basic authorization credentials for the branch. You must
            base64-encode the authorization credentials and provide them in the format
            `user:password`.
        enableBasicAuth:
          allOf:
          - $ref: '#/components/schemas/EnableBasicAuth'
          description: Enables basic authorization for the branch.
        enablePerformanceMode:
          allOf:
          - $ref: '#/components/schemas/EnablePerformanceMode'
          description: 'Enables performance mode for the branch.


            Performance mode optimizes for faster hosting performance by keeping content
            cached at the edge for a longer interval. When performance mode is enabled,
            hosting configuration or code changes can take up to 10 minutes to roll
            out.'
        buildSpec:
          allOf:
          - $ref: '#/components/schemas/BuildSpec'
          description: The build specification (build spec) for the branch.
        ttl:
          allOf:
          - $ref: '#/components/schemas/TTL'
          description: The content Time to Live (TTL) for the website in seconds.
        displayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          description: The display name for a branch. This is used as the default
            domain prefix.
        enablePullRequestPreview:
          allOf:
          - $ref: '#/components/schemas/EnablePullRequestPreview'
          description: Enables pull request previews for this branch.
        pullRequestEnvironmentName:
          allOf:
          - $ref: '#/components/schemas/PullRequestEnvironmentName'
          description: The Amplify environment name for the pull request.
        backendEnvironmentArn:
          allOf:
          - $ref: '#/components/schemas/BackendEnvironmentArn'
          description: 'The Amazon Resource Name (ARN) for a backend environment that
            is part of a Gen 1 Amplify app.


            This field is available to Amplify Gen 1 apps only where the backend is
            created using Amplify Studio or the Amplify command line interface (CLI).'
        backend:
          allOf:
          - $ref: '#/components/schemas/Backend'
          description: 'The backend for a `Branch` of an Amplify app. Use for a backend
            created from an CloudFormation stack.


            This field is available to Amplify Gen 2 apps only. When you deploy an
            application with Amplify Gen 2, you provision the app''s backend infrastructure
            using Typescript code.'
        computeRoleArn:
          allOf:
          - $ref: '#/components/schemas/ComputeRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role to assign to
            a branch of an SSR app. The SSR Compute role allows the Amplify Hosting
            compute service to securely access specific Amazon Web Services resources
            based on the role's permissions. For more information about the SSR Compute
            role, see [Adding an SSR Compute role](https://docs.aws.amazon.com/amplify/latest/userguide/amplify-SSR-compute-role.html)
            in the _Amplify User Guide_.
      required:
      - appId
      - branchName
      description: The request structure for the update branch request.
    UpdateBranchResult:
      type: object
      properties:
        branch:
          allOf:
          - $ref: '#/components/schemas/Branch'
          description: The branch for an Amplify app, which maps to a third-party
            repository branch.
      required:
      - branch
      description: The result structure for the update branch request.
    UpdateDomainAssociationRequest:
      type: object
      properties:
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID for an Amplify app.
        domainName:
          allOf:
          - $ref: '#/components/schemas/DomainName'
          description: The name of the domain.
        enableAutoSubDomain:
          allOf:
          - $ref: '#/components/schemas/EnableAutoSubDomain'
          description: Enables the automated creation of subdomains for branches.
        subDomainSettings:
          allOf:
          - $ref: '#/components/schemas/SubDomainSettings'
          description: Describes the settings for the subdomain.
        autoSubDomainCreationPatterns:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainCreationPatterns'
          description: Sets the branch patterns for automatic subdomain creation.
        autoSubDomainIAMRole:
          allOf:
          - $ref: '#/components/schemas/AutoSubDomainIAMRole'
          description: The required AWS Identity and Access Management (IAM) service
            role for the Amazon Resource Name (ARN) for automatically creating subdomains.
        certificateSettings:
          allOf:
          - $ref: '#/components/schemas/CertificateSettings'
          description: The type of SSL/TLS certificate to use for your custom domain.
      required:
      - appId
      - domainName
      description: The request structure for the update domain association request.
    UpdateDomainAssociationResult:
      type: object
      properties:
        domainAssociation:
          allOf:
          - $ref: '#/components/schemas/DomainAssociation'
          description: Describes a domain association, which associates a custom domain
            with an Amplify app.
      required:
      - domainAssociation
      description: The result structure for the update domain association request.
    UpdateStatus:
      type: string
      enum:
      - REQUESTING_CERTIFICATE
      - PENDING_VERIFICATION
      - IMPORTING_CUSTOM_CERTIFICATE
      - PENDING_DEPLOYMENT
      - AWAITING_APP_CNAME
      - UPDATE_COMPLETE
      - UPDATE_FAILED
    UpdateTime:
      type: string
      format: date-time
    UpdateWebhookRequest:
      type: object
      properties:
        webhookId:
          allOf:
          - $ref: '#/components/schemas/WebhookId'
          description: The unique ID for a webhook.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name for a branch that is part of an Amplify app.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for a webhook.
      required:
      - webhookId
      description: The request structure for the update webhook request.
    UpdateWebhookResult:
      type: object
      properties:
        webhook:
          allOf:
          - $ref: '#/components/schemas/Webhook'
          description: Describes a webhook that connects repository events to an Amplify
            app.
      required:
      - webhook
      description: The result structure for the update webhook request.
    UploadUrl:
      type: string
      minLength: 0
      maxLength: 1000
    Verified:
      type: boolean
    WafConfiguration:
      type: object
      properties:
        webAclArn:
          allOf:
          - $ref: '#/components/schemas/WebAclArn'
          description: The Amazon Resource Name (ARN) for the web ACL associated with
            an Amplify app.
        wafStatus:
          allOf:
          - $ref: '#/components/schemas/WafStatus'
          description: The status of the process to associate or disassociate a web
            ACL to an Amplify app.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: The reason for the current status of the Firewall configuration.
      description: Describes the Firewall configuration for a hosted Amplify application.
        Firewall support enables you to protect your web applications with a direct
        integration with WAF. For more information about using WAF protections for
        an Amplify application, see [Firewall support for hosted sites](https://docs.aws.amazon.com/amplify/latest/userguide/WAF-integration.html)
        in the _Amplify User Guide_.
    WafStatus:
      type: string
      enum:
      - ASSOCIATING
      - ASSOCIATION_FAILED
      - ASSOCIATION_SUCCESS
      - DISASSOCIATING
      - DISASSOCIATION_FAILED
    WebAclArn:
      type: string
      pattern: '^arn:aws:wafv2:'
      minLength: 0
      maxLength: 512
    Webhook:
      type: object
      properties:
        webhookArn:
          allOf:
          - $ref: '#/components/schemas/WebhookArn'
          description: The Amazon Resource Name (ARN) for the webhook.
        webhookId:
          allOf:
          - $ref: '#/components/schemas/WebhookId'
          description: The ID of the webhook.
        webhookUrl:
          allOf:
          - $ref: '#/components/schemas/WebhookUrl'
          description: The URL of the webhook.
        appId:
          allOf:
          - $ref: '#/components/schemas/AppId'
          description: The unique ID of an Amplify app.
        branchName:
          allOf:
          - $ref: '#/components/schemas/BranchName'
          description: The name for a branch that is part of an Amplify app.
        description:
          allOf:
          - $ref: '#/components/schemas/Description'
          description: The description for a webhook.
        createTime:
          allOf:
          - $ref: '#/components/schemas/CreateTime'
          description: A timestamp of when Amplify created the webhook in your Git
            repository.
        updateTime:
          allOf:
          - $ref: '#/components/schemas/UpdateTime'
          description: A timestamp of when Amplify updated the webhook in your Git
            repository.
      required:
      - webhookArn
      - webhookId
      - webhookUrl
      - branchName
      - description
      - createTime
      - updateTime
      description: Describes a webhook that connects repository events to an Amplify
        app.
    WebhookArn:
      type: string
      minLength: 0
      maxLength: 1000
    WebhookId:
      type: string
      pattern: ^(?s)
      minLength: 0
      maxLength: 255
    WebhookUrl:
      type: string
      minLength: 0
      maxLength: 1000
    Webhooks:
      type: array
      items:
        $ref: '#/components/schemas/Webhook'
    webhookCreateTime:
      type: string
      format: date-time
