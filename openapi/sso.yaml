openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: sso
  x-aws-serviceName: sso
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2019-06-10'
  title: AWS Single Sign-On
  description: |-
    AWS IAM Identity Center (successor to AWS Single Sign-On) Portal is a web service that makes it easy for you to assign user access to IAM Identity Center resources such as the AWS access portal. Users can get AWS account applications and roles assigned to them and get federated into the application.

    Although AWS Single Sign-On was renamed, the `sso` and `identitystore` API namespaces will continue to retain their original name for backward compatibility purposes. For more information, see [IAM Identity Center rename](https://docs.aws.amazon.com/singlesignon/latest/userguide/what-is.html#renamed).

    This reference guide describes the IAM Identity Center Portal operations that you can call programatically and includes detailed information on data types and errors.

    AWS provides SDKs that consist of libraries and sample code for various programming languages and platforms, such as Java, Ruby, .Net, iOS, or Android. The SDKs provide a convenient way to create programmatic access to IAM Identity Center and other AWS services. For more information about the AWS SDKs, including how to download and install them, see [Tools for Amazon Web Services](http://aws.amazon.com/tools/).
servers:
- description: The AWS Single Sign-On regional endpoint
  url: https://portal.sso.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /federation/credentials:
    get:
      operationId: GetRoleCredentials
      description: |-
        Returns the STS short-term credentials for a given role name that is assigned to the user.
      parameters:
      - name: role_name
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/RoleNameType'
      - name: account_id
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AccountIdType'
      - name: x-amz-sso_bearer_token
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/AccessTokenType'
      responses:
        '200': {}
        '400':
          description: |-
            Indicates that a problem occurred with the input to the request. For example, a required parameter might be missing or out of range.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Indicates that the request is being made too frequently and is more than what the server can handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Indicates that the request is not authorized. This can happen due to an invalid access token in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /assignment/roles:
    get:
      operationId: ListAccountRoles
      description: |-
        Lists all roles that are assigned to the user for a given AWS account.
      parameters:
      - name: next_token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextTokenType'
      - name: max_result
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResultType'
      - name: x-amz-sso_bearer_token
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/AccessTokenType'
      - name: account_id
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/AccountIdType'
      responses:
        '200': {}
        '400':
          description: |-
            Indicates that a problem occurred with the input to the request. For example, a required parameter might be missing or out of range.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Indicates that the request is being made too frequently and is more than what the server can handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Indicates that the request is not authorized. This can happen due to an invalid access token in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /assignment/accounts:
    get:
      operationId: ListAccounts
      description: |-
        Lists all AWS accounts assigned to the user. These AWS accounts are assigned by the administrator of the account. For more information, see [Assign User Access](https://docs.aws.amazon.com/singlesignon/latest/userguide/useraccess.html#assignusers) in the _IAM Identity Center User Guide_. This operation returns a paginated response.
      parameters:
      - name: next_token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextTokenType'
      - name: max_result
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResultType'
      - name: x-amz-sso_bearer_token
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/AccessTokenType'
      responses:
        '200': {}
        '400':
          description: |-
            Indicates that a problem occurred with the input to the request. For example, a required parameter might be missing or out of range.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '404':
          description: |-
            The specified resource doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            Indicates that the request is being made too frequently and is more than what the server can handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Indicates that the request is not authorized. This can happen due to an invalid access token in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /logout:
    post:
      operationId: Logout
      description: |-
        Removes the locally stored SSO tokens from the client-side cache and sends an API call to the IAM Identity Center service to invalidate the corresponding server-side IAM Identity Center sign in session.

        If a user uses IAM Identity Center to access the AWS CLI, the userâ€™s IAM Identity Center sign in session is used to obtain an IAM session, as specified in the corresponding IAM Identity Center permission set. More specifically, IAM Identity Center assumes an IAM role in the target account on behalf of the user, and the corresponding temporary AWS credentials are returned to the client.

        After user logout, any existing IAM role sessions that were created by using IAM Identity Center permission sets continue based on the duration configured in the permission set. For more information, see [User authentications](https://docs.aws.amazon.com/singlesignon/latest/userguide/authconcept.html) in the _IAM Identity Center User Guide_.
      parameters:
      - name: x-amz-sso_bearer_token
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/AccessTokenType'
      responses:
        '200': {}
        '400':
          description: |-
            Indicates that a problem occurred with the input to the request. For example, a required parameter might be missing or out of range.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
        '429':
          description: |-
            Indicates that the request is being made too frequently and is more than what the server can handle.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Indicates that the request is not authorized. This can happen due to an invalid access token in the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
components:
  schemas:
    AccessKeyType:
      type: string
    AccessTokenType:
      type: string
    AccountIdType:
      type: string
    AccountInfo:
      type: object
      properties:
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountIdType'
          description: The identifier of the AWS account that is assigned to the user.
        accountName:
          allOf:
          - $ref: '#/components/schemas/AccountNameType'
          description: The display name of the AWS account that is assigned to the
            user.
        emailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressType'
          description: The email address of the AWS account that is assigned to the
            user.
      description: Provides information about your AWS account.
    AccountListType:
      type: array
      items:
        $ref: '#/components/schemas/AccountInfo'
    AccountNameType:
      type: string
    EmailAddressType:
      type: string
      minLength: 1
      maxLength: 254
    ErrorDescription:
      type: string
    ExpirationTimestampType:
      type: integer
      format: int64
      default: 0
    GetRoleCredentialsRequest:
      type: object
      properties:
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleNameType'
          description: The friendly name of the role that is assigned to the user.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountIdType'
          description: The identifier for the AWS account that is assigned to the
            user.
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessTokenType'
          description: The token issued by the `CreateToken` API call. For more information,
            see [CreateToken](https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html)
            in the _IAM Identity Center OIDC API Reference Guide_.
      required:
      - roleName
      - accountId
      - accessToken
    GetRoleCredentialsResponse:
      type: object
      properties:
        roleCredentials:
          allOf:
          - $ref: '#/components/schemas/RoleCredentials'
          description: The credentials for the role that is assigned to the user.
    InvalidRequestException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorDescription'
      description: Indicates that a problem occurred with the input to the request.
        For example, a required parameter might be missing or out of range.
    ListAccountRolesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenType'
          description: The page token from the previous response output when you request
            subsequent pages.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultType'
          description: The number of items that clients can request per page.
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessTokenType'
          description: The token issued by the `CreateToken` API call. For more information,
            see [CreateToken](https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html)
            in the _IAM Identity Center OIDC API Reference Guide_.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountIdType'
          description: The identifier for the AWS account that is assigned to the
            user.
      required:
      - accessToken
      - accountId
    ListAccountRolesResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenType'
          description: The page token client that is used to retrieve the list of
            accounts.
        roleList:
          allOf:
          - $ref: '#/components/schemas/RoleListType'
          description: A paginated response with the list of roles and the next token
            if more results are available.
    ListAccountsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenType'
          description: (Optional) When requesting subsequent pages, this is the page
            token from the previous response output.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResultType'
          description: This is the number of items clients can request per page.
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessTokenType'
          description: The token issued by the `CreateToken` API call. For more information,
            see [CreateToken](https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html)
            in the _IAM Identity Center OIDC API Reference Guide_.
      required:
      - accessToken
    ListAccountsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextTokenType'
          description: The page token client that is used to retrieve the list of
            accounts.
        accountList:
          allOf:
          - $ref: '#/components/schemas/AccountListType'
          description: A paginated response with the list of account information and
            the next token if more results are available.
    LogoutRequest:
      type: object
      properties:
        accessToken:
          allOf:
          - $ref: '#/components/schemas/AccessTokenType'
          description: The token issued by the `CreateToken` API call. For more information,
            see [CreateToken](https://docs.aws.amazon.com/singlesignon/latest/OIDCAPIReference/API_CreateToken.html)
            in the _IAM Identity Center OIDC API Reference Guide_.
      required:
      - accessToken
    MaxResultType:
      type: integer
      minimum: 1
      maximum: 100
    NextTokenType:
      type: string
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorDescription'
      description: The specified resource doesn't exist.
    RoleCredentials:
      type: object
      properties:
        accessKeyId:
          allOf:
          - $ref: '#/components/schemas/AccessKeyType'
          description: The identifier used for the temporary security credentials.
            For more information, see [Using Temporary Security Credentials to Request
            Access to AWS Resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html)
            in the _AWS IAM User Guide_.
        secretAccessKey:
          allOf:
          - $ref: '#/components/schemas/SecretAccessKeyType'
          description: The key that is used to sign the request. For more information,
            see [Using Temporary Security Credentials to Request Access to AWS Resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html)
            in the _AWS IAM User Guide_.
        sessionToken:
          allOf:
          - $ref: '#/components/schemas/SessionTokenType'
          description: The token used for temporary credentials. For more information,
            see [Using Temporary Security Credentials to Request Access to AWS Resources](https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_use-resources.html)
            in the _AWS IAM User Guide_.
        expiration:
          allOf:
          - $ref: '#/components/schemas/ExpirationTimestampType'
          description: The date on which temporary security credentials expire.
      description: Provides information about the role credentials that are assigned
        to the user.
    RoleInfo:
      type: object
      properties:
        roleName:
          allOf:
          - $ref: '#/components/schemas/RoleNameType'
          description: The friendly name of the role that is assigned to the user.
        accountId:
          allOf:
          - $ref: '#/components/schemas/AccountIdType'
          description: The identifier of the AWS account assigned to the user.
      description: Provides information about the role that is assigned to the user.
    RoleListType:
      type: array
      items:
        $ref: '#/components/schemas/RoleInfo'
    RoleNameType:
      type: string
    SecretAccessKeyType:
      type: string
    SessionTokenType:
      type: string
    TooManyRequestsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorDescription'
      description: Indicates that the request is being made too frequently and is
        more than what the server can handle.
    UnauthorizedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ErrorDescription'
      description: Indicates that the request is not authorized. This can happen due
        to an invalid access token in the request.
