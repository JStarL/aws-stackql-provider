openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: workdocs
  x-aws-serviceName: workdocs
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2016-05-01'
  title: Amazon WorkDocs
  description: |-
    The Amazon WorkDocs API is designed for the following use cases:

      * File Migration: File migration applications are supported for users who want to migrate their files from an on-premises or off-premises file system or service. Users can insert files into a user directory structure, as well as allow for basic metadata changes, such as modifications to the permissions of files.

      * Security: Support security applications are supported for users who have additional security needs, such as antivirus or data loss prevention. The API actions, along with CloudTrail, allow these applications to detect when changes occur in Amazon WorkDocs. Then, the application can take the necessary actions and replace the target file. If the target file violates the policy, the application can also choose to email the user.

      * eDiscovery/Analytics: General administrative applications are supported, such as eDiscovery and analytics. These applications can choose to mimic or record the actions in an Amazon WorkDocs site, along with CloudTrail, to replicate data for eDiscovery, backup, or analytical applications.

    All Amazon WorkDocs API actions are Amazon authenticated and certificate-signed. They not only require the use of the Amazon Web Services SDK, but also allow for the exclusive use of IAM users and roles to help facilitate access, trust, and permission policies. By creating a role and allowing an IAM user to access the Amazon WorkDocs site, the IAM user gains full administrative visibility into the entire Amazon WorkDocs site (or as set in the IAM policy). This includes, but is not limited to, the ability to modify file permissions and upload any file to any user. This allows developers to perform the three use cases above, as well as give users the ability to grant access on a selective basis using the IAM model.

    The pricing for Amazon WorkDocs APIs varies depending on the API call type for these actions:

      * `READ (Get*)`

      * `WRITE (Activate*, Add*, Create*, Deactivate*, Initiate*, Update*)`

      * `LIST (Describe*)`

      * `DELETE*, CANCEL`

    For information about Amazon WorkDocs API pricing, see [Amazon WorkDocs Pricing](https://aws.amazon.com/workdocs/pricing/).
servers:
- description: The Amazon WorkDocs regional endpoint
  url: https://workdocs.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /api/v1/documents/{DocumentId}/versions/{VersionId}:
    delete:
      operationId: AbortDocumentVersionUpload
      description: |-
        Aborts the upload of the specified document version that was previously initiated by InitiateDocumentVersionUpload. The client should make this call only when it no longer intends to upload the document version, or fails to do so.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: VersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      responses:
        '204': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    get:
      operationId: GetDocumentVersion
      description: |-
        Retrieves version metadata for the specified document.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: VersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      - name: fields
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FieldNamesType'
      - name: includeCustomMetadata
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '401':
          description: |-
            The password is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    patch:
      operationId: UpdateDocumentVersion
      description: |-
        Changes the status of the document version to ACTIVE.

        Amazon WorkDocs also sets its document container to ACTIVE. This is the last step in a document upload, after the client uploads the document to an S3-presigned URL returned by InitiateDocumentVersionUpload.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: VersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VersionStatus:
                  $ref: '#/components/schemas/DocumentVersionStatus'
      responses:
        '200': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '405':
          description: |-
            The operation is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOperationException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/users/{UserId}/activation:
    post:
      operationId: ActivateUser
      description: |-
        Activates the specified user. Only active users can access Amazon WorkDocs.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    delete:
      operationId: DeactivateUser
      description: |-
        Deactivates the specified user, which revokes the user's access to Amazon WorkDocs.
      parameters:
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      responses:
        '204': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/resources/{ResourceId}/permissions:
    post:
      operationId: AddResourcePermissions
      description: |-
        Creates a set of permissions for the specified folder or document. The resource permissions are overwritten if the principals already have different permissions.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Principals:
                  $ref: '#/components/schemas/SharePrincipalList'
                NotificationOptions:
                  $ref: '#/components/schemas/NotificationOptions'
      responses:
        '201': {}
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
    get:
      operationId: DescribeResourcePermissions
      description: |-
        Describes the permissions of a specified resource.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: principalId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      responses:
        '200': {}
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
    delete:
      operationId: RemoveAllResourcePermissions
      description: |-
        Removes all the permissions from the specified resource.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      responses:
        '204': {}
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
  /api/v1/documents/{DocumentId}/versions/{VersionId}/comment:
    post:
      operationId: CreateComment
      description: |-
        Adds a new comment to the specified document version.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: VersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ParentId:
                  $ref: '#/components/schemas/CommentIdType'
                ThreadId:
                  $ref: '#/components/schemas/CommentIdType'
                Text:
                  $ref: '#/components/schemas/CommentTextType'
                Visibility:
                  $ref: '#/components/schemas/CommentVisibilityType'
                NotifyCollaborators:
                  $ref: '#/components/schemas/BooleanType'
      responses:
        '201': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/resources/{ResourceId}/customMetadata:
    put:
      operationId: CreateCustomMetadata
      description: |-
        Adds one or more custom properties to the specified resource (a folder, document, or version).
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: versionid
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CustomMetadata:
                  $ref: '#/components/schemas/CustomMetadataMap'
      responses:
        '200': {}
        '429':
          description: |-
            The limit has been reached on the number of custom properties for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomMetadataLimitExceededException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    delete:
      operationId: DeleteCustomMetadata
      description: |-
        Deletes custom metadata from the specified resource.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: versionId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      - name: keys
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CustomMetadataKeyList'
      - name: deleteAll
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/folders:
    post:
      operationId: CreateFolder
      description: |-
        Creates a folder with the specified name and parent folder.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ResourceNameType'
                ParentFolderId:
                  $ref: '#/components/schemas/ResourceIdType'
      responses:
        '201': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/resources/{ResourceId}/labels:
    put:
      operationId: CreateLabels
      description: |-
        Adds the specified list of labels to the given resource (a document or folder)
      parameters:
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Labels:
                  $ref: '#/components/schemas/SharedLabels'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The limit has been reached on the number of labels for the specified resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyLabelsException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    delete:
      operationId: DeleteLabels
      description: |-
        Deletes the specified list of labels from a resource.
      parameters:
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: labels
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SharedLabels'
      - name: deleteAll
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/organizations/{OrganizationId}/subscriptions:
    post:
      operationId: CreateNotificationSubscription
      description: |-
        Configure Amazon WorkDocs to use Amazon SNS notifications. The endpoint receives a confirmation message, and must confirm the subscription.

        For more information, see [Setting up notifications for an IAM user or role](https://docs.aws.amazon.com/workdocs/latest/developerguide/manage-notifications.html) in the _Amazon WorkDocs Developer Guide_.
      parameters:
      - name: OrganizationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Endpoint:
                  $ref: '#/components/schemas/SubscriptionEndPointType'
                Protocol:
                  $ref: '#/components/schemas/SubscriptionProtocolType'
                SubscriptionType:
                  $ref: '#/components/schemas/SubscriptionType'
      responses:
        '200': {}
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            You've reached the limit on the number of subscriptions for the WorkDocs instance.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManySubscriptionsException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
    get:
      operationId: DescribeNotificationSubscriptions
      description: |-
        Lists the specified notification subscriptions.
      parameters:
      - name: OrganizationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /api/v1/users:
    post:
      operationId: CreateUser
      description: |-
        Creates a user in a Simple AD or Microsoft AD directory. The status of a newly created user is "ACTIVE". New users can access Amazon WorkDocs.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                OrganizationId:
                  $ref: '#/components/schemas/IdType'
                Username:
                  $ref: '#/components/schemas/UsernameType'
                EmailAddress:
                  $ref: '#/components/schemas/EmailAddressType'
                GivenName:
                  $ref: '#/components/schemas/UserAttributeValueType'
                Surname:
                  $ref: '#/components/schemas/UserAttributeValueType'
                Password:
                  $ref: '#/components/schemas/PasswordType'
                TimeZoneId:
                  $ref: '#/components/schemas/TimeZoneIdType'
                StorageRule:
                  $ref: '#/components/schemas/StorageRuleType'
      responses:
        '201': {}
        '409':
          description: |-
            The resource already exists.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityAlreadyExistsException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
    get:
      operationId: DescribeUsers
      description: |-
        Describes the specified users. You can describe all users or filter the results (for example, by status or organization).

        By default, Amazon WorkDocs returns the first 24 active or pending users. If there are more results, the response includes a marker that you can use to request the next set of results.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: organizationId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdType'
      - name: userIds
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UserIdsType'
      - name: query
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SearchQueryType'
      - name: include
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UserFilterType'
      - name: order
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OrderType'
      - name: sort
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/UserSortType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: fields
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FieldNamesType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '413':
          description: |-
            The response is too large to return. The request must include a filter to reduce the size of the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequestedEntityTooLargeException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/documents/{DocumentId}/versions/{VersionId}/comment/{CommentId}:
    delete:
      operationId: DeleteComment
      description: |-
        Deletes the specified comment from the document version.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: VersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      - name: CommentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/CommentIdType'
      responses:
        '204': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/documents/{DocumentId}:
    delete:
      operationId: DeleteDocument
      description: |-
        Permanently deletes the specified document and its associated metadata.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      responses:
        '204': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    get:
      operationId: GetDocument
      description: |-
        Retrieves details of a document.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: includeCustomMetadata
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '401':
          description: |-
            The password is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    patch:
      operationId: UpdateDocument
      description: |-
        Updates the specified attributes of a document. The user must have access to both the document and its parent folder, if applicable.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ResourceNameType'
                ParentFolderId:
                  $ref: '#/components/schemas/ResourceIdType'
                ResourceState:
                  $ref: '#/components/schemas/ResourceStateType'
      responses:
        '200': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/documentVersions/{DocumentId}/versions/{VersionId}:
    delete:
      operationId: DeleteDocumentVersion
      description: |-
        Deletes a specific version of a document.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: VersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      - name: deletePriorVersions
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/BooleanType'
      responses:
        '204': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '405':
          description: |-
            The operation is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOperationException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/folders/{FolderId}:
    delete:
      operationId: DeleteFolder
      description: |-
        Permanently deletes the specified folder and its contents.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: FolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      responses:
        '204': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    get:
      operationId: GetFolder
      description: |-
        Retrieves the metadata of the specified folder.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: FolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: includeCustomMetadata
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    patch:
      operationId: UpdateFolder
      description: |-
        Updates the specified attributes of the specified folder. The user must have access to both the folder and its parent folder, if applicable.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: FolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ResourceNameType'
                ParentFolderId:
                  $ref: '#/components/schemas/ResourceIdType'
                ResourceState:
                  $ref: '#/components/schemas/ResourceStateType'
      responses:
        '200': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/folders/{FolderId}/contents:
    delete:
      operationId: DeleteFolderContents
      description: |-
        Deletes the contents of the specified folder.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: FolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      responses:
        '204': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    get:
      operationId: DescribeFolderContents
      description: |-
        Describes the contents of the specified folder, including its documents and subfolders.

        By default, Amazon WorkDocs returns the first 100 active document and folder metadata items. If there are more results, the response includes a marker that you can use to request the next set of results. You can also request initialized documents.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: FolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: sort
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceSortType'
      - name: order
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OrderType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FolderContentType'
      - name: include
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FieldNamesType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /api/v1/organizations/{OrganizationId}/subscriptions/{SubscriptionId}:
    delete:
      operationId: DeleteNotificationSubscription
      description: |-
        Deletes the specified subscription from the specified organization.
      parameters:
      - name: SubscriptionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      - name: OrganizationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /api/v1/users/{UserId}:
    delete:
      operationId: DeleteUser
      description: |-
        Deletes the specified user from a Simple AD or Microsoft AD directory.

        Deleting a user immediately and permanently deletes all content in that user's folder structure. Site retention policies do NOT apply to this type of deletion.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      responses:
        '204': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
    patch:
      operationId: UpdateUser
      description: |-
        Updates the specified attributes of the specified user, and grants or revokes administrative privileges to the Amazon WorkDocs site.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GivenName:
                  $ref: '#/components/schemas/UserAttributeValueType'
                Surname:
                  $ref: '#/components/schemas/UserAttributeValueType'
                Type:
                  $ref: '#/components/schemas/UserType'
                StorageRule:
                  $ref: '#/components/schemas/StorageRuleType'
                TimeZoneId:
                  $ref: '#/components/schemas/TimeZoneIdType'
                Locale:
                  $ref: '#/components/schemas/LocaleType'
                GrantPoweruserPrivileges:
                  $ref: '#/components/schemas/BooleanEnumType'
      responses:
        '200': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/activities:
    get:
      operationId: DescribeActivities
      description: |-
        Describes the user activities in a specified time period.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: startTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TimestampType'
      - name: endTime
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TimestampType'
      - name: organizationId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdType'
      - name: activityTypes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ActivityNamesFilterType'
      - name: resourceId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdType'
      - name: userId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdType'
      - name: includeIndirectActivities
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BooleanType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/SearchMarkerType'
      responses:
        '200': {}
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
  /api/v1/documents/{DocumentId}/versions/{VersionId}/comments:
    get:
      operationId: DescribeComments
      description: |-
        List all the comments for the specified document version.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: VersionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DocumentVersionIdType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MarkerType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/documents/{DocumentId}/versions:
    get:
      operationId: DescribeDocumentVersions
      description: |-
        Retrieves the document versions for the specified document.

        By default, only active versions are returned.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: include
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FieldNamesType'
      - name: fields
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FieldNamesType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '401':
          description: |-
            The password is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/groups:
    get:
      operationId: DescribeGroups
      description: |-
        Describes the groups specified by the query. Groups are defined by the underlying Active Directory.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: searchQuery
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/SearchQueryType'
      - name: organizationId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MarkerType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PositiveIntegerType'
      responses:
        '200': {}
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
  /api/v1/me/root:
    get:
      operationId: DescribeRootFolders
      description: |-
        Describes the current user's special folders; the `RootFolder` and the `RecycleBin`. `RootFolder` is the root of user's files and folders and `RecycleBin` is the root of recycled items. This is not a valid action for SigV4 (administrative API) clients.

        This action requires an authentication token. To get an authentication token, register an application with Amazon WorkDocs. For more information, see [Authentication and Access Control for User Applications](https://docs.aws.amazon.com/workdocs/latest/developerguide/wd-auth-user.html) in the _Amazon WorkDocs Developer Guide_.
      parameters:
      - name: Authentication
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      responses:
        '200': {}
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
  /api/v1/me:
    get:
      operationId: GetCurrentUser
      description: |-
        Retrieves details of the current user for whom the authentication token was generated. This is not a valid action for SigV4 (administrative API) clients.

        This action requires an authentication token. To get an authentication token, register an application with Amazon WorkDocs. For more information, see [Authentication and Access Control for User Applications](https://docs.aws.amazon.com/workdocs/latest/developerguide/wd-auth-user.html) in the _Amazon WorkDocs Developer Guide_.
      parameters:
      - name: Authentication
        in: header
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/documents/{DocumentId}/path:
    get:
      operationId: GetDocumentPath
      description: |-
        Retrieves the path information (the hierarchy from the root folder) for the requested document.

        By default, Amazon WorkDocs returns a maximum of 100 levels upwards from the requested document and only includes the IDs of the parent folders in the path. You can limit the maximum number of levels. You can also request the names of the parent folders.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: fields
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FieldNamesType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/folders/{FolderId}/path:
    get:
      operationId: GetFolderPath
      description: |-
        Retrieves the path information (the hierarchy from the root folder) for the specified folder.

        By default, Amazon WorkDocs returns a maximum of 100 levels upwards from the requested folder and only includes the IDs of the parent folders in the path. You can limit the maximum number of levels. You can also request the parent folder names.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: FolderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: fields
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/FieldNamesType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      responses:
        '200': {}
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/resources:
    get:
      operationId: GetResources
      description: |-
        Retrieves a collection of resources, including folders and documents. The only `CollectionType` supported is `SHARED_WITH_ME`.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: userId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IdType'
      - name: collectionType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceCollectionType'
      - name: limit
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/LimitType'
      - name: marker
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PageMarkerType'
      responses:
        '200': {}
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
  /api/v1/documents:
    post:
      operationId: InitiateDocumentVersionUpload
      description: |-
        Creates a new document object and version object.

        The client specifies the parent folder ID and name of the document to upload. The ID is optionally specified when creating a new version of an existing document. This is the first step to upload a document. Next, upload the document to the URL returned from the call, and then call UpdateDocumentVersion.

        To cancel the document upload, call AbortDocumentVersionUpload.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Id:
                  $ref: '#/components/schemas/ResourceIdType'
                Name:
                  $ref: '#/components/schemas/ResourceNameType'
                ContentCreatedTimestamp:
                  $ref: '#/components/schemas/TimestampType'
                ContentModifiedTimestamp:
                  $ref: '#/components/schemas/TimestampType'
                ContentType:
                  $ref: '#/components/schemas/DocumentContentType'
                DocumentSizeInBytes:
                  $ref: '#/components/schemas/SizeType'
                ParentFolderId:
                  $ref: '#/components/schemas/ResourceIdType'
      responses:
        '201': {}
        '409':
          description: |-
            The storage limit has been exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLimitExceededException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '401':
          description: |-
            The password is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPasswordException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '413':
          description: |-
            The storage limit will be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageLimitWillExceedException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/resources/{ResourceId}/permissions/{PrincipalId}:
    delete:
      operationId: RemoveResourcePermission
      description: |-
        Removes the permission for the specified principal from the specified resource.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: ResourceId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      - name: PrincipalId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/IdType'
      - name: type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PrincipalType'
      responses:
        '204': {}
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
  /api/v1/documentVersions/restore/{DocumentId}:
    post:
      operationId: RestoreDocumentVersions
      description: |-
        Recovers a deleted version of an Amazon WorkDocs document.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      - name: DocumentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdType'
      responses:
        '204': {}
        '409':
          description: |-
            The specified document version is not in the INITIALIZED state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProhibitedStateException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
        '424':
          description: |-
            The Directory Service cannot reach an on-premises instance. Or a dependency under the control of the organization is failing, such as a connected Active Directory.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FailedDependencyException'
        '405':
          description: |-
            The operation is invalid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidOperationException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
  /api/v1/search:
    post:
      operationId: SearchResources
      description: |-
        Searches metadata and the content of folders, documents, document versions, and comments.
      parameters:
      - name: Authentication
        in: header
        required: false
        schema:
          $ref: '#/components/schemas/AuthenticationHeaderType'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                QueryText:
                  $ref: '#/components/schemas/SearchQueryType'
                QueryScopes:
                  $ref: '#/components/schemas/SearchQueryScopeTypeList'
                OrganizationId:
                  $ref: '#/components/schemas/IdType'
                AdditionalResponseFields:
                  $ref: '#/components/schemas/AdditionalResponseFieldsList'
                Filters:
                  $ref: '#/components/schemas/Filters'
                OrderBy:
                  $ref: '#/components/schemas/SearchResultSortList'
                Limit:
                  $ref: '#/components/schemas/SearchResultsLimitType'
                Marker:
                  $ref: '#/components/schemas/NextMarkerType'
      responses:
        '200': {}
        '400':
          description: |-
            The pagination marker or limit fields are not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidArgumentException'
        '503':
          description: |-
            One or more of the dependencies is unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '403':
          description: |-
            The operation is not permitted.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedOperationException'
        '404':
          description: |-
            The caller does not have access to perform the action on the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedResourceAccessException'
components:
  schemas:
    AbortDocumentVersionUploadRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The ID of the version.
      required:
      - DocumentId
      - VersionId
    ActivateUserRequest:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user.
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
      required:
      - UserId
    ActivateUserResponse:
      type: object
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          description: The user information.
    Activity:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ActivityType'
          description: The activity type.
        TimeStamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp when the action was performed.
        IsIndirectActivity:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Indicates whether an activity is indirect or direct. An indirect
            activity results from a direct activity performed on a parent resource.
            For example, sharing a parent folder (the direct activity) shares all
            of the subfolders and documents within the parent folder (the indirect
            activity).
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization.
        Initiator:
          allOf:
          - $ref: '#/components/schemas/UserMetadata'
          description: The user who performed the action.
        Participants:
          allOf:
          - $ref: '#/components/schemas/Participants'
          description: 'The list of users or groups impacted by this action. This
            is an optional field and is filled for the following sharing activities:
            DOCUMENT_SHARED, DOCUMENT_SHARED, DOCUMENT_UNSHARED, FOLDER_SHARED, FOLDER_UNSHARED.'
        ResourceMetadata:
          allOf:
          - $ref: '#/components/schemas/ResourceMetadata'
          description: The metadata of the resource involved in the user action.
        OriginalParent:
          allOf:
          - $ref: '#/components/schemas/ResourceMetadata'
          description: The original parent of the resource. This is an optional field
            and is filled for move activities.
        CommentMetadata:
          allOf:
          - $ref: '#/components/schemas/CommentMetadata'
          description: Metadata of the commenting activity. This is an optional field
            and is filled for commenting activities.
      description: Describes the activity information.
    ActivityNamesFilterType:
      type: string
      pattern: ^[\w,]+$
      minLength: 1
      maxLength: 1024
    ActivityType:
      type: string
      enum:
      - DOCUMENT_CHECKED_IN
      - DOCUMENT_CHECKED_OUT
      - DOCUMENT_RENAMED
      - DOCUMENT_VERSION_UPLOADED
      - DOCUMENT_VERSION_DELETED
      - DOCUMENT_VERSION_VIEWED
      - DOCUMENT_VERSION_DOWNLOADED
      - DOCUMENT_RECYCLED
      - DOCUMENT_RESTORED
      - DOCUMENT_REVERTED
      - DOCUMENT_SHARED
      - DOCUMENT_UNSHARED
      - DOCUMENT_SHARE_PERMISSION_CHANGED
      - DOCUMENT_SHAREABLE_LINK_CREATED
      - DOCUMENT_SHAREABLE_LINK_REMOVED
      - DOCUMENT_SHAREABLE_LINK_PERMISSION_CHANGED
      - DOCUMENT_MOVED
      - DOCUMENT_COMMENT_ADDED
      - DOCUMENT_COMMENT_DELETED
      - DOCUMENT_ANNOTATION_ADDED
      - DOCUMENT_ANNOTATION_DELETED
      - FOLDER_CREATED
      - FOLDER_DELETED
      - FOLDER_RENAMED
      - FOLDER_RECYCLED
      - FOLDER_RESTORED
      - FOLDER_SHARED
      - FOLDER_UNSHARED
      - FOLDER_SHARE_PERMISSION_CHANGED
      - FOLDER_SHAREABLE_LINK_CREATED
      - FOLDER_SHAREABLE_LINK_REMOVED
      - FOLDER_SHAREABLE_LINK_PERMISSION_CHANGED
      - FOLDER_MOVED
    AddResourcePermissionsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource.
        Principals:
          allOf:
          - $ref: '#/components/schemas/SharePrincipalList'
          description: The users, groups, or organization being granted permission.
        NotificationOptions:
          allOf:
          - $ref: '#/components/schemas/NotificationOptions'
          description: The notification options.
      required:
      - ResourceId
      - Principals
    AddResourcePermissionsResponse:
      type: object
      properties:
        ShareResults:
          allOf:
          - $ref: '#/components/schemas/ShareResultsList'
          description: The share results.
    AdditionalResponseFieldType:
      type: string
      enum:
      - WEBURL
    AdditionalResponseFieldsList:
      type: array
      items:
        $ref: '#/components/schemas/AdditionalResponseFieldType'
    AuthenticationHeaderType:
      type: string
      minLength: 1
      maxLength: 8199
    BooleanEnumType:
      type: string
      enum:
      - 'TRUE'
      - 'FALSE'
    BooleanType:
      type: boolean
      default: false
    Comment:
      type: object
      properties:
        CommentId:
          allOf:
          - $ref: '#/components/schemas/CommentIdType'
          description: The ID of the comment.
        ParentId:
          allOf:
          - $ref: '#/components/schemas/CommentIdType'
          description: The ID of the parent comment.
        ThreadId:
          allOf:
          - $ref: '#/components/schemas/CommentIdType'
          description: The ID of the root comment in the thread.
        Text:
          allOf:
          - $ref: '#/components/schemas/CommentTextType'
          description: The text of the comment.
        Contributor:
          allOf:
          - $ref: '#/components/schemas/User'
          description: The details of the user who made the comment.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The time that the comment was created.
        Status:
          allOf:
          - $ref: '#/components/schemas/CommentStatusType'
          description: The status of the comment.
        Visibility:
          allOf:
          - $ref: '#/components/schemas/CommentVisibilityType'
          description: The visibility of the comment. Options are either PRIVATE,
            where the comment is visible only to the comment author and document owner
            and co-owners, or PUBLIC, where the comment is visible to document owners,
            co-owners, and contributors.
        RecipientId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: If the comment is a reply to another user's comment, this field
            contains the user ID of the user being replied to.
      required:
      - CommentId
      description: Describes a comment.
    CommentIdType:
      type: string
      pattern: ^[\w+-.@]+$
      minLength: 1
      maxLength: 128
    CommentList:
      type: array
      items:
        $ref: '#/components/schemas/Comment'
    CommentMetadata:
      type: object
      properties:
        CommentId:
          allOf:
          - $ref: '#/components/schemas/CommentIdType'
          description: The ID of the comment.
        Contributor:
          allOf:
          - $ref: '#/components/schemas/User'
          description: The user who made the comment.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp that the comment was created.
        CommentStatus:
          allOf:
          - $ref: '#/components/schemas/CommentStatusType'
          description: The status of the comment.
        RecipientId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user being replied to.
        ContributorId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user who made the comment.
      description: Describes the metadata of a comment.
    CommentStatusType:
      type: string
      enum:
      - DRAFT
      - PUBLISHED
      - DELETED
    CommentTextType:
      type: string
      minLength: 1
      maxLength: 2048
    CommentVisibilityType:
      type: string
      enum:
      - PUBLIC
      - PRIVATE
    ConcurrentModificationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The resource hierarchy is changing.
    ConflictingOperationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: Another operation is in progress on the resource that conflicts
        with the current operation.
    ContentCategoryType:
      type: string
      enum:
      - IMAGE
      - DOCUMENT
      - PDF
      - SPREADSHEET
      - PRESENTATION
      - AUDIO
      - VIDEO
      - SOURCE_CODE
      - OTHER
    CreateCommentRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The ID of the document version.
        ParentId:
          allOf:
          - $ref: '#/components/schemas/CommentIdType'
          description: The ID of the parent comment.
        ThreadId:
          allOf:
          - $ref: '#/components/schemas/CommentIdType'
          description: The ID of the root comment in the thread.
        Text:
          allOf:
          - $ref: '#/components/schemas/CommentTextType'
          description: The text of the comment.
        Visibility:
          allOf:
          - $ref: '#/components/schemas/CommentVisibilityType'
          description: The visibility of the comment. Options are either PRIVATE,
            where the comment is visible only to the comment author and document owner
            and co-owners, or PUBLIC, where the comment is visible to document owners,
            co-owners, and contributors.
        NotifyCollaborators:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Set this parameter to TRUE to send an email out to the document
            collaborators after the comment is created.
      required:
      - DocumentId
      - VersionId
      - Text
    CreateCommentResponse:
      type: object
      properties:
        Comment:
          allOf:
          - $ref: '#/components/schemas/Comment'
          description: The comment that has been created.
    CreateCustomMetadataRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The ID of the version, if the custom metadata is being added
            to a document version.
        CustomMetadata:
          allOf:
          - $ref: '#/components/schemas/CustomMetadataMap'
          description: Custom metadata in the form of name-value pairs.
      required:
      - ResourceId
      - CustomMetadata
    CreateCustomMetadataResponse:
      type: object
      properties: {}
    CreateFolderRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The name of the new folder.
        ParentFolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the parent folder.
      required:
      - ParentFolderId
    CreateFolderResponse:
      type: object
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/FolderMetadata'
          description: The metadata of the folder.
    CreateLabelsRequest:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource.
        Labels:
          allOf:
          - $ref: '#/components/schemas/SharedLabels'
          description: List of labels to add to the resource.
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
      required:
      - ResourceId
      - Labels
    CreateLabelsResponse:
      type: object
      properties: {}
    CreateNotificationSubscriptionRequest:
      type: object
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization.
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/SubscriptionEndPointType'
          description: The endpoint to receive the notifications. If the protocol
            is HTTPS, the endpoint is a URL that begins with `https`.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/SubscriptionProtocolType'
          description: The protocol to use. The supported value is https, which delivers
            JSON-encoded messages using HTTPS POST.
        SubscriptionType:
          allOf:
          - $ref: '#/components/schemas/SubscriptionType'
          description: The notification type.
      required:
      - OrganizationId
      - Endpoint
      - Protocol
      - SubscriptionType
    CreateNotificationSubscriptionResponse:
      type: object
      properties:
        Subscription:
          allOf:
          - $ref: '#/components/schemas/Subscription'
          description: The subscription.
    CreateUserRequest:
      type: object
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization.
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          description: The login name of the user.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressType'
          description: The email address of the user.
        GivenName:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValueType'
          description: The given name of the user.
        Surname:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValueType'
          description: The surname of the user.
        Password:
          allOf:
          - $ref: '#/components/schemas/PasswordType'
          description: The password of the user.
        TimeZoneId:
          allOf:
          - $ref: '#/components/schemas/TimeZoneIdType'
          description: The time zone ID of the user.
        StorageRule:
          allOf:
          - $ref: '#/components/schemas/StorageRuleType'
          description: The amount of storage for the user.
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
      required:
      - Username
      - GivenName
      - Surname
      - Password
    CreateUserResponse:
      type: object
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          description: The user information.
    CustomMetadataKeyList:
      type: array
      items:
        $ref: '#/components/schemas/CustomMetadataKeyType'
    CustomMetadataKeyType:
      type: string
      pattern: ^[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*$
      minLength: 1
      maxLength: 56
    CustomMetadataLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The limit has been reached on the number of custom properties for
        the specified resource.
    CustomMetadataMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/CustomMetadataValueType'
    CustomMetadataValueType:
      type: string
      pattern: ^[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*$
      minLength: 1
      maxLength: 256
    DateRangeType:
      type: object
      properties:
        StartValue:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: Timestamp range start value (in epochs)
        EndValue:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: Timestamp range end value (in epochs).
      description: Filters results based on timestamp range (in epochs).
    DeactivateUserRequest:
      type: object
      properties:
        UserId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user.
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
      required:
      - UserId
    DeactivatingLastSystemUserException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
        Code:
          $ref: '#/components/schemas/ExceptionCodeType'
      description: The last user in the organization is being deactivated.
    DeleteCommentRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The ID of the document version.
        CommentId:
          allOf:
          - $ref: '#/components/schemas/CommentIdType'
          description: The ID of the comment.
      required:
      - DocumentId
      - VersionId
      - CommentId
    DeleteCustomMetadataRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource, either a document or folder.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The ID of the version, if the custom metadata is being deleted
            from a document version.
        Keys:
          allOf:
          - $ref: '#/components/schemas/CustomMetadataKeyList'
          description: List of properties to remove.
        DeleteAll:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Flag to indicate removal of all custom metadata properties
            from the specified resource.
      required:
      - ResourceId
    DeleteCustomMetadataResponse:
      type: object
      properties: {}
    DeleteDocumentRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
      required:
      - DocumentId
    DeleteDocumentVersionRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document associated with the version being deleted.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The ID of the version being deleted.
        DeletePriorVersions:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Deletes all versions of a document prior to the current version.
      required:
      - DocumentId
      - VersionId
      - DeletePriorVersions
    DeleteFolderContentsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        FolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the folder.
      required:
      - FolderId
    DeleteFolderRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        FolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the folder.
      required:
      - FolderId
    DeleteLabelsRequest:
      type: object
      properties:
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource.
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        Labels:
          allOf:
          - $ref: '#/components/schemas/SharedLabels'
          description: List of labels to delete from the resource.
        DeleteAll:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Flag to request removal of all labels from the specified resource.
      required:
      - ResourceId
    DeleteLabelsResponse:
      type: object
      properties: {}
    DeleteNotificationSubscriptionRequest:
      type: object
      properties:
        SubscriptionId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the subscription.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization.
      required:
      - SubscriptionId
      - OrganizationId
    DeleteUserRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Do not set this field
            when using administrative API actions, as in accessing the API using Amazon
            Web Services credentials.
        UserId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user.
      required:
      - UserId
    DescribeActivitiesRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp that determines the starting time of the activities.
            The response includes the activities performed after the specified timestamp.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp that determines the end time of the activities.
            The response includes the activities performed before the specified timestamp.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization. This is a mandatory parameter when
            using administrative API (SigV4) requests.
        ActivityTypes:
          allOf:
          - $ref: '#/components/schemas/ActivityNamesFilterType'
          description: Specifies which activity types to include in the response.
            If this field is left empty, all activity types are returned.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The document or folder ID for which to describe activity types.
        UserId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user who performed the action. The response includes
            activities pertaining to this user. This is an optional parameter and
            is only applicable for administrative API (SigV4) requests.
        IncludeIndirectActivities:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Includes indirect activities. An indirect activity results
            from a direct activity performed on a parent resource. For example, sharing
            a parent folder (the direct activity) shares all of the subfolders and
            documents within the parent folder (the indirect activity).
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of items to return.
        Marker:
          allOf:
          - $ref: '#/components/schemas/SearchMarkerType'
          description: The marker for the next set of results.
    DescribeActivitiesResponse:
      type: object
      properties:
        UserActivities:
          allOf:
          - $ref: '#/components/schemas/UserActivities'
          description: The list of activities for the specified user and time period.
        Marker:
          allOf:
          - $ref: '#/components/schemas/SearchMarkerType'
          description: The marker for the next set of results.
    DescribeCommentsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The ID of the document version.
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of items to return.
        Marker:
          allOf:
          - $ref: '#/components/schemas/MarkerType'
          description: The marker for the next set of results. This marker was received
            from a previous call.
      required:
      - DocumentId
      - VersionId
    DescribeCommentsResponse:
      type: object
      properties:
        Comments:
          allOf:
          - $ref: '#/components/schemas/CommentList'
          description: The list of comments for the specified document version.
        Marker:
          allOf:
          - $ref: '#/components/schemas/MarkerType'
          description: The marker for the next set of results. This marker was received
            from a previous call.
    DescribeDocumentVersionsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker for the next set of results. (You received this
            marker from a previous call.)
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of versions to return with this call.
        Include:
          allOf:
          - $ref: '#/components/schemas/FieldNamesType'
          description: A comma-separated list of values. Specify "INITIALIZED" to
            include incomplete versions.
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldNamesType'
          description: Specify "SOURCE" to include initialized versions and a URL
            for the source document.
      required:
      - DocumentId
    DescribeDocumentVersionsResponse:
      type: object
      properties:
        DocumentVersions:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionMetadataList'
          description: The document versions.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker to use when requesting the next set of results.
            If there are no additional results, the string is empty.
    DescribeFolderContentsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        FolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the folder.
        Sort:
          allOf:
          - $ref: '#/components/schemas/ResourceSortType'
          description: The sorting criteria.
        Order:
          allOf:
          - $ref: '#/components/schemas/OrderType'
          description: The order for the contents of the folder.
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of items to return with this call.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker for the next set of results. This marker was received
            from a previous call.
        Type:
          allOf:
          - $ref: '#/components/schemas/FolderContentType'
          description: The type of items.
        Include:
          allOf:
          - $ref: '#/components/schemas/FieldNamesType'
          description: The contents to include. Specify "INITIALIZED" to include initialized
            documents.
      required:
      - FolderId
    DescribeFolderContentsResponse:
      type: object
      properties:
        Folders:
          allOf:
          - $ref: '#/components/schemas/FolderMetadataList'
          description: The subfolders in the specified folder.
        Documents:
          allOf:
          - $ref: '#/components/schemas/DocumentMetadataList'
          description: The documents in the specified folder.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker to use when requesting the next set of results.
            If there are no additional results, the string is empty.
    DescribeGroupsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        SearchQuery:
          allOf:
          - $ref: '#/components/schemas/SearchQueryType'
          description: A query to describe groups by group name.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization.
        Marker:
          allOf:
          - $ref: '#/components/schemas/MarkerType'
          description: The marker for the next set of results. (You received this
            marker from a previous call.)
        Limit:
          allOf:
          - $ref: '#/components/schemas/PositiveIntegerType'
          description: The maximum number of items to return with this call.
      required:
      - SearchQuery
    DescribeGroupsResponse:
      type: object
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupMetadataList'
          description: The list of groups.
        Marker:
          allOf:
          - $ref: '#/components/schemas/MarkerType'
          description: The marker to use when requesting the next set of results.
            If there are no additional results, the string is empty.
    DescribeNotificationSubscriptionsRequest:
      type: object
      properties:
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker for the next set of results. (You received this
            marker from a previous call.)
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of items to return with this call.
      required:
      - OrganizationId
    DescribeNotificationSubscriptionsResponse:
      type: object
      properties:
        Subscriptions:
          allOf:
          - $ref: '#/components/schemas/SubscriptionList'
          description: The subscriptions.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker to use when requesting the next set of results.
            If there are no additional results, the string is empty.
    DescribeResourcePermissionsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the principal to filter permissions by.
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of items to return with this call.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker for the next set of results. (You received this
            marker from a previous call)
      required:
      - ResourceId
    DescribeResourcePermissionsResponse:
      type: object
      properties:
        Principals:
          allOf:
          - $ref: '#/components/schemas/PrincipalList'
          description: The principals.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker to use when requesting the next set of results.
            If there are no additional results, the string is empty.
    DescribeRootFoldersRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token.
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of items to return.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker for the next set of results. (You received this
            marker from a previous call.)
      required:
      - AuthenticationToken
    DescribeRootFoldersResponse:
      type: object
      properties:
        Folders:
          allOf:
          - $ref: '#/components/schemas/FolderMetadataList'
          description: The user's special folders.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker for the next set of results.
    DescribeUsersRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization.
        UserIds:
          allOf:
          - $ref: '#/components/schemas/UserIdsType'
          description: The IDs of the users.
        Query:
          allOf:
          - $ref: '#/components/schemas/SearchQueryType'
          description: "A query to filter users by user name. Remember the following\
            \ about the `Userids` and `Query` parameters:\n\n  * If you don't use\
            \ either parameter, the API returns a paginated list of all users on the\
            \ site.\n\n  * If you use both parameters, the API ignores the `Query`\
            \ parameter.\n\n  * The `Userid` parameter only returns user names that\
            \ match a corresponding user ID.\n\n  * The `Query` parameter runs a \"\
            prefix\" search for users by the `GivenName`, `SurName`, or `UserName`\
            \ fields included in a [CreateUser](https://docs.aws.amazon.com/workdocs/latest/APIReference/API_CreateUser.html)\
            \ API call. For example, querying on `Ma` returns Márcia Oliveira, María\
            \ García, and Mateo Jackson. If you use multiple characters, the API only\
            \ returns data that matches all characters. For example, querying on `Ma\
            \ J` only returns Mateo Jackson."
        Include:
          allOf:
          - $ref: '#/components/schemas/UserFilterType'
          description: The state of the users. Specify "ALL" to include inactive users.
        Order:
          allOf:
          - $ref: '#/components/schemas/OrderType'
          description: The order for the results.
        Sort:
          allOf:
          - $ref: '#/components/schemas/UserSortType'
          description: The sorting criteria.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker for the next set of results. (You received this
            marker from a previous call.)
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of items to return.
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldNamesType'
          description: A comma-separated list of values. Specify "STORAGE_METADATA"
            to include the user storage quota and utilization information.
    DescribeUsersResponse:
      type: object
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/OrganizationUserList'
          description: The users.
        TotalNumberOfUsers:
          allOf:
          - $ref: '#/components/schemas/SizeType'
          description: The total number of users included in the results.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker to use when requesting the next set of results.
            If there are no additional results, the string is empty.
    DocumentContentType:
      type: string
      minLength: 1
      maxLength: 128
    DocumentLockedForCommentsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: This exception is thrown when the document is locked for comments
        and user tries to create or delete a comment on that document.
    DocumentMetadata:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        CreatorId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the creator.
        ParentFolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the parent folder.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The time when the document was created.
        ModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The time when the document was updated.
        LatestVersionMetadata:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionMetadata'
          description: The latest version of the document.
        ResourceState:
          allOf:
          - $ref: '#/components/schemas/ResourceStateType'
          description: The resource state.
        Labels:
          allOf:
          - $ref: '#/components/schemas/SharedLabels'
          description: List of labels on the document.
      description: Describes the document.
    DocumentMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentMetadata'
    DocumentSourceType:
      type: string
      enum:
      - ORIGINAL
      - WITH_COMMENTS
    DocumentSourceUrlMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UrlType'
    DocumentStatusType:
      type: string
      enum:
      - INITIALIZED
      - ACTIVE
    DocumentThumbnailType:
      type: string
      enum:
      - SMALL
      - SMALL_HQ
      - LARGE
    DocumentThumbnailUrlMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/UrlType'
    DocumentVersionIdType:
      type: string
      pattern: ^[\w+-.@]+$
      minLength: 1
      maxLength: 128
    DocumentVersionMetadata:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The ID of the version.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The name of the version.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/DocumentContentType'
          description: The content type of the document.
        Size:
          allOf:
          - $ref: '#/components/schemas/SizeType'
          description: The size of the document, in bytes.
        Signature:
          allOf:
          - $ref: '#/components/schemas/HashType'
          description: The signature of the document.
        Status:
          allOf:
          - $ref: '#/components/schemas/DocumentStatusType'
          description: The status of the document.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp when the document was first uploaded.
        ModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp when the document was last uploaded.
        ContentCreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp when the content of the document was originally
            created.
        ContentModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp when the content of the document was modified.
        CreatorId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the creator.
        Thumbnail:
          allOf:
          - $ref: '#/components/schemas/DocumentThumbnailUrlMap'
          description: The thumbnail of the document.
        Source:
          allOf:
          - $ref: '#/components/schemas/DocumentSourceUrlMap'
          description: The source of the document.
      description: Describes a version of a document.
    DocumentVersionMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/DocumentVersionMetadata'
    DocumentVersionStatus:
      type: string
      enum:
      - ACTIVE
    DraftUploadOutOfSyncException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: This exception is thrown when a valid checkout ID is not presented
        on document version upload calls for a document that has been checked out
        from Web client.
    EmailAddressType:
      type: string
      pattern: ^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$
      minLength: 1
      maxLength: 256
    EntityAlreadyExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The resource already exists.
    EntityIdList:
      type: array
      items:
        $ref: '#/components/schemas/IdType'
    EntityNotExistsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
        EntityIds:
          allOf:
          - $ref: '#/components/schemas/EntityIdList'
          description: The IDs of the non-existent resources.
      description: The resource does not exist.
    ErrorMessageType:
      type: string
    ExceptionCodeType:
      type: string
    FailedDependencyException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The Directory Service cannot reach an on-premises instance. Or
        a dependency under the control of the organization is failing, such as a connected
        Active Directory.
    FieldNamesType:
      type: string
      pattern: ^[\w,]+$
      minLength: 1
      maxLength: 256
    Filters:
      type: object
      properties:
        TextLocales:
          allOf:
          - $ref: '#/components/schemas/TextLocaleTypeList'
          description: Filters by the locale of the content or comment.
        ContentCategories:
          allOf:
          - $ref: '#/components/schemas/SearchContentCategoryTypeList'
          description: Filters by content category.
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/SearchResourceTypeList'
          description: Filters based on entity type.
        Labels:
          allOf:
          - $ref: '#/components/schemas/SearchLabelList'
          description: Filter by labels using exact match.
        Principals:
          allOf:
          - $ref: '#/components/schemas/SearchPrincipalTypeList'
          description: Filter based on UserIds or GroupIds.
        AncestorIds:
          allOf:
          - $ref: '#/components/schemas/SearchAncestorIdList'
          description: Filter based on resource’s path.
        SearchCollectionTypes:
          allOf:
          - $ref: '#/components/schemas/SearchCollectionTypeList'
          description: Filter based on file groupings.
        SizeRange:
          allOf:
          - $ref: '#/components/schemas/LongRangeType'
          description: Filter based on size (in bytes).
        CreatedRange:
          allOf:
          - $ref: '#/components/schemas/DateRangeType'
          description: Filter based on resource’s creation timestamp.
        ModifiedRange:
          allOf:
          - $ref: '#/components/schemas/DateRangeType'
          description: Filter based on resource’s modified timestamp.
      description: Filters results based on entity metadata.
    FolderContentType:
      type: string
      enum:
      - ALL
      - DOCUMENT
      - FOLDER
    FolderMetadata:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the folder.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The name of the folder.
        CreatorId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the creator.
        ParentFolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the parent folder.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The time when the folder was created.
        ModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The time when the folder was updated.
        ResourceState:
          allOf:
          - $ref: '#/components/schemas/ResourceStateType'
          description: The resource state of the folder.
        Signature:
          allOf:
          - $ref: '#/components/schemas/HashType'
          description: The unique identifier created from the subfolders and documents
            of the folder.
        Labels:
          allOf:
          - $ref: '#/components/schemas/SharedLabels'
          description: List of labels on the folder.
        Size:
          allOf:
          - $ref: '#/components/schemas/SizeType'
          description: The size of the folder metadata.
        LatestVersionSize:
          allOf:
          - $ref: '#/components/schemas/SizeType'
          description: The size of the latest version of the folder metadata.
      description: Describes a folder.
    FolderMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/FolderMetadata'
    GetCurrentUserRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token.
      required:
      - AuthenticationToken
    GetCurrentUserResponse:
      type: object
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          description: Metadata of the user.
    GetDocumentPathRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the document.
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of levels in the hierarchy to return.
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldNamesType'
          description: A comma-separated list of values. Specify `NAME` to include
            the names of the parent folders.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: This value is not supported.
      required:
      - DocumentId
    GetDocumentPathResponse:
      type: object
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/ResourcePath'
          description: The path information.
    GetDocumentRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        IncludeCustomMetadata:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Set this to `TRUE` to include custom metadata in the response.
      required:
      - DocumentId
    GetDocumentResponse:
      type: object
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/DocumentMetadata'
          description: The metadata details of the document.
        CustomMetadata:
          allOf:
          - $ref: '#/components/schemas/CustomMetadataMap'
          description: The custom metadata on the document.
    GetDocumentVersionRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The version ID of the document.
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldNamesType'
          description: A comma-separated list of values. Specify "SOURCE" to include
            a URL for the source document.
        IncludeCustomMetadata:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Set this to TRUE to include custom metadata in the response.
      required:
      - DocumentId
      - VersionId
    GetDocumentVersionResponse:
      type: object
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionMetadata'
          description: The version metadata.
        CustomMetadata:
          allOf:
          - $ref: '#/components/schemas/CustomMetadataMap'
          description: The custom metadata on the document version.
    GetFolderPathRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        FolderId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the folder.
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of levels in the hierarchy to return.
        Fields:
          allOf:
          - $ref: '#/components/schemas/FieldNamesType'
          description: A comma-separated list of values. Specify "NAME" to include
            the names of the parent folders.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: This value is not supported.
      required:
      - FolderId
    GetFolderPathResponse:
      type: object
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/ResourcePath'
          description: The path information.
    GetFolderRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        FolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the folder.
        IncludeCustomMetadata:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Set to TRUE to include custom metadata in the response.
      required:
      - FolderId
    GetFolderResponse:
      type: object
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/FolderMetadata'
          description: The metadata of the folder.
        CustomMetadata:
          allOf:
          - $ref: '#/components/schemas/CustomMetadataMap'
          description: The custom metadata on the folder.
    GetResourcesRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: The Amazon WorkDocs authentication token. Not required when
            using Amazon Web Services administrator credentials to access the API.
        UserId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The user ID for the resource collection. This is a required
            field for accessing the API operation using IAM credentials.
        CollectionType:
          allOf:
          - $ref: '#/components/schemas/ResourceCollectionType'
          description: The collection type.
        Limit:
          allOf:
          - $ref: '#/components/schemas/LimitType'
          description: The maximum number of resources to return.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker for the next set of results. This marker was received
            from a previous call.
    GetResourcesResponse:
      type: object
      properties:
        Folders:
          allOf:
          - $ref: '#/components/schemas/FolderMetadataList'
          description: The folders in the specified folder.
        Documents:
          allOf:
          - $ref: '#/components/schemas/DocumentMetadataList'
          description: The documents in the specified collection.
        Marker:
          allOf:
          - $ref: '#/components/schemas/PageMarkerType'
          description: The marker to use when requesting the next set of results.
            If there are no additional results, the string is empty.
    GroupMetadata:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user group.
        Name:
          allOf:
          - $ref: '#/components/schemas/GroupNameType'
          description: The name of the group.
      description: Describes the metadata of a user group.
    GroupMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/GroupMetadata'
    GroupNameType:
      type: string
    HashType:
      type: string
      pattern: ^[&\w+-.@]+$
      minLength: 0
      maxLength: 128
    HeaderNameType:
      type: string
      pattern: ^[\w-]+$
      minLength: 1
      maxLength: 256
    HeaderValueType:
      type: string
      minLength: 1
      maxLength: 1024
    IdType:
      type: string
      pattern: ^[&\w+-.@]+$
      minLength: 1
      maxLength: 256
    IllegalUserStateException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The user is undergoing transfer of ownership.
    InitiateDocumentVersionUploadRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The name of the document.
        ContentCreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp when the content of the document was originally
            created.
        ContentModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The timestamp when the content of the document was modified.
        ContentType:
          allOf:
          - $ref: '#/components/schemas/DocumentContentType'
          description: The content type of the document.
        DocumentSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/SizeType'
          description: The size of the document, in bytes.
        ParentFolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the parent folder.
    InitiateDocumentVersionUploadResponse:
      type: object
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/DocumentMetadata'
          description: The document metadata.
        UploadMetadata:
          allOf:
          - $ref: '#/components/schemas/UploadMetadata'
          description: The upload metadata.
    InvalidArgumentException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The pagination marker or limit fields are not valid.
    InvalidCommentOperationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The requested operation is not allowed on the specified comment
        object.
    InvalidOperationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The operation is invalid.
    InvalidPasswordException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The password is invalid.
    LanguageCodeType:
      type: string
      enum:
      - AR
      - BG
      - BN
      - DA
      - DE
      - CS
      - EL
      - EN
      - ES
      - FA
      - FI
      - FR
      - HI
      - HU
      - ID
      - IT
      - JA
      - KO
      - LT
      - LV
      - NL
      - 'NO'
      - PT
      - RO
      - RU
      - SV
      - SW
      - TH
      - TR
      - ZH
      - DEFAULT
    LimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The maximum of 100,000 files and folders under the parent folder
        has been exceeded.
    LimitType:
      type: integer
      minimum: 1
      maximum: 999
    LocaleType:
      type: string
      enum:
      - en
      - fr
      - ko
      - de
      - es
      - ja
      - ru
      - zh_CN
      - zh_TW
      - pt_BR
      - default
    LongRangeType:
      type: object
      properties:
        StartValue:
          allOf:
          - $ref: '#/components/schemas/LongType'
          description: The size start range (in bytes).
        EndValue:
          allOf:
          - $ref: '#/components/schemas/LongType'
          description: The size end range (in bytes).
      description: Filter based on size (in bytes).
    LongType:
      type: integer
      format: int64
    MarkerType:
      type: string
      pattern: ^[\u0000-\u00FF]+$
      minLength: 1
      maxLength: 2048
    MessageType:
      type: string
      minLength: 0
      maxLength: 2048
    NextMarkerType:
      type: string
      pattern: ^[\d]+$
      minLength: 1
      maxLength: 2048
    NotificationOptions:
      type: object
      properties:
        SendEmail:
          allOf:
          - $ref: '#/components/schemas/BooleanType'
          description: Boolean value to indicate an email notification should be sent
            to the recipients.
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: Text value to be included in the email body.
      description: Set of options which defines notification preferences of given
        action.
    OrderByFieldType:
      type: string
      enum:
      - RELEVANCE
      - NAME
      - SIZE
      - CREATED_TIMESTAMP
      - MODIFIED_TIMESTAMP
    OrderType:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    OrganizationUserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
    PageMarkerType:
      type: string
      minLength: 1
      maxLength: 2048
    Participants:
      type: object
      properties:
        Users:
          allOf:
          - $ref: '#/components/schemas/UserMetadataList'
          description: The list of users.
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupMetadataList'
          description: The list of user groups.
      description: Describes the users or user groups.
    PasswordType:
      type: string
      pattern: ^[\u0020-\u00FF]+$
      minLength: 4
      maxLength: 32
    PermissionInfo:
      type: object
      properties:
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleType'
          description: The role of the user.
        Type:
          allOf:
          - $ref: '#/components/schemas/RolePermissionType'
          description: The type of permissions.
      description: Describes the permissions.
    PermissionInfoList:
      type: array
      items:
        $ref: '#/components/schemas/PermissionInfo'
    PositiveIntegerType:
      type: integer
      minimum: 1
    PositiveSizeType:
      type: integer
      format: int64
      minimum: 0
    Principal:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the resource.
        Type:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          description: The type of resource.
        Roles:
          allOf:
          - $ref: '#/components/schemas/PermissionInfoList'
          description: The permission information for the resource.
      description: Describes a resource.
    PrincipalList:
      type: array
      items:
        $ref: '#/components/schemas/Principal'
    PrincipalRoleType:
      type: string
      enum:
      - VIEWER
      - CONTRIBUTOR
      - OWNER
      - COOWNER
    PrincipalType:
      type: string
      enum:
      - USER
      - GROUP
      - INVITE
      - ANONYMOUS
      - ORGANIZATION
    ProhibitedStateException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The specified document version is not in the INITIALIZED state.
    RemoveAllResourcePermissionsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource.
      required:
      - ResourceId
    RemoveResourcePermissionRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The principal ID of the resource.
        PrincipalType:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          description: The principal type of the resource.
      required:
      - ResourceId
      - PrincipalId
    RequestedEntityTooLargeException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The response is too large to return. The request must include a
        filter to reduce the size of the response.
    ResourceAlreadyCheckedOutException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The resource is already checked out.
    ResourceCollectionType:
      type: string
      enum:
      - SHARED_WITH_ME
    ResourceIdType:
      type: string
      pattern: ^[\w+-.@]+$
      minLength: 1
      maxLength: 128
    ResourceMetadata:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of resource.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The name of the resource.
        OriginalName:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The original name of the resource before a rename operation.
        Id:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The version ID of the resource. This is an optional field and
            is filled for action on document version.
        Owner:
          allOf:
          - $ref: '#/components/schemas/UserMetadata'
          description: The owner of the resource.
        ParentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The parent ID of the resource before a rename operation.
      description: Describes the metadata of a resource.
    ResourceNameType:
      type: string
      pattern: ^[\u0020-\u202D\u202F-\uFFFF]+$
      minLength: 1
      maxLength: 255
    ResourcePath:
      type: object
      properties:
        Components:
          allOf:
          - $ref: '#/components/schemas/ResourcePathComponentList'
          description: The components of the resource path.
      description: Describes the path information of a resource.
    ResourcePathComponent:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the resource path.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The name of the resource path.
      description: Describes the resource path.
    ResourcePathComponentList:
      type: array
      items:
        $ref: '#/components/schemas/ResourcePathComponent'
    ResourceSortType:
      type: string
      enum:
      - DATE
      - NAME
    ResourceStateType:
      type: string
      enum:
      - ACTIVE
      - RESTORING
      - RECYCLING
      - RECYCLED
    ResourceType:
      type: string
      enum:
      - FOLDER
      - DOCUMENT
    ResponseItem:
      type: object
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResponseItemType'
          description: The type of item being returned.
        WebUrl:
          allOf:
          - $ref: '#/components/schemas/ResponseItemWebUrl'
          description: The webUrl of the item being returned.
        DocumentMetadata:
          allOf:
          - $ref: '#/components/schemas/DocumentMetadata'
          description: The document that matches the query.
        FolderMetadata:
          allOf:
          - $ref: '#/components/schemas/FolderMetadata'
          description: The folder that matches the query.
        CommentMetadata:
          allOf:
          - $ref: '#/components/schemas/CommentMetadata'
          description: The comment that matches the query.
        DocumentVersionMetadata:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionMetadata'
          description: The document version that matches the metadata.
      description: List of Documents, Folders, Comments, and Document Versions matching
        the query.
    ResponseItemType:
      type: string
      enum:
      - DOCUMENT
      - FOLDER
      - COMMENT
      - DOCUMENT_VERSION
    ResponseItemWebUrl:
      type: string
      pattern: ^[\u0020-\uFFFF]+$
      minLength: 1
      maxLength: 512
    ResponseItemsList:
      type: array
      items:
        $ref: '#/components/schemas/ResponseItem'
    RestoreDocumentVersionsRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
      required:
      - DocumentId
    RolePermissionType:
      type: string
      enum:
      - DIRECT
      - INHERITED
    RoleType:
      type: string
      enum:
      - VIEWER
      - CONTRIBUTOR
      - OWNER
      - COOWNER
    SearchAncestorId:
      type: string
      minLength: 1
      maxLength: 128
    SearchAncestorIdList:
      type: array
      items:
        $ref: '#/components/schemas/SearchAncestorId'
    SearchCollectionType:
      type: string
      enum:
      - OWNED
      - SHARED_WITH_ME
    SearchCollectionTypeList:
      type: array
      items:
        $ref: '#/components/schemas/SearchCollectionType'
    SearchContentCategoryTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ContentCategoryType'
    SearchLabel:
      type: string
      minLength: 1
      maxLength: 128
    SearchLabelList:
      type: array
      items:
        $ref: '#/components/schemas/SearchLabel'
    SearchMarkerType:
      type: string
      pattern: ^[\u0000-\u00FF]+$
      minLength: 1
      maxLength: 12288
    SearchPrincipalRoleList:
      type: array
      items:
        $ref: '#/components/schemas/PrincipalRoleType'
    SearchPrincipalType:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: UserIds or GroupIds.
        Roles:
          allOf:
          - $ref: '#/components/schemas/SearchPrincipalRoleList'
          description: The Role of a User or Group.
      required:
      - Id
      description: Filter based on UserIds or GroupIds.
    SearchPrincipalTypeList:
      type: array
      items:
        $ref: '#/components/schemas/SearchPrincipalType'
    SearchQueryScopeType:
      type: string
      enum:
      - NAME
      - CONTENT
    SearchQueryScopeTypeList:
      type: array
      items:
        $ref: '#/components/schemas/SearchQueryScopeType'
    SearchQueryType:
      type: string
      pattern: ^[\u0020-\uFFFF]+$
      minLength: 1
      maxLength: 512
    SearchResourceType:
      type: string
      enum:
      - FOLDER
      - DOCUMENT
      - COMMENT
      - DOCUMENT_VERSION
    SearchResourceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/SearchResourceType'
    SearchResourcesRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        QueryText:
          allOf:
          - $ref: '#/components/schemas/SearchQueryType'
          description: The String to search for. Searches across different text fields
            based on request parameters. Use double quotes around the query string
            for exact phrase matches.
        QueryScopes:
          allOf:
          - $ref: '#/components/schemas/SearchQueryScopeTypeList'
          description: Filter based on the text field type. A Folder has only a name
            and no content. A Comment has only content and no name. A Document or
            Document Version has a name and content
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: Filters based on the resource owner OrgId. This is a mandatory
            parameter when using Admin SigV4 credentials.
        AdditionalResponseFields:
          allOf:
          - $ref: '#/components/schemas/AdditionalResponseFieldsList'
          description: A list of attributes to include in the response. Used to request
            fields that are not normally returned in a standard response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: Filters results based on entity metadata.
        OrderBy:
          allOf:
          - $ref: '#/components/schemas/SearchResultSortList'
          description: Order by results in one or more categories.
        Limit:
          allOf:
          - $ref: '#/components/schemas/SearchResultsLimitType'
          description: Max results count per page.
        Marker:
          allOf:
          - $ref: '#/components/schemas/NextMarkerType'
          description: The marker for the next set of results.
    SearchResourcesResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/ResponseItemsList'
          description: List of Documents, Folders, Comments, and Document Versions
            matching the query.
        Marker:
          allOf:
          - $ref: '#/components/schemas/NextMarkerType'
          description: The marker to use when requesting the next set of results.
            If there are no additional results, the string is empty.
    SearchResultSortList:
      type: array
      items:
        $ref: '#/components/schemas/SearchSortResult'
    SearchResultsLimitType:
      type: integer
      minimum: 1
      maximum: 100
    SearchSortResult:
      type: object
      properties:
        Field:
          allOf:
          - $ref: '#/components/schemas/OrderByFieldType'
          description: Sort search results based on this field name.
        Order:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Sort direction.
      description: The result of the sort operation.
    ServiceUnavailableException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: One or more of the dependencies is unavailable.
    SharePrincipal:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the recipient.
        Type:
          allOf:
          - $ref: '#/components/schemas/PrincipalType'
          description: The type of the recipient.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleType'
          description: The role of the recipient.
      required:
      - Id
      - Type
      - Role
      description: Describes the recipient type and ID, if available.
    SharePrincipalList:
      type: array
      items:
        $ref: '#/components/schemas/SharePrincipal'
    ShareResult:
      type: object
      properties:
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the principal.
        InviteePrincipalId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the invited user.
        Role:
          allOf:
          - $ref: '#/components/schemas/RoleType'
          description: The role.
        Status:
          allOf:
          - $ref: '#/components/schemas/ShareStatusType'
          description: The status.
        ShareId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the resource that was shared.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: The status message.
      description: Describes the share results of a resource.
    ShareResultsList:
      type: array
      items:
        $ref: '#/components/schemas/ShareResult'
    ShareStatusType:
      type: string
      enum:
      - SUCCESS
      - FAILURE
    SharedLabel:
      type: string
      pattern: ^[a-zA-Z0-9._+-/=][a-zA-Z0-9 ._+-/=]*$
      minLength: 1
      maxLength: 32
    SharedLabels:
      type: array
      items:
        $ref: '#/components/schemas/SharedLabel'
    SignedHeaderMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/HeaderValueType'
    SizeType:
      type: integer
      format: int64
    SortOrder:
      type: string
      enum:
      - ASC
      - DESC
    StorageLimitExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The storage limit has been exceeded.
    StorageLimitWillExceedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The storage limit will be exceeded.
    StorageRuleType:
      type: object
      properties:
        StorageAllocatedInBytes:
          allOf:
          - $ref: '#/components/schemas/PositiveSizeType'
          description: The amount of storage allocated, in bytes.
        StorageType:
          allOf:
          - $ref: '#/components/schemas/StorageType'
          description: The type of storage.
      description: Describes the storage for a user.
    StorageType:
      type: string
      enum:
      - UNLIMITED
      - QUOTA
    Subscription:
      type: object
      properties:
        SubscriptionId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the subscription.
        EndPoint:
          allOf:
          - $ref: '#/components/schemas/SubscriptionEndPointType'
          description: The endpoint of the subscription.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/SubscriptionProtocolType'
          description: The protocol of the subscription.
      description: Describes a subscription.
    SubscriptionEndPointType:
      type: string
      minLength: 1
      maxLength: 256
    SubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/Subscription'
    SubscriptionProtocolType:
      type: string
      enum:
      - HTTPS
      - SQS
    SubscriptionType:
      type: string
      enum:
      - ALL
    TextLocaleTypeList:
      type: array
      items:
        $ref: '#/components/schemas/LanguageCodeType'
    TimeZoneIdType:
      type: string
      minLength: 1
      maxLength: 256
    TimestampType:
      type: string
      format: date-time
    TooManyLabelsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The limit has been reached on the number of labels for the specified
        resource.
    TooManySubscriptionsException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: You've reached the limit on the number of subscriptions for the
        WorkDocs instance.
    UnauthorizedOperationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
        Code:
          $ref: '#/components/schemas/ExceptionCodeType'
      description: The operation is not permitted.
    UnauthorizedResourceAccessException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/ErrorMessageType'
      description: The caller does not have access to perform the action on the resource.
    UpdateDocumentRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The name of the document.
        ParentFolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the parent folder.
        ResourceState:
          allOf:
          - $ref: '#/components/schemas/ResourceStateType'
          description: The resource state of the document. Only ACTIVE and RECYCLED
            are supported.
      required:
      - DocumentId
    UpdateDocumentVersionRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        DocumentId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the document.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionIdType'
          description: The version ID of the document.
        VersionStatus:
          allOf:
          - $ref: '#/components/schemas/DocumentVersionStatus'
          description: The status of the version.
      required:
      - DocumentId
      - VersionId
    UpdateFolderRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        FolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the folder.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceNameType'
          description: The name of the folder.
        ParentFolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the parent folder.
        ResourceState:
          allOf:
          - $ref: '#/components/schemas/ResourceStateType'
          description: The resource state of the folder. Only ACTIVE and RECYCLED
            are accepted values from the API.
      required:
      - FolderId
    UpdateUserRequest:
      type: object
      properties:
        AuthenticationToken:
          allOf:
          - $ref: '#/components/schemas/AuthenticationHeaderType'
          description: Amazon WorkDocs authentication token. Not required when using
            Amazon Web Services administrator credentials to access the API.
        UserId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user.
        GivenName:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValueType'
          description: The given name of the user.
        Surname:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValueType'
          description: The surname of the user.
        Type:
          allOf:
          - $ref: '#/components/schemas/UserType'
          description: The type of the user.
        StorageRule:
          allOf:
          - $ref: '#/components/schemas/StorageRuleType'
          description: The amount of storage for the user.
        TimeZoneId:
          allOf:
          - $ref: '#/components/schemas/TimeZoneIdType'
          description: The time zone ID of the user.
        Locale:
          allOf:
          - $ref: '#/components/schemas/LocaleType'
          description: The locale of the user.
        GrantPoweruserPrivileges:
          allOf:
          - $ref: '#/components/schemas/BooleanEnumType'
          description: Boolean value to determine whether the user is granted Power
            user privileges.
      required:
      - UserId
    UpdateUserResponse:
      type: object
      properties:
        User:
          allOf:
          - $ref: '#/components/schemas/User'
          description: The user information.
    UploadMetadata:
      type: object
      properties:
        UploadUrl:
          allOf:
          - $ref: '#/components/schemas/UrlType'
          description: The URL of the upload.
        SignedHeaders:
          allOf:
          - $ref: '#/components/schemas/SignedHeaderMap'
          description: The signed headers.
      description: Describes the upload.
    UrlType:
      type: string
      minLength: 1
      maxLength: 1024
    User:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user.
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          description: The login name of the user.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressType'
          description: The email address of the user.
        GivenName:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValueType'
          description: The given name of the user.
        Surname:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValueType'
          description: The surname of the user.
        OrganizationId:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the organization.
        RootFolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the root folder.
        RecycleBinFolderId:
          allOf:
          - $ref: '#/components/schemas/ResourceIdType'
          description: The ID of the recycle bin folder.
        Status:
          allOf:
          - $ref: '#/components/schemas/UserStatusType'
          description: The status of the user.
        Type:
          allOf:
          - $ref: '#/components/schemas/UserType'
          description: The type of user.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The time when the user was created.
        ModifiedTimestamp:
          allOf:
          - $ref: '#/components/schemas/TimestampType'
          description: The time when the user was modified.
        TimeZoneId:
          allOf:
          - $ref: '#/components/schemas/TimeZoneIdType'
          description: The time zone ID of the user.
        Locale:
          allOf:
          - $ref: '#/components/schemas/LocaleType'
          description: The locale of the user.
        Storage:
          allOf:
          - $ref: '#/components/schemas/UserStorageMetadata'
          description: The storage for the user.
      description: Describes a user.
    UserActivities:
      type: array
      items:
        $ref: '#/components/schemas/Activity'
    UserAttributeValueType:
      type: string
      minLength: 1
      maxLength: 64
    UserFilterType:
      type: string
      enum:
      - ALL
      - ACTIVE_PENDING
    UserIdsType:
      type: string
      pattern: ^[&\w+-.@, ]+$
      minLength: 1
      maxLength: 2000
    UserMetadata:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IdType'
          description: The ID of the user.
        Username:
          allOf:
          - $ref: '#/components/schemas/UsernameType'
          description: The name of the user.
        GivenName:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValueType'
          description: The given name of the user before a rename operation.
        Surname:
          allOf:
          - $ref: '#/components/schemas/UserAttributeValueType'
          description: The surname of the user.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddressType'
          description: The email address of the user.
      description: Describes the metadata of the user.
    UserMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/UserMetadata'
    UserSortType:
      type: string
      enum:
      - USER_NAME
      - FULL_NAME
      - STORAGE_LIMIT
      - USER_STATUS
      - STORAGE_USED
    UserStatusType:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - PENDING
    UserStorageMetadata:
      type: object
      properties:
        StorageUtilizedInBytes:
          allOf:
          - $ref: '#/components/schemas/SizeType'
          description: The amount of storage used, in bytes.
        StorageRule:
          allOf:
          - $ref: '#/components/schemas/StorageRuleType'
          description: The storage for a user.
      description: Describes the storage for a user.
    UserType:
      type: string
      enum:
      - USER
      - ADMIN
      - POWERUSER
      - MINIMALUSER
      - WORKSPACESUSER
    UsernameType:
      type: string
      pattern: ^[\w\-+.]+(@[a-zA-Z0-9.\-]+\.[a-zA-Z]+)?$
      minLength: 1
      maxLength: 256
