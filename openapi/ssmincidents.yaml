openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: ssm_incidents
  x-aws-serviceName: ssmincidents
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS Systems Manager Incident Manager
  description: |-
    Systems Manager Incident Manager is an incident management console designed to help users mitigate and recover from incidents affecting their Amazon Web Services-hosted applications. An incident is any unplanned interruption or reduction in quality of services.

    Incident Manager increases incident resolution by notifying responders of impact, highlighting relevant troubleshooting data, and providing collaboration tools to get services back up and running. To achieve the primary goal of reducing the time-to-resolution of critical incidents, Incident Manager automates response plans and enables responder team escalation.
servers:
- description: The AWS Systems Manager Incident Manager regional endpoint
  url: https://ssm-incidents.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /batchGetIncidentFindings:
    post:
      operationId: BatchGetIncidentFindings
      description: |-
        Retrieves details about all specified findings for an incident, including descriptive details about each finding. A finding represents a recent application environment change made by an CodeDeploy deployment or an CloudFormation stack creation or update that can be investigated as a potential cause of the incident.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incidentRecordArn:
                  $ref: '#/components/schemas/Arn'
                findingIds:
                  $ref: '#/components/schemas/FindingIdList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /createReplicationSet:
    post:
      operationId: CreateReplicationSet
      description: |-
        A replication set replicates and encrypts your data to the provided Regions with the provided KMS key.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                regions:
                  $ref: '#/components/schemas/RegionMapInput'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '201': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /createResponsePlan:
    post:
      operationId: CreateResponsePlan
      description: |-
        Creates a response plan that automates the initial response to incidents. A response plan engages contacts, starts chat channel collaboration, and initiates runbooks at the beginning of an incident.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                name:
                  $ref: '#/components/schemas/ResponsePlanName'
                displayName:
                  $ref: '#/components/schemas/ResponsePlanDisplayName'
                incidentTemplate:
                  $ref: '#/components/schemas/IncidentTemplate'
                chatChannel:
                  $ref: '#/components/schemas/ChatChannel'
                engagements:
                  $ref: '#/components/schemas/EngagementSet'
                actions:
                  $ref: '#/components/schemas/ActionsList'
                tags:
                  $ref: '#/components/schemas/TagMap'
                integrations:
                  $ref: '#/components/schemas/Integrations'
      responses:
        '201': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /createTimelineEvent:
    post:
      operationId: CreateTimelineEvent
      description: |-
        Creates a custom timeline event on the incident details page of an incident record. Incident Manager automatically creates timeline events that mark key moments during an incident. You can create custom timeline events to mark important events that Incident Manager can detect automatically.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                incidentRecordArn:
                  $ref: '#/components/schemas/Arn'
                eventTime:
                  $ref: '#/components/schemas/Timestamp'
                eventType:
                  $ref: '#/components/schemas/TimelineEventType'
                eventData:
                  $ref: '#/components/schemas/EventData'
                eventReferences:
                  $ref: '#/components/schemas/EventReferenceList'
      responses:
        '201': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /deleteIncidentRecord:
    post:
      operationId: DeleteIncidentRecord
      description: |-
        Delete an incident record from Incident Manager.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /deleteReplicationSet:
    post:
      operationId: DeleteReplicationSet
      description: |-
        Deletes all Regions in your replication set. Deleting the replication set deletes all Incident Manager data.
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /deleteResourcePolicy:
    post:
      operationId: DeleteResourcePolicy
      description: |-
        Deletes the resource policy that Resource Access Manager uses to share your Incident Manager resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceArn:
                  $ref: '#/components/schemas/Arn'
                policyId:
                  $ref: '#/components/schemas/PolicyId'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /deleteResponsePlan:
    post:
      operationId: DeleteResponsePlan
      description: |-
        Deletes the specified response plan. Deleting a response plan stops all linked CloudWatch alarms and EventBridge events from creating an incident with this response plan.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /deleteTimelineEvent:
    post:
      operationId: DeleteTimelineEvent
      description: |-
        Deletes a timeline event from an incident.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incidentRecordArn:
                  $ref: '#/components/schemas/Arn'
                eventId:
                  $ref: '#/components/schemas/UUID'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getIncidentRecord:
    get:
      operationId: GetIncidentRecord
      description: |-
        Returns the details for the specified incident record.
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getReplicationSet:
    get:
      operationId: GetReplicationSet
      description: |-
        Retrieve your Incident Manager replication set.
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getResourcePolicies:
    post:
      operationId: GetResourcePolicies
      description: |-
        Retrieves the resource policies attached to the specified response plan.
      parameters:
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getResponsePlan:
    get:
      operationId: GetResponsePlan
      description: |-
        Retrieves the details of the specified response plan.
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /getTimelineEvent:
    get:
      operationId: GetTimelineEvent
      description: |-
        Retrieves a timeline event based on its ID and incident record.
      parameters:
      - name: incidentRecordArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: eventId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/UUID'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listIncidentFindings:
    post:
      operationId: ListIncidentFindings
      description: |-
        Retrieves a list of the IDs of findings, plus their last modified times, that have been identified for a specified incident. A finding represents a recent application environment change made by an CloudFormation stack creation or update or an CodeDeploy deployment that can be investigated as a potential cause of the incident.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incidentRecordArn:
                  $ref: '#/components/schemas/Arn'
                maxResults:
                  $ref: '#/components/schemas/Integer'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listIncidentRecords:
    post:
      operationId: ListIncidentRecords
      description: |-
        Lists all incident records in your account. Use this command to retrieve the Amazon Resource Name (ARN) of the incident record you want to update.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/FilterList'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listRelatedItems:
    post:
      operationId: ListRelatedItems
      description: |-
        List all related items for an incident record.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incidentRecordArn:
                  $ref: '#/components/schemas/Arn'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listReplicationSets:
    post:
      operationId: ListReplicationSets
      description: |-
        Lists details about the replication set configured in your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listResponsePlans:
    post:
      operationId: ListResponsePlans
      description: |-
        Lists all response plans in your account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags that are attached to the specified response plan or incident.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Adds a tag to a response plan.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            Request would cause a service quota to be exceeded.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes a tag from a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /listTimelineEvents:
    post:
      operationId: ListTimelineEvents
      description: |-
        Lists timeline events for the specified incident record.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                incidentRecordArn:
                  $ref: '#/components/schemas/Arn'
                filters:
                  $ref: '#/components/schemas/FilterList'
                sortBy:
                  $ref: '#/components/schemas/TimelineEventSort'
                sortOrder:
                  $ref: '#/components/schemas/SortOrder'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                nextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /putResourcePolicy:
    post:
      operationId: PutResourcePolicy
      description: |-
        Adds a resource policy to the specified response plan. The resource policy is used to share the response plan using Resource Access Manager (RAM). For more information about cross-account sharing, see [Cross-Region and cross-account incident management](https://docs.aws.amazon.com/incident-manager/latest/userguide/incident-manager-cross-account-cross-region.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceArn:
                  $ref: '#/components/schemas/Arn'
                policy:
                  $ref: '#/components/schemas/Policy'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /startIncident:
    post:
      operationId: StartIncident
      description: |-
        Used to start an incident from CloudWatch alarms, EventBridge events, or manually.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                responsePlanArn:
                  $ref: '#/components/schemas/Arn'
                title:
                  $ref: '#/components/schemas/IncidentTitle'
                impact:
                  $ref: '#/components/schemas/Impact'
                triggerDetails:
                  $ref: '#/components/schemas/TriggerDetails'
                relatedItems:
                  $ref: '#/components/schemas/RelatedItemList'
      responses:
        '200': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /updateDeletionProtection:
    post:
      operationId: UpdateDeletionProtection
      description: |-
        Update deletion protection to either allow or deny deletion of the final Region in a replication set.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arn:
                  $ref: '#/components/schemas/Arn'
                deletionProtected:
                  $ref: '#/components/schemas/Boolean'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /updateIncidentRecord:
    post:
      operationId: UpdateIncidentRecord
      description: |-
        Update the details of an incident record. You can use this operation to update an incident record from the defined chat channel. For more information about using actions in chat channels, see [Interacting through chat](https://docs.aws.amazon.com/incident-manager/latest/userguide/chat.html#chat-interact).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                arn:
                  $ref: '#/components/schemas/Arn'
                title:
                  $ref: '#/components/schemas/IncidentTitle'
                summary:
                  $ref: '#/components/schemas/IncidentSummary'
                impact:
                  $ref: '#/components/schemas/Impact'
                status:
                  $ref: '#/components/schemas/IncidentRecordStatus'
                chatChannel:
                  $ref: '#/components/schemas/ChatChannel'
                notificationTargets:
                  $ref: '#/components/schemas/NotificationTargetSet'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /updateRelatedItems:
    post:
      operationId: UpdateRelatedItems
      description: |-
        Add or remove related items from the related items tab of an incident record.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                incidentRecordArn:
                  $ref: '#/components/schemas/Arn'
                relatedItemsUpdate:
                  $ref: '#/components/schemas/RelatedItemsUpdate'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /updateReplicationSet:
    post:
      operationId: UpdateReplicationSet
      description: |-
        Add or delete Regions from your replication set.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                arn:
                  $ref: '#/components/schemas/Arn'
                actions:
                  $ref: '#/components/schemas/UpdateActionList'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /updateResponsePlan:
    post:
      operationId: UpdateResponsePlan
      description: |-
        Updates the specified response plan.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                arn:
                  $ref: '#/components/schemas/Arn'
                displayName:
                  $ref: '#/components/schemas/ResponsePlanDisplayName'
                incidentTemplateTitle:
                  $ref: '#/components/schemas/IncidentTitle'
                incidentTemplateImpact:
                  $ref: '#/components/schemas/Impact'
                incidentTemplateSummary:
                  $ref: '#/components/schemas/IncidentSummary'
                incidentTemplateDedupeString:
                  $ref: '#/components/schemas/DedupeString'
                incidentTemplateNotificationTargets:
                  $ref: '#/components/schemas/NotificationTargetSet'
                chatChannel:
                  $ref: '#/components/schemas/ChatChannel'
                engagements:
                  $ref: '#/components/schemas/EngagementSet'
                actions:
                  $ref: '#/components/schemas/ActionsList'
                incidentTemplateTags:
                  $ref: '#/components/schemas/TagMapUpdate'
                integrations:
                  $ref: '#/components/schemas/Integrations'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /updateTimelineEvent:
    post:
      operationId: UpdateTimelineEvent
      description: |-
        Updates a timeline event. You can update events of type `Custom Event`.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                incidentRecordArn:
                  $ref: '#/components/schemas/Arn'
                eventId:
                  $ref: '#/components/schemas/UUID'
                eventTime:
                  $ref: '#/components/schemas/Timestamp'
                eventType:
                  $ref: '#/components/schemas/TimelineEventType'
                eventData:
                  $ref: '#/components/schemas/EventData'
                eventReferences:
                  $ref: '#/components/schemas/EventReferenceList'
      responses:
        '204': {}
        '403':
          description: |-
            You don't have sufficient access to perform this operation.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource causes an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            Request references a resource which doesn't exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: You don't have sufficient access to perform this operation.
    Action:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SsmAutomation'
        description: |-
          The Systems Manager automation document to start as the runbook at the beginning of the incident.
      description: |-
        The action that starts at the beginning of an incident. The response plan defines the action.
    ActionsList:
      type: array
      items:
        $ref: '#/components/schemas/Action'
    AddRegionAction:
      type: object
      properties:
        regionName:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The Amazon Web Services Region name to add to the replication
            set.
        sseKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/SseKmsKey'
          description: The KMS key ID to use to encrypt your replication set.
      required:
      - regionName
      description: Defines the Amazon Web Services Region and KMS key to add to the
        replication set.
    Arn:
      type: string
      pattern: ^arn:aws(-cn|-us-gov)?:[a-z0-9-]*:[a-z0-9-]*:([0-9]{12})?:.+$
      maxLength: 1000
    AttributeValueList:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/StringList'
        description: |-
          The list of string values that the filter matches.
      - allOf:
        - $ref: '#/components/schemas/IntegerList'
        description: |-
          The list of integer values that the filter matches.
      description: |-
        Use the AttributeValueList to filter by string or integer values.
    AutomationExecution:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Arn'
        description: |-
          The Amazon Resource Name (ARN) of the automation process.
      description: |-
        The Systems Manager automation document process to start as the runbook at the beginning of the incident.
    AutomationExecutionSet:
      type: array
      items:
        $ref: '#/components/schemas/AutomationExecution'
    BatchGetIncidentFindingsError:
      type: object
      properties:
        findingId:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID of a specified finding for which an error was returned
            for a `BatchGetIncidentFindings` operation.
        code:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code associated with an error that was returned for a `BatchGetIncidentFindings`
            operation.
        message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description for an error that was returned for a `BatchGetIncidentFindings`
            operation.
      required:
      - findingId
      - code
      - message
      description: Details about an error returned for a BatchGetIncidentFindings
        operation.
    BatchGetIncidentFindingsErrorList:
      type: array
      items:
        $ref: '#/components/schemas/BatchGetIncidentFindingsError'
    BatchGetIncidentFindingsInput:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident for which you
            want to view finding details.
        findingIds:
          allOf:
          - $ref: '#/components/schemas/FindingIdList'
          description: A list of IDs of findings for which you want to view details.
      required:
      - incidentRecordArn
      - findingIds
    BatchGetIncidentFindingsOutput:
      type: object
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/FindingList'
          description: Information about the requested findings.
        errors:
          allOf:
          - $ref: '#/components/schemas/BatchGetIncidentFindingsErrorList'
          description: A list of errors encountered during the operation.
      required:
      - findings
      - errors
    ChatChannel:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EmptyChatChannel'
        description: |-
          Used to remove the chat channel from an incident record or response plan.
      - allOf:
        - $ref: '#/components/schemas/ChatbotSnsConfigurationSet'
        description: |-
          The Amazon SNS targets that Chatbot uses to notify the chat channel of updates to an incident. You can also make updates to the incident through the chat channel by using the Amazon SNS topics.
      description: |-
        The Chatbot chat channel used for collaboration during an incident.
    ChatbotSnsConfigurationSet:
      type: array
      items:
        $ref: '#/components/schemas/SnsArn'
    ClientToken:
      type: string
      maxLength: 128
    CloudFormationStackUpdate:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the CloudFormation stack creation or
            update began.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the CloudFormation stack creation or
            update ended. Not reported for deployments that are still in progress.
        stackArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the CloudFormation stack
            involved in the update.
      required:
      - startTime
      - stackArn
      description: Information about an CloudFormation stack creation or update that
        occurred around the time of an incident and could be a potential cause of
        the incident.
    CodeDeployDeployment:
      type: object
      properties:
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the CodeDeploy deployment began.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the CodeDeploy deployment ended. Not
            reported for deployments that are still in progress.
        deploymentGroupArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the CodeDeploy deployment
            group associated with the deployment.
        deploymentId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the CodeDeploy deployment.
      required:
      - startTime
      - deploymentGroupArn
      - deploymentId
      description: Information about a CodeDeploy deployment that occurred around
        the time of an incident and could be a possible cause of the incident.
    Condition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Timestamp'
        description: |-
          Before the specified timestamp
      - allOf:
        - $ref: '#/components/schemas/Timestamp'
        description: |-
          After the specified timestamp.
      - allOf:
        - $ref: '#/components/schemas/AttributeValueList'
        description: |-
          The value is equal to the provided string or integer.
      description: |-
        A conditional statement with which to compare a value, after a timestamp, before a timestamp, or equal to a string or integer. If multiple conditions are specified, the conditionals become an `AND`ed statement. If multiple values are specified for a conditional, the values are `OR`d.
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier of the requested resource
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type
        retryAfter:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: If present in the output, the operation can be retried after
            this time
      required:
      - message
      description: Updating or deleting a resource causes an inconsistent state.
    CreateReplicationSetInput:
      type: object
      properties:
        regions:
          allOf:
          - $ref: '#/components/schemas/RegionMapInput'
          description: The Regions that Incident Manager replicates your data to.
            You can have up to three Regions in your replication set.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token that ensures that the operation is called only once
            with the specified details.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags to add to the replication set.
      required:
      - regions
    CreateReplicationSetOutput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set.
      required:
      - arn
    CreateResponsePlanInput:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the operation is called only once with
            the specified details.
        name:
          allOf:
          - $ref: '#/components/schemas/ResponsePlanName'
          description: The short format name of the response plan. Can't include spaces.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResponsePlanDisplayName'
          description: The long format of the response plan name. This field can contain
            spaces.
        incidentTemplate:
          allOf:
          - $ref: '#/components/schemas/IncidentTemplate'
          description: Details used to create an incident when using this response
            plan.
        chatChannel:
          allOf:
          - $ref: '#/components/schemas/ChatChannel'
          description: The Chatbot chat channel used for collaboration during an incident.
        engagements:
          allOf:
          - $ref: '#/components/schemas/EngagementSet'
          description: The Amazon Resource Name (ARN) for the contacts and escalation
            plans that the response plan engages during an incident.
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          description: The actions that the response plan starts at the beginning
            of an incident.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags that you are adding to the response plan.
        integrations:
          allOf:
          - $ref: '#/components/schemas/Integrations'
          description: Information about third-party services integrated into the
            response plan.
      required:
      - name
      - incidentTemplate
    CreateResponsePlanOutput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
      required:
      - arn
    CreateTimelineEventInput:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token that ensures that a client calls the action only once
            with the specified details.
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record that
            the action adds the incident to.
        eventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the event occurred.
        eventType:
          allOf:
          - $ref: '#/components/schemas/TimelineEventType'
          description: 'The type of event. You can create timeline events of type
            `Custom Event` and `Note`.


            To make a Note-type event appear on the _Incident notes_ panel in the
            console, specify `eventType` as `Note`and enter the Amazon Resource Name
            (ARN) of the incident as the value for `eventReference`.'
        eventData:
          allOf:
          - $ref: '#/components/schemas/EventData'
          description: A short description of the event.
        eventReferences:
          allOf:
          - $ref: '#/components/schemas/EventReferenceList'
          description: Adds one or more references to the `TimelineEvent`. A reference
            is an Amazon Web Services resource involved or associated with the incident.
            To specify a reference, enter its Amazon Resource Name (ARN). You can
            also specify a related item associated with a resource. For example, to
            specify an Amazon DynamoDB (DynamoDB) table as a resource, use the table's
            ARN. You can also specify an Amazon CloudWatch metric associated with
            the DynamoDB table as a related item.
      required:
      - incidentRecordArn
      - eventTime
      - eventType
      - eventData
    CreateTimelineEventOutput:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the incident record that you added the event to.
        eventId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the event for easy reference later.
      required:
      - incidentRecordArn
      - eventId
    DedupeString:
      type: string
      maxLength: 1000
    DeleteIncidentRecordInput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record you are
            deleting.
      required:
      - arn
    DeleteIncidentRecordOutput:
      type: object
      properties: {}
    DeleteRegionAction:
      type: object
      properties:
        regionName:
          allOf:
          - $ref: '#/components/schemas/RegionName'
          description: The name of the Amazon Web Services Region you're deleting
            from the replication set.
      required:
      - regionName
      description: Defines the information about the Amazon Web Services Region you're
        deleting from your replication set.
    DeleteReplicationSetInput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set you're
            deleting.
      required:
      - arn
    DeleteReplicationSetOutput:
      type: object
      properties: {}
    DeleteResourcePolicyInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource you're deleting
            the policy from.
        policyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The ID of the resource policy you're deleting.
      required:
      - resourceArn
      - policyId
    DeleteResourcePolicyOutput:
      type: object
      properties: {}
    DeleteResponsePlanInput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
      required:
      - arn
    DeleteResponsePlanOutput:
      type: object
      properties: {}
    DeleteTimelineEventInput:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that includes
            the timeline event.
        eventId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the event to update. You can use `ListTimelineEvents`
            to find an event's ID.
      required:
      - incidentRecordArn
      - eventId
    DeleteTimelineEventOutput:
      type: object
      properties: {}
    DynamicSsmParameterValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/VariableType'
        description: |-
          Variable dynamic parameters. A parameter value is determined when an incident is created.
      description: |-
        The dynamic SSM parameter value.
    DynamicSsmParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/DynamicSsmParameterValue'
    EmptyChatChannel:
      type: object
      properties: {}
      description: Used to remove the chat channel from an incident record or response
        plan.
    EngagementSet:
      type: array
      items:
        $ref: '#/components/schemas/SsmContactsArn'
    EventData:
      type: string
      maxLength: 12000
    EventReference:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Arn'
        description: |-
          The Amazon Resource Name (ARN) of an Amazon Web Services resource referenced in a `TimelineEvent`.
      - allOf:
        - $ref: '#/components/schemas/GeneratedId'
        description: |-
          The ID of a `RelatedItem` referenced in a `TimelineEvent`.
      description: |-
        An item referenced in a `TimelineEvent` that is involved in or somehow associated with an incident. You can specify an Amazon Resource Name (ARN) for an Amazon Web Services resource or a `RelatedItem` ID.
    EventReferenceList:
      type: array
      items:
        $ref: '#/components/schemas/EventReference'
    EventSummary:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that the event
            happened during.
        eventId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The timeline event ID.
        eventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the event occurred.
        eventUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the timeline event was last updated.
        eventType:
          allOf:
          - $ref: '#/components/schemas/TimelineEventType'
          description: The type of event. The timeline event must be `Custom Event`
            or `Note`.
        eventReferences:
          allOf:
          - $ref: '#/components/schemas/EventReferenceList'
          description: A list of references in a `TimelineEvent`.
      required:
      - incidentRecordArn
      - eventId
      - eventTime
      - eventUpdatedTime
      - eventType
      description: Details about a timeline event during an incident.
    EventSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/EventSummary'
    ExceptionMessage:
      type: string
    Filter:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The key that you're filtering on.
        condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          description: The condition accepts before or after a specified time, equal
            to a string, or equal to an integer.
      required:
      - key
      - condition
      description: Filter the selection by using a condition.
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    Finding:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID assigned to the finding.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when a finding was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the finding was most recently updated
            with additional information.
        details:
          allOf:
          - $ref: '#/components/schemas/FindingDetails'
          description: Details about the finding.
      required:
      - id
      - creationTime
      - lastModifiedTime
      description: Information about a specific CodeDeploy deployment or CloudFormation
        stack creation or update that occurred around the time of a reported incident.
        These activities can be investigated as a potential cause of the incident.
    FindingDetails:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/CodeDeployDeployment'
        description: |-
          Information about the CodeDeploy deployment associated with the finding.
      - allOf:
        - $ref: '#/components/schemas/CloudFormationStackUpdate'
        description: |-
          Information about the CloudFormation stack creation or update associated with the finding.
      description: |-
        Extended textual information about the finding.
    FindingId:
      type: string
      maxLength: 128
    FindingIdList:
      type: array
      items:
        $ref: '#/components/schemas/FindingId'
    FindingList:
      type: array
      items:
        $ref: '#/components/schemas/Finding'
    FindingSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/FindingId'
          description: The ID of the finding.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the finding was last updated.
      required:
      - id
      - lastModifiedTime
      description: Identifying information about the finding.
    FindingSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/FindingSummary'
    GeneratedId:
      type: string
      pattern: ^related-item/(ANALYSIS|INCIDENT|METRIC|PARENT|ATTACHMENT|OTHER|AUTOMATION|INVOLVED_RESOURCE|TASK)/([0-9]|[A-F]){32}$
      maxLength: 200
    GetIncidentRecordInput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record.
      required:
      - arn
    GetIncidentRecordOutput:
      type: object
      properties:
        incidentRecord:
          allOf:
          - $ref: '#/components/schemas/IncidentRecord'
          description: Details the structure of the incident record.
      required:
      - incidentRecord
    GetReplicationSetInput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set you want
            to retrieve.
      required:
      - arn
    GetReplicationSetOutput:
      type: object
      properties:
        replicationSet:
          allOf:
          - $ref: '#/components/schemas/ReplicationSet'
          description: Details of the replication set.
      required:
      - replicationSet
    GetResourcePoliciesInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan with the
            attached resource policy.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of resource policies to display for each
            page of results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token for the next set of items to return. (You
            received this token from a previous call.)
      required:
      - resourceArn
    GetResourcePoliciesOutput:
      type: object
      properties:
        resourcePolicies:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicyList'
          description: Details about the resource policy attached to the response
            plan.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use when requesting the next set of
            items. If there are no additional items to return, the string is null.
      required:
      - resourcePolicies
    GetResponsePlanInput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
      required:
      - arn
    GetResponsePlanOutput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the response plan.
        name:
          allOf:
          - $ref: '#/components/schemas/ResponsePlanName'
          description: The short format name of the response plan. The name can't
            contain spaces.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResponsePlanDisplayName'
          description: The long format name of the response plan. Can contain spaces.
        incidentTemplate:
          allOf:
          - $ref: '#/components/schemas/IncidentTemplate'
          description: Details used to create the incident when using this response
            plan.
        chatChannel:
          allOf:
          - $ref: '#/components/schemas/ChatChannel'
          description: The Chatbot chat channel used for collaboration during an incident.
        engagements:
          allOf:
          - $ref: '#/components/schemas/EngagementSet'
          description: The Amazon Resource Name (ARN) for the contacts and escalation
            plans that the response plan engages during an incident.
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          description: The actions that this response plan takes at the beginning
            of the incident.
        integrations:
          allOf:
          - $ref: '#/components/schemas/Integrations'
          description: Information about third-party services integrated into the
            Incident Manager response plan.
      required:
      - arn
      - name
      - incidentTemplate
    GetTimelineEventInput:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that includes
            the timeline event.
        eventId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the event. You can get an event's ID when you create
            it, or by using `ListTimelineEvents`.
      required:
      - incidentRecordArn
      - eventId
    GetTimelineEventOutput:
      type: object
      properties:
        event:
          allOf:
          - $ref: '#/components/schemas/TimelineEvent'
          description: Details about the timeline event.
      required:
      - event
    Impact:
      type: integer
      minimum: 1
      maximum: 5
    IncidentRecord:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record.
        title:
          allOf:
          - $ref: '#/components/schemas/IncidentTitle'
          description: The title of the incident.
        summary:
          allOf:
          - $ref: '#/components/schemas/IncidentSummary'
          description: The summary of the incident. The summary is a brief synopsis
            of what occurred, what's currently happening, and context of the incident.
        status:
          allOf:
          - $ref: '#/components/schemas/IncidentRecordStatus'
          description: The current status of the incident.
        impact:
          allOf:
          - $ref: '#/components/schemas/Impact'
          description: "The impact of the incident on customers and applications.\n\
            \n**Supported impact codes**\n\n  * `1` \\- Critical\n\n  * `2` \\- High\n\
            \n  * `3` \\- Medium\n\n  * `4` \\- Low\n\n  * `5` \\- No Impact"
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when Incident Manager created the incident
            record.
        resolvedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the incident was resolved. This appears
            as a timeline event.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the incident was most recently modified.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Who modified the incident most recently.
        automationExecutions:
          allOf:
          - $ref: '#/components/schemas/AutomationExecutionSet'
          description: The runbook, or automation document, that's run at the beginning
            of the incident.
        incidentRecordSource:
          allOf:
          - $ref: '#/components/schemas/IncidentRecordSource'
          description: Details about the action that started the incident.
        dedupeString:
          allOf:
          - $ref: '#/components/schemas/DedupeString'
          description: The string Incident Manager uses to prevent duplicate incidents
            from being created by the same incident in the same account.
        chatChannel:
          allOf:
          - $ref: '#/components/schemas/ChatChannel'
          description: The chat channel used for collaboration during an incident.
        notificationTargets:
          allOf:
          - $ref: '#/components/schemas/NotificationTargetSet'
          description: The Amazon SNS targets that are notified when updates are made
            to an incident.
      required:
      - arn
      - title
      - status
      - impact
      - creationTime
      - lastModifiedTime
      - lastModifiedBy
      - incidentRecordSource
      - dedupeString
      description: The record of the incident that's created when an incident occurs.
    IncidentRecordSource:
      type: object
      properties:
        createdBy:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The principal that started the incident.
        invokedBy:
          allOf:
          - $ref: '#/components/schemas/ServicePrincipal'
          description: The service principal that assumed the role specified in `createdBy`.
            If no service principal assumed the role this will be left blank.
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The resource that caused the incident to be created.
        source:
          allOf:
          - $ref: '#/components/schemas/IncidentSource'
          description: The service that started the incident. This can be manually
            created from Incident Manager, automatically created using an Amazon CloudWatch
            alarm, or Amazon EventBridge event.
      required:
      - createdBy
      - source
      description: Details about what created the incident record and when it was
        created.
    IncidentRecordStatus:
      type: string
      enum:
      - OPEN
      - RESOLVED
    IncidentRecordSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident.
        title:
          allOf:
          - $ref: '#/components/schemas/IncidentTitle'
          description: The title of the incident. This value is either provided by
            the response plan or overwritten on creation.
        status:
          allOf:
          - $ref: '#/components/schemas/IncidentRecordStatus'
          description: The current status of the incident.
        impact:
          allOf:
          - $ref: '#/components/schemas/Impact'
          description: Defines the impact to customers and applications.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the incident was created.
        resolvedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the incident was resolved.
        incidentRecordSource:
          allOf:
          - $ref: '#/components/schemas/IncidentRecordSource'
          description: What caused Incident Manager to create the incident.
      required:
      - arn
      - title
      - status
      - impact
      - creationTime
      - incidentRecordSource
      description: Details describing an incident record.
    IncidentRecordSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IncidentRecordSummary'
    IncidentSource:
      type: string
      maxLength: 50
    IncidentSummary:
      type: string
      maxLength: 8000
    IncidentTemplate:
      type: object
      properties:
        title:
          allOf:
          - $ref: '#/components/schemas/IncidentTitle'
          description: The title of the incident.
        impact:
          allOf:
          - $ref: '#/components/schemas/Impact'
          description: "The impact of the incident on your customers and applications.\n\
            \n**Supported impact codes**\n\n  * `1` \\- Critical\n\n  * `2` \\- High\n\
            \n  * `3` \\- Medium\n\n  * `4` \\- Low\n\n  * `5` \\- No Impact"
        summary:
          allOf:
          - $ref: '#/components/schemas/IncidentSummary'
          description: The summary of the incident. The summary is a brief synopsis
            of what occurred, what's currently happening, and context.
        dedupeString:
          allOf:
          - $ref: '#/components/schemas/DedupeString'
          description: 'The string Incident Manager uses to prevent the same root
            cause from creating multiple incidents in the same account.


            A deduplication string is a term or phrase the system uses to check for
            duplicate incidents. If you specify a deduplication string, Incident Manager
            searches for open incidents that contain the same string in the `dedupeString`
            field when it creates the incident. If a duplicate is detected, Incident
            Manager deduplicates the newer incident into the existing incident.


            By default, Incident Manager automatically deduplicates multiple incidents
            created by the same Amazon CloudWatch alarm or Amazon EventBridge event.
            You don''t have to enter your own deduplication string to prevent duplication
            for these resource types.'
        notificationTargets:
          allOf:
          - $ref: '#/components/schemas/NotificationTargetSet'
          description: The Amazon SNS targets that are notified when updates are made
            to an incident.
        incidentTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: Tags to assign to the template. When the `StartIncident` API
            action is called, Incident Manager assigns the tags specified in the template
            to the incident.
      required:
      - title
      - impact
      description: Basic details used in creating a response plan. The response plan
        is then used to create an incident record.
    IncidentTitle:
      type: string
      maxLength: 200
    IntegerList:
      type: array
      items:
        type: integer
    Integration:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PagerDutyConfiguration'
        description: |-
          Information about the PagerDuty service where the response plan creates an incident.
      description: |-
        Information about third-party services integrated into a response plan.
    Integrations:
      type: array
      items:
        $ref: '#/components/schemas/Integration'
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: The request processing has failed because of an unknown error,
        exception or failure.
    ItemIdentifier:
      type: object
      properties:
        value:
          allOf:
          - $ref: '#/components/schemas/ItemValue'
          description: Details about the related item.
        type:
          allOf:
          - $ref: '#/components/schemas/ItemType'
          description: The type of related item.
      required:
      - value
      - type
      description: Details and type of a related item.
    ItemType:
      type: string
      enum:
      - ANALYSIS
      - INCIDENT
      - METRIC
      - PARENT
      - ATTACHMENT
      - OTHER
      - AUTOMATION
      - INVOLVED_RESOURCE
      - TASK
    ItemValue:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Arn'
        description: |-
          The Amazon Resource Name (ARN) of the related item, if the related item is an Amazon resource.
      - allOf:
        - $ref: '#/components/schemas/Url'
        description: |-
          The URL, if the related item is a non-Amazon Web Services resource.
      - allOf:
        - $ref: '#/components/schemas/MetricDefinition'
        description: |-
          The metric definition, if the related item is a metric in Amazon CloudWatch.
      - allOf:
        - $ref: '#/components/schemas/PagerDutyIncidentDetail'
        description: |-
          Details about an incident that is associated with a PagerDuty incident.
      description: |-
        Describes a related item.
    ListIncidentFindingsInput:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident for which you
            want to view associated findings.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of findings to retrieve per call.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token for the next set of items to return. (You
            received this token from a previous call.)
      required:
      - incidentRecordArn
    ListIncidentFindingsOutput:
      type: object
      properties:
        findings:
          allOf:
          - $ref: '#/components/schemas/FindingSummaryList'
          description: A list of findings that represent deployments that might be
            the potential cause of the incident.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use when requesting the next set of
            items. If there are no additional items to return, the string is null.
      required:
      - findings
    ListIncidentRecordsInput:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: "Filters the list of incident records you want to search through.\
            \ You can filter on the following keys:\n\n  * `creationTime`\n\n  * `impact`\n\
            \n  * `status`\n\n  * `createdBy`\n\nNote the following when when you\
            \ use Filters:\n\n  * If you don't specify a Filter, the response includes\
            \ all incident records.\n\n  * If you specify more than one filter in\
            \ a single request, the response returns incident records that match all\
            \ filters.\n\n  * If you specify a filter with more than one value, the\
            \ response returns incident records that match any of the values provided."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results per page.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token for the next set of items to return. (You
            received this token from a previous call.)
    ListIncidentRecordsOutput:
      type: object
      properties:
        incidentRecordSummaries:
          allOf:
          - $ref: '#/components/schemas/IncidentRecordSummaryList'
          description: The details of each listed incident record.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use when requesting the next set of
            items. If there are no additional items to return, the string is null.
      required:
      - incidentRecordSummaries
    ListRelatedItemsInput:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record containing
            the listed related items.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of related items per page.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token for the next set of items to return. (You
            received this token from a previous call.)
      required:
      - incidentRecordArn
    ListRelatedItemsOutput:
      type: object
      properties:
        relatedItems:
          allOf:
          - $ref: '#/components/schemas/RelatedItemList'
          description: Details about each related item.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use when requesting the next set of
            items. If there are no additional items to return, the string is null.
      required:
      - relatedItems
    ListReplicationSetsInput:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results per page.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token for the next set of items to return. (You
            received this token from a previous call.)
    ListReplicationSetsOutput:
      type: object
      properties:
        replicationSetArns:
          allOf:
          - $ref: '#/components/schemas/ReplicationSetArnList'
          description: The Amazon Resource Name (ARN) of the list replication set.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use when requesting the next set of
            items. If there are no additional items to return, the string is null.
      required:
      - replicationSetArns
    ListResponsePlansInput:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of response plans per page.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token for the next set of items to return. (You
            received this token from a previous call.)
    ListResponsePlansOutput:
      type: object
      properties:
        responsePlanSummaries:
          allOf:
          - $ref: '#/components/schemas/ResponsePlanSummaryList'
          description: Details of each response plan.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use when requesting the next set of
            items. If there are no additional items to return, the string is null.
      required:
      - responsePlanSummaries
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the response plan or incident.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags for the response plan or incident.
      required:
      - tags
    ListTimelineEventsInput:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that includes
            the timeline event.
        filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: "Filters the timeline events based on the provided conditional\
            \ values. You can filter timeline events with the following keys:\n\n\
            \  * `eventReference`\n\n  * `eventTime`\n\n  * `eventType`\n\nNote the\
            \ following when deciding how to use Filters:\n\n  * If you don't specify\
            \ a Filter, the response includes all timeline events.\n\n  * If you specify\
            \ more than one filter in a single request, the response returns timeline\
            \ events that match all filters.\n\n  * If you specify a filter with more\
            \ than one value, the response returns timeline events that match any\
            \ of the values provided."
        sortBy:
          allOf:
          - $ref: '#/components/schemas/TimelineEventSort'
          description: Sort timeline events by the specified key value pair.
        sortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: Sorts the order of timeline events by the value specified in
            the `sortBy` field.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results per page.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token for the next set of items to return. (You
            received this token from a previous call.)
      required:
      - incidentRecordArn
    ListTimelineEventsOutput:
      type: object
      properties:
        eventSummaries:
          allOf:
          - $ref: '#/components/schemas/EventSummaryList'
          description: Details about each event that occurred during the incident.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token to use when requesting the next set of
            items. If there are no additional items to return, the string is null.
      required:
      - eventSummaries
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    MetricDefinition:
      type: string
      maxLength: 4000
    NextToken:
      type: string
      maxLength: 2000
    NotificationTargetItem:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Arn'
        description: |-
          The Amazon Resource Name (ARN) of the SNS topic.
      description: |-
        The SNS targets that are notified when updates are made to an incident.
    NotificationTargetSet:
      type: array
      items:
        $ref: '#/components/schemas/NotificationTargetItem'
    PagerDutyConfiguration:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the PagerDuty configuration.
        secretId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services Secrets Manager secret that
            stores your PagerDuty key, either a General Access REST API Key or User
            Token REST API Key, and other user credentials.
        pagerDutyIncidentConfiguration:
          allOf:
          - $ref: '#/components/schemas/PagerDutyIncidentConfiguration'
          description: Details about the PagerDuty service associated with the configuration.
      required:
      - name
      - secretId
      - pagerDutyIncidentConfiguration
      description: Details about the PagerDuty configuration for a response plan.
    PagerDutyIncidentConfiguration:
      type: object
      properties:
        serviceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the PagerDuty service that the response plan associates
            with an incident when it launches.
      required:
      - serviceId
      description: Details about the PagerDuty service where the response plan creates
        an incident.
    PagerDutyIncidentDetail:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the incident associated with the PagerDuty service
            for the response plan.
        autoResolve:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Indicates whether to resolve the PagerDuty incident when you
            resolve the associated Incident Manager incident.
        secretId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon Web Services Secrets Manager secret that
            stores your PagerDuty key, either a General Access REST API Key or User
            Token REST API Key, and other user credentials.
      required:
      - id
      description: Details about the PagerDuty incident associated with an incident
        created by an Incident Manager response plan.
    Policy:
      type: string
      maxLength: 4000
    PolicyId:
      type: string
      maxLength: 256
    PutResourcePolicyInput:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan to add
            the resource policy to.
        policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: Details of the resource policy.
      required:
      - resourceArn
      - policy
    PutResourcePolicyOutput:
      type: object
      properties:
        policyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The ID of the resource policy.
      required:
      - policyId
    RawData:
      type: string
      maxLength: 10000
    RegionInfo:
      type: object
      properties:
        sseKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/SseKmsKey'
          description: The ID of the KMS key used to encrypt the data in this Amazon
            Web Services Region.
        status:
          allOf:
          - $ref: '#/components/schemas/RegionStatus'
          description: The status of the Amazon Web Services Region in the replication
            set.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Information displayed about the status of the Amazon Web Services
            Region.
        statusUpdateDateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when Incident Manager updated the status
            of the Amazon Web Services Region.
      required:
      - status
      - statusUpdateDateTime
      description: Information about a Amazon Web Services Region in your replication
        set.
    RegionInfoMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RegionInfo'
    RegionMapInput:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/RegionMapInputValue'
    RegionMapInputValue:
      type: object
      properties:
        sseKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/SseKmsKey'
          description: The KMS key used to encrypt the data in your replication set.
      description: The mapping between a Amazon Web Services Region and the key that's
        used to encrypt the data.
    RegionName:
      type: string
      maxLength: 20
    RegionStatus:
      type: string
      enum:
      - ACTIVE
      - CREATING
      - DELETING
      - FAILED
    RelatedItem:
      type: object
      properties:
        identifier:
          allOf:
          - $ref: '#/components/schemas/ItemIdentifier'
          description: Details about the related item.
        title:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The title of the related item.
        generatedId:
          allOf:
          - $ref: '#/components/schemas/GeneratedId'
          description: 'A unique ID for a `RelatedItem`.


            Don''t specify this parameter when you add a `RelatedItem` by using the
            UpdateRelatedItems API action.'
      required:
      - identifier
      description: Resources that responders use to triage and mitigate the incident.
    RelatedItemList:
      type: array
      items:
        $ref: '#/components/schemas/RelatedItem'
    RelatedItemsUpdate:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RelatedItem'
        description: |-
          Details about the related item you're adding.
      - allOf:
        - $ref: '#/components/schemas/ItemIdentifier'
        description: |-
          Details about the related item you're deleting.
      description: |-
        Details about the related item you're adding.
    ReplicationSet:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set.
        regionMap:
          allOf:
          - $ref: '#/components/schemas/RegionInfoMap'
          description: The map between each Amazon Web Services Region in your replication
            set and the KMS key that's used to encrypt the data in that Region.
        status:
          allOf:
          - $ref: '#/components/schemas/ReplicationSetStatus'
          description: The status of the replication set. If the replication set is
            still pending, you can't use Incident Manager functionality.
        deletionProtected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Determines if the replication set deletion protection is enabled
            or not. If deletion protection is enabled, you can't delete the last Amazon
            Web Services Region in the replication set.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the replication set was created.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Details about who created the replication set.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: When the replication set was last updated.
        lastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Who last modified the replication set.
      required:
      - regionMap
      - status
      - deletionProtected
      - createdTime
      - createdBy
      - lastModifiedTime
      - lastModifiedBy
      description: The set of Amazon Web Services Region that your Incident Manager
        data will be replicated to and the KMS key used to encrypt the data.
    ReplicationSetArnList:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    ReplicationSetStatus:
      type: string
      enum:
      - ACTIVE
      - CREATING
      - UPDATING
      - DELETING
      - FAILED
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the requested resource
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type
      required:
      - message
      description: Request references a resource which doesn't exist.
    ResourcePolicy:
      type: object
      properties:
        policyDocument:
          allOf:
          - $ref: '#/components/schemas/Policy'
          description: The JSON blob that describes the policy.
        policyId:
          allOf:
          - $ref: '#/components/schemas/PolicyId'
          description: The ID of the resource policy.
        ramResourceShareRegion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services Region that policy allows resources
            to be used in.
      required:
      - policyDocument
      - policyId
      - ramResourceShareRegion
      description: The resource policy that allows Incident Manager to perform actions
        on resources on your behalf.
    ResourcePolicyList:
      type: array
      items:
        $ref: '#/components/schemas/ResourcePolicy'
    ResourceType:
      type: string
      enum:
      - RESPONSE_PLAN
      - INCIDENT_RECORD
      - TIMELINE_EVENT
      - REPLICATION_SET
      - RESOURCE_POLICY
    ResponsePlanDisplayName:
      type: string
      maxLength: 200
    ResponsePlanName:
      type: string
      pattern: ^[a-zA-Z0-9-_]*$
      minLength: 1
      maxLength: 200
    ResponsePlanSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
        name:
          allOf:
          - $ref: '#/components/schemas/ResponsePlanName'
          description: The name of the response plan. This can't include spaces.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResponsePlanDisplayName'
          description: The human readable name of the response plan. This can include
            spaces.
      required:
      - arn
      - name
      description: Details of the response plan that are used when creating an incident.
    ResponsePlanSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ResponsePlanSummary'
    RoleArn:
      type: string
      pattern: ^arn:aws(-cn|-us-gov)?:iam::([0-9]{12})?:role/.+$
      maxLength: 1000
    ServiceCode:
      type: string
      enum:
      - ssm-incidents
    ServicePrincipal:
      type: string
      maxLength: 1000
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The identifier for the requested resource
        resourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/ServiceCode'
          description: Originating service code
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Originating quota code
      required:
      - message
      - serviceCode
      - quotaCode
      description: Request would cause a service quota to be exceeded.
    SnsArn:
      type: string
      maxLength: 1000
    SortOrder:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    SseKmsKey:
      type: string
      maxLength: 2048
    SsmAutomation:
      type: object
      properties:
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          description: The Amazon Resource Name (ARN) of the role that the automation
            document will assume when running commands.
        documentName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The automation document's name.
        documentVersion:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The automation document's version to use when running.
        targetAccount:
          allOf:
          - $ref: '#/components/schemas/SsmTargetAccount'
          description: The account that the automation document will be run in. This
            can be in either the management account or an application account.
        parameters:
          allOf:
          - $ref: '#/components/schemas/SsmParameters'
          description: The key-value pair parameters to use when running the automation
            document.
        dynamicParameters:
          allOf:
          - $ref: '#/components/schemas/DynamicSsmParameters'
          description: The key-value pair to resolve dynamic parameter values when
            processing a Systems Manager Automation runbook.
      required:
      - roleArn
      - documentName
      description: Details about the Systems Manager automation document that will
        be used as a runbook during an incident.
    SsmContactsArn:
      type: string
      pattern: ^arn:aws(-cn|-us-gov)?:ssm-contacts:[a-z0-9-]*:([0-9]{12}):contact/[a-z0-9_-]+$
      maxLength: 2048
    SsmParameterValues:
      type: array
      items:
        type: string
    SsmParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/SsmParameterValues'
    SsmTargetAccount:
      type: string
      enum:
      - RESPONSE_PLAN_OWNER_ACCOUNT
      - IMPACTED_ACCOUNT
    StartIncidentInput:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the operation is called only once with
            the specified details.
        responsePlanArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan that pre-defines
            summary, chat channels, Amazon SNS topics, runbooks, title, and impact
            of the incident.
        title:
          allOf:
          - $ref: '#/components/schemas/IncidentTitle'
          description: Provide a title for the incident. Providing a title overwrites
            the title provided by the response plan.
        impact:
          allOf:
          - $ref: '#/components/schemas/Impact'
          description: "Defines the impact to the customers. Providing an impact overwrites\
            \ the impact provided by a response plan.\n\n**Supported impact codes**\n\
            \n  * `1` \\- Critical\n\n  * `2` \\- High\n\n  * `3` \\- Medium\n\n \
            \ * `4` \\- Low\n\n  * `5` \\- No Impact"
        triggerDetails:
          allOf:
          - $ref: '#/components/schemas/TriggerDetails'
          description: Details of what created the incident record in Incident Manager.
        relatedItems:
          allOf:
          - $ref: '#/components/schemas/RelatedItemList'
          description: Add related items to the incident for other responders to use.
            Related items are Amazon Web Services resources, external links, or files
            uploaded to an Amazon S3 bucket.
      required:
      - responsePlanArn
    StartIncidentOutput:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the newly created incident record.
      required:
      - incidentRecordArn
    StringList:
      type: array
      items:
        type: string
    TagKey:
      type: string
      pattern: ^(?!aws:)[A-Za-z0-9 _=@:.+-/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagMapUpdate:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the response plan you're
            adding the tags to.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A list of tags to add to the response plan.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[A-Za-z0-9 _=@:.+-/]*$
      maxLength: 256
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
        serviceCode:
          allOf:
          - $ref: '#/components/schemas/ServiceCode'
          description: Originating service code
        quotaCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Originating quota code
      required:
      - message
      - serviceCode
      - quotaCode
      description: The request was denied due to request throttling.
    TimelineEvent:
      type: object
      properties:
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that the event
            occurred during.
        eventId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the timeline event.
        eventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the event occurred.
        eventUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the timeline event was last updated.
        eventType:
          allOf:
          - $ref: '#/components/schemas/TimelineEventType'
          description: The type of event that occurred. Currently Incident Manager
            supports only the `Custom Event` and `Note` types.
        eventData:
          allOf:
          - $ref: '#/components/schemas/EventData'
          description: A short description of the event.
        eventReferences:
          allOf:
          - $ref: '#/components/schemas/EventReferenceList'
          description: A list of references in a `TimelineEvent`.
      required:
      - incidentRecordArn
      - eventId
      - eventTime
      - eventUpdatedTime
      - eventType
      - eventData
      description: A significant event that happened during the incident.
    TimelineEventSort:
      type: string
      enum:
      - EVENT_TIME
    TimelineEventType:
      type: string
      maxLength: 100
    TriggerDetails:
      type: object
      properties:
        source:
          allOf:
          - $ref: '#/components/schemas/IncidentSource'
          description: Identifies the service that sourced the event. All events sourced
            from within Amazon Web Services begin with "`aws.`" Customer-generated
            events can have any value here, as long as it doesn't begin with "`aws.`"
            We recommend the use of Java package-name style reverse domain-name strings.
        triggerArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the source that detected
            the incident.
        timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the incident was detected.
        rawData:
          allOf:
          - $ref: '#/components/schemas/RawData'
          description: Raw data passed from either Amazon EventBridge, Amazon CloudWatch,
            or Incident Manager when an incident is created.
      required:
      - source
      - timestamp
      description: Details about what caused the incident to be created in Incident
        Manager.
    UUID:
      type: string
      maxLength: 50
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the response plan you're
            removing a tag from.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The name of the tag to remove from the response plan.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateActionList:
      type: array
      items:
        $ref: '#/components/schemas/UpdateReplicationSetAction'
    UpdateDeletionProtectionInput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set to update.
        deletionProtected:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies if deletion protection is turned on or off in your
            account.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token that ensures that the operation is called only once
            with the specified details.
      required:
      - arn
      - deletionProtected
    UpdateDeletionProtectionOutput:
      type: object
      properties: {}
    UpdateIncidentRecordInput:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token that ensures that a client calls the operation only
            once with the specified details.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record you are
            updating.
        title:
          allOf:
          - $ref: '#/components/schemas/IncidentTitle'
          description: A brief description of the incident.
        summary:
          allOf:
          - $ref: '#/components/schemas/IncidentSummary'
          description: A longer description of what occurred during the incident.
        impact:
          allOf:
          - $ref: '#/components/schemas/Impact'
          description: "Defines the impact of the incident to customers and applications.\
            \ If you provide an impact for an incident, it overwrites the impact provided\
            \ by the response plan.\n\n**Supported impact codes**\n\n  * `1` \\- Critical\n\
            \n  * `2` \\- High\n\n  * `3` \\- Medium\n\n  * `4` \\- Low\n\n  * `5`\
            \ \\- No Impact"
        status:
          allOf:
          - $ref: '#/components/schemas/IncidentRecordStatus'
          description: The status of the incident. Possible statuses are `Open` or
            `Resolved`.
        chatChannel:
          allOf:
          - $ref: '#/components/schemas/ChatChannel'
          description: The Chatbot chat channel where responders can collaborate.
        notificationTargets:
          allOf:
          - $ref: '#/components/schemas/NotificationTargetSet'
          description: 'The Amazon SNS targets that Incident Manager notifies when
            a client updates an incident.


            Using multiple SNS topics creates redundancy in the event that a Region
            is down during the incident.'
      required:
      - arn
    UpdateIncidentRecordOutput:
      type: object
      properties: {}
    UpdateRelatedItemsInput:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token that ensures that a client calls the operation only
            once with the specified details.
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident record that
            contains the related items that you update.
        relatedItemsUpdate:
          allOf:
          - $ref: '#/components/schemas/RelatedItemsUpdate'
          description: Details about the item that you are add to, or delete from,
            an incident.
      required:
      - incidentRecordArn
      - relatedItemsUpdate
    UpdateRelatedItemsOutput:
      type: object
      properties: {}
    UpdateReplicationSetAction:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AddRegionAction'
        description: |-
          Details about the Amazon Web Services Region that you're adding to the replication set.
      - allOf:
        - $ref: '#/components/schemas/DeleteRegionAction'
        description: |-
          Details about the Amazon Web Services Region that you're deleting to the replication set.
      description: |-
        Details used when updating the replication set.
    UpdateReplicationSetInput:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the replication set you're
            updating.
        actions:
          allOf:
          - $ref: '#/components/schemas/UpdateActionList'
          description: An action to add or delete a Region.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token that ensures that the operation is called only once
            with the specified details.
      required:
      - arn
      - actions
    UpdateReplicationSetOutput:
      type: object
      properties: {}
    UpdateResponsePlanInput:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token ensuring that the operation is called only once with
            the specified details.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the response plan.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ResponsePlanDisplayName'
          description: The long format name of the response plan. The display name
            can't contain spaces.
        incidentTemplateTitle:
          allOf:
          - $ref: '#/components/schemas/IncidentTitle'
          description: The short format name of the incident. The title can't contain
            spaces.
        incidentTemplateImpact:
          allOf:
          - $ref: '#/components/schemas/Impact'
          description: "Defines the impact to the customers. Providing an impact overwrites\
            \ the impact provided by a response plan.\n\n**Supported impact codes**\n\
            \n  * `1` \\- Critical\n\n  * `2` \\- High\n\n  * `3` \\- Medium\n\n \
            \ * `4` \\- Low\n\n  * `5` \\- No Impact"
        incidentTemplateSummary:
          allOf:
          - $ref: '#/components/schemas/IncidentSummary'
          description: A brief summary of the incident. This typically contains what
            has happened, what's currently happening, and next steps.
        incidentTemplateDedupeString:
          allOf:
          - $ref: '#/components/schemas/DedupeString'
          description: The string Incident Manager uses to prevent duplicate incidents
            from being created by the same incident in the same account.
        incidentTemplateNotificationTargets:
          allOf:
          - $ref: '#/components/schemas/NotificationTargetSet'
          description: The Amazon SNS targets that are notified when updates are made
            to an incident.
        chatChannel:
          allOf:
          - $ref: '#/components/schemas/ChatChannel'
          description: 'The Chatbot chat channel used for collaboration during an
            incident.


            Use the empty structure to remove the chat channel from the response plan.'
        engagements:
          allOf:
          - $ref: '#/components/schemas/EngagementSet'
          description: The Amazon Resource Name (ARN) for the contacts and escalation
            plans that the response plan engages during an incident.
        actions:
          allOf:
          - $ref: '#/components/schemas/ActionsList'
          description: The actions that this response plan takes at the beginning
            of an incident.
        incidentTemplateTags:
          allOf:
          - $ref: '#/components/schemas/TagMapUpdate'
          description: Tags to assign to the template. When the `StartIncident` API
            action is called, Incident Manager assigns the tags specified in the template
            to the incident. To call this action, you must also have permission to
            call the `TagResource` API action for the incident record resource.
        integrations:
          allOf:
          - $ref: '#/components/schemas/Integrations'
          description: Information about third-party services integrated into the
            response plan.
      required:
      - arn
    UpdateResponsePlanOutput:
      type: object
      properties: {}
    UpdateTimelineEventInput:
      type: object
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A token that ensures that a client calls the operation only
            once with the specified details.
        incidentRecordArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the incident that includes
            the timeline event.
        eventId:
          allOf:
          - $ref: '#/components/schemas/UUID'
          description: The ID of the event to update. You can use `ListTimelineEvents`
            to find an event's ID.
        eventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp for when the event occurred.
        eventType:
          allOf:
          - $ref: '#/components/schemas/TimelineEventType'
          description: The type of event. You can update events of type `Custom Event`
            and `Note`.
        eventData:
          allOf:
          - $ref: '#/components/schemas/EventData'
          description: A short description of the event.
        eventReferences:
          allOf:
          - $ref: '#/components/schemas/EventReferenceList'
          description: 'Updates all existing references in a `TimelineEvent`. A reference
            is an Amazon Web Services resource involved or associated with the incident.
            To specify a reference, enter its Amazon Resource Name (ARN). You can
            also specify a related item associated with that resource. For example,
            to specify an Amazon DynamoDB (DynamoDB) table as a resource, use its
            ARN. You can also specify an Amazon CloudWatch metric associated with
            the DynamoDB table as a related item.


            This update action overrides all existing references. If you want to keep
            existing references, you must specify them in the call. If you don''t,
            this action removes any existing references and enters only new references.'
      required:
      - incidentRecordArn
      - eventId
    UpdateTimelineEventOutput:
      type: object
      properties: {}
    Url:
      type: string
      maxLength: 1000
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/ExceptionMessage'
      required:
      - message
      description: The input fails to satisfy the constraints specified by an Amazon
        Web Services service.
    VariableType:
      type: string
      enum:
      - INCIDENT_RECORD_ARN
      - INVOLVED_RESOURCES
