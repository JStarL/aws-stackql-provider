openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: codecatalyst
  x-aws-serviceName: codecatalyst
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2022-09-28'
  title: Amazon CodeCatalyst
  description: |-
    Welcome to the Amazon CodeCatalyst API reference. This reference provides descriptions of operations and data types for Amazon CodeCatalyst. You can use the Amazon CodeCatalyst API to work with the following objects.

    Spaces, by calling the following:

      * DeleteSpace, which deletes a space.

      * GetSpace, which returns information about a space.

      * GetSubscription, which returns information about the Amazon Web Services account used for billing purposes and the billing plan for the space.

      * ListSpaces, which retrieves a list of spaces.

      * UpdateSpace, which changes one or more values for a space.

    Projects, by calling the following:

      * CreateProject which creates a project in a specified space.

      * GetProject, which returns information about a project.

      * ListProjects, which retrieves a list of projects in a space.

    Users, by calling the following:

      * GetUserDetails, which returns information about a user in Amazon CodeCatalyst.

    Source repositories, by calling the following:

      * CreateSourceRepository, which creates an empty Git-based source repository in a specified project.

      * CreateSourceRepositoryBranch, which creates a branch in a specified repository where you can work on code.

      * DeleteSourceRepository, which deletes a source repository.

      * GetSourceRepository, which returns information about a source repository.

      * GetSourceRepositoryCloneUrls, which returns information about the URLs that can be used with a Git client to clone a source repository.

      * ListSourceRepositories, which retrieves a list of source repositories in a project.

      * ListSourceRepositoryBranches, which retrieves a list of branches in a source repository.

    Dev Environments and the Amazon Web Services Toolkits, by calling the following:

      * CreateDevEnvironment, which creates a Dev Environment, where you can quickly work on the code stored in the source repositories of your project.

      * DeleteDevEnvironment, which deletes a Dev Environment.

      * GetDevEnvironment, which returns information about a Dev Environment.

      * ListDevEnvironments, which retrieves a list of Dev Environments in a project.

      * ListDevEnvironmentSessions, which retrieves a list of active Dev Environment sessions in a project.

      * StartDevEnvironment, which starts a specified Dev Environment and puts it into an active state.

      * StartDevEnvironmentSession, which starts a session to a specified Dev Environment.

      * StopDevEnvironment, which stops a specified Dev Environment and puts it into an stopped state.

      * StopDevEnvironmentSession, which stops a session for a specified Dev Environment.

      * UpdateDevEnvironment, which changes one or more values for a Dev Environment.

    Workflows, by calling the following:

      * GetWorkflow, which returns information about a workflow.

      * GetWorkflowRun, which returns information about a specified run of a workflow.

      * ListWorkflowRuns, which retrieves a list of runs of a specified workflow.

      * ListWorkflows, which retrieves a list of workflows in a specified project.

      * StartWorkflowRun, which starts a run of a specified workflow.

    Security, activity, and resource management in Amazon CodeCatalyst, by calling the following:

      * CreateAccessToken, which creates a personal access token (PAT) for the current user.

      * DeleteAccessToken, which deletes a specified personal access token (PAT).

      * ListAccessTokens, which lists all personal access tokens (PATs) associated with a user.

      * ListEventLogs, which retrieves a list of events that occurred during a specified time period in a space.

      * VerifySession, which verifies whether the calling user has a valid Amazon CodeCatalyst login and session.

    If you are using the Amazon CodeCatalyst APIs with an SDK or the CLI, you must configure your computer to work with Amazon CodeCatalyst and single sign-on (SSO). For more information, see [Setting up to use the CLI with Amazon CodeCatalyst](https://docs.aws.amazon.com/codecatalyst/latest/userguide/set-up-cli.html) and the SSO documentation for your SDK.
servers:
- description: The Amazon CodeCatalyst regional endpoint
  url: https://codecatalyst.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/accessTokens:
    put:
      operationId: CreateAccessToken
      description: |-
        Creates a personal access token (PAT) for the current user. A personal access token (PAT) is similar to a password. It is associated with your user identity for use across all spaces and projects in Amazon CodeCatalyst. You use PATs to access CodeCatalyst from resources that include integrated development environments (IDEs) and Git-based source repositories. PATs represent you in Amazon CodeCatalyst and you can manage them in your user settings.For more information, see [Managing personal access tokens in Amazon CodeCatalyst](https://docs.aws.amazon.com/codecatalyst/latest/userguide/ipa-tokens-keys.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/AccessTokenName'
                expiresTime:
                  $ref: '#/components/schemas/Timestamp'
      responses:
        '201': {}
    post:
      operationId: ListAccessTokens
      description: |-
        Lists all personal access tokens (PATs) associated with the user who calls the API. You can only list PATs associated with your Amazon Web Services Builder ID.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                maxResults:
                  $ref: '#/components/schemas/Integer'
                nextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/devEnvironments:
    put:
      operationId: CreateDevEnvironment
      description: |-
        Creates a Dev Environment in Amazon CodeCatalyst, a cloud-based development environment that you can use to quickly work on the code stored in the source repositories of your project.

        When created in the Amazon CodeCatalyst console, by default a Dev Environment is configured to have a 2 core processor, 4GB of RAM, and 16GB of persistent storage. None of these defaults apply to a Dev Environment created programmatically.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                repositories:
                  $ref: '#/components/schemas/RepositoriesInput'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                alias:
                  $ref: '#/components/schemas/String'
                ides:
                  $ref: '#/components/schemas/IdeConfigurationList'
                instanceType:
                  $ref: '#/components/schemas/InstanceType'
                inactivityTimeoutMinutes:
                  $ref: '#/components/schemas/InactivityTimeoutMinutes'
                persistentStorage:
                  $ref: '#/components/schemas/PersistentStorageConfiguration'
                vpcConnectionName:
                  $ref: '#/components/schemas/NameString'
      responses:
        '201': {}
  /v1/spaces/{spaceName}/projects:
    put:
      operationId: CreateProject
      description: |-
        Creates a project in a specified space.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                displayName:
                  $ref: '#/components/schemas/ProjectDisplayName'
                description:
                  $ref: '#/components/schemas/ProjectDescription'
      responses:
        '201': {}
    post:
      operationId: ListProjects
      description: |-
        Retrieves a list of projects.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
                filters:
                  $ref: '#/components/schemas/ProjectListFilters'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{name}:
    put:
      operationId: CreateSourceRepository
      description: |-
        Creates an empty Git-based source repository in a specified project. The repository is created with an initial empty commit with a default branch named `main`.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SourceRepositoryNameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/SourceRepositoryDescriptionString'
      responses:
        '201': {}
    delete:
      operationId: DeleteSourceRepository
      description: |-
        Deletes a source repository in Amazon CodeCatalyst. You cannot use this API to delete a linked repository. It can only be used to delete a Amazon CodeCatalyst source repository.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SourceRepositoryNameString'
      responses:
        '200': {}
    get:
      operationId: GetSourceRepository
      description: |-
        Returns information about a source repository.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SourceRepositoryNameString'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/branches/{name}:
    put:
      operationId: CreateSourceRepositoryBranch
      description: |-
        Creates a branch in a specified source repository in Amazon CodeCatalyst.

        This API only creates a branch in a source repository hosted in Amazon CodeCatalyst. You cannot use this API to create a branch in a linked repository.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: sourceRepositoryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SourceRepositoryNameString'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SourceRepositoryBranchString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                headCommitId:
                  $ref: '#/components/schemas/String'
      responses:
        '201': {}
  /v1/accessTokens/{id}:
    delete:
      operationId: DeleteAccessToken
      description: |-
        Deletes a specified personal access token (PAT). A personal access token can only be deleted by the user who created it.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/AccessTokenId'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}:
    delete:
      operationId: DeleteDevEnvironment
      description: |-
        Deletes a Dev Environment.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
    get:
      operationId: GetDevEnvironment
      description: |-
        Returns information about a Dev Environment for a source repository in a project. Dev Environments are specific to the user who creates them.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
    patch:
      operationId: UpdateDevEnvironment
      description: |-
        Changes one or more values for a Dev Environment. Updating certain values of the Dev Environment will cause a restart.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  $ref: '#/components/schemas/String'
                ides:
                  $ref: '#/components/schemas/IdeConfigurationList'
                instanceType:
                  $ref: '#/components/schemas/InstanceType'
                inactivityTimeoutMinutes:
                  $ref: '#/components/schemas/InactivityTimeoutMinutes'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{name}:
    delete:
      operationId: DeleteProject
      description: |-
        Deletes a project in a space.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      responses:
        '200': {}
    get:
      operationId: GetProject
      description: |-
        Returns information about a project.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      responses:
        '200': {}
    patch:
      operationId: UpdateProject
      description: |-
        Changes one or more values for a project.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/ProjectDescription'
      responses:
        '200': {}
  /v1/spaces/{name}:
    delete:
      operationId: DeleteSpace
      description: |-
        Deletes a space.

        Deleting a space cannot be undone. Additionally, since space names must be unique across Amazon CodeCatalyst, you cannot reuse names of deleted spaces.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      responses:
        '200': {}
    get:
      operationId: GetSpace
      description: |-
        Returns information about an space.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      responses:
        '200': {}
    patch:
      operationId: UpdateSpace
      description: |-
        Changes one or more values for a space.
      parameters:
      - name: name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                description:
                  $ref: '#/components/schemas/SpaceDescription'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/cloneUrls:
    get:
      operationId: GetSourceRepositoryCloneUrls
      description: |-
        Returns information about the URLs that can be used with a Git client to clone a source repository.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: sourceRepositoryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SourceRepositoryNameString'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/subscription:
    get:
      operationId: GetSubscription
      description: |-
        Returns information about the Amazon Web Services account used for billing purposes and the billing plan for the space.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      responses:
        '200': {}
  /userDetails:
    get:
      operationId: GetUserDetails
      description: |-
        Returns information about a user.
      parameters:
      - name: id
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: userName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/workflows/{id}:
    get:
      operationId: GetWorkflow
      description: |-
        Returns information about a workflow.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/workflowRuns/{id}:
    get:
      operationId: GetWorkflowRun
      description: |-
        Returns information about a specified run of a workflow.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{devEnvironmentId}/sessions:
    post:
      operationId: ListDevEnvironmentSessions
      description: |-
        Retrieves a list of active sessions for a Dev Environment in a project.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: devEnvironmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/devEnvironments:
    post:
      operationId: ListDevEnvironments
      description: |-
        Retrieves a list of Dev Environments in a project.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                projectName:
                  $ref: '#/components/schemas/NameString'
                filters:
                  $ref: '#/components/schemas/Filters'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/eventLogs:
    post:
      operationId: ListEventLogs
      description: |-
        Retrieves a list of events that occurred during a specific time in a space. You can use these events to audit user and system activity in a space. For more information, see [Monitoring](https://docs.aws.amazon.com/codecatalyst/latest/userguide/ipa-monitoring.html) in the _Amazon CodeCatalyst User Guide_.

        ListEventLogs guarantees events for the last 30 days in a given space. You can also view and retrieve a list of management events over the last 90 days for Amazon CodeCatalyst in the CloudTrail console by viewing Event history, or by creating a trail to create and maintain a record of events that extends past 90 days. For more information, see [Working with CloudTrail Event History](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/view-cloudtrail-events.html) and [Working with CloudTrail trails](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-getting-started.html).
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                startTime:
                  $ref: '#/components/schemas/Timestamp'
                endTime:
                  $ref: '#/components/schemas/Timestamp'
                eventName:
                  $ref: '#/components/schemas/String'
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories:
    post:
      operationId: ListSourceRepositories
      description: |-
        Retrieves a list of source repositories in a project.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/sourceRepositories/{sourceRepositoryName}/branches:
    post:
      operationId: ListSourceRepositoryBranches
      description: |-
        Retrieves a list of branches in a specified source repository.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: sourceRepositoryName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SourceRepositoryNameString'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
                maxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
  /v1/spaces:
    post:
      operationId: ListSpaces
      description: |-
        Retrieves a list of spaces.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/workflowRuns:
    post:
      operationId: ListWorkflowRuns
      description: |-
        Retrieves a list of workflow runs of a specified workflow.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: workflowId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sortBy:
                  $ref: '#/components/schemas/WorkflowRunSortCriteriaList'
      responses:
        '200': {}
    put:
      operationId: StartWorkflowRun
      description: |-
        Begins a run of a specified workflow.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: workflowId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/workflows:
    post:
      operationId: ListWorkflows
      description: |-
        Retrieves a list of workflows in a specified project.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sortBy:
                  $ref: '#/components/schemas/WorkflowSortCriteriaList'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}/start:
    put:
      operationId: StartDevEnvironment
      description: |-
        Starts a specified Dev Environment and puts it into an active state.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ides:
                  $ref: '#/components/schemas/IdeConfigurationList'
                instanceType:
                  $ref: '#/components/schemas/InstanceType'
                inactivityTimeoutMinutes:
                  $ref: '#/components/schemas/InactivityTimeoutMinutes'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}/session:
    put:
      operationId: StartDevEnvironmentSession
      description: |-
        Starts a session for a specified Dev Environment.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionConfiguration:
                  $ref: '#/components/schemas/DevEnvironmentSessionConfiguration'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}/stop:
    put:
      operationId: StopDevEnvironment
      description: |-
        Pauses a specified Dev Environment and places it in a non-running state. Stopped Dev Environments do not consume compute minutes.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      responses:
        '200': {}
  /v1/spaces/{spaceName}/projects/{projectName}/devEnvironments/{id}/session/{sessionId}:
    delete:
      operationId: StopDevEnvironmentSession
      description: |-
        Stops a session for a specified Dev Environment.
      parameters:
      - name: spaceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: projectName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/NameString'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Uuid'
      - name: sessionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
  /session:
    get:
      operationId: VerifySession
      description: |-
        Verifies whether the calling user has a valid Amazon CodeCatalyst login and session. If successful, this returns the ID of the user in Amazon CodeCatalyst.
      responses:
        '200': {}
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request was denied because you don't have sufficient access
        to perform this action. Verify that you are a member of a role that allows
        this action.
    AccessTokenId:
      type: string
      minLength: 1
      maxLength: 36
    AccessTokenName:
      type: string
      minLength: 1
      maxLength: 100
    AccessTokenSecret:
      type: string
      minLength: 1
      maxLength: 4000
    AccessTokenSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AccessTokenSummary'
    AccessTokenSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AccessTokenId'
          description: The system-generated ID of the personal access token.
        name:
          allOf:
          - $ref: '#/components/schemas/AccessTokenName'
          description: The friendly name of the personal access token.
        expiresTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when the personal access token will expire,
            in coordinated universal time (UTC) timestamp format as specified in [RFC
            3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
      required:
      - id
      - name
      description: Information about a specified personal access token (PAT).
    ClientToken:
      type: string
      minLength: 1
      maxLength: 1024
    ComparisonOperator:
      type: string
      enum:
      - EQ
      - GT
      - GE
      - LT
      - LE
      - BEGINS_WITH
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request was denied because the requested operation would cause
        a conflict with the current state of a service resource associated with the
        request. Another user might have updated the resource. Reload, make sure you
        have the latest data, and then try again.
    CreateAccessTokenRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/AccessTokenName'
          description: The friendly name of the personal access token.
        expiresTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the personal access token expires, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
      required:
      - name
    CreateAccessTokenResponse:
      type: object
      properties:
        secret:
          allOf:
          - $ref: '#/components/schemas/AccessTokenSecret'
          description: The secret value of the personal access token.
        name:
          allOf:
          - $ref: '#/components/schemas/AccessTokenName'
          description: The friendly name of the personal access token.
        expiresTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the personal access token expires, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
            If not specified, the default is one year from creation.
        accessTokenId:
          allOf:
          - $ref: '#/components/schemas/AccessTokenId'
          description: The system-generated unique ID of the access token.
      required:
      - secret
      - name
      - expiresTime
      - accessTokenId
    CreateDevEnvironmentRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        repositories:
          allOf:
          - $ref: '#/components/schemas/RepositoriesInput'
          description: The source repository that contains the branch to clone into
            the Dev Environment.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A user-specified idempotency token. Idempotency ensures that
            an API request completes only once. With an idempotent request, if the
            original request completes successfully, the subsequent retries return
            the result from the original successful request and have no additional
            effect.
        alias:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user-defined alias for a Dev Environment.
        ides:
          allOf:
          - $ref: '#/components/schemas/IdeConfigurationList'
          description: 'Information about the integrated development environment (IDE)
            configured for a Dev Environment.


            An IDE is required to create a Dev Environment. For Dev Environment creation,
            this field contains configuration information and must be provided.'
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The Amazon EC2 instace type to use for the Dev Environment.
        inactivityTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/InactivityTimeoutMinutes'
          description: The amount of time the Dev Environment will run without any
            activity detected before stopping, in minutes. Only whole integers are
            allowed. Dev Environments consume compute minutes when running.
        persistentStorage:
          allOf:
          - $ref: '#/components/schemas/PersistentStorageConfiguration'
          description: 'Information about the amount of storage allocated to the Dev
            Environment.


            By default, a Dev Environment is configured to have 16GB of persistent
            storage when created from the Amazon CodeCatalyst console, but there is
            no default when programmatically creating a Dev Environment. Valid values
            for persistent storage are based on memory sizes in 16GB increments. Valid
            values are 16, 32, and 64.'
        vpcConnectionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the connection that will be used to connect to
            Amazon VPC, if any.
      required:
      - spaceName
      - projectName
      - instanceType
      - persistentStorage
    CreateDevEnvironmentResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        vpcConnectionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the connection used to connect to Amazon VPC used
            when the Dev Environment was created, if any.
      required:
      - spaceName
      - projectName
      - id
    CreateProjectRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        displayName:
          allOf:
          - $ref: '#/components/schemas/ProjectDisplayName'
          description: The friendly name of the project that will be displayed to
            users.
        description:
          allOf:
          - $ref: '#/components/schemas/ProjectDescription'
          description: The description of the project. This description will be displayed
            to all users of the project. We recommend providing a brief description
            of the project and its intended purpose.
      required:
      - spaceName
      - displayName
    CreateProjectResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name of the project.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the project.
      required:
      - name
    CreateSourceRepositoryBranchRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        sourceRepositoryName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the repository where you want to create a branch.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchString'
          description: The name for the branch you're creating.
        headCommitId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The commit ID in an existing branch from which you want to
            create the new branch.
      required:
      - spaceName
      - projectName
      - sourceRepositoryName
      - name
    CreateSourceRepositoryBranchResponse:
      type: object
      properties:
        ref:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchRefString'
          description: The Git reference name of the branch.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchString'
          description: The name of the newly created branch.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the branch was last updated, in coordinated universal
            time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        headCommitId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The commit ID of the tip of the newly created branch.
    CreateSourceRepositoryRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository. For more information about
            name requirements, see [Quotas for source repositories](https://docs.aws.amazon.com/codecatalyst/latest/userguide/source-quotas.html).
        description:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryDescriptionString'
          description: The description of the source repository.
      required:
      - spaceName
      - projectName
      - name
    CreateSourceRepositoryResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
        description:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryDescriptionString'
          description: The description of the source repository.
      required:
      - spaceName
      - projectName
      - name
    DeleteAccessTokenRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/AccessTokenId'
          description: The ID of the personal access token to delete. You can find
            the IDs of all PATs associated with your Amazon Web Services Builder ID
            in a space by calling ListAccessTokens.
      required:
      - id
    DeleteAccessTokenResponse:
      type: object
      properties: {}
    DeleteDevEnvironmentRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment you want
            to delete. To retrieve a list of Dev Environment IDs, use ListDevEnvironments.
      required:
      - spaceName
      - projectName
      - id
    DeleteDevEnvironmentResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the deleted Dev Environment.
      required:
      - spaceName
      - projectName
      - id
    DeleteProjectRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space. To retrieve a list of
            project names, use ListProjects.
      required:
      - spaceName
      - name
    DeleteProjectResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name displayed to users of the project in Amazon
            CodeCatalyst.
      required:
      - spaceName
      - name
    DeleteSourceRepositoryRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
      required:
      - spaceName
      - projectName
      - name
    DeleteSourceRepositoryResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the repository.
      required:
      - spaceName
      - projectName
      - name
    DeleteSpaceRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space. To retrieve a list of space names, use
            ListSpaces.
      required:
      - name
    DeleteSpaceResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name of the space displayed to users of the space
            in Amazon CodeCatalyst.
      required:
      - name
    DevEnvironmentAccessDetails:
      type: object
      properties:
        streamUrl:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: The URL used to send commands to and from the Dev Environment.
        tokenValue:
          allOf:
          - $ref: '#/components/schemas/SensitiveString'
          description: An encrypted token value that contains session and caller information
            used to authenticate the connection.
      required:
      - streamUrl
      - tokenValue
      description: Information about connection details for a Dev Environment.
    DevEnvironmentRepositorySummaries:
      type: array
      items:
        $ref: '#/components/schemas/DevEnvironmentRepositorySummary'
    DevEnvironmentRepositorySummary:
      type: object
      properties:
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
        branchName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchString'
          description: The name of the branch in a source repository cloned into the
            Dev Environment.
      required:
      - repositoryName
      description: Information about the source repsitory for a Dev Environment.
    DevEnvironmentSessionConfiguration:
      type: object
      properties:
        sessionType:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentSessionType'
          description: The type of the session.
        executeCommandSessionConfiguration:
          allOf:
          - $ref: '#/components/schemas/ExecuteCommandSessionConfiguration'
          description: Information about optional commands that will be run on the
            Dev Environment when the SSH session begins.
      required:
      - sessionType
      description: Information about the configuration of a Dev Environment session.
    DevEnvironmentSessionSummary:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        devEnvironmentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        startedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the session started, in coordinated universal
            time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the Dev Environment session.
      required:
      - spaceName
      - projectName
      - devEnvironmentId
      - startedTime
      - id
      description: Information about active sessions for a Dev Environment.
    DevEnvironmentSessionType:
      type: string
      enum:
      - SSM
      - SSH
    DevEnvironmentSessionsSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DevEnvironmentSessionSummary'
    DevEnvironmentStatus:
      type: string
      enum:
      - PENDING
      - RUNNING
      - STARTING
      - STOPPING
      - STOPPED
      - FAILED
      - DELETING
      - DELETED
    DevEnvironmentSummary:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID for the Dev Environment.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the Dev Environment was last updated, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        creatorId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the user who created the
            Dev Environment.
        status:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentStatus'
          description: The status of the Dev Environment.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: The reason for the status.
        repositories:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentRepositorySummaries'
          description: Information about the repositories that will be cloned into
            the Dev Environment. If no rvalue is specified, no repository is cloned.
        alias:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user-specified alias for the Dev Environment.
        ides:
          allOf:
          - $ref: '#/components/schemas/Ides'
          description: Information about the integrated development environment (IDE)
            configured for a Dev Environment.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The Amazon EC2 instace type used for the Dev Environment.
        inactivityTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/InactivityTimeoutMinutes'
          description: The amount of time the Dev Environment will run without any
            activity detected before stopping, in minutes. Dev Environments consume
            compute minutes when running.
        persistentStorage:
          allOf:
          - $ref: '#/components/schemas/PersistentStorage'
          description: Information about the configuration of persistent storage for
            the Dev Environment.
        vpcConnectionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the connection used to connect to Amazon VPC used
            when the Dev Environment was created, if any.
      required:
      - id
      - lastUpdatedTime
      - creatorId
      - status
      - repositories
      - instanceType
      - inactivityTimeoutMinutes
      - persistentStorage
      description: Information about a Dev Environment.
    DevEnvironmentSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DevEnvironmentSummary'
    EmailAddress:
      type: object
      properties:
        email:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The email address.
        verified:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Whether the email address has been verified.
      description: Information about an email address.
    EventLogEntries:
      type: array
      items:
        $ref: '#/components/schemas/EventLogEntry'
    EventLogEntry:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the event.
        eventName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the event.
        eventType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the event.
        eventCategory:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The category for the event.
        eventSource:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The source of the event.
        eventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the event took place, in coordinated universal time
            (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        operationType:
          allOf:
          - $ref: '#/components/schemas/OperationType'
          description: The type of the event.
        userIdentity:
          allOf:
          - $ref: '#/components/schemas/UserIdentity'
          description: The system-generated unique ID of the user whose actions are
            recorded in the event.
        projectInformation:
          allOf:
          - $ref: '#/components/schemas/ProjectInformation'
          description: Information about the project where the event occurred.
        requestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the request.
        requestPayload:
          allOf:
          - $ref: '#/components/schemas/EventPayload'
          description: Information about the payload of the request.
        responsePayload:
          allOf:
          - $ref: '#/components/schemas/EventPayload'
          description: Information about the payload of the response, if any.
        errorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The code of the error, if any.
        sourceIpAddress:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The IP address of the user whose actions are recorded in the
            event.
        userAgent:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user agent whose actions are recorded in the event.
      required:
      - id
      - eventName
      - eventType
      - eventCategory
      - eventSource
      - eventTime
      - operationType
      - userIdentity
      description: Information about an entry in an event log of Amazon CodeCatalyst
        activity.
    EventPayload:
      type: object
      properties:
        contentType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of content in the event payload.
        data:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data included in the event payload.
      description: Information about the payload of an event recording Amazon CodeCatalyst
        activity.
    ExecuteCommandSessionConfiguration:
      type: object
      properties:
        command:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The command used at the beginning of the SSH session to a Dev
            Environment.
        arguments:
          allOf:
          - $ref: '#/components/schemas/ExecuteCommandSessionConfigurationArguments'
          description: An array of arguments containing arguments and members.
      required:
      - command
      description: Information about the commands that will be run on a Dev Environment
        when an SSH session begins.
    ExecuteCommandSessionConfigurationArguments:
      type: array
      items:
        type: string
    Filter:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A key that can be used to sort results.
        values:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The values of the key.
        comparisonOperator:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The operator used to compare the fields.
      required:
      - key
      - values
      description: Information about a filter used to limit results of a query.
    FilterKey:
      type: string
      enum:
      - hasAccessTo
      - name
    Filters:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    GetDevEnvironmentRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment for which
            you want to view information. To retrieve a list of Dev Environment IDs,
            use ListDevEnvironments.
      required:
      - spaceName
      - projectName
      - id
    GetDevEnvironmentResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the Dev Environment was last updated, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        creatorId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the user who created the
            Dev Environment.
        status:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentStatus'
          description: The current status of the Dev Environment.
        statusReason:
          allOf:
          - $ref: '#/components/schemas/StatusReason'
          description: The reason for the status.
        repositories:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentRepositorySummaries'
          description: The source repository that contains the branch cloned into
            the Dev Environment.
        alias:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user-specified alias for the Dev Environment.
        ides:
          allOf:
          - $ref: '#/components/schemas/Ides'
          description: Information about the integrated development environment (IDE)
            configured for the Dev Environment.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The Amazon EC2 instace type to use for the Dev Environment.
        inactivityTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/InactivityTimeoutMinutes'
          description: The amount of time the Dev Environment will run without any
            activity detected before stopping, in minutes.
        persistentStorage:
          allOf:
          - $ref: '#/components/schemas/PersistentStorage'
          description: Information about the amount of storage allocated to the Dev
            Environment. By default, a Dev Environment is configured to have 16GB
            of persistent storage.
        vpcConnectionName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the connection used to connect to Amazon VPC used
            when the Dev Environment was created, if any.
      required:
      - spaceName
      - projectName
      - id
      - lastUpdatedTime
      - creatorId
      - status
      - repositories
      - instanceType
      - inactivityTimeoutMinutes
      - persistentStorage
    GetProjectRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
      required:
      - spaceName
      - name
    GetProjectResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the project in the space.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name of the project displayed to users in Amazon
            CodeCatalyst.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the project.
      required:
      - name
    GetSourceRepositoryCloneUrlsRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        sourceRepositoryName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
      required:
      - spaceName
      - projectName
      - sourceRepositoryName
    GetSourceRepositoryCloneUrlsResponse:
      type: object
      properties:
        https:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The HTTPS URL to use when cloning the source repository.
      required:
      - https
    GetSourceRepositoryRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
      required:
      - spaceName
      - projectName
      - name
    GetSourceRepositoryResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
        description:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryDescriptionString'
          description: The description of the source repository.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the source repository was last updated, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the source repository was created, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
      required:
      - spaceName
      - projectName
      - name
      - lastUpdatedTime
      - createdTime
    GetSpaceRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
      required:
      - name
    GetSpaceResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        regionName:
          allOf:
          - $ref: '#/components/schemas/RegionString'
          description: The Amazon Web Services Region where the space exists.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name of the space displayed to users.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the space.
      required:
      - name
      - regionName
    GetSubscriptionRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
      required:
      - spaceName
    GetSubscriptionResponse:
      type: object
      properties:
        subscriptionType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the billing plan for the space.
        awsAccountName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The display name of the Amazon Web Services account used for
            billing for the space.
        pendingSubscriptionType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the billing plan that the space will be changed
            to at the start of the next billing cycle. This applies only to changes
            that reduce the functionality available for the space. Billing plan changes
            that increase functionality are applied immediately. For more information,
            see [Pricing](https://codecatalyst.aws/explore/pricing).
        pendingSubscriptionStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The day and time the pending change will be applied to the
            space, in coordinated universal time (UTC) timestamp format as specified
            in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
    GetUserDetailsRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the user.
        userName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the user as displayed in Amazon CodeCatalyst.
    GetUserDetailsResponse:
      type: object
      properties:
        userId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the user.
        userName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the user as displayed in Amazon CodeCatalyst.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name displayed for the user in Amazon CodeCatalyst.
        primaryEmail:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
          description: The email address provided by the user when they signed up.
        version:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
    GetWorkflowRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID of the workflow. To rerieve a list of workflow IDs,
            use ListWorkflows.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
      required:
      - spaceName
      - id
      - projectName
    GetWorkflowResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID of the workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the workflow.
        sourceRepositoryName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository where the workflow YAML is
            stored.
        sourceBranchName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchString'
          description: The name of the branch that contains the workflow YAML.
        definition:
          allOf:
          - $ref: '#/components/schemas/WorkflowDefinition'
          description: Information about the workflow definition file for the workflow.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow was created, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow was last updated, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        runMode:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunMode'
          description: The behavior to use when multiple workflows occur at the same
            time. For more information, see <https://docs.aws.amazon.com/codecatalyst/latest/userguide/workflows-configure-runs.html>
            in the Amazon CodeCatalyst User Guide.
        status:
          allOf:
          - $ref: '#/components/schemas/WorkflowStatus'
          description: The status of the workflow.
      required:
      - spaceName
      - projectName
      - id
      - name
      - definition
      - createdTime
      - lastUpdatedTime
      - runMode
      - status
    GetWorkflowRunRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID of the workflow run. To retrieve a list of workflow
            run IDs, use ListWorkflowRuns.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
      required:
      - spaceName
      - id
      - projectName
    GetWorkflowRunResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID of the workflow run.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID of the workflow.
        status:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunStatus'
          description: The status of the workflow run.
        statusReasons:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunStatusReasons'
          description: Information about the reasons for the status of the workflow
            run.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow run began, in coordinated universal
            time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow run ended, in coordinated universal
            time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow run status was last updated,
            in coordinated universal time (UTC) timestamp format as specified in [RFC
            3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      required:
      - spaceName
      - projectName
      - id
      - workflowId
      - status
      - startTime
      - lastUpdatedTime
    Ide:
      type: object
      properties:
        runtime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A link to the IDE runtime image.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the IDE.
      description: Information about an integrated development environment (IDE) used
        in a Dev Environment.
    IdeConfiguration:
      type: object
      properties:
        runtime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'A link to the IDE runtime image.


            This parameter is not required for `VSCode`.'
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the IDE. Valid values include `Cloud9`, `IntelliJ`,
            `PyCharm`, `GoLand`, and `VSCode`.
      description: Information about the configuration of an integrated development
        environment (IDE) for a Dev Environment.
    IdeConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/IdeConfiguration'
    Ides:
      type: array
      items:
        $ref: '#/components/schemas/Ide'
    InactivityTimeoutMinutes:
      type: integer
      default: 0
      minimum: 0
      maximum: 1200
    InstanceType:
      type: string
      enum:
      - dev.standard1.small
      - dev.standard1.medium
      - dev.standard1.large
      - dev.standard1.xlarge
    ListAccessTokensRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
    ListAccessTokensResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/AccessTokenSummaries'
          description: A list of personal access tokens (PATs) associated with the
            calling user identity.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
      required:
      - items
    ListDevEnvironmentSessionsRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        devEnvironmentId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
      required:
      - spaceName
      - projectName
      - devEnvironmentId
    ListDevEnvironmentSessionsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentSessionsSummaryList'
          description: Information about each session retrieved in the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
      required:
      - items
    ListDevEnvironmentsRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: Information about filters to apply to narrow the results returned
            in the list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
      required:
      - spaceName
    ListDevEnvironmentsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentSummaryList'
          description: Information about the Dev Environments in a project.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
      required:
      - items
    ListEventLogsRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time when you want to start retrieving events,
            in coordinated universal time (UTC) timestamp format as specified in [RFC
            3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time after which you do not want any events retrieved,
            in coordinated universal time (UTC) timestamp format as specified in [RFC
            3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        eventName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the event.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
      required:
      - spaceName
      - startTime
      - endTime
    ListEventLogsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        items:
          allOf:
          - $ref: '#/components/schemas/EventLogEntries'
          description: Information about each event retrieved in the list.
      required:
      - items
    ListProjectsRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
        filters:
          allOf:
          - $ref: '#/components/schemas/ProjectListFilters'
          description: Information about filters to apply to narrow the results returned
            in the list.
      required:
      - spaceName
    ListProjectsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        items:
          allOf:
          - $ref: '#/components/schemas/ProjectSummaries'
          description: Information about the projects.
    ListSourceRepositoriesItem:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryIdString'
          description: The system-generated unique ID of the source repository.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
        description:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryDescriptionString'
          description: The description of the repository, if any.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the source repository was last updated, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the source repository was created, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
      required:
      - id
      - name
      - lastUpdatedTime
      - createdTime
      description: Information about a source repository returned in a list of source
        repositories.
    ListSourceRepositoriesItems:
      type: array
      items:
        $ref: '#/components/schemas/ListSourceRepositoriesItem'
    ListSourceRepositoriesRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
      required:
      - spaceName
      - projectName
    ListSourceRepositoriesResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ListSourceRepositoriesItems'
          description: Information about the source repositories.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
    ListSourceRepositoryBranchesItem:
      type: object
      properties:
        ref:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchRefString'
          description: The Git reference name of the branch.
        name:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchString'
          description: The name of the branch.
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the branch was last updated, in coordinated universal
            time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        headCommitId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The commit ID of the tip of the branch at the time of the request,
            also known as the head commit.
      description: Information about a branch of a source repository returned in a
        list of branches.
    ListSourceRepositoryBranchesItems:
      type: array
      items:
        $ref: '#/components/schemas/ListSourceRepositoryBranchesItem'
    ListSourceRepositoryBranchesRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        sourceRepositoryName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
      required:
      - spaceName
      - projectName
      - sourceRepositoryName
    ListSourceRepositoryBranchesResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        items:
          allOf:
          - $ref: '#/components/schemas/ListSourceRepositoryBranchesItems'
          description: Information about the source branches.
      required:
      - items
    ListSpacesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
    ListSpacesResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        items:
          allOf:
          - $ref: '#/components/schemas/SpaceSummaries'
          description: Information about the spaces.
    ListWorkflowRunsRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The ID of the workflow. To retrieve a list of workflow IDs,
            use ListWorkflows.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunSortCriteriaList'
          description: Information used to sort the items in the returned list.
      required:
      - spaceName
      - projectName
    ListWorkflowRunsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        items:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunSummaries'
          description: Information about the runs of a workflow.
    ListWorkflowsRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of results to show in a single call to this
            API. If the number of results is larger than the number you specified,
            the response will include a `NextToken` element, which you can use to
            obtain additional results.
        sortBy:
          allOf:
          - $ref: '#/components/schemas/WorkflowSortCriteriaList'
          description: Information used to sort the items in the returned list.
      required:
      - spaceName
      - projectName
    ListWorkflowsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token returned from a call to this API to indicate the next
            batch of results to return, if any.
        items:
          allOf:
          - $ref: '#/components/schemas/WorkflowSummaries'
          description: Information about the workflows in a project.
    NameString:
      type: string
      pattern: ^[a-zA-Z0-9]+(?:[-_\.][a-zA-Z0-9]+)*$
      minLength: 3
      maxLength: 63
    OperationType:
      type: string
      enum:
      - READONLY
      - MUTATION
    PersistentStorage:
      type: object
      properties:
        sizeInGiB:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The size of the persistent storage in gigabytes (specifically
            GiB).


            Valid values for storage are based on memory sizes in 16GB increments.
            Valid values are 16, 32, and 64.'
      required:
      - sizeInGiB
      description: Information about the persistent storage for a Dev Environment.
    PersistentStorageConfiguration:
      type: object
      properties:
        sizeInGiB:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: 'The size of the persistent storage in gigabytes (specifically
            GiB).


            Valid values for storage are based on memory sizes in 16GB increments.
            Valid values are 16, 32, and 64.'
      required:
      - sizeInGiB
      description: Information about the configuration of persistent storage for a
        Dev Environment.
    ProjectDescription:
      type: string
      pattern: "^[a-zA-Z0-9]+(?:[-_a-zA-Z0-9.,;:/\\+=?&$% \n\t\r])*$"
      minLength: 0
      maxLength: 200
    ProjectDisplayName:
      type: string
      pattern: ^[a-zA-Z0-9]+(?:[-_\. ][a-zA-Z0-9]+)*$
      minLength: 3
      maxLength: 63
    ProjectInformation:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the project in the space.
        projectId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the project.
      description: Information about a project in a space.
    ProjectListFilter:
      type: object
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/FilterKey'
          description: A key that can be used to sort results.
        values:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The values of the key.
        comparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: The operator used to compare the fields.
      required:
      - key
      - values
      description: nformation about the filter used to narrow the results returned
        in a list of projects.
    ProjectListFilters:
      type: array
      items:
        $ref: '#/components/schemas/ProjectListFilter'
    ProjectSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ProjectSummary'
    ProjectSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the project in the space.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name displayed to users of the project in Amazon
            CodeCatalyst.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the project.
      required:
      - name
      description: Information about a project.
    RegionString:
      type: string
      pattern: ^(us(?:-gov)?|af|ap|ca|cn|eu|sa)-(central|(?:north|south)?(?:east|west)?)-(\d+)$
      minLength: 3
      maxLength: 16
    RepositoriesInput:
      type: array
      items:
        $ref: '#/components/schemas/RepositoryInput'
    RepositoryInput:
      type: object
      properties:
        repositoryName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository.
        branchName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchString'
          description: The name of the branch in a source repository.
      required:
      - repositoryName
      description: Information about a repository that will be cloned to a Dev Environment.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request was denied because the specified resource was not found.
        Verify that the spelling is correct and that you have access to the resource.
    SensitiveString:
      type: string
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request was denied because one or more resources has reached
        its limits for the tier the space belongs to. Either reduce the number of
        resources, or change the tier if applicable.
    SourceRepositoryBranchRefString:
      type: string
      minLength: 1
      maxLength: 255
    SourceRepositoryBranchString:
      type: string
      minLength: 1
      maxLength: 100
    SourceRepositoryDescriptionString:
      type: string
      minLength: 1
      maxLength: 255
    SourceRepositoryIdString:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    SourceRepositoryNameString:
      type: string
      pattern: ^(?!.*[.]git$)[\w\-.]*$
      minLength: 1
      maxLength: 100
    SpaceDescription:
      type: string
      pattern: "^[a-zA-Z0-9]+(?:[-_a-zA-Z0-9.,;:/\\+=?&$% \n\t\r])*$"
      minLength: 0
      maxLength: 200
    SpaceSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SpaceSummary'
    SpaceSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        regionName:
          allOf:
          - $ref: '#/components/schemas/RegionString'
          description: The Amazon Web Services Region where the space exists.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name of the space displayed to users.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the space.
      required:
      - name
      - regionName
      description: Information about an space.
    StartDevEnvironmentRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        ides:
          allOf:
          - $ref: '#/components/schemas/IdeConfigurationList'
          description: Information about the integrated development environment (IDE)
            configured for a Dev Environment.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The Amazon EC2 instace type to use for the Dev Environment.
        inactivityTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/InactivityTimeoutMinutes'
          description: The amount of time the Dev Environment will run without any
            activity detected before stopping, in minutes. Only whole integers are
            allowed. Dev Environments consume compute minutes when running.
      required:
      - spaceName
      - projectName
      - id
    StartDevEnvironmentResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        status:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentStatus'
          description: The status of the Dev Environment.
      required:
      - spaceName
      - projectName
      - id
      - status
    StartDevEnvironmentSessionRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        sessionConfiguration:
          $ref: '#/components/schemas/DevEnvironmentSessionConfiguration'
      required:
      - spaceName
      - projectName
      - id
      - sessionConfiguration
    StartDevEnvironmentSessionResponse:
      type: object
      properties:
        accessDetails:
          $ref: '#/components/schemas/DevEnvironmentAccessDetails'
        sessionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the Dev Environment session.
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
      required:
      - accessDetails
      - spaceName
      - projectName
      - id
    StartWorkflowRunRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the workflow. To retrieve
            a list of workflow IDs, use ListWorkflows.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A user-specified idempotency token. Idempotency ensures that
            an API request completes only once. With an idempotent request, if the
            original request completes successfully, the subsequent retries return
            the result from the original successful request and have no additional
            effect.
      required:
      - spaceName
      - projectName
      - workflowId
    StartWorkflowRunResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the workflow run.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the workflow.
      required:
      - spaceName
      - projectName
      - id
      - workflowId
    StatusReason:
      type: string
      maxLength: 1024
    StopDevEnvironmentRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
      required:
      - spaceName
      - projectName
      - id
    StopDevEnvironmentResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        status:
          allOf:
          - $ref: '#/components/schemas/DevEnvironmentStatus'
          description: The status of the Dev Environment.
      required:
      - spaceName
      - projectName
      - id
      - status
    StopDevEnvironmentSessionRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment. To obtain
            this ID, use ListDevEnvironments.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the Dev Environment session.
            This ID is returned by StartDevEnvironmentSession.
      required:
      - spaceName
      - projectName
      - id
      - sessionId
    StopDevEnvironmentSessionResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        sessionId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the Dev Environment session.
      required:
      - spaceName
      - projectName
      - id
      - sessionId
    StringList:
      type: array
      items:
        type: string
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request was denied due to request throttling.
    Timestamp:
      type: string
      format: date-time
    UpdateDevEnvironmentRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        alias:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user-specified alias for the Dev Environment. Changing
            this value will not cause a restart.
        ides:
          allOf:
          - $ref: '#/components/schemas/IdeConfigurationList'
          description: Information about the integrated development environment (IDE)
            configured for a Dev Environment.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: 'The Amazon EC2 instace type to use for the Dev Environment.


            Changing this value will cause a restart of the Dev Environment if it
            is running.'
        inactivityTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/InactivityTimeoutMinutes'
          description: 'The amount of time the Dev Environment will run without any
            activity detected before stopping, in minutes. Only whole integers are
            allowed. Dev Environments consume compute minutes when running.


            Changing this value will cause a restart of the Dev Environment if it
            is running.'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A user-specified idempotency token. Idempotency ensures that
            an API request completes only once. With an idempotent request, if the
            original request completes successfully, the subsequent retries return
            the result from the original successful request and have no additional
            effect.
      required:
      - spaceName
      - projectName
      - id
    UpdateDevEnvironmentResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the Dev Environment.
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        projectName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project in the space.
        alias:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user-specified alias for the Dev Environment.
        ides:
          allOf:
          - $ref: '#/components/schemas/IdeConfigurationList'
          description: Information about the integrated development environment (IDE)
            configured for the Dev Environment.
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          description: The Amazon EC2 instace type to use for the Dev Environment.
        inactivityTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/InactivityTimeoutMinutes'
          description: The amount of time the Dev Environment will run without any
            activity detected before stopping, in minutes.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A user-specified idempotency token. Idempotency ensures that
            an API request completes only once. With an idempotent request, if the
            original request completes successfully, the subsequent retries return
            the result from the original successful request and have no additional
            effect.
      required:
      - id
      - spaceName
      - projectName
    UpdateProjectRequest:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project.
        description:
          allOf:
          - $ref: '#/components/schemas/ProjectDescription'
          description: The description of the project.
      required:
      - spaceName
      - name
    UpdateProjectResponse:
      type: object
      properties:
        spaceName:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the project.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name of the project displayed to users in Amazon
            CodeCatalyst.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the project.
    UpdateSpaceRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        description:
          allOf:
          - $ref: '#/components/schemas/SpaceDescription'
          description: The description of the space.
      required:
      - name
    UpdateSpaceResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/NameString'
          description: The name of the space.
        displayName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The friendly name of the space displayed to users in Amazon
            CodeCatalyst.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the space.
    UserIdentity:
      type: object
      properties:
        userType:
          allOf:
          - $ref: '#/components/schemas/UserType'
          description: The role assigned to the user in a Amazon CodeCatalyst space
            or project when the event occurred.
        principalId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Amazon CodeCatalyst service principal.
        userName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The display name of the user in Amazon CodeCatalyst.
        awsAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Web Services account number of the user in Amazon
            Web Services, if any.
      required:
      - userType
      - principalId
      description: Information about a user whose activity is recorded in an event
        for a space.
    UserType:
      type: string
      enum:
      - USER
      - AWS_ACCOUNT
      - UNKNOWN
    Uuid:
      type: string
      pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request was denied because an input failed to satisfy the constraints
        specified by the service. Check the spelling and input requirements, and then
        try again.
    VerifySessionResponse:
      type: object
      properties:
        identity:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The system-generated unique ID of the user in Amazon CodeCatalyst.
    WorkflowDefinition:
      type: object
      properties:
        path:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the workflow definition file stored in the source
            repository for the project, including the file name.
      required:
      - path
      description: Information about a workflow definition file.
    WorkflowDefinitionSummary:
      type: object
      properties:
        path:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The path to the workflow definition file stored in the source
            repository for the project, including the file name.
      required:
      - path
      description: Information about a workflow definition.
    WorkflowRunMode:
      type: string
      enum:
      - QUEUED
      - PARALLEL
      - SUPERSEDED
    WorkflowRunSortCriteria:
      type: object
      properties: {}
      description: Information used to sort workflow runs in the returned list.
    WorkflowRunSortCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowRunSortCriteria'
    WorkflowRunStatus:
      type: string
      enum:
      - SUCCEEDED
      - FAILED
      - STOPPED
      - SUPERSEDED
      - CANCELLED
      - NOT_RUN
      - VALIDATING
      - PROVISIONING
      - IN_PROGRESS
      - STOPPING
      - ABANDONED
    WorkflowRunStatusReason:
      type: object
      properties: {}
      description: Information about the status of a workflow run.
    WorkflowRunStatusReasons:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowRunStatusReason'
    WorkflowRunSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowRunSummary'
    WorkflowRunSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the workflow run.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of the workflow.
        workflowName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the workflow.
        status:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunStatus'
          description: The status of the workflow run.
        statusReasons:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunStatusReasons'
          description: The reasons for the workflow run status.
        startTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow run began, in coordinated universal
            time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6).
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow run ended, in coordinated universal
            time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow was last updated, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
      required:
      - id
      - workflowId
      - workflowName
      - status
      - startTime
      - lastUpdatedTime
      description: Information about a workflow run.
    WorkflowSortCriteria:
      type: object
      properties: {}
      description: Information used to sort workflows in the returned list.
    WorkflowSortCriteriaList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowSortCriteria'
    WorkflowStatus:
      type: string
      enum:
      - INVALID
      - ACTIVE
    WorkflowSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowSummary'
    WorkflowSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/Uuid'
          description: The system-generated unique ID of a workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the workflow.
        sourceRepositoryName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryNameString'
          description: The name of the source repository where the workflow definition
            file is stored.
        sourceBranchName:
          allOf:
          - $ref: '#/components/schemas/SourceRepositoryBranchString'
          description: The name of the branch of the source repository where the workflow
            definition file is stored.
        definition:
          allOf:
          - $ref: '#/components/schemas/WorkflowDefinitionSummary'
          description: Information about the workflow definition file.
        createdTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow was created, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        lastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time the workflow was last updated, in coordinated
            universal time (UTC) timestamp format as specified in [RFC 3339](https://www.rfc-editor.org/rfc/rfc3339#section-5.6)
        runMode:
          allOf:
          - $ref: '#/components/schemas/WorkflowRunMode'
          description: The run mode of the workflow.
        status:
          allOf:
          - $ref: '#/components/schemas/WorkflowStatus'
          description: The status of the workflow.
      required:
      - id
      - name
      - sourceRepositoryName
      - sourceBranchName
      - definition
      - createdTime
      - lastUpdatedTime
      - runMode
      - status
      description: Information about a workflow.
