openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: kafka
  x-aws-serviceName: kafka
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-11-14'
  title: Managed Streaming for Kafka
  description: |-
    The operations for managing an Amazon MSK cluster.
servers:
- description: The Managed Streaming for Kafka regional endpoint
  url: https://kafka.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/clusters/{ClusterArn}/scram-secrets:
    post:
      operationId: BatchAssociateScramSecret
      description: |-
        Associates one or more Scram Secrets with an Amazon MSK cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SecretArnList:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    patch:
      operationId: BatchDisassociateScramSecret
      description: |-
        Disassociates one or more Scram Secrets from an Amazon MSK cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SecretArnList:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListScramSecrets
      description: |-
        Returns a list of the Scram Secrets associated with an Amazon MSK cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters:
    post:
      operationId: CreateCluster
      description: |-
        Creates a new MSK cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BrokerNodeGroupInfo:
                  $ref: '#/components/schemas/BrokerNodeGroupInfo'
                ClientAuthentication:
                  $ref: '#/components/schemas/ClientAuthentication'
                ClusterName:
                  $ref: '#/components/schemas/__stringMin1Max64'
                ConfigurationInfo:
                  $ref: '#/components/schemas/ConfigurationInfo'
                EncryptionInfo:
                  $ref: '#/components/schemas/EncryptionInfo'
                EnhancedMonitoring:
                  $ref: '#/components/schemas/EnhancedMonitoring'
                OpenMonitoring:
                  $ref: '#/components/schemas/OpenMonitoringInfo'
                KafkaVersion:
                  $ref: '#/components/schemas/__stringMin1Max128'
                LoggingInfo:
                  $ref: '#/components/schemas/LoggingInfo'
                NumberOfBrokerNodes:
                  $ref: '#/components/schemas/__integerMin1Max15'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
                StorageMode:
                  $ref: '#/components/schemas/StorageMode'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListClusters
      description: |-
        Returns a list of all the MSK clusters in the current Region.
      parameters:
      - name: clusterNameFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /api/v2/clusters:
    post:
      operationId: CreateClusterV2
      description: |-
        Creates a new MSK cluster.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClusterName:
                  $ref: '#/components/schemas/__stringMin1Max64'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
                Provisioned:
                  $ref: '#/components/schemas/ProvisionedRequest'
                Serverless:
                  $ref: '#/components/schemas/ServerlessRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListClustersV2
      description: |-
        Returns a list of all the MSK clusters in the current Region.
      parameters:
      - name: clusterNameFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: clusterTypeFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/configurations:
    post:
      operationId: CreateConfiguration
      description: |-
        Creates a new MSK configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__string'
                KafkaVersions:
                  $ref: '#/components/schemas/__listOf__string'
                Name:
                  $ref: '#/components/schemas/__string'
                ServerProperties:
                  $ref: '#/components/schemas/__blob'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListConfigurations
      description: |-
        Returns a list of all the MSK configurations in this Region.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /replication/v1/replicators:
    post:
      operationId: CreateReplicator
      description: |-
        Creates the replicator.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__stringMax1024'
                KafkaClusters:
                  $ref: '#/components/schemas/__listOfKafkaCluster'
                ReplicationInfoList:
                  $ref: '#/components/schemas/__listOfReplicationInfo'
                ReplicatorName:
                  $ref: '#/components/schemas/__stringMin1Max128Pattern09AZaZ09AZaZ0'
                ServiceExecutionRoleArn:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: ListReplicators
      description: |-
        Lists the replicators.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: replicatorNameFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/vpc-connection:
    post:
      operationId: CreateVpcConnection
      description: |-
        Creates a new MSK VPC connection.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TargetClusterArn:
                  $ref: '#/components/schemas/__string'
                Authentication:
                  $ref: '#/components/schemas/__string'
                VpcId:
                  $ref: '#/components/schemas/__string'
                ClientSubnets:
                  $ref: '#/components/schemas/__listOf__string'
                SecurityGroups:
                  $ref: '#/components/schemas/__listOf__string'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}:
    delete:
      operationId: DeleteCluster
      description: |-
        Deletes the MSK cluster specified by the Amazon Resource Name (ARN) in the request.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: currentVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    get:
      operationId: DescribeCluster
      description: |-
        Returns a description of the MSK cluster whose Amazon Resource Name (ARN) is specified in the request.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/policy:
    delete:
      operationId: DeleteClusterPolicy
      description: |-
        Deletes the MSK cluster policy specified by the Amazon Resource Name (ARN) in the request.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    get:
      operationId: GetClusterPolicy
      description: |-
        Get the MSK cluster policy specified by the Amazon Resource Name (ARN) in the request.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    put:
      operationId: PutClusterPolicy
      description: |-
        Creates or updates the MSK cluster policy specified by the cluster Amazon Resource Name (ARN) in the request.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                Policy:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
  /v1/configurations/{Arn}:
    delete:
      operationId: DeleteConfiguration
      description: |-
        Deletes an MSK Configuration.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    get:
      operationId: DescribeConfiguration
      description: |-
        Returns a description of this MSK configuration.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    put:
      operationId: UpdateConfiguration
      description: |-
        Updates an MSK configuration.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Description:
                  $ref: '#/components/schemas/__string'
                ServerProperties:
                  $ref: '#/components/schemas/__blob'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /replication/v1/replicators/{ReplicatorArn}:
    delete:
      operationId: DeleteReplicator
      description: |-
        Deletes a replicator.
      parameters:
      - name: currentVersion
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: ReplicatorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
    get:
      operationId: DescribeReplicator
      description: |-
        Describes a replicator.
      parameters:
      - name: ReplicatorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/vpc-connection/{Arn}:
    delete:
      operationId: DeleteVpcConnection
      description: |-
        Deletes a MSK VPC connection.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    get:
      operationId: DescribeVpcConnection
      description: |-
        Returns a description of this MSK VPC connection.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/operations/{ClusterOperationArn}:
    get:
      operationId: DescribeClusterOperation
      description: |-
        Returns a description of the cluster operation specified by the ARN.
      parameters:
      - name: ClusterOperationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /api/v2/operations/{ClusterOperationArn}:
    get:
      operationId: DescribeClusterOperationV2
      description: |-
        Returns a description of the cluster operation specified by the ARN.
      parameters:
      - name: ClusterOperationArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /api/v2/clusters/{ClusterArn}:
    get:
      operationId: DescribeClusterV2
      description: |-
        Returns a description of the MSK cluster whose Amazon Resource Name (ARN) is specified in the request.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/configurations/{Arn}/revisions/{Revision}:
    get:
      operationId: DescribeConfigurationRevision
      description: |-
        Returns a description of this revision of the configuration.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: Revision
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__long'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/bootstrap-brokers:
    get:
      operationId: GetBootstrapBrokers
      description: |-
        A list of brokers that a client application can use to bootstrap. This list doesn't necessarily include all of the brokers in the cluster. The following Python 3.6 example shows how you can use the Amazon Resource Name (ARN) of a cluster to get its bootstrap brokers. If you don't know the ARN of your cluster, you can use the `ListClusters` operation to get the ARNs of all the clusters in this account and Region.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/compatible-kafka-versions:
    get:
      operationId: GetCompatibleKafkaVersions
      description: |-
        Gets the Apache Kafka versions to which you can update the MSK cluster.
      parameters:
      - name: clusterArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/client-vpc-connections:
    get:
      operationId: ListClientVpcConnections
      description: |-
        Returns a list of all the VPC connections in this Region.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/operations:
    get:
      operationId: ListClusterOperations
      description: |-
        Returns a list of all the operations that have been performed on the specified MSK cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /api/v2/clusters/{ClusterArn}/operations:
    get:
      operationId: ListClusterOperationsV2
      description: |-
        Returns a list of all the operations that have been performed on the specified MSK cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/configurations/{Arn}/revisions:
    get:
      operationId: ListConfigurationRevisions
      description: |-
        Returns a list of all the MSK configurations in this Region.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/kafka-versions:
    get:
      operationId: ListKafkaVersions
      description: |-
        Returns a list of Apache Kafka versions.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/nodes:
    get:
      operationId: ListNodes
      description: |-
        Returns a list of the broker nodes in the cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /v1/tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns a list of the tags associated with the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    post:
      operationId: TagResource
      description: |-
        Adds tags to the specified MSK resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '204': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
    delete:
      operationId: UntagResource
      description: |-
        Removes the tags associated with the keys that are provided in the query.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__listOf__string'
      responses:
        '204': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
  /v1/vpc-connections:
    get:
      operationId: ListVpcConnections
      description: |-
        Returns a list of all the VPC connections in this Region.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/reboot-broker:
    put:
      operationId: RebootBroker
      description: |-
        Reboots brokers.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BrokerIds:
                  $ref: '#/components/schemas/__listOf__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/client-vpc-connection:
    put:
      operationId: RejectClientVpcConnection
      description: |-
        Returns empty response.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VpcConnectionArn:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/nodes/count:
    put:
      operationId: UpdateBrokerCount
      description: |-
        Updates the number of broker nodes in the cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                TargetNumberOfBrokerNodes:
                  $ref: '#/components/schemas/__integerMin1Max15'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/nodes/storage:
    put:
      operationId: UpdateBrokerStorage
      description: |-
        Updates the EBS storage associated with MSK brokers.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                TargetBrokerEBSVolumeInfo:
                  $ref: '#/components/schemas/__listOfBrokerEBSVolumeInfo'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/nodes/type:
    put:
      operationId: UpdateBrokerType
      description: |-
        Updates EC2 instance type.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                TargetInstanceType:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/configuration:
    put:
      operationId: UpdateClusterConfiguration
      description: |-
        Updates the cluster with the configuration that is specified in the request body.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationInfo:
                  $ref: '#/components/schemas/ConfigurationInfo'
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/version:
    put:
      operationId: UpdateClusterKafkaVersion
      description: |-
        Updates the Apache Kafka version for the cluster.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConfigurationInfo:
                  $ref: '#/components/schemas/ConfigurationInfo'
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                TargetKafkaVersion:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/connectivity:
    put:
      operationId: UpdateConnectivity
      description: |-
        Updates the cluster's connectivity configuration.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConnectivityInfo:
                  $ref: '#/components/schemas/ConnectivityInfo'
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/monitoring:
    put:
      operationId: UpdateMonitoring
      description: |-
        Updates the monitoring settings for the cluster. You can use this operation to specify which Apache Kafka metrics you want Amazon MSK to send to Amazon CloudWatch. You can also specify settings for open monitoring with Prometheus.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                EnhancedMonitoring:
                  $ref: '#/components/schemas/EnhancedMonitoring'
                OpenMonitoring:
                  $ref: '#/components/schemas/OpenMonitoringInfo'
                LoggingInfo:
                  $ref: '#/components/schemas/LoggingInfo'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /replication/v1/replicators/{ReplicatorArn}/replication-info:
    put:
      operationId: UpdateReplicationInfo
      description: |-
        Updates replication info of a replicator.
      parameters:
      - name: ReplicatorArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ConsumerGroupReplication:
                  $ref: '#/components/schemas/ConsumerGroupReplicationUpdate'
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                SourceKafkaClusterArn:
                  $ref: '#/components/schemas/__string'
                TargetKafkaClusterArn:
                  $ref: '#/components/schemas/__string'
                TopicReplication:
                  $ref: '#/components/schemas/TopicReplicationUpdate'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/security:
    patch:
      operationId: UpdateSecurity
      description: |-
        Updates the security settings for the cluster. You can use this operation to specify encryption and authentication on existing clusters.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ClientAuthentication:
                  $ref: '#/components/schemas/ClientAuthentication'
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                EncryptionInfo:
                  $ref: '#/components/schemas/EncryptionInfo'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
  /v1/clusters/{ClusterArn}/storage:
    put:
      operationId: UpdateStorage
      description: |-
        Updates cluster broker volume size (or) sets cluster storage mode to TIERED.
      parameters:
      - name: ClusterArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CurrentVersion:
                  $ref: '#/components/schemas/__string'
                ProvisionedThroughput:
                  $ref: '#/components/schemas/ProvisionedThroughput'
                StorageMode:
                  $ref: '#/components/schemas/StorageMode'
                VolumeSizeGB:
                  $ref: '#/components/schemas/__integer'
      responses:
        '200': {}
        '400':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '404':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '503':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
        '401':
          description: |-
            Returns information about an error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedException'
components:
  schemas:
    AmazonMskCluster:
      type: object
      properties:
        MskClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of an Amazon MSK cluster.
      required:
      - MskClusterArn
      description: Details of an Amazon MSK Cluster.
    BadRequestException:
      type: object
      properties:
        InvalidParameter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The parameter that caused the error.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the error.
      description: Returns information about an error.
    BatchAssociateScramSecretRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster to be updated.
        SecretArnList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of AWS Secrets Manager secret ARNs.
      required:
      - ClusterArn
      - SecretArnList
      description: Associates sasl scram secrets to cluster.
    BatchAssociateScramSecretResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        UnprocessedScramSecrets:
          allOf:
          - $ref: '#/components/schemas/__listOfUnprocessedScramSecret'
          description: List of errors when associating secrets to cluster.
    BatchDisassociateScramSecretRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster to be updated.
        SecretArnList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of AWS Secrets Manager secret ARNs.
      required:
      - ClusterArn
      - SecretArnList
      description: Disassociates sasl scram secrets to cluster.
    BatchDisassociateScramSecretResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        UnprocessedScramSecrets:
          allOf:
          - $ref: '#/components/schemas/__listOfUnprocessedScramSecret'
          description: List of errors when disassociating secrets to cluster.
    BrokerAZDistribution:
      type: string
      enum:
      - DEFAULT
      description: "<p>The distribution of broker nodes across Availability Zones.\
        \ This is an optional parameter. If you don't specify it, Amazon MSK gives\
        \ it the value DEFAULT. You can also explicitly set this parameter to the\
        \ value DEFAULT. No other values are currently allowed.</p>\n         <p>Amazon\
        \ MSK distributes the broker nodes evenly across the Availability Zones that\
        \ correspond to the subnets you provide when you create the cluster.</p>"
    BrokerCountUpdateInfo:
      type: object
      properties:
        CreatedBrokerIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__double'
          description: Kafka Broker IDs of brokers being created.
        DeletedBrokerIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__double'
          description: Kafka Broker IDs of brokers being deleted.
      description: Information regarding UpdateBrokerCount.
    BrokerEBSVolumeInfo:
      type: object
      properties:
        KafkaBrokerNodeId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the broker to update.
        ProvisionedThroughput:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughput'
          description: EBS volume provisioned throughput information.
        VolumeSizeGB:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Size of the EBS volume to update.
      required:
      - KafkaBrokerNodeId
      description: Specifies the EBS volume upgrade information. The broker identifier
        must be set to the keyword ALL. This means the changes apply to all the brokers
        in the cluster.
    BrokerLogs:
      type: object
      properties:
        CloudWatchLogs:
          $ref: '#/components/schemas/CloudWatchLogs'
        Firehose:
          $ref: '#/components/schemas/Firehose'
        S3:
          $ref: '#/components/schemas/S3'
    BrokerNodeGroupInfo:
      type: object
      properties:
        BrokerAZDistribution:
          allOf:
          - $ref: '#/components/schemas/BrokerAZDistribution'
          description: 'The distribution of broker nodes across Availability Zones.
            This is an optional parameter. If you don''t specify it, Amazon MSK gives
            it the value DEFAULT. You can also explicitly set this parameter to the
            value DEFAULT. No other values are currently allowed.


            Amazon MSK distributes the broker nodes evenly across the Availability
            Zones that correspond to the subnets you provide when you create the cluster.'
        ClientSubnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of subnets to connect to in the client virtual private
            cloud (VPC). AWS creates elastic network interfaces inside these subnets.
            Client applications use elastic network interfaces to produce and consume
            data. Client subnets can't occupy the Availability Zone with ID use use1-az3.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/__stringMin5Max32'
          description: 'The type of Amazon EC2 instances to use for Apache Kafka brokers.
            The following instance types are allowed: kafka.m5.large, kafka.m5.xlarge,
            kafka.m5.2xlarge, kafka.m5.4xlarge, kafka.m5.12xlarge, and kafka.m5.24xlarge.'
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The AWS security groups to associate with the elastic network
            interfaces in order to specify who can connect to and communicate with
            the Amazon MSK cluster. If you don't specify a security group, Amazon
            MSK uses the default security group associated with the VPC.
        StorageInfo:
          allOf:
          - $ref: '#/components/schemas/StorageInfo'
          description: Contains information about storage volumes attached to MSK
            broker nodes.
        ConnectivityInfo:
          allOf:
          - $ref: '#/components/schemas/ConnectivityInfo'
          description: Information about the broker access configuration.
        ZoneIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of zoneIds for the cluster in the virtual private
            cloud (VPC).
      required:
      - ClientSubnets
      - InstanceType
      description: Describes the setup to be used for Apache Kafka broker nodes in
        the cluster.
    BrokerNodeInfo:
      type: object
      properties:
        AttachedENIId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The attached elastic network interface of the broker.
        BrokerId:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The ID of the broker.
        ClientSubnet:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The client subnet to which this broker node belongs.
        ClientVpcIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The virtual private cloud (VPC) of the client.
        CurrentBrokerSoftwareInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerSoftwareInfo'
          description: Information about the version of software currently deployed
            on the Apache Kafka brokers in the cluster.
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Endpoints for accessing the broker.
      description: BrokerNodeInfo
    BrokerSoftwareInfo:
      type: object
      properties:
        ConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the configuration used for
            the cluster. This field isn't visible in this preview release.
        ConfigurationRevision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision of the configuration to use. This field isn't
            visible in this preview release.
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of Apache Kafka.
      description: Information about the current software installed on the cluster.
    ClientAuthentication:
      type: object
      properties:
        Sasl:
          allOf:
          - $ref: '#/components/schemas/Sasl'
          description: Details for ClientAuthentication using SASL.
        Tls:
          allOf:
          - $ref: '#/components/schemas/Tls'
          description: Details for ClientAuthentication using TLS.
        Unauthenticated:
          allOf:
          - $ref: '#/components/schemas/Unauthenticated'
          description: Contains information about unauthenticated traffic to the cluster.
      description: Includes all client authentication information.
    ClientBroker:
      type: string
      enum:
      - TLS
      - TLS_PLAINTEXT
      - PLAINTEXT
      description: <p>Client-broker encryption in transit setting.</p>
    ClientVpcConnection:
      type: object
      properties:
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Information about the auth scheme of Vpc Connection.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: Creation time of the Vpc Connection.
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          description: State of the Vpc Connection.
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN that identifies the Vpc Connection.
        Owner:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Owner of the Vpc Connection.
      required:
      - VpcConnectionArn
      description: The client VPC connection object.
    CloudWatchLogs:
      type: object
      properties:
        Enabled:
          $ref: '#/components/schemas/__boolean'
        LogGroup:
          $ref: '#/components/schemas/__string'
      required:
      - Enabled
    Cluster:
      type: object
      properties:
        ActiveOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies a cluster
            operation.
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: Cluster Type.
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the cluster.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the cluster was created.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the MSK cluster.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The state of the cluster. The possible states are ACTIVE, CREATING,
            DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
        StateInfo:
          allOf:
          - $ref: '#/components/schemas/StateInfo'
          description: State Info for the Amazon MSK cluster.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: Tags attached to the cluster.
        Provisioned:
          allOf:
          - $ref: '#/components/schemas/Provisioned'
          description: Information about the provisioned cluster.
        Serverless:
          allOf:
          - $ref: '#/components/schemas/Serverless'
          description: Information about the serverless cluster.
      description: Returns information about a cluster.
    ClusterInfo:
      type: object
      properties:
        ActiveOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Arn of active cluster operation.
        BrokerNodeGroupInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerNodeGroupInfo'
          description: Information about the broker nodes.
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/ClientAuthentication'
          description: Includes all client authentication information.
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the cluster.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the cluster was created.
        CurrentBrokerSoftwareInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerSoftwareInfo'
          description: Information about the version of software currently deployed
            on the Apache Kafka brokers in the cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the MSK cluster.
        EncryptionInfo:
          allOf:
          - $ref: '#/components/schemas/EncryptionInfo'
          description: Includes all encryption-related information.
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          description: 'Specifies which metrics are gathered for the MSK cluster.
            This property has the following possible values: DEFAULT, PER_BROKER,
            PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION. For a list of the metrics
            associated with each of these levels of monitoring, see [Monitoring](https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html).'
        OpenMonitoring:
          allOf:
          - $ref: '#/components/schemas/OpenMonitoring'
          description: Settings for open monitoring using Prometheus.
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of broker nodes in the cluster.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The state of the cluster. The possible states are ACTIVE, CREATING,
            DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
        StateInfo:
          $ref: '#/components/schemas/StateInfo'
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: Tags attached to the cluster.
        ZookeeperConnectString:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The connection string to use to connect to the Apache ZooKeeper
            cluster.
        ZookeeperConnectStringTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The connection string to use to connect to zookeeper cluster
            on Tls port.
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          description: This controls storage mode for supported storage tiers.
        CustomerActionStatus:
          allOf:
          - $ref: '#/components/schemas/CustomerActionStatus'
          description: Determines if there is an action required from the customer.
      description: Returns information about a cluster.
    ClusterOperationInfo:
      type: object
      properties:
        ClientRequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ID of the API request that triggered this operation.
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the cluster.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time that the operation was created.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time at which the operation finished.
        ErrorInfo:
          allOf:
          - $ref: '#/components/schemas/ErrorInfo'
          description: Describes the error if the operation fails.
        OperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the cluster operation.
        OperationState:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: State of the cluster operation.
        OperationSteps:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterOperationStep'
          description: Steps completed during the operation.
        OperationType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Type of the cluster operation.
        SourceClusterInfo:
          allOf:
          - $ref: '#/components/schemas/MutableClusterInfo'
          description: Information about cluster attributes before a cluster is updated.
        TargetClusterInfo:
          allOf:
          - $ref: '#/components/schemas/MutableClusterInfo'
          description: Information about cluster attributes after a cluster is updated.
        VpcConnectionInfo:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionInfo'
          description: Description of the VPC connection for CreateVpcConnection and
            DeleteVpcConnection operations.
      description: Returns information about a cluster operation.
    ClusterOperationStep:
      type: object
      properties:
        StepInfo:
          allOf:
          - $ref: '#/components/schemas/ClusterOperationStepInfo'
          description: Information about the step and its status.
        StepName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the step.
      description: Step taken during a cluster operation.
    ClusterOperationStepInfo:
      type: object
      properties:
        StepStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The steps current status.
      description: State information about the operation step.
    ClusterOperationV2:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the cluster.
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: Type of the backend cluster.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time at which operation was started.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time at which the operation finished.
        ErrorInfo:
          allOf:
          - $ref: '#/components/schemas/ErrorInfo'
          description: If cluster operation failed from an error, it describes the
            error.
        OperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the cluster operation.
        OperationState:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: State of the cluster operation.
        OperationType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Type of the cluster operation.
        Provisioned:
          allOf:
          - $ref: '#/components/schemas/ClusterOperationV2Provisioned'
          description: Properties of a provisioned cluster.
        Serverless:
          allOf:
          - $ref: '#/components/schemas/ClusterOperationV2Serverless'
          description: Properties of a serverless cluster.
      description: Returns information about a cluster operation.
    ClusterOperationV2Provisioned:
      type: object
      properties:
        OperationSteps:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterOperationStep'
          description: Steps completed during the operation.
        SourceClusterInfo:
          allOf:
          - $ref: '#/components/schemas/MutableClusterInfo'
          description: Information about cluster attributes before a cluster is updated.
        TargetClusterInfo:
          allOf:
          - $ref: '#/components/schemas/MutableClusterInfo'
          description: Information about cluster attributes after a cluster is updated.
        VpcConnectionInfo:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionInfo'
          description: Description of the VPC connection for CreateVpcConnection and
            DeleteVpcConnection operations.
      description: Returns information about a provisioned cluster operation.
    ClusterOperationV2Serverless:
      type: object
      properties:
        VpcConnectionInfo:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionInfoServerless'
          description: Description of the VPC connection for CreateVpcConnection and
            DeleteVpcConnection operations.
      description: Returns information about a serverless cluster operation.
    ClusterOperationV2Summary:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the cluster.
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: Type of the backend cluster.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time at which operation was started.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time at which the operation finished.
        OperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the cluster operation.
        OperationState:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: State of the cluster operation.
        OperationType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Type of the cluster operation.
      description: Returns information about a cluster operation.
    ClusterState:
      type: string
      enum:
      - ACTIVE
      - CREATING
      - DELETING
      - FAILED
      - HEALING
      - MAINTENANCE
      - REBOOTING_BROKER
      - UPDATING
      description: <p>The state of the Apache Kafka cluster.</p>
    ClusterType:
      type: string
      enum:
      - PROVISIONED
      - SERVERLESS
      description: <p>The type of cluster.</p>
    CompatibleKafkaVersion:
      type: object
      properties:
        SourceVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An Apache Kafka version.
        TargetVersions:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: A list of Apache Kafka versions.
      description: Contains source Apache Kafka versions and compatible target Apache
        Kafka versions.
    Configuration:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the configuration.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the configuration was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the configuration.
        KafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: An array of the versions of Apache Kafka with which you can
            use this MSK configuration. You can use this configuration for an MSK
            cluster only if the Apache Kafka version specified for the cluster appears
            in this array.
        LatestRevision:
          allOf:
          - $ref: '#/components/schemas/ConfigurationRevision'
          description: Latest revision of the configuration.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the configuration.
        State:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          description: The state of the configuration. The possible states are ACTIVE,
            DELETING, and DELETE_FAILED.
      required:
      - Arn
      - CreationTime
      - Description
      - KafkaVersions
      - LatestRevision
      - Name
      - State
      description: Represents an MSK Configuration.
    ConfigurationInfo:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the configuration to use.
        Revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision of the configuration to use.
      required:
      - Arn
      - Revision
      description: Specifies the configuration to use for the brokers.
    ConfigurationRevision:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the configuration revision was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the configuration revision.
        Revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision number.
      required:
      - CreationTime
      - Revision
      description: Describes a configuration revision.
    ConfigurationState:
      type: string
      enum:
      - ACTIVE
      - DELETING
      - DELETE_FAILED
      description: <p>The state of a configuration.</p>
    ConflictException:
      type: object
      properties:
        InvalidParameter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The parameter that caused the error.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the error.
      description: Returns information about an error.
    ConnectivityInfo:
      type: object
      properties:
        PublicAccess:
          allOf:
          - $ref: '#/components/schemas/PublicAccess'
          description: Public access control for brokers.
        VpcConnectivity:
          allOf:
          - $ref: '#/components/schemas/VpcConnectivity'
          description: VPC connectivity access control for brokers.
      description: Information about the broker access configuration.
    ConsumerGroupReplication:
      type: object
      properties:
        ConsumerGroupsToExclude:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax256'
          description: List of regular expression patterns indicating the consumer
            groups that should not be replicated.
        ConsumerGroupsToReplicate:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax256'
          description: List of regular expression patterns indicating the consumer
            groups to copy.
        DetectAndCopyNewConsumerGroups:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Enables synchronization of consumer groups to target cluster.
        SynchroniseConsumerGroupOffsets:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Enables synchronization of consumer group offsets to target
            cluster. The translated offsets will be written to topic __consumer_offsets.
      required:
      - ConsumerGroupsToReplicate
      description: Details about consumer group replication.
    ConsumerGroupReplicationUpdate:
      type: object
      properties:
        ConsumerGroupsToExclude:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax256'
          description: List of regular expression patterns indicating the consumer
            groups that should not be replicated.
        ConsumerGroupsToReplicate:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax256'
          description: List of regular expression patterns indicating the consumer
            groups to copy.
        DetectAndCopyNewConsumerGroups:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Enables synchronization of consumer groups to target cluster.
        SynchroniseConsumerGroupOffsets:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Enables synchronization of consumer group offsets to target
            cluster. The translated offsets will be written to topic __consumer_offsets.
      required:
      - ConsumerGroupsToExclude
      - ConsumerGroupsToReplicate
      - DetectAndCopyNewConsumerGroups
      - SynchroniseConsumerGroupOffsets
      description: Details about consumer group replication.
    ControllerNodeInfo:
      type: object
      properties:
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Endpoints for accessing the Controller.
      description: Controller node information.
    CreateClusterRequest:
      type: object
      properties:
        BrokerNodeGroupInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerNodeGroupInfo'
          description: Information about the broker nodes in the cluster.
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/ClientAuthentication'
          description: Includes all client authentication related information.
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64'
          description: The name of the cluster.
        ConfigurationInfo:
          allOf:
          - $ref: '#/components/schemas/ConfigurationInfo'
          description: Represents the configuration that you want MSK to use for the
            brokers in a cluster.
        EncryptionInfo:
          allOf:
          - $ref: '#/components/schemas/EncryptionInfo'
          description: Includes all encryption-related information.
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          description: Specifies the level of monitoring for the MSK cluster. The
            possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.
        OpenMonitoring:
          allOf:
          - $ref: '#/components/schemas/OpenMonitoringInfo'
          description: The settings for open monitoring.
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128'
          description: The version of Apache Kafka.
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          description: The number of broker nodes in the cluster.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: Create tags when creating the cluster.
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          description: This controls storage mode for supported storage tiers.
      required:
      - BrokerNodeGroupInfo
      - ClusterName
      - KafkaVersion
      - NumberOfBrokerNodes
    CreateClusterResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the MSK cluster.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The state of the cluster. The possible states are ACTIVE, CREATING,
            DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
    CreateClusterV2Request:
      type: object
      properties:
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max64'
          description: The name of the cluster.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: A map of tags that you want the cluster to have.
        Provisioned:
          allOf:
          - $ref: '#/components/schemas/ProvisionedRequest'
          description: Information about the provisioned cluster.
        Serverless:
          allOf:
          - $ref: '#/components/schemas/ServerlessRequest'
          description: Information about the serverless cluster.
      required:
      - ClusterName
    CreateClusterV2Response:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the MSK cluster.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The state of the cluster. The possible states are ACTIVE, CREATING,
            DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
        ClusterType:
          allOf:
          - $ref: '#/components/schemas/ClusterType'
          description: The type of the cluster. The possible states are PROVISIONED
            or SERVERLESS.
    CreateConfigurationRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the configuration.
        KafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The versions of Apache Kafka with which you can use this MSK
            configuration.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the configuration.
        ServerProperties:
          allOf:
          - $ref: '#/components/schemas/__blob'
          description: Contents of the server.properties file. When using the API,
            you must ensure that the contents of the file are base64 encoded. When
            using the AWS Management Console, the SDK, or the AWS CLI, the contents
            of server.properties can be in plaintext.
      required:
      - Name
      - ServerProperties
    CreateConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the configuration.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the configuration was created.
        LatestRevision:
          allOf:
          - $ref: '#/components/schemas/ConfigurationRevision'
          description: Latest revision of the configuration.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the configuration.
        State:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          description: The state of the configuration. The possible states are ACTIVE,
            DELETING, and DELETE_FAILED.
    CreateReplicatorRequest:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__stringMax1024'
          description: A summary description of the replicator.
        KafkaClusters:
          allOf:
          - $ref: '#/components/schemas/__listOfKafkaCluster'
          description: Kafka Clusters to use in setting up sources / targets for replication.
        ReplicationInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfReplicationInfo'
          description: A list of replication configurations, where each configuration
            targets a given source cluster to target cluster replication flow.
        ReplicatorName:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128Pattern09AZaZ09AZaZ0'
          description: The name of the replicator. Alpha-numeric characters with '-'
            are allowed.
        ServiceExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the IAM role used by the replicator to access resources
            in the customer's account (e.g source and target clusters)
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: List of tags to attach to created Replicator.
      required:
      - KafkaClusters
      - ReplicationInfoList
      - ReplicatorName
      - ServiceExecutionRoleArn
      description: Creates a replicator using the specified configuration.
    CreateReplicatorResponse:
      type: object
      properties:
        ReplicatorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator.
        ReplicatorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Name of the replicator provided by the customer.
        ReplicatorState:
          allOf:
          - $ref: '#/components/schemas/ReplicatorState'
          description: State of the replicator.
    CreateVpcConnectionRequest:
      type: object
      properties:
        TargetClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The cluster Amazon Resource Name (ARN) for the VPC connection.
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The authentication type of VPC connection.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The VPC ID of VPC connection.
        ClientSubnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of client subnets.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of security groups.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: A map of tags for the VPC connection.
      required:
      - TargetClusterArn
      - Authentication
      - VpcId
      - ClientSubnets
      - SecurityGroups
    CreateVpcConnectionResponse:
      type: object
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The VPC connection ARN.
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          description: The State of Vpc Connection.
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The authentication type of VPC connection.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The VPC ID of the VPC connection.
        ClientSubnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of client subnets.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of security groups.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The creation time of VPC connection.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: A map of tags for the VPC connection.
    CustomerActionStatus:
      type: string
      enum:
      - CRITICAL_ACTION_REQUIRED
      - ACTION_RECOMMENDED
      - NONE
      description: <p>A type of an action required from the customer.</p>
    DeleteClusterPolicyRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
      required:
      - ClusterArn
    DeleteClusterPolicyResponse:
      type: object
      properties: {}
    DeleteClusterRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the MSK cluster.
      required:
      - ClusterArn
    DeleteClusterResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        State:
          allOf:
          - $ref: '#/components/schemas/ClusterState'
          description: The state of the cluster. The possible states are ACTIVE, CREATING,
            DELETING, FAILED, HEALING, MAINTENANCE, REBOOTING_BROKER, and UPDATING.
    DeleteConfigurationRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies an
            MSK configuration.
      required:
      - Arn
    DeleteConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies an
            MSK configuration.
        State:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          description: The state of the configuration. The possible states are ACTIVE,
            DELETING, and DELETE_FAILED.
    DeleteReplicatorRequest:
      type: object
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the replicator.
        ReplicatorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator to be deleted.
      required:
      - ReplicatorArn
    DeleteReplicatorResponse:
      type: object
      properties:
        ReplicatorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator.
        ReplicatorState:
          allOf:
          - $ref: '#/components/schemas/ReplicatorState'
          description: The state of the replicator.
    DeleteVpcConnectionRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies an
            MSK VPC connection.
      required:
      - Arn
    DeleteVpcConnectionResponse:
      type: object
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies an
            MSK VPC connection.
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          description: The state of the VPC connection.
    DescribeClusterOperationRequest:
      type: object
      properties:
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            MSK cluster operation.
      required:
      - ClusterOperationArn
    DescribeClusterOperationResponse:
      type: object
      properties:
        ClusterOperationInfo:
          allOf:
          - $ref: '#/components/schemas/ClusterOperationInfo'
          description: Cluster operation information
    DescribeClusterOperationV2Request:
      type: object
      properties:
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: ARN of the cluster operation to describe.
      required:
      - ClusterOperationArn
    DescribeClusterOperationV2Response:
      type: object
      properties:
        ClusterOperationInfo:
          allOf:
          - $ref: '#/components/schemas/ClusterOperationV2'
          description: Cluster operation information
    DescribeClusterRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
      required:
      - ClusterArn
    DescribeClusterResponse:
      type: object
      properties:
        ClusterInfo:
          allOf:
          - $ref: '#/components/schemas/ClusterInfo'
          description: The cluster information.
    DescribeClusterV2Request:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
      required:
      - ClusterArn
    DescribeClusterV2Response:
      type: object
      properties:
        ClusterInfo:
          allOf:
          - $ref: '#/components/schemas/Cluster'
          description: The cluster information.
    DescribeConfigurationRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies an
            MSK configuration and all of its revisions.
      required:
      - Arn
    DescribeConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the configuration.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the configuration was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the configuration.
        KafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The versions of Apache Kafka with which you can use this MSK
            configuration.
        LatestRevision:
          allOf:
          - $ref: '#/components/schemas/ConfigurationRevision'
          description: Latest revision of the configuration.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the configuration.
        State:
          allOf:
          - $ref: '#/components/schemas/ConfigurationState'
          description: The state of the configuration. The possible states are ACTIVE,
            DELETING, and DELETE_FAILED.
    DescribeConfigurationRevisionRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies an
            MSK configuration and all of its revisions.
        Revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: A string that uniquely identifies a revision of an MSK configuration.
      required:
      - Arn
      - Revision
    DescribeConfigurationRevisionResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the configuration.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the configuration was created.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the configuration.
        Revision:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The revision number.
        ServerProperties:
          allOf:
          - $ref: '#/components/schemas/__blob'
          description: Contents of the server.properties file. When using the API,
            you must ensure that the contents of the file are base64 encoded. When
            using the AWS Management Console, the SDK, or the AWS CLI, the contents
            of server.properties can be in plaintext.
    DescribeReplicatorRequest:
      type: object
      properties:
        ReplicatorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator to be described.
      required:
      - ReplicatorArn
    DescribeReplicatorResponse:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when the replicator was created.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version number of the replicator.
        IsReplicatorReference:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether this resource is a replicator reference.
        KafkaClusters:
          allOf:
          - $ref: '#/components/schemas/__listOfKafkaClusterDescription'
          description: Kafka Clusters used in setting up sources / targets for replication.
        ReplicationInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfReplicationInfoDescription'
          description: A list of replication configurations, where each configuration
            targets a given source cluster to target cluster replication flow.
        ReplicatorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator.
        ReplicatorDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the replicator.
        ReplicatorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the replicator.
        ReplicatorResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator resource in
            the region where the replicator was created.
        ReplicatorState:
          allOf:
          - $ref: '#/components/schemas/ReplicatorState'
          description: State of the replicator.
        ServiceExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the IAM role used by the
            replicator to access resources in the customer's account (e.g source and
            target clusters)
        StateInfo:
          allOf:
          - $ref: '#/components/schemas/ReplicationStateInfo'
          description: Details about the state of the replicator.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: List of tags attached to the Replicator.
    DescribeVpcConnectionRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies a MSK
            VPC connection.
      required:
      - Arn
    DescribeVpcConnectionResponse:
      type: object
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies a MSK
            VPC connection.
        TargetClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies an
            MSK cluster.
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          description: The state of VPC connection.
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The authentication type of VPC connection.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The VPC Id for the VPC connection.
        Subnets:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of subnets for the VPC connection.
        SecurityGroups:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of security groups for the VPC connection.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The creation time of the VPC connection.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: A map of tags for the VPC connection.
    EBSStorageInfo:
      type: object
      properties:
        ProvisionedThroughput:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughput'
          description: EBS volume provisioned throughput information.
        VolumeSize:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max16384'
          description: The size in GiB of the EBS volume for the data drive on each
            broker node.
      description: Contains information about the EBS storage volumes attached to
        Apache Kafka broker nodes.
    EncryptionAtRest:
      type: object
      properties:
        DataVolumeKMSKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the AWS KMS key for encrypting data at rest. If
            you don't specify a KMS key, MSK creates one for you and uses it.
      required:
      - DataVolumeKMSKeyId
      description: The data-volume encryption details.
    EncryptionInTransit:
      type: object
      properties:
        ClientBroker:
          allOf:
          - $ref: '#/components/schemas/ClientBroker'
          description: 'Indicates the encryption setting for data in transit between
            clients and brokers. The following are the possible values.


            TLS means that client-broker communication is enabled with TLS only.


            TLS_PLAINTEXT means that client-broker communication is enabled for both
            TLS-encrypted, as well as plaintext data.


            PLAINTEXT means that client-broker communication is enabled in plaintext
            only.


            The default value is TLS_PLAINTEXT.'
        InCluster:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'When set to true, it indicates that data communication among
            the broker nodes of the cluster is encrypted. When set to false, the communication
            happens in plaintext.


            The default value is true.'
      description: The settings for encrypting data in transit.
    EncryptionInfo:
      type: object
      properties:
        EncryptionAtRest:
          allOf:
          - $ref: '#/components/schemas/EncryptionAtRest'
          description: The data-volume encryption details.
        EncryptionInTransit:
          allOf:
          - $ref: '#/components/schemas/EncryptionInTransit'
          description: The details for encryption in transit.
      description: Includes encryption-related information, such as the AWS KMS key
        used for encrypting data at rest and whether you want MSK to encrypt your
        data in transit.
    EnhancedMonitoring:
      type: string
      enum:
      - DEFAULT
      - PER_BROKER
      - PER_TOPIC_PER_BROKER
      - PER_TOPIC_PER_PARTITION
      description: '<p>Specifies which metrics are gathered for the MSK cluster. This
        property has the following possible values: DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER,
        and PER_TOPIC_PER_PARTITION. For a list of the metrics associated with each
        of these levels of monitoring, see <a href="https://docs.aws.amazon.com/msk/latest/developerguide/monitoring.html">Monitoring</a>.</p>'
    ErrorInfo:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A number describing the error programmatically.
        ErrorString:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional field to provide more details about the error.
      description: Returns information about an error state of the cluster.
    Firehose:
      type: object
      properties:
        DeliveryStream:
          $ref: '#/components/schemas/__string'
        Enabled:
          $ref: '#/components/schemas/__boolean'
      required:
      - Enabled
    ForbiddenException:
      type: object
      properties:
        InvalidParameter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The parameter that caused the error.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the error.
      description: Returns information about an error.
    GetBootstrapBrokersRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
      required:
      - ClusterArn
    GetBootstrapBrokersResponse:
      type: object
      properties:
        BootstrapBrokerString:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string containing one or more hostname:port pairs.
        BootstrapBrokerStringTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string containing one or more DNS names (or IP) and TLS port
            pairs.
        BootstrapBrokerStringSaslScram:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string containing one or more DNS names (or IP) and Sasl
            Scram port pairs.
        BootstrapBrokerStringSaslIam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string that contains one or more DNS names (or IP addresses)
            and SASL IAM port pairs.
        BootstrapBrokerStringPublicTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string containing one or more DNS names (or IP) and TLS port
            pairs.
        BootstrapBrokerStringPublicSaslScram:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string containing one or more DNS names (or IP) and Sasl
            Scram port pairs.
        BootstrapBrokerStringPublicSaslIam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string that contains one or more DNS names (or IP addresses)
            and SASL IAM port pairs.
        BootstrapBrokerStringVpcConnectivityTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string containing one or more DNS names (or IP) and TLS port
            pairs for VPC connectivity.
        BootstrapBrokerStringVpcConnectivitySaslScram:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string containing one or more DNS names (or IP) and SASL/SCRAM
            port pairs for VPC connectivity.
        BootstrapBrokerStringVpcConnectivitySaslIam:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string containing one or more DNS names (or IP) and SASL/IAM
            port pairs for VPC connectivity.
    GetClusterPolicyRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
      required:
      - ClusterArn
    GetClusterPolicyResponse:
      type: object
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of cluster policy.
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The cluster policy.
    GetCompatibleKafkaVersionsRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster check.
    GetCompatibleKafkaVersionsResponse:
      type: object
      properties:
        CompatibleKafkaVersions:
          allOf:
          - $ref: '#/components/schemas/__listOfCompatibleKafkaVersion'
          description: A list of CompatibleKafkaVersion objects.
    Iam:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether IAM access control is enabled.
      description: Details for IAM access control.
    InternalServerErrorException:
      type: object
      properties:
        InvalidParameter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The parameter that caused the error.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the error.
      description: Returns information about an error.
    JmxExporter:
      type: object
      properties:
        EnabledInBroker:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether you want to turn on or turn off the JMX Exporter.
      required:
      - EnabledInBroker
      description: Indicates whether you want to turn on or turn off the JMX Exporter.
    JmxExporterInfo:
      type: object
      properties:
        EnabledInBroker:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether you want to turn on or turn off the JMX Exporter.
      required:
      - EnabledInBroker
      description: Indicates whether you want to turn on or turn off the JMX Exporter.
    KafkaCluster:
      type: object
      properties:
        AmazonMskCluster:
          allOf:
          - $ref: '#/components/schemas/AmazonMskCluster'
          description: Details of an Amazon MSK Cluster.
        VpcConfig:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterClientVpcConfig'
          description: Details of an Amazon VPC which has network connectivity to
            the Apache Kafka cluster.
      required:
      - AmazonMskCluster
      - VpcConfig
      description: Information about Kafka Cluster to be used as source / target for
        replication.
    KafkaClusterClientVpcConfig:
      type: object
      properties:
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The security groups to attach to the ENIs for the broker nodes.
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of subnets in the client VPC to connect to.
      required:
      - SubnetIds
      description: Details of an Amazon VPC which has network connectivity to the
        Apache Kafka cluster.
    KafkaClusterDescription:
      type: object
      properties:
        AmazonMskCluster:
          allOf:
          - $ref: '#/components/schemas/AmazonMskCluster'
          description: Details of an Amazon MSK Cluster.
        KafkaClusterAlias:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The alias of the Kafka cluster. Used to prefix names of replicated
            topics.
        VpcConfig:
          allOf:
          - $ref: '#/components/schemas/KafkaClusterClientVpcConfig'
          description: Details of an Amazon VPC which has network connectivity to
            the Apache Kafka cluster.
      description: Information about Kafka Cluster used as source / target for replication.
    KafkaClusterSummary:
      type: object
      properties:
        AmazonMskCluster:
          allOf:
          - $ref: '#/components/schemas/AmazonMskCluster'
          description: Details of an Amazon MSK Cluster.
        KafkaClusterAlias:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The alias of the Kafka cluster. Used to prefix names of replicated
            topics.
      description: Summarized information about Kafka Cluster used as source / target
        for replication.
    KafkaVersion:
      type: object
      properties:
        Version:
          $ref: '#/components/schemas/__string'
        Status:
          $ref: '#/components/schemas/KafkaVersionStatus'
    KafkaVersionStatus:
      type: string
      enum:
      - ACTIVE
      - DEPRECATED
    ListClientVpcConnectionsRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
      required:
      - ClusterArn
    ListClientVpcConnectionsResponse:
      type: object
      properties:
        ClientVpcConnections:
          allOf:
          - $ref: '#/components/schemas/__listOfClientVpcConnection'
          description: List of client VPC connections.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of a ListClientVpcConnections
            operation is truncated, the call returns NextToken in the response. To
            get another batch of configurations, provide this token in your next request.
    ListClusterOperationsRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
      required:
      - ClusterArn
    ListClusterOperationsResponse:
      type: object
      properties:
        ClusterOperationInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterOperationInfo'
          description: An array of cluster operation information objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of ListClusterOperations is truncated, it returns
            a NextToken in the response. This Nexttoken should be sent in the subsequent
            request to ListClusterOperations.
    ListClusterOperationsV2Request:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The arn of the cluster whose operations are being requested.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maxResults of the query.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The nextToken of the query.
      required:
      - ClusterArn
    ListClusterOperationsV2Response:
      type: object
      properties:
        ClusterOperationInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterOperationV2Summary'
          description: An array of cluster operation information objects.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of ListClusterOperationsV2 is truncated, it
            returns a NextToken in the response. This NextToken should be sent in
            the subsequent request to ListClusterOperationsV2.
    ListClustersRequest:
      type: object
      properties:
        ClusterNameFilter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify a prefix of the name of the clusters that you want
            to list. The service lists all the clusters whose names start with this
            prefix.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
    ListClustersResponse:
      type: object
      properties:
        ClusterInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfClusterInfo'
          description: Information on each of the MSK clusters in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of a ListClusters
            operation is truncated, the call returns NextToken in the response. To
            get another batch of clusters, provide this token in your next request.
    ListClustersV2Request:
      type: object
      properties:
        ClusterNameFilter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify a prefix of the names of the clusters that you want
            to list. The service lists all the clusters whose names start with this
            prefix.
        ClusterTypeFilter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specify either PROVISIONED or SERVERLESS.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
    ListClustersV2Response:
      type: object
      properties:
        ClusterInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfCluster'
          description: Information on each of the MSK clusters in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of a ListClusters
            operation is truncated, the call returns NextToken in the response. To
            get another batch of clusters, provide this token in your next request.
    ListConfigurationRevisionsRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies an
            MSK configuration and all of its revisions.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
      required:
      - Arn
    ListConfigurationRevisionsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Paginated results marker.
        Revisions:
          allOf:
          - $ref: '#/components/schemas/__listOfConfigurationRevision'
          description: List of ConfigurationRevision objects.
    ListConfigurationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
    ListConfigurationsResponse:
      type: object
      properties:
        Configurations:
          allOf:
          - $ref: '#/components/schemas/__listOfConfiguration'
          description: An array of MSK configurations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of a ListConfigurations
            operation is truncated, the call returns NextToken in the response. To
            get another batch of configurations, provide this token in your next request.
    ListKafkaVersionsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
    ListKafkaVersionsResponse:
      type: object
      properties:
        KafkaVersions:
          $ref: '#/components/schemas/__listOfKafkaVersion'
        NextToken:
          $ref: '#/components/schemas/__string'
    ListNodesRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
      required:
      - ClusterArn
    ListNodesResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of a ListNodes
            operation is truncated, the call returns NextToken in the response. To
            get another batch of nodes, provide this token in your next request.
        NodeInfoList:
          allOf:
          - $ref: '#/components/schemas/__listOfNodeInfo'
          description: List containing a NodeInfo object.
    ListReplicatorsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of ListReplicators is truncated, it returns
            a NextToken in the response. This NextToken should be sent in the subsequent
            request to ListReplicators.
        ReplicatorNameFilter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Returns replicators starting with given name.
    ListReplicatorsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If the response of ListReplicators is truncated, it returns
            a NextToken in the response. This NextToken should be sent in the subsequent
            request to ListReplicators.
        Replicators:
          allOf:
          - $ref: '#/components/schemas/__listOfReplicatorSummary'
          description: List containing information of each of the replicators in the
            account.
    ListScramSecretsRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The arn of the cluster.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maxResults of the query.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The nextToken of the query.
      required:
      - ClusterArn
    ListScramSecretsResponse:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Paginated results marker.
        SecretArnList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of scram secrets associated with the cluster.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            resource that's associated with the tags.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The key-value pair for the resource tag.
    ListVpcConnectionsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results to return in the response. If
            there are more results, the response includes a NextToken parameter.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of the operation
            is truncated, the call returns NextToken in the response. To get the next
            batch, provide this token in your next request.
    ListVpcConnectionsResponse:
      type: object
      properties:
        VpcConnections:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcConnection'
          description: List of VPC connections.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The paginated results marker. When the result of a ListClientVpcConnections
            operation is truncated, the call returns NextToken in the response. To
            get another batch of configurations, provide this token in your next request.
    LoggingInfo:
      type: object
      properties:
        BrokerLogs:
          $ref: '#/components/schemas/BrokerLogs'
      required:
      - BrokerLogs
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    MutableClusterInfo:
      type: object
      properties:
        BrokerEBSVolumeInfo:
          allOf:
          - $ref: '#/components/schemas/__listOfBrokerEBSVolumeInfo'
          description: Specifies the size of the EBS volume and the ID of the associated
            broker.
        ConfigurationInfo:
          allOf:
          - $ref: '#/components/schemas/ConfigurationInfo'
          description: Information about the changes in the configuration of the brokers.
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of broker nodes in the cluster.
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          description: Specifies which Apache Kafka metrics Amazon MSK gathers and
            sends to Amazon CloudWatch for this cluster.
        OpenMonitoring:
          allOf:
          - $ref: '#/components/schemas/OpenMonitoring'
          description: The settings for open monitoring.
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Apache Kafka version.
        LoggingInfo:
          allOf:
          - $ref: '#/components/schemas/LoggingInfo'
          description: You can configure your MSK cluster to send broker logs to different
            destination types. This is a container for the configuration details related
            to broker logs.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/__stringMin5Max32'
          description: Information about the Amazon MSK broker type.
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/ClientAuthentication'
          description: Includes all client authentication information.
        EncryptionInfo:
          allOf:
          - $ref: '#/components/schemas/EncryptionInfo'
          description: Includes all encryption-related information.
        ConnectivityInfo:
          allOf:
          - $ref: '#/components/schemas/ConnectivityInfo'
          description: Information about the broker access configuration.
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          description: This controls storage mode for supported storage tiers.
        BrokerCountUpdateInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerCountUpdateInfo'
          description: Describes brokers being changed during a broker count update.
      description: Information about cluster attributes that can be updated via update
        APIs.
    NodeExporter:
      type: object
      properties:
        EnabledInBroker:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether you want to turn on or turn off the Node
            Exporter.
      required:
      - EnabledInBroker
      description: Indicates whether you want to turn on or turn off the Node Exporter.
    NodeExporterInfo:
      type: object
      properties:
        EnabledInBroker:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether you want to turn on or turn off the Node
            Exporter.
      required:
      - EnabledInBroker
      description: Indicates whether you want to turn on or turn off the Node Exporter.
    NodeInfo:
      type: object
      properties:
        AddedToClusterTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The start time.
        BrokerNodeInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerNodeInfo'
          description: The broker node info.
        ControllerNodeInfo:
          allOf:
          - $ref: '#/components/schemas/ControllerNodeInfo'
          description: The ControllerNodeInfo.
        InstanceType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The instance type.
        NodeARN:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the node.
        NodeType:
          allOf:
          - $ref: '#/components/schemas/NodeType'
          description: The node type.
        ZookeeperNodeInfo:
          allOf:
          - $ref: '#/components/schemas/ZookeeperNodeInfo'
          description: The ZookeeperNodeInfo.
      description: The node information object.
    NodeType:
      type: string
      enum:
      - BROKER
      description: <p>The broker or Zookeeper node.</p>
    NotFoundException:
      type: object
      properties:
        InvalidParameter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The parameter that caused the error.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the error.
      description: Returns information about an error.
    OpenMonitoring:
      type: object
      properties:
        Prometheus:
          allOf:
          - $ref: '#/components/schemas/Prometheus'
          description: Prometheus settings.
      required:
      - Prometheus
      description: JMX and Node monitoring for the MSK cluster.
    OpenMonitoringInfo:
      type: object
      properties:
        Prometheus:
          allOf:
          - $ref: '#/components/schemas/PrometheusInfo'
          description: Prometheus settings.
      required:
      - Prometheus
      description: JMX and Node monitoring for the MSK cluster.
    Prometheus:
      type: object
      properties:
        JmxExporter:
          allOf:
          - $ref: '#/components/schemas/JmxExporter'
          description: Indicates whether you want to turn on or turn off the JMX Exporter.
        NodeExporter:
          allOf:
          - $ref: '#/components/schemas/NodeExporter'
          description: Indicates whether you want to turn on or turn off the Node
            Exporter.
      description: Prometheus settings.
    PrometheusInfo:
      type: object
      properties:
        JmxExporter:
          allOf:
          - $ref: '#/components/schemas/JmxExporterInfo'
          description: Indicates whether you want to turn on or turn off the JMX Exporter.
        NodeExporter:
          allOf:
          - $ref: '#/components/schemas/NodeExporterInfo'
          description: Indicates whether you want to turn on or turn off the Node
            Exporter.
      description: Prometheus settings.
    Provisioned:
      type: object
      properties:
        BrokerNodeGroupInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerNodeGroupInfo'
          description: Information about the brokers.
        CurrentBrokerSoftwareInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerSoftwareInfo'
          description: Information about the Apache Kafka version deployed on the
            brokers.
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/ClientAuthentication'
          description: Includes all client authentication information.
        EncryptionInfo:
          allOf:
          - $ref: '#/components/schemas/EncryptionInfo'
          description: Includes all encryption-related information.
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          description: Specifies the level of monitoring for the MSK cluster. The
            possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.
        OpenMonitoring:
          allOf:
          - $ref: '#/components/schemas/OpenMonitoringInfo'
          description: The settings for open monitoring.
        LoggingInfo:
          allOf:
          - $ref: '#/components/schemas/LoggingInfo'
          description: Log delivery information for the cluster.
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          description: The number of broker nodes in the cluster.
        ZookeeperConnectString:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The connection string to use to connect to the Apache ZooKeeper
            cluster.
        ZookeeperConnectStringTls:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The connection string to use to connect to the Apache ZooKeeper
            cluster on a TLS port.
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          description: This controls storage mode for supported storage tiers.
        CustomerActionStatus:
          allOf:
          - $ref: '#/components/schemas/CustomerActionStatus'
          description: Determines if there is an action required from the customer.
      required:
      - BrokerNodeGroupInfo
      - NumberOfBrokerNodes
      description: Provisioned cluster.
    ProvisionedRequest:
      type: object
      properties:
        BrokerNodeGroupInfo:
          allOf:
          - $ref: '#/components/schemas/BrokerNodeGroupInfo'
          description: Information about the brokers.
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/ClientAuthentication'
          description: Includes all client authentication information.
        ConfigurationInfo:
          allOf:
          - $ref: '#/components/schemas/ConfigurationInfo'
          description: Represents the configuration that you want Amazon MSK to use
            for the brokers in a cluster.
        EncryptionInfo:
          allOf:
          - $ref: '#/components/schemas/EncryptionInfo'
          description: Includes all encryption-related information.
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          description: Specifies the level of monitoring for the MSK cluster. The
            possible values are DEFAULT, PER_BROKER, PER_TOPIC_PER_BROKER, and PER_TOPIC_PER_PARTITION.
        OpenMonitoring:
          allOf:
          - $ref: '#/components/schemas/OpenMonitoringInfo'
          description: The settings for open monitoring.
        KafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__stringMin1Max128'
          description: The Apache Kafka version that you want for the cluster.
        LoggingInfo:
          allOf:
          - $ref: '#/components/schemas/LoggingInfo'
          description: Log delivery information for the cluster.
        NumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          description: The number of broker nodes in the cluster.
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          description: This controls storage mode for supported storage tiers.
      required:
      - BrokerNodeGroupInfo
      - KafkaVersion
      - NumberOfBrokerNodes
      description: Provisioned cluster request.
    ProvisionedThroughput:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Provisioned throughput is enabled or not.
        VolumeThroughput:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Throughput value of the EBS volumes for the data drive on each
            kafka broker node in MiB per second.
      description: Contains information about provisioned throughput for EBS storage
        volumes attached to kafka broker nodes.
    PublicAccess:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The value DISABLED indicates that public access is turned off.
            SERVICE_PROVIDED_EIPS indicates that public access is turned on.
      description: Public access control for brokers.
    PutClusterPolicyRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The policy version.
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The policy.
      required:
      - ClusterArn
      - Policy
    PutClusterPolicyResponse:
      type: object
      properties:
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The policy version.
    RebootBrokerRequest:
      type: object
      properties:
        BrokerIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The list of broker IDs to be rebooted. The reboot-broker operation
            supports rebooting one broker at a time.
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster to be updated.
      required:
      - BrokerIds
      - ClusterArn
      description: Reboots a node.
    RebootBrokerResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    RejectClientVpcConnectionRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The VPC connection ARN.
      required:
      - ClusterArn
      - VpcConnectionArn
    RejectClientVpcConnectionResponse:
      type: object
      properties: {}
    ReplicationInfo:
      type: object
      properties:
        ConsumerGroupReplication:
          allOf:
          - $ref: '#/components/schemas/ConsumerGroupReplication'
          description: Configuration relating to consumer group replication.
        SourceKafkaClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the source Kafka cluster.
        TargetCompressionType:
          allOf:
          - $ref: '#/components/schemas/TargetCompressionType'
          description: The compression type to use when producing records to target
            cluster.
        TargetKafkaClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the target Kafka cluster.
        TopicReplication:
          allOf:
          - $ref: '#/components/schemas/TopicReplication'
          description: Configuration relating to topic replication.
      required:
      - ConsumerGroupReplication
      - SourceKafkaClusterArn
      - TargetCompressionType
      - TargetKafkaClusterArn
      - TopicReplication
      description: Specifies configuration for replication between a source and target
        Kafka cluster.
    ReplicationInfoDescription:
      type: object
      properties:
        ConsumerGroupReplication:
          allOf:
          - $ref: '#/components/schemas/ConsumerGroupReplication'
          description: Configuration relating to consumer group replication.
        SourceKafkaClusterAlias:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The alias of the source Kafka cluster.
        TargetCompressionType:
          allOf:
          - $ref: '#/components/schemas/TargetCompressionType'
          description: The compression type to use when producing records to target
            cluster.
        TargetKafkaClusterAlias:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The alias of the target Kafka cluster.
        TopicReplication:
          allOf:
          - $ref: '#/components/schemas/TopicReplication'
          description: Configuration relating to topic replication.
      description: Specifies configuration for replication between a source and target
        Kafka cluster (sourceKafkaClusterAlias -> targetKafkaClusterAlias)
    ReplicationInfoSummary:
      type: object
      properties:
        SourceKafkaClusterAlias:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The alias of the source Kafka cluster.
        TargetKafkaClusterAlias:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The alias of the target Kafka cluster.
      description: Summarized information of replication between clusters.
    ReplicationStartingPosition:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ReplicationStartingPositionType'
          description: The type of replication starting position.
      description: Configuration for specifying the position in the topics to start
        replicating from.
    ReplicationStartingPositionType:
      type: string
      enum:
      - LATEST
      - EARLIEST
      description: <p>The type of replication starting position.</p>
    ReplicationStateInfo:
      type: object
      properties:
        Code:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Code that describes the current state of the replicator.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Message that describes the state of the replicator.
      description: Details about the state of a replicator
    ReplicationTopicNameConfiguration:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ReplicationTopicNameConfigurationType'
          description: The type of replicated topic name.
      description: Configuration for specifying replicated topic names should be the
        same as their corresponding upstream topics or prefixed with source cluster
        alias.
    ReplicationTopicNameConfigurationType:
      type: string
      enum:
      - PREFIXED_WITH_SOURCE_CLUSTER_ALIAS
      - IDENTICAL
      description: <p>The type of replicated topic name.</p>
    ReplicatorState:
      type: string
      enum:
      - RUNNING
      - CREATING
      - UPDATING
      - DELETING
      - FAILED
      description: <p>The state of a replicator.</p>
    ReplicatorSummary:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time the replicator was created.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The current version of the replicator.
        IsReplicatorReference:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether this resource is a replicator reference.
        KafkaClustersSummary:
          allOf:
          - $ref: '#/components/schemas/__listOfKafkaClusterSummary'
          description: Kafka Clusters used in setting up sources / targets for replication.
        ReplicationInfoSummaryList:
          allOf:
          - $ref: '#/components/schemas/__listOfReplicationInfoSummary'
          description: A list of summarized information of replications between clusters.
        ReplicatorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator.
        ReplicatorName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the replicator.
        ReplicatorResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator resource in
            the region where the replicator was created.
        ReplicatorState:
          allOf:
          - $ref: '#/components/schemas/ReplicatorState'
          description: State of the replicator.
      description: Information about a replicator.
    S3:
      type: object
      properties:
        Bucket:
          $ref: '#/components/schemas/__string'
        Enabled:
          $ref: '#/components/schemas/__boolean'
        Prefix:
          $ref: '#/components/schemas/__string'
      required:
      - Enabled
    Sasl:
      type: object
      properties:
        Scram:
          allOf:
          - $ref: '#/components/schemas/Scram'
          description: Details for SASL/SCRAM client authentication.
        Iam:
          allOf:
          - $ref: '#/components/schemas/Iam'
          description: Indicates whether IAM access control is enabled.
      description: Details for client authentication using SASL.
    Scram:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: SASL/SCRAM authentication is enabled or not.
      description: Details for SASL/SCRAM client authentication.
    Serverless:
      type: object
      properties:
        VpcConfigs:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcConfig'
          description: The configuration of the Amazon VPCs for the cluster.
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/ServerlessClientAuthentication'
          description: Includes all client authentication information.
      required:
      - VpcConfigs
      description: Serverless cluster.
    ServerlessClientAuthentication:
      type: object
      properties:
        Sasl:
          allOf:
          - $ref: '#/components/schemas/ServerlessSasl'
          description: Details for ClientAuthentication using SASL.
      description: Includes all client authentication information.
    ServerlessRequest:
      type: object
      properties:
        VpcConfigs:
          allOf:
          - $ref: '#/components/schemas/__listOfVpcConfig'
          description: The configuration of the Amazon VPCs for the cluster.
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/ServerlessClientAuthentication'
          description: Includes all client authentication information.
      required:
      - VpcConfigs
      description: Serverless cluster request.
    ServerlessSasl:
      type: object
      properties:
        Iam:
          allOf:
          - $ref: '#/components/schemas/Iam'
          description: Indicates whether IAM access control is enabled.
      description: Details for client authentication using SASL.
    ServiceUnavailableException:
      type: object
      properties:
        InvalidParameter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The parameter that caused the error.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the error.
      description: Returns information about an error.
    StateInfo:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/__string'
        Message:
          $ref: '#/components/schemas/__string'
    StorageInfo:
      type: object
      properties:
        EbsStorageInfo:
          allOf:
          - $ref: '#/components/schemas/EBSStorageInfo'
          description: EBS volume information.
      description: Contains information about storage volumes attached to MSK broker
        nodes.
    StorageMode:
      type: string
      enum:
      - LOCAL
      - TIERED
      description: Controls storage mode for various supported storage tiers.
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            resource that's associated with the tags.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The key-value pair for the resource tag.
      required:
      - ResourceArn
      - Tags
    TargetCompressionType:
      type: string
      enum:
      - NONE
      - GZIP
      - SNAPPY
      - LZ4
      - ZSTD
      description: <p>The type of compression to use producing records to the target
        cluster.</p>
    Tls:
      type: object
      properties:
        CertificateAuthorityArnList:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: List of ACM Certificate Authority ARNs.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether you want to turn on or turn off TLS authentication.
      description: Details for client authentication using TLS.
    TooManyRequestsException:
      type: object
      properties:
        InvalidParameter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The parameter that caused the error.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the error.
      description: Returns information about an error.
    TopicReplication:
      type: object
      properties:
        CopyAccessControlListsForTopics:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether to periodically configure remote topic ACLs to match
            their corresponding upstream topics.
        CopyTopicConfigurations:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether to periodically configure remote topics to match their
            corresponding upstream topics.
        DetectAndCopyNewTopics:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether to periodically check for new topics and partitions.
        StartingPosition:
          allOf:
          - $ref: '#/components/schemas/ReplicationStartingPosition'
          description: Configuration for specifying the position in the topics to
            start replicating from.
        TopicNameConfiguration:
          allOf:
          - $ref: '#/components/schemas/ReplicationTopicNameConfiguration'
          description: Configuration for specifying replicated topic names should
            be the same as their corresponding upstream topics or prefixed with source
            cluster alias.
        TopicsToExclude:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax249'
          description: List of regular expression patterns indicating the topics that
            should not be replicated.
        TopicsToReplicate:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax249'
          description: List of regular expression patterns indicating the topics to
            copy.
      required:
      - TopicsToReplicate
      description: Details about topic replication.
    TopicReplicationUpdate:
      type: object
      properties:
        CopyAccessControlListsForTopics:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether to periodically configure remote topic ACLs to match
            their corresponding upstream topics.
        CopyTopicConfigurations:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether to periodically configure remote topics to match their
            corresponding upstream topics.
        DetectAndCopyNewTopics:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Whether to periodically check for new topics and partitions.
        TopicsToExclude:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax249'
          description: List of regular expression patterns indicating the topics that
            should not be replicated.
        TopicsToReplicate:
          allOf:
          - $ref: '#/components/schemas/__listOf__stringMax249'
          description: List of regular expression patterns indicating the topics to
            copy.
      required:
      - CopyAccessControlListsForTopics
      - CopyTopicConfigurations
      - DetectAndCopyNewTopics
      - TopicsToExclude
      - TopicsToReplicate
      description: Details for updating the topic replication of a replicator.
    Unauthenticated:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether you want to turn on or turn off unauthenticated
            traffic to your cluster.
    UnauthorizedException:
      type: object
      properties:
        InvalidParameter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The parameter that caused the error.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the error.
      description: Returns information about an error.
    UnprocessedScramSecret:
      type: object
      properties:
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Error code for associate/disassociate failure.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Error message for associate/disassociate failure.
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: AWS Secrets Manager secret ARN.
      description: Error info for scram secret associate/disassociate failure.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            resource that's associated with the tags.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: "Tag keys must be unique for a given cluster. In addition,\
            \ the following restrictions apply:\n\n  * Each tag key must be unique.\
            \ If you add a tag with a key that's already in use, your new tag overwrites\
            \ the existing key-value pair. \n\n  * You can't start a tag key with\
            \ aws: because this prefix is reserved for use by AWS. AWS creates tags\
            \ that begin with this prefix on your behalf, but you can't edit or delete\
            \ them.\n\n  * Tag keys must be between 1 and 128 Unicode characters in\
            \ length.\n\n  * Tag keys must consist of the following characters: Unicode\
            \ letters, digits, white space, and the following special characters:\
            \ _ . / = + - @."
      required:
      - ResourceArn
      - TagKeys
    UpdateBrokerCountRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of cluster to update from. A successful operation
            will then generate a new version.
        TargetNumberOfBrokerNodes:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max15'
          description: The number of broker nodes that you want the cluster to have
            after this operation completes successfully.
      required:
      - ClusterArn
      - CurrentVersion
      - TargetNumberOfBrokerNodes
    UpdateBrokerCountResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UpdateBrokerStorageRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of cluster to update from. A successful operation
            will then generate a new version.
        TargetBrokerEBSVolumeInfo:
          allOf:
          - $ref: '#/components/schemas/__listOfBrokerEBSVolumeInfo'
          description: Describes the target volume size and the ID of the broker to
            apply the update to.
      required:
      - ClusterArn
      - CurrentVersion
      - TargetBrokerEBSVolumeInfo
    UpdateBrokerStorageResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UpdateBrokerTypeRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The cluster version that you want to change. After this operation
            completes successfully, the cluster will have a new version.
        TargetInstanceType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon MSK broker type that you want all of the brokers
            in this cluster to be.
      required:
      - ClusterArn
      - CurrentVersion
      - TargetInstanceType
    UpdateBrokerTypeResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UpdateClusterConfigurationRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        ConfigurationInfo:
          allOf:
          - $ref: '#/components/schemas/ConfigurationInfo'
          description: Represents the configuration that you want MSK to use for the
            brokers in a cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of the cluster that needs to be updated.
      required:
      - ClusterArn
      - ConfigurationInfo
      - CurrentVersion
    UpdateClusterConfigurationResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UpdateClusterKafkaVersionRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster to be updated.
        ConfigurationInfo:
          allOf:
          - $ref: '#/components/schemas/ConfigurationInfo'
          description: The custom configuration that should be applied on the new
            version of cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Current cluster version.
        TargetKafkaVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Target Kafka version.
      required:
      - ClusterArn
      - CurrentVersion
      - TargetKafkaVersion
    UpdateClusterKafkaVersionResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UpdateConfigurationRequest:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the configuration.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the configuration revision.
        ServerProperties:
          allOf:
          - $ref: '#/components/schemas/__blob'
          description: Contents of the server.properties file. When using the API,
            you must ensure that the contents of the file are base64 encoded. When
            using the AWS Management Console, the SDK, or the AWS CLI, the contents
            of server.properties can be in plaintext.
      required:
      - Arn
      - ServerProperties
    UpdateConfigurationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the configuration.
        LatestRevision:
          allOf:
          - $ref: '#/components/schemas/ConfigurationRevision'
          description: Latest revision of the configuration.
    UpdateConnectivityRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the configuration.
        ConnectivityInfo:
          allOf:
          - $ref: '#/components/schemas/ConnectivityInfo'
          description: Information about the broker access configuration.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of the MSK cluster to update. Cluster versions
            aren't simple numbers. You can describe an MSK cluster to find its version.
            When this update operation is successful, it generates a new cluster version.
      required:
      - ClusterArn
      - ConnectivityInfo
      - CurrentVersion
      description: Request body for UpdateConnectivity.
    UpdateConnectivityResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UpdateMonitoringRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of the MSK cluster to update. Cluster versions
            aren't simple numbers. You can describe an MSK cluster to find its version.
            When this update operation is successful, it generates a new cluster version.
        EnhancedMonitoring:
          allOf:
          - $ref: '#/components/schemas/EnhancedMonitoring'
          description: Specifies which Apache Kafka metrics Amazon MSK gathers and
            sends to Amazon CloudWatch for this cluster.
        OpenMonitoring:
          allOf:
          - $ref: '#/components/schemas/OpenMonitoringInfo'
          description: The settings for open monitoring.
        LoggingInfo:
          $ref: '#/components/schemas/LoggingInfo'
      required:
      - ClusterArn
      - CurrentVersion
      description: Request body for UpdateMonitoring.
    UpdateMonitoringResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UpdateReplicationInfoRequest:
      type: object
      properties:
        ConsumerGroupReplication:
          allOf:
          - $ref: '#/components/schemas/ConsumerGroupReplicationUpdate'
          description: Updated consumer group replication information.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Current replicator version.
        ReplicatorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator to be updated.
        SourceKafkaClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the source Kafka cluster.
        TargetKafkaClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the target Kafka cluster.
        TopicReplication:
          allOf:
          - $ref: '#/components/schemas/TopicReplicationUpdate'
          description: Updated topic replication information.
      required:
      - CurrentVersion
      - ReplicatorArn
      - SourceKafkaClusterArn
      - TargetKafkaClusterArn
      description: Update information relating to replication between a given source
        and target Kafka cluster.
    UpdateReplicationInfoResponse:
      type: object
      properties:
        ReplicatorArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the replicator.
        ReplicatorState:
          allOf:
          - $ref: '#/components/schemas/ReplicatorState'
          description: State of the replicator.
    UpdateSecurityRequest:
      type: object
      properties:
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/ClientAuthentication'
          description: Includes all client authentication related information.
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            cluster.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of the MSK cluster to update. Cluster versions
            aren't simple numbers. You can describe an MSK cluster to find its version.
            When this update operation is successful, it generates a new cluster version.
        EncryptionInfo:
          allOf:
          - $ref: '#/components/schemas/EncryptionInfo'
          description: Includes all encryption-related information.
      required:
      - ClusterArn
      - CurrentVersion
    UpdateSecurityResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UpdateStorageRequest:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster to be updated.
        CurrentVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of cluster to update from. A successful operation
            will then generate a new version.
        ProvisionedThroughput:
          allOf:
          - $ref: '#/components/schemas/ProvisionedThroughput'
          description: EBS volume provisioned throughput information.
        StorageMode:
          allOf:
          - $ref: '#/components/schemas/StorageMode'
          description: Controls storage mode for supported storage tiers.
        VolumeSizeGB:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: size of the EBS volume to update.
      required:
      - ClusterArn
      - CurrentVersion
      description: Request object for UpdateStorage api. Its used to update the storage
        attributes for the cluster.
    UpdateStorageResponse:
      type: object
      properties:
        ClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster.
        ClusterOperationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the cluster operation.
    UserIdentity:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/UserIdentityType'
          description: The identity type of the requester that calls the API operation.
        PrincipalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A unique identifier for the requester that calls the API operation.
      description: Description of the requester that calls the API operation.
    UserIdentityType:
      type: string
      enum:
      - AWSACCOUNT
      - AWSSERVICE
      description: <p>The identity type of the requester that calls the API operation.</p>
    VpcConfig:
      type: object
      properties:
        SubnetIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The IDs of the subnets associated with the cluster.
        SecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The IDs of the security groups associated with the cluster.
      required:
      - SubnetIds
      description: The configuration of the Amazon VPCs for the cluster.
    VpcConnection:
      type: object
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN that identifies the Vpc Connection.
        TargetClusterArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN that identifies the Cluster which the Vpc Connection
            belongs to.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: Creation time of the Vpc Connection.
        Authentication:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Information about the auth scheme of Vpc Connection.
        VpcId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The vpcId that belongs to the Vpc Connection.
        State:
          allOf:
          - $ref: '#/components/schemas/VpcConnectionState'
          description: State of the Vpc Connection.
      required:
      - VpcConnectionArn
      - TargetClusterArn
      description: The VPC connection object.
    VpcConnectionInfo:
      type: object
      properties:
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the VPC connection.
        Owner:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The owner of the VPC Connection.
        UserIdentity:
          allOf:
          - $ref: '#/components/schemas/UserIdentity'
          description: Description of the requester that calls the API operation.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when Amazon MSK creates the VPC Connnection.
      description: Description of the VPC connection.
    VpcConnectionInfoServerless:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The time when Amazon MSK creates the VPC Connnection.
        Owner:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The owner of the VPC Connection.
        UserIdentity:
          allOf:
          - $ref: '#/components/schemas/UserIdentity'
          description: Description of the requester that calls the API operation.
        VpcConnectionArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the VPC connection.
      description: Description of the VPC connection.
    VpcConnectionState:
      type: string
      enum:
      - CREATING
      - AVAILABLE
      - INACTIVE
      - DEACTIVATING
      - DELETING
      - FAILED
      - REJECTED
      - REJECTING
      description: <p>The state of a VPC connection.</p>
    VpcConnectivity:
      type: object
      properties:
        ClientAuthentication:
          allOf:
          - $ref: '#/components/schemas/VpcConnectivityClientAuthentication'
          description: Includes all client authentication information for VPC connectivity.
      description: VPC connectivity access control for brokers.
    VpcConnectivityClientAuthentication:
      type: object
      properties:
        Sasl:
          allOf:
          - $ref: '#/components/schemas/VpcConnectivitySasl'
          description: SASL authentication type details for VPC connectivity.
        Tls:
          allOf:
          - $ref: '#/components/schemas/VpcConnectivityTls'
          description: TLS authentication type details for VPC connectivity.
      description: Includes all client authentication information for VPC connectivity.
    VpcConnectivityIam:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: SASL/IAM authentication is on or off for VPC connectivity.
      description: Details for IAM access control for VPC connectivity.
    VpcConnectivitySasl:
      type: object
      properties:
        Scram:
          allOf:
          - $ref: '#/components/schemas/VpcConnectivityScram'
          description: Details for SASL/SCRAM client authentication for VPC connectivity.
        Iam:
          allOf:
          - $ref: '#/components/schemas/VpcConnectivityIam'
          description: Details for SASL/IAM client authentication for VPC connectivity.
      description: Details for SASL client authentication for VPC connectivity.
    VpcConnectivityScram:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: SASL/SCRAM authentication is on or off for VPC connectivity.
      description: Details for SASL/SCRAM client authentication for VPC connectivity.
    VpcConnectivityTls:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: TLS authentication is on or off for VPC connectivity.
      description: Details for TLS client authentication for VPC connectivity.
    ZookeeperNodeInfo:
      type: object
      properties:
        AttachedENIId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The attached elastic network interface of the broker.
        ClientVpcIpAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The virtual private cloud (VPC) IP address of the client.
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: Endpoints for accessing the ZooKeeper.
        ZookeeperId:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The role-specific ID for Zookeeper.
        ZookeeperVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of Zookeeper.
      description: Zookeeper node information.
    __blob:
      type: string
      format: byte
    __boolean:
      type: boolean
    __double:
      type: number
      format: double
    __integer:
      type: integer
    __integerMin1Max15:
      type: integer
      minimum: 1
      maximum: 15
    __integerMin1Max16384:
      type: integer
      minimum: 1
      maximum: 16384
    __listOfBrokerEBSVolumeInfo:
      type: array
      items:
        $ref: '#/components/schemas/BrokerEBSVolumeInfo'
    __listOfClientVpcConnection:
      type: array
      items:
        $ref: '#/components/schemas/ClientVpcConnection'
    __listOfCluster:
      type: array
      items:
        $ref: '#/components/schemas/Cluster'
    __listOfClusterInfo:
      type: array
      items:
        $ref: '#/components/schemas/ClusterInfo'
    __listOfClusterOperationInfo:
      type: array
      items:
        $ref: '#/components/schemas/ClusterOperationInfo'
    __listOfClusterOperationStep:
      type: array
      items:
        $ref: '#/components/schemas/ClusterOperationStep'
    __listOfClusterOperationV2Summary:
      type: array
      items:
        $ref: '#/components/schemas/ClusterOperationV2Summary'
    __listOfCompatibleKafkaVersion:
      type: array
      items:
        $ref: '#/components/schemas/CompatibleKafkaVersion'
    __listOfConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/Configuration'
    __listOfConfigurationRevision:
      type: array
      items:
        $ref: '#/components/schemas/ConfigurationRevision'
    __listOfKafkaCluster:
      type: array
      items:
        $ref: '#/components/schemas/KafkaCluster'
    __listOfKafkaClusterDescription:
      type: array
      items:
        $ref: '#/components/schemas/KafkaClusterDescription'
    __listOfKafkaClusterSummary:
      type: array
      items:
        $ref: '#/components/schemas/KafkaClusterSummary'
    __listOfKafkaVersion:
      type: array
      items:
        $ref: '#/components/schemas/KafkaVersion'
    __listOfNodeInfo:
      type: array
      items:
        $ref: '#/components/schemas/NodeInfo'
    __listOfReplicationInfo:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationInfo'
    __listOfReplicationInfoDescription:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationInfoDescription'
    __listOfReplicationInfoSummary:
      type: array
      items:
        $ref: '#/components/schemas/ReplicationInfoSummary'
    __listOfReplicatorSummary:
      type: array
      items:
        $ref: '#/components/schemas/ReplicatorSummary'
    __listOfUnprocessedScramSecret:
      type: array
      items:
        $ref: '#/components/schemas/UnprocessedScramSecret'
    __listOfVpcConfig:
      type: array
      items:
        $ref: '#/components/schemas/VpcConfig'
    __listOfVpcConnection:
      type: array
      items:
        $ref: '#/components/schemas/VpcConnection'
    __listOf__double:
      type: array
      items:
        $ref: '#/components/schemas/__double'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __listOf__stringMax249:
      type: array
      items:
        $ref: '#/components/schemas/__stringMax249'
    __listOf__stringMax256:
      type: array
      items:
        $ref: '#/components/schemas/__stringMax256'
    __long:
      type: integer
      format: int64
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    __string:
      type: string
    __stringMax1024:
      type: string
      minLength: 0
      maxLength: 1024
    __stringMax249:
      type: string
      minLength: 0
      maxLength: 249
    __stringMax256:
      type: string
      minLength: 0
      maxLength: 256
    __stringMin1Max128:
      type: string
      minLength: 1
      maxLength: 128
    __stringMin1Max128Pattern09AZaZ09AZaZ0:
      type: string
      pattern: ^[0-9A-Za-z][0-9A-Za-z-]{0,}$
      minLength: 1
      maxLength: 128
    __stringMin1Max64:
      type: string
      minLength: 1
      maxLength: 64
    __stringMin5Max32:
      type: string
      minLength: 5
      maxLength: 32
    __timestampIso8601:
      type: string
      format: date-time
