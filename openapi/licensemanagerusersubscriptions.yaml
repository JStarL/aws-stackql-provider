openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: license_manager_user_subscriptions
  x-aws-serviceName: licensemanagerusersubscriptions
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS License Manager User Subscriptions
  description: |-
    With License Manager, you can create user-based subscriptions to utilize licensed software with a per user subscription fee on Amazon EC2 instances.
servers:
- description: The AWS License Manager User Subscriptions regional endpoint
  url: https://license-manager-user-subscriptions.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /user/AssociateUser:
    post:
      operationId: AssociateUser
      description: |-
        Associates the user to an EC2 instance to utilize user-based subscriptions.

        Your estimated bill for charges on the number of users and related costs will take 48 hours to appear for billing periods that haven't closed (marked as **Pending** billing status) in Amazon Web Services Billing. For more information, see [Viewing your monthly charges](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html) in the _Amazon Web Services Billing User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Username:
                  $ref: '#/components/schemas/String'
                InstanceId:
                  $ref: '#/components/schemas/String'
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                Domain:
                  $ref: '#/components/schemas/String'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /license-server/CreateLicenseServerEndpoint:
    post:
      operationId: CreateLicenseServerEndpoint
      description: |-
        Creates a network endpoint for the Remote Desktop Services (RDS) license server.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdentityProviderArn:
                  $ref: '#/components/schemas/Arn'
                LicenseServerSettings:
                  $ref: '#/components/schemas/LicenseServerSettings'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /license-server/DeleteLicenseServerEndpoint:
    post:
      operationId: DeleteLicenseServerEndpoint
      description: |-
        Deletes a `LicenseServerEndpoint` resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                LicenseServerEndpointArn:
                  $ref: '#/components/schemas/Arn'
                ServerType:
                  $ref: '#/components/schemas/ServerType'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /identity-provider/DeregisterIdentityProvider:
    post:
      operationId: DeregisterIdentityProvider
      description: |-
        Deregisters the Active Directory identity provider from License Manager user-based subscriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                Product:
                  $ref: '#/components/schemas/String'
                IdentityProviderArn:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /user/DisassociateUser:
    post:
      operationId: DisassociateUser
      description: |-
        Disassociates the user from an EC2 instance providing user-based subscriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Username:
                  $ref: '#/components/schemas/String'
                InstanceId:
                  $ref: '#/components/schemas/String'
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                InstanceUserArn:
                  $ref: '#/components/schemas/Arn'
                Domain:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /identity-provider/ListIdentityProviders:
    post:
      operationId: ListIdentityProviders
      description: |-
        Lists the Active Directory identity providers for user-based subscriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/BoxInteger'
                Filters:
                  $ref: '#/components/schemas/FilterList'
                NextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /instance/ListInstances:
    post:
      operationId: ListInstances
      description: |-
        Lists the EC2 instances providing user-based subscriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/BoxInteger'
                NextToken:
                  $ref: '#/components/schemas/String'
                Filters:
                  $ref: '#/components/schemas/FilterList'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /license-server/ListLicenseServerEndpoints:
    post:
      operationId: ListLicenseServerEndpoints
      description: |-
        List the Remote Desktop Services (RDS) License Server endpoints
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/BoxInteger'
                Filters:
                  $ref: '#/components/schemas/FilterList'
                NextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /user/ListProductSubscriptions:
    post:
      operationId: ListProductSubscriptions
      description: |-
        Lists the user-based subscription products available from an identity provider.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Product:
                  $ref: '#/components/schemas/String'
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                MaxResults:
                  $ref: '#/components/schemas/BoxInteger'
                Filters:
                  $ref: '#/components/schemas/FilterList'
                NextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Returns the list of tags for the specified resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: TagResource
      description: |-
        Adds tags to a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from a resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /user/ListUserAssociations:
    post:
      operationId: ListUserAssociations
      description: |-
        Lists user associations for an identity provider.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InstanceId:
                  $ref: '#/components/schemas/String'
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                MaxResults:
                  $ref: '#/components/schemas/BoxInteger'
                Filters:
                  $ref: '#/components/schemas/FilterList'
                NextToken:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /identity-provider/RegisterIdentityProvider:
    post:
      operationId: RegisterIdentityProvider
      description: |-
        Registers an identity provider for user-based subscriptions.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                Product:
                  $ref: '#/components/schemas/String'
                Settings:
                  $ref: '#/components/schemas/Settings'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /user/StartProductSubscription:
    post:
      operationId: StartProductSubscription
      description: |-
        Starts a product subscription for a user with the specified identity provider.

        Your estimated bill for charges on the number of users and related costs will take 48 hours to appear for billing periods that haven't closed (marked as **Pending** billing status) in Amazon Web Services Billing. For more information, see [Viewing your monthly charges](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/invoice.html) in the _Amazon Web Services Billing User Guide_.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Username:
                  $ref: '#/components/schemas/String'
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                Product:
                  $ref: '#/components/schemas/String'
                Domain:
                  $ref: '#/components/schemas/String'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /user/StopProductSubscription:
    post:
      operationId: StopProductSubscription
      description: |-
        Stops a product subscription for a user with the specified identity provider.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Username:
                  $ref: '#/components/schemas/String'
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                Product:
                  $ref: '#/components/schemas/String'
                ProductUserArn:
                  $ref: '#/components/schemas/Arn'
                Domain:
                  $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource couldn't be found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /identity-provider/UpdateIdentityProviderSettings:
    post:
      operationId: UpdateIdentityProviderSettings
      description: |-
        Updates additional product configuration settings for the registered identity provider.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdentityProvider:
                  $ref: '#/components/schemas/IdentityProvider'
                Product:
                  $ref: '#/components/schemas/String'
                IdentityProviderArn:
                  $ref: '#/components/schemas/Arn'
                UpdateSettings:
                  $ref: '#/components/schemas/UpdateSettings'
      responses:
        '200': {}
        '400':
          description: |-
            A parameter is not valid.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
        '500':
          description: |-
            An exception occurred with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You don't have sufficient access to perform this action.
    ActiveDirectoryIdentityProvider:
      type: object
      properties:
        DirectoryId:
          allOf:
          - $ref: '#/components/schemas/Directory'
          description: The directory ID for an Active Directory identity provider.
        ActiveDirectorySettings:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectorySettings'
          description: The `ActiveDirectorySettings` resource contains details about
            the Active Directory, including network access details such as domain
            name and IP addresses, and the credential provider for user administration.
        ActiveDirectoryType:
          allOf:
          - $ref: '#/components/schemas/ActiveDirectoryType'
          description: The type of Active Directory – either a self-managed Active
            Directory or an Amazon Web Services Managed Active Directory.
      description: Details about an Active Directory identity provider.
    ActiveDirectorySettings:
      type: object
      properties:
        DomainName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain name for the Active Directory.
        DomainIpv4List:
          allOf:
          - $ref: '#/components/schemas/IpV4List'
          description: A list of domain IPv4 addresses that are used for the Active
            Directory.
        DomainCredentialsProvider:
          allOf:
          - $ref: '#/components/schemas/CredentialsProvider'
          description: Points to the `CredentialsProvider` resource that contains
            information about the credential provider for user administration.
        DomainNetworkSettings:
          allOf:
          - $ref: '#/components/schemas/DomainNetworkSettings'
          description: The `DomainNetworkSettings` resource contains an array of subnets
            that apply for the Active Directory.
      description: Contains network access and credential details that are needed
        for user administration in the Active Directory.
    ActiveDirectoryType:
      type: string
      enum:
      - SELF_MANAGED
      - AWS_MANAGED
    Arn:
      type: string
      pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{1,63}:[a-zA-Z0-9-\.]{1,510}/[a-zA-Z0-9-\.]{1,510}$
    AssociateUserRequest:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user name from the identity provider.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the EC2 instance that provides the user-based subscription.
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: The identity provider for the user.
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain name of the Active Directory that contains information
            for the user to associate.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags that apply for the user association.
      required:
      - Username
      - InstanceId
      - IdentityProvider
    AssociateUserResponse:
      type: object
      properties:
        InstanceUserSummary:
          allOf:
          - $ref: '#/components/schemas/InstanceUserSummary'
          description: Metadata that describes the associate user operation.
      required:
      - InstanceUserSummary
    BoxInteger:
      type: integer
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request couldn't be completed because it conflicted with the
        current state of the resource.
    CreateLicenseServerEndpointRequest:
      type: object
      properties:
        IdentityProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that identifies the `IdentityProvider`
            resource that contains details about a registered identity provider. In
            the case of Active Directory, that can be a self-managed Active Directory
            or an Amazon Web Services Managed Active Directory that contains user
            identity details.
        LicenseServerSettings:
          allOf:
          - $ref: '#/components/schemas/LicenseServerSettings'
          description: The `LicenseServerSettings` resource to create for the endpoint.
            The settings include the type of license server and the Secrets Manager
            secret that enables administrators to add or remove users associated with
            the license server.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags that apply for the license server endpoint.
      required:
      - IdentityProviderArn
      - LicenseServerSettings
    CreateLicenseServerEndpointResponse:
      type: object
      properties:
        IdentityProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the identity provider specified
            in the request.
        LicenseServerEndpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the `LicenseServerEndpoint` resource.
    CredentialsProvider:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SecretsManagerCredentialsProvider'
        description: |-
          Identifies the Secrets Manager secret that contains credentials needed for user administration in the Active Directory.
      description: |-
        Contains information about the credential provider for user administration.
    DeleteLicenseServerEndpointRequest:
      type: object
      properties:
        LicenseServerEndpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that identifies the `LicenseServerEndpoint`
            resource to delete.
        ServerType:
          allOf:
          - $ref: '#/components/schemas/ServerType'
          description: The type of License Server that the delete request refers to.
      required:
      - LicenseServerEndpointArn
      - ServerType
    DeleteLicenseServerEndpointResponse:
      type: object
      properties:
        LicenseServerEndpoint:
          allOf:
          - $ref: '#/components/schemas/LicenseServerEndpoint'
          description: Shows details from the `LicenseServerEndpoint` resource that
            was deleted.
    DeregisterIdentityProviderRequest:
      type: object
      properties:
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: An object that specifies details for the Active Directory identity
            provider.
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The name of the user-based subscription product.


            Valid values: `VISUAL_STUDIO_ENTERPRISE` | `VISUAL_STUDIO_PROFESSIONAL`
            | `OFFICE_PROFESSIONAL_PLUS` | `REMOTE_DESKTOP_SERVICES`'
        IdentityProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that identifies the identity
            provider to deregister.
    DeregisterIdentityProviderResponse:
      type: object
      properties:
        IdentityProviderSummary:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderSummary'
          description: Metadata that describes the results of an identity provider
            operation.
      required:
      - IdentityProviderSummary
    Directory:
      type: string
      pattern: ^(d|sd)-[0-9a-f]{10}$
    DisassociateUserRequest:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user name from the Active Directory identity provider for
            the user.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the EC2 instance which provides user-based subscriptions.
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: An object that specifies details for the Active Directory identity
            provider.
        InstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the user to disassociate
            from the EC2 instance.
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain name of the Active Directory that contains information
            for the user to disassociate.
    DisassociateUserResponse:
      type: object
      properties:
        InstanceUserSummary:
          allOf:
          - $ref: '#/components/schemas/InstanceUserSummary'
          description: Metadata that describes the associate user operation.
      required:
      - InstanceUserSummary
    DomainNetworkSettings:
      type: object
      properties:
        Subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          description: Contains a list of subnets that apply for the Active Directory
            domain.
      required:
      - Subnets
      description: Contains network settings for the Active Directory domain.
    Filter:
      type: object
      properties:
        Attribute:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of an attribute to use as a filter.
        Operation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of search (For example, eq, geq, leq)
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Value of the filter.
      description: A filter name and value pair that is used to return more specific
        results from a describe or list operation. You can use filters can be used
        to match a set of resources by specific criteria, such as tags, attributes,
        or IDs.
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    IdentityProvider:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ActiveDirectoryIdentityProvider'
        description: |-
          The `ActiveDirectoryIdentityProvider` resource contains settings and other details about a specific Active Directory identity provider.
      description: |-
        Refers to an identity provider.
    IdentityProviderSummary:
      type: object
      properties:
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: The `IdentityProvider` resource contains information about
            an identity provider.
        Settings:
          allOf:
          - $ref: '#/components/schemas/Settings'
          description: The `Settings` resource contains details about the registered
            identity provider’s product related configuration settings, such as the
            subnets to provision VPC endpoints.
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the user-based subscription product.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of the identity provider.
        IdentityProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the identity provider.
        FailureMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The failure message associated with an identity provider.
      required:
      - IdentityProvider
      - Settings
      - Product
      - Status
      description: Describes an identity provider.
    IdentityProviderSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/IdentityProviderSummary'
    InstanceSummary:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the EC2 instance, which provides user-based subscriptions.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of an EC2 instance resource.
        Products:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: A list of provided user-based subscription products.
        LastStatusCheckDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The date of the last status check.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message for an EC2 instance.
      required:
      - InstanceId
      - Status
      - Products
      description: Describes an EC2 instance providing user-based subscriptions.
    InstanceSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceSummary'
    InstanceUserSummary:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user name from the identity provider for the user.
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the EC2 instance that provides user-based subscriptions.
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: The `IdentityProvider` resource specifies details about the
            identity provider.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of a user associated with an EC2 instance.
        InstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) that identifies the instance
            user.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message for users of an EC2 instance.
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain name of the Active Directory that contains the user
            information for the product subscription.
        AssociationDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The date a user was associated with an EC2 instance.
        DisassociationDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The date a user was disassociated from an EC2 instance.
      required:
      - Username
      - InstanceId
      - IdentityProvider
      - Status
      description: Describes users of an EC2 instance providing user-based subscriptions.
    InstanceUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/InstanceUserSummary'
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: An exception occurred with the service.
    IpV4:
      type: string
      pattern: ^(?:(25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])(\.(?!$)|$)){4}$
    IpV4List:
      type: array
      items:
        $ref: '#/components/schemas/IpV4'
    LicenseServer:
      type: object
      properties:
        ProvisioningStatus:
          allOf:
          - $ref: '#/components/schemas/LicenseServerEndpointProvisioningStatus'
          description: The current state of the provisioning process for the RDS license
            server.
        HealthStatus:
          allOf:
          - $ref: '#/components/schemas/LicenseServerHealthStatus'
          description: The health status of the RDS license server.
        Ipv4Address:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A list of domain IPv4 addresses that are used for the RDS license
            server.
      description: Information about a Remote Desktop Services (RDS) license server.
    LicenseServerEndpoint:
      type: object
      properties:
        IdentityProviderArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the identity provider that's
            associated with the RDS license server endpoint.
        ServerType:
          allOf:
          - $ref: '#/components/schemas/ServerType'
          description: The type of license server.
        ServerEndpoint:
          allOf:
          - $ref: '#/components/schemas/ServerEndpoint'
          description: The `ServerEndpoint` resource contains the network address
            of the RDS license server endpoint.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message associated with the provisioning status, if there
            is one.
        LicenseServerEndpointId:
          allOf:
          - $ref: '#/components/schemas/LicenseServerEndpointId'
          description: The ID of the license server endpoint.
        LicenseServerEndpointArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The ARN of the `ServerEndpoint` resource for the RDS license
            server.
        LicenseServerEndpointProvisioningStatus:
          allOf:
          - $ref: '#/components/schemas/LicenseServerEndpointProvisioningStatus'
          description: The current state of the provisioning process for the RDS license
            server endpoint
        LicenseServers:
          allOf:
          - $ref: '#/components/schemas/LicenseServerList'
          description: An array of `LicenseServer` resources that represent the license
            servers that are accessed through this endpoint.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp when License Manager created the license server
            endpoint.
      description: Contains details about a network endpoint for a Remote Desktop
        Services (RDS) license server.
    LicenseServerEndpointId:
      type: string
    LicenseServerEndpointList:
      type: array
      items:
        $ref: '#/components/schemas/LicenseServerEndpoint'
    LicenseServerEndpointProvisioningStatus:
      type: string
      enum:
      - PROVISIONING
      - PROVISIONING_FAILED
      - PROVISIONED
      - DELETING
      - DELETION_FAILED
      - DELETED
    LicenseServerHealthStatus:
      type: string
      enum:
      - HEALTHY
      - UNHEALTHY
      - NOT_APPLICABLE
    LicenseServerList:
      type: array
      items:
        $ref: '#/components/schemas/LicenseServer'
    LicenseServerSettings:
      type: object
      properties:
        ServerType:
          allOf:
          - $ref: '#/components/schemas/ServerType'
          description: The type of license server.
        ServerSettings:
          allOf:
          - $ref: '#/components/schemas/ServerSettings'
          description: The `ServerSettings` resource contains the settings for your
            server.
      required:
      - ServerType
      - ServerSettings
      description: The settings to configure your license server.
    ListIdentityProvidersRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          description: The maximum number of results to return from a single request.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: "You can use the following filters to streamline results:\n\
            \n  * Product\n\n  * DirectoryId"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to specify where to start paginating. This is the nextToken
            from a previously truncated response.
    ListIdentityProvidersResponse:
      type: object
      properties:
        IdentityProviderSummaries:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderSummaryList'
          description: An array of `IdentityProviderSummary` resources that contain
            details about the Active Directory identity providers that meet the request
            criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next token used for paginated responses. When this field
            isn't empty, there are additional elements that the service hasn't included
            in this request. Use this token with the next request to retrieve additional
            objects.
      required:
      - IdentityProviderSummaries
    ListInstancesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          description: The maximum number of results to return from a single request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to specify where to start paginating. This is the nextToken
            from a previously truncated response.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: "You can use the following filters to streamline results:\n\
            \n  * Status\n\n  * InstanceId"
    ListInstancesResponse:
      type: object
      properties:
        InstanceSummaries:
          allOf:
          - $ref: '#/components/schemas/InstanceSummaryList'
          description: An array of `InstanceSummary` resources that contain details
            about the instances that provide user-based subscriptions and also meet
            the request criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next token used for paginated responses. When this field
            isn't empty, there are additional elements that the service hasn't included
            in this request. Use this token with the next request to retrieve additional
            objects.
    ListLicenseServerEndpointsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          description: The maximum number of results to return from a single request.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: "You can use the following filters to streamline results:\n\
            \n  * IdentityProviderArn"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to specify where to start paginating. This is the nextToken
            from a previously truncated response.
    ListLicenseServerEndpointsResponse:
      type: object
      properties:
        LicenseServerEndpoints:
          allOf:
          - $ref: '#/components/schemas/LicenseServerEndpointList'
          description: An array of `LicenseServerEndpoint` resources that contain
            detailed information about the RDS License Servers that meet the request
            criteria.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next token used for paginated responses. When this field
            isn't empty, there are additional elements that the service hasn't included
            in this request. Use this token with the next request to retrieve additional
            objects.
    ListProductSubscriptionsRequest:
      type: object
      properties:
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The name of the user-based subscription product.


            Valid values: `VISUAL_STUDIO_ENTERPRISE` | `VISUAL_STUDIO_PROFESSIONAL`
            | `OFFICE_PROFESSIONAL_PLUS` | `REMOTE_DESKTOP_SERVICES`'
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: An object that specifies details for the identity provider.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          description: The maximum number of results to return from a single request.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: "You can use the following filters to streamline results:\n\
            \n  * Status\n\n  * Username\n\n  * Domain"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to specify where to start paginating. This is the nextToken
            from a previously truncated response.
      required:
      - IdentityProvider
    ListProductSubscriptionsResponse:
      type: object
      properties:
        ProductUserSummaries:
          allOf:
          - $ref: '#/components/schemas/ProductUserSummaryList'
          description: Metadata that describes the list product subscriptions operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next token used for paginated responses. When this field
            isn't empty, there are additional elements that the service hasn't included
            in this request. Use this token with the next request to retrieve additional
            objects.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource whose tags you
            want to retrieve.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags for the specified resource.
    ListUserAssociationsRequest:
      type: object
      properties:
        InstanceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the EC2 instance, which provides user-based subscriptions.
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: An object that specifies details for the identity provider.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/BoxInteger'
          description: The maximum number of results to return from a single request.
        Filters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: "You can use the following filters to streamline results:\n\
            \n  * Status\n\n  * Username\n\n  * Domain"
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A token to specify where to start paginating. This is the nextToken
            from a previously truncated response.
      required:
      - InstanceId
      - IdentityProvider
    ListUserAssociationsResponse:
      type: object
      properties:
        InstanceUserSummaries:
          allOf:
          - $ref: '#/components/schemas/InstanceUserSummaryList'
          description: Metadata that describes the list user association operation.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next token used for paginated responses. When this field
            isn't empty, there are additional elements that the service hasn't included
            in this request. Use this token with the next request to retrieve additional
            objects.
    ProductUserSummary:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user name from the identity provider for this product user.
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the user-based subscription product.
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: An object that specifies details for the identity provider.
        Status:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status of a product for this user.
        ProductUserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) for this product user.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message for a product for this user.
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain name of the Active Directory that contains the user
            information for the product subscription.
        SubscriptionStartDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The start date of a subscription.
        SubscriptionEndDate:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The end date of a subscription.
      required:
      - Username
      - Product
      - IdentityProvider
      - Status
      description: A summary of the user-based subscription products for a specific
        user.
    ProductUserSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ProductUserSummary'
    RdsSalSettings:
      type: object
      properties:
        RdsSalCredentialsProvider:
          allOf:
          - $ref: '#/components/schemas/CredentialsProvider'
          description: The `CredentialsProvider` resource contains a reference to
            the credentials provider that's used for RDS license server user administration.
      required:
      - RdsSalCredentialsProvider
      description: Server settings that are specific to a Remote Desktop Services
        (RDS) license server.
    RegisterIdentityProviderRequest:
      type: object
      properties:
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: An object that specifies details for the identity provider
            to register.
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The name of the user-based subscription product.


            Valid values: `VISUAL_STUDIO_ENTERPRISE` | `VISUAL_STUDIO_PROFESSIONAL`
            | `OFFICE_PROFESSIONAL_PLUS` | `REMOTE_DESKTOP_SERVICES`'
        Settings:
          allOf:
          - $ref: '#/components/schemas/Settings'
          description: The registered identity provider’s product related configuration
            settings such as the subnets to provision VPC endpoints.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags that apply to the identity provider's registration.
      required:
      - IdentityProvider
      - Product
    RegisterIdentityProviderResponse:
      type: object
      properties:
        IdentityProviderSummary:
          allOf:
          - $ref: '#/components/schemas/IdentityProviderSummary'
          description: Metadata that describes the results of an identity provider
            operation.
      required:
      - IdentityProviderSummary
    ResourceArn:
      type: string
      pattern: ^arn:([a-z0-9-\.]{1,63}):([a-z0-9-\.]{1,63}):([a-z0-9-\.]{1,63}):([a-z0-9-\.]{1,63}):([a-z0-9-\.]{1,510})/([a-z0-9-\.]{1,510})$
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The resource couldn't be found.
    SecretsManagerCredentialsProvider:
      type: object
      properties:
        SecretId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the Secrets Manager secret that contains credentials.
      description: Contains a credentials secret that's stored in Secrets Manager.
    SecurityGroup:
      type: string
      pattern: ^sg-(([0-9a-z]{8})|([0-9a-z]{17}))$
      minLength: 5
      maxLength: 200
    ServerEndpoint:
      type: object
      properties:
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The network address of the endpoint.
      description: A network endpoint through which you can access one or more servers.
    ServerSettings:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/RdsSalSettings'
        description: |-
          The `RdsSalSettings` resource contains settings to configure a specific Remote Desktop Services (RDS) license server.
      description: |-
        Contains settings for a specific server.
    ServerType:
      type: string
      enum:
      - RDS_SAL
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request failed because a service quota is exceeded.
    Settings:
      type: object
      properties:
        Subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          description: The subnets defined for the registered identity provider.
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/SecurityGroup'
          description: A security group ID that allows inbound TCP port 1688 communication
            between resources in your VPC and the VPC endpoint for activation servers.
      required:
      - Subnets
      - SecurityGroupId
      description: The registered identity provider’s product related configuration
        settings such as the subnets to provision VPC endpoints, and the security
        group ID that is associated with the VPC endpoints. The security group should
        permit inbound TCP port 1688 communication from resources in the VPC.
    StartProductSubscriptionRequest:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user name from the identity provider of the user.
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: An object that specifies details for the identity provider.
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The name of the user-based subscription product.


            Valid values: `VISUAL_STUDIO_ENTERPRISE` | `VISUAL_STUDIO_PROFESSIONAL`
            | `OFFICE_PROFESSIONAL_PLUS` | `REMOTE_DESKTOP_SERVICES`'
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain name of the Active Directory that contains the user
            for whom to start the product subscription.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags that apply to the product subscription.
      required:
      - Username
      - IdentityProvider
      - Product
    StartProductSubscriptionResponse:
      type: object
      properties:
        ProductUserSummary:
          allOf:
          - $ref: '#/components/schemas/ProductUserSummary'
          description: Metadata that describes the start product subscription operation.
      required:
      - ProductUserSummary
    StopProductSubscriptionRequest:
      type: object
      properties:
        Username:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The user name from the identity provider for the user.
        IdentityProvider:
          allOf:
          - $ref: '#/components/schemas/IdentityProvider'
          description: An object that specifies details for the identity provider.
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The name of the user-based subscription product.


            Valid values: `VISUAL_STUDIO_ENTERPRISE` | `VISUAL_STUDIO_PROFESSIONAL`
            | `OFFICE_PROFESSIONAL_PLUS` | `REMOTE_DESKTOP_SERVICES`'
        ProductUserArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the product user.
        Domain:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The domain name of the Active Directory that contains the user
            for whom to stop the product subscription.
    StopProductSubscriptionResponse:
      type: object
      properties:
        ProductUserSummary:
          allOf:
          - $ref: '#/components/schemas/ProductUserSummary'
          description: Metadata that describes the start product subscription operation.
      required:
      - ProductUserSummary
    StringList:
      type: array
      items:
        type: string
    Subnet:
      type: string
      pattern: ^subnet-[a-z0-9]{8,17}
    Subnets:
      type: array
      items:
        $ref: '#/components/schemas/Subnet'
    TagKeyList:
      type: array
      items:
        type: string
      x-sensitive: true
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to tag.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to apply to the specified resource.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request was denied because of request throttling. Retry the
        request.
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource that you want
            to remove tags from.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys to remove from the resource.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateIdentityProviderSettingsRequest:
      type: object
      properties:
        IdentityProvider:
          $ref: '#/components/schemas/IdentityProvider'
        Product:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The name of the user-based subscription product.


            Valid values: `VISUAL_STUDIO_ENTERPRISE` | `VISUAL_STUDIO_PROFESSIONAL`
            | `OFFICE_PROFESSIONAL_PLUS` | `REMOTE_DESKTOP_SERVICES`'
        IdentityProviderArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the identity provider to
            update.
        UpdateSettings:
          allOf:
          - $ref: '#/components/schemas/UpdateSettings'
          description: "Updates the registered identity provider’s product related\
            \ configuration settings. You can update any combination of settings in\
            \ a single operation such as the:\n\n  * Subnets which you want to add\
            \ to provision VPC endpoints.\n\n  * Subnets which you want to remove\
            \ the VPC endpoints from.\n\n  * Security group ID which permits traffic\
            \ to the VPC endpoints."
      required:
      - UpdateSettings
    UpdateIdentityProviderSettingsResponse:
      type: object
      properties:
        IdentityProviderSummary:
          $ref: '#/components/schemas/IdentityProviderSummary'
      required:
      - IdentityProviderSummary
    UpdateSettings:
      type: object
      properties:
        AddSubnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          description: The ID of one or more subnets in which License Manager will
            create a VPC endpoint for products that require connectivity to activation
            servers.
        RemoveSubnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          description: The ID of one or more subnets to remove.
        SecurityGroupId:
          allOf:
          - $ref: '#/components/schemas/SecurityGroup'
          description: A security group ID that allows inbound TCP port 1688 communication
            between resources in your VPC and the VPC endpoints for activation servers.
      required:
      - AddSubnets
      - RemoveSubnets
      description: Updates the registered identity provider’s product related configuration
        settings such as the subnets to provision VPC endpoints.
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: A parameter is not valid.
