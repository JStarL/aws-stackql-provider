openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: migrationhuborchestrator
  x-aws-serviceName: migrationhuborchestrator
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-08-28'
  title: AWS Migration Hub Orchestrator
  description: |-
    This API reference provides descriptions, syntax, and other details about each of the actions and data types for AWS Migration Hub Orchestrator. The topic for each action shows the API request parameters and responses. Alternatively, you can use one of the AWS SDKs to access an API that is tailored to the programming language or platform that you're using.
servers:
- description: The AWS Migration Hub Orchestrator regional endpoint
  url: https://migrationhub-orchestrator.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /template:
    post:
      operationId: CreateTemplate
      description: |-
        Creates a migration workflow template.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateName:
                  $ref: '#/components/schemas/String'
                templateDescription:
                  $ref: '#/components/schemas/String'
                templateSource:
                  $ref: '#/components/schemas/TemplateSource'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            This exception is thrown when an attempt to update or delete a resource would cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /migrationworkflow/:
    post:
      operationId: CreateWorkflow
      description: |-
        Create a workflow to orchestrate your migrations.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/String'
                description:
                  $ref: '#/components/schemas/String'
                templateId:
                  $ref: '#/components/schemas/String'
                applicationConfigurationId:
                  $ref: '#/components/schemas/String'
                inputParameters:
                  $ref: '#/components/schemas/StepInputParameters'
                stepTargets:
                  $ref: '#/components/schemas/StringList'
                tags:
                  $ref: '#/components/schemas/StringMap'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workflowstep:
    post:
      operationId: CreateWorkflowStep
      description: |-
        Create a step in the migration workflow.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/MigrationWorkflowName'
                stepGroupId:
                  $ref: '#/components/schemas/StepGroupId'
                workflowId:
                  $ref: '#/components/schemas/MigrationWorkflowId'
                stepActionType:
                  $ref: '#/components/schemas/StepActionType'
                description:
                  $ref: '#/components/schemas/MigrationWorkflowDescription'
                workflowStepAutomationConfiguration:
                  $ref: '#/components/schemas/WorkflowStepAutomationConfiguration'
                stepTarget:
                  $ref: '#/components/schemas/StringList'
                outputs:
                  $ref: '#/components/schemas/WorkflowStepOutputList'
                previous:
                  $ref: '#/components/schemas/StringList'
                next:
                  $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workflowstepgroups:
    post:
      operationId: CreateWorkflowStepGroup
      description: |-
        Create a step group in a migration workflow.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                workflowId:
                  $ref: '#/components/schemas/MigrationWorkflowId'
                name:
                  $ref: '#/components/schemas/StepGroupName'
                description:
                  $ref: '#/components/schemas/StepGroupDescription'
                next:
                  $ref: '#/components/schemas/StringList'
                previous:
                  $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListWorkflowStepGroups
      description: |-
        List the step groups in a migration workflow.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: workflowId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /template/{id}:
    delete:
      operationId: DeleteTemplate
      description: |-
        Deletes a migration workflow template.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateTemplate
      description: |-
        Updates a migration workflow template.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                templateName:
                  $ref: '#/components/schemas/String'
                templateDescription:
                  $ref: '#/components/schemas/String'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /migrationworkflow/{id}:
    delete:
      operationId: DeleteWorkflow
      description: |-
        Delete a migration workflow. You must pause a running workflow in Migration Hub Orchestrator console to delete it.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      responses:
        '202': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWorkflow
      description: |-
        Get migration workflow.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateWorkflow
      description: |-
        Update a migration workflow.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/String'
                description:
                  $ref: '#/components/schemas/String'
                inputParameters:
                  $ref: '#/components/schemas/StepInputParameters'
                stepTargets:
                  $ref: '#/components/schemas/StringList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workflowstep/{id}:
    delete:
      operationId: DeleteWorkflowStep
      description: |-
        Delete a step in a migration workflow. Pause the workflow to delete a running step.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      - name: stepGroupId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      - name: workflowId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWorkflowStep
      description: |-
        Get a step in the migration workflow.
      parameters:
      - name: workflowId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      - name: stepGroupId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: UpdateWorkflowStep
      description: |-
        Update a step in a migration workflow.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                stepGroupId:
                  $ref: '#/components/schemas/StepGroupId'
                workflowId:
                  $ref: '#/components/schemas/MigrationWorkflowId'
                name:
                  $ref: '#/components/schemas/StepName'
                description:
                  $ref: '#/components/schemas/StepDescription'
                stepActionType:
                  $ref: '#/components/schemas/StepActionType'
                workflowStepAutomationConfiguration:
                  $ref: '#/components/schemas/WorkflowStepAutomationConfiguration'
                stepTarget:
                  $ref: '#/components/schemas/StringList'
                outputs:
                  $ref: '#/components/schemas/WorkflowStepOutputList'
                previous:
                  $ref: '#/components/schemas/StringList'
                next:
                  $ref: '#/components/schemas/StringList'
                status:
                  $ref: '#/components/schemas/StepStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /workflowstepgroup/{id}:
    delete:
      operationId: DeleteWorkflowStepGroup
      description: |-
        Delete a step group in a migration workflow.
      parameters:
      - name: workflowId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      responses:
        '202': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetWorkflowStepGroup
      description: |-
        Get the step group of a migration workflow.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      - name: workflowId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: UpdateWorkflowStepGroup
      description: |-
        Update the step group in a migration workflow.
      parameters:
      - name: workflowId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/StepGroupName'
                description:
                  $ref: '#/components/schemas/StepGroupDescription'
                next:
                  $ref: '#/components/schemas/StringList'
                previous:
                  $ref: '#/components/schemas/StringList'
      responses:
        '202': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /migrationworkflowtemplate/{id}:
    get:
      operationId: GetTemplate
      description: |-
        Get the template you want to use for creating a migration workflow.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /templatestep/{id}:
    get:
      operationId: GetTemplateStep
      description: |-
        Get a specific step in a template.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      - name: templateId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
      - name: stepGroupId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /templates/{templateId}/stepgroups/{id}:
    get:
      operationId: GetTemplateStepGroup
      description: |-
        Get a step group in a template.
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /plugins:
    get:
      operationId: ListPlugins
      description: |-
        List AWS Migration Hub Orchestrator plugins.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        List the tags added to a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Tag a resource by specifying its Amazon Resource Name (ARN).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Deletes the tags for a resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /templatestepgroups/{templateId}:
    get:
      operationId: ListTemplateStepGroups
      description: |-
        List the step groups in a template.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: templateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /templatesteps:
    get:
      operationId: ListTemplateSteps
      description: |-
        List the steps in a template.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: templateId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TemplateId'
      - name: stepGroupId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /migrationworkflowtemplates:
    get:
      operationId: ListTemplates
      description: |-
        List the templates available in Migration Hub Orchestrator to create a migration workflow.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: name
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TemplateName'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /workflow/{workflowId}/workflowstepgroups/{stepGroupId}/workflowsteps:
    get:
      operationId: ListWorkflowSteps
      description: |-
        List the steps in a workflow.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: workflowId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      - name: stepGroupId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /migrationworkflows:
    get:
      operationId: ListWorkflows
      description: |-
        List the migration workflows.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: templateId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/TemplateId'
      - name: adsApplicationConfigurationName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApplicationConfigurationName'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
      - name: name
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /retryworkflowstep/{id}:
    post:
      operationId: RetryWorkflowStep
      description: |-
        Retry a failed step in a migration workflow.
      parameters:
      - name: workflowId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      - name: stepGroupId
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StepGroupId'
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/StepId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /migrationworkflow/{id}/start:
    post:
      operationId: StartWorkflow
      description: |-
        Start a migration workflow.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /migrationworkflow/{id}/stop:
    post:
      operationId: StopWorkflow
      description: |-
        Stop an ongoing migration workflow.
      parameters:
      - name: id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/MigrationWorkflowId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal error has occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The resource is not available.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an AWS service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: You do not have sufficient access to perform this action.
    ApplicationConfigurationName:
      type: string
      pattern: ^[-a-zA-Z0-9_.+]+[-a-zA-Z0-9_.+ ]*$
      minLength: 1
      maxLength: 100
    ClientToken:
      type: string
      pattern: ^[-a-zA-Z0-9]*$
      minLength: 1
      maxLength: 256
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: This exception is thrown when an attempt to update or delete a
        resource would cause an inconsistent state.
    CreateMigrationWorkflowRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the migration workflow.
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        applicationConfigurationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The configuration ID of the application configured in Application
            Discovery Service.
        inputParameters:
          allOf:
          - $ref: '#/components/schemas/StepInputParameters'
          description: The input parameters required to create a migration workflow.
        stepTargets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The servers on which a step will be run.
        tags:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: The tags to add on a migration workflow.
      required:
      - name
      - templateId
      - inputParameters
    CreateMigrationWorkflowResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the migration workflow.
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        adsApplicationConfigurationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The configuration ID of the application configured in Application
            Discovery Service.
        workflowInputs:
          allOf:
          - $ref: '#/components/schemas/StepInputParameters'
          description: The inputs for creating a migration workflow.
        stepTargets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The servers on which a step will be run.
        status:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
          description: The status of the migration workflow.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was created.
        tags:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: The tags to add on a migration workflow.
    CreateTemplateRequest:
      type: object
      properties:
        templateName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow template.
        templateDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the migration workflow template.
        templateSource:
          allOf:
          - $ref: '#/components/schemas/TemplateSource'
          description: The source of the migration workflow template.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request. For more information, see [Idempotency](https://smithy.io/2.0/spec/behavior-traits.html#idempotencytoken-trait)
            in the Smithy documentation.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to add to the migration workflow template.
      required:
      - templateName
      - templateSource
    CreateTemplateResponse:
      type: object
      properties:
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow template.
        templateArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the migration workflow template.
            The format for an Migration Hub Orchestrator template ARN is `arn:aws:migrationhub-orchestrator:region:account:template/template-abcd1234`.
            For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
            in the _AWS General Reference_.
        tags:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: The tags added to the migration workflow template.
    CreateWorkflowStepGroupRequest:
      type: object
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow that will contain the step
            group.
        name:
          allOf:
          - $ref: '#/components/schemas/StepGroupName'
          description: The name of the step group.
        description:
          allOf:
          - $ref: '#/components/schemas/StepGroupDescription'
          description: The description of the step group.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step group.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step group.
      required:
      - workflowId
      - name
    CreateWorkflowStepGroupResponse:
      type: object
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow that contains the step group.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step group.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the step group.
        tools:
          allOf:
          - $ref: '#/components/schemas/ToolsList'
          description: List of AWS services utilized in a migration workflow.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step group.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step group.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step group is created.
    CreateWorkflowStepRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowName'
          description: The name of the step.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        stepActionType:
          allOf:
          - $ref: '#/components/schemas/StepActionType'
          description: The action type of the step. You must run and update the status
            of a manual step for the workflow to continue after the completion of
            the step.
        description:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowDescription'
          description: The description of the step.
        workflowStepAutomationConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepAutomationConfiguration'
          description: The custom script to run tests on source or target environments.
        stepTarget:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The servers on which a step will be run.
        outputs:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepOutputList'
          description: The key value pairs added for the expected output.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step.
      required:
      - name
      - stepGroupId
      - workflowId
      - stepActionType
    CreateWorkflowStepResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step.
    DataType:
      type: string
      enum:
      - STRING
      - INTEGER
      - STRINGLIST
      - STRINGMAP
    DeleteMigrationWorkflowRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow you want to delete.
      required:
      - id
    DeleteMigrationWorkflowResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the migration workflow.
        status:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
          description: The status of the migration workflow.
    DeleteTemplateRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the request to delete a migration workflow template.
      required:
      - id
    DeleteTemplateResponse:
      type: object
      properties: {}
    DeleteWorkflowStepGroupRequest:
      type: object
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        id:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group you want to delete.
      required:
      - workflowId
      - id
    DeleteWorkflowStepGroupResponse:
      type: object
      properties: {}
    DeleteWorkflowStepRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The ID of the step you want to delete.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group that contains the step you want to
            delete.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
      required:
      - id
      - stepGroupId
      - workflowId
    DeleteWorkflowStepResponse:
      type: object
      properties: {}
    GetMigrationWorkflowRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
      required:
      - id
    GetMigrationWorkflowResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the migration workflow.
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        adsApplicationConfigurationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The configuration ID of the application configured in Application
            Discovery Service.
        adsApplicationName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the application configured in Application Discovery
            Service.
        status:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
          description: The status of the migration workflow.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message of the migration workflow.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was created.
        lastStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was last started.
        lastStopTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was last stopped.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was last modified.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow ended.
        tools:
          allOf:
          - $ref: '#/components/schemas/ToolsList'
          description: List of AWS services utilized in a migration workflow.
        totalSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of steps in the migration workflow.
        completedSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Get a list of completed steps in the migration workflow.
        workflowInputs:
          allOf:
          - $ref: '#/components/schemas/StepInputParameters'
          description: The inputs required for creating the migration workflow.
        tags:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: The tags added to the migration workflow.
        workflowBucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon S3 bucket where the migration logs are stored.
    GetMigrationWorkflowTemplateRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the template.
      required:
      - id
    GetMigrationWorkflowTemplateResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        templateArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: '>The Amazon Resource Name (ARN) of the migration workflow
            template. The format for an Migration Hub Orchestrator template ARN is
            `arn:aws:migrationhub-orchestrator:region:account:template/template-abcd1234`.
            For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
            in the _AWS General Reference_.'
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the template.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time at which the template was last created.
        inputs:
          allOf:
          - $ref: '#/components/schemas/TemplateInputList'
          description: The inputs provided for the creation of the migration workflow.
        tools:
          allOf:
          - $ref: '#/components/schemas/ToolsList'
          description: List of AWS services utilized in a migration workflow.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the template was last created.
        owner:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The owner of the migration workflow template.
        status:
          allOf:
          - $ref: '#/components/schemas/TemplateStatus'
          description: The status of the template.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message of retrieving migration workflow templates.
        templateClass:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The class of the migration workflow template. The available\
            \ template classes are:\n\n  * A2C\n\n  * MGN\n\n  * SAP_MULTI\n\n  *\
            \ SQL_EC2\n\n  * SQL_RDS\n\n  * VMIE"
        tags:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: The tags added to the migration workflow template.
    GetTemplateStepGroupRequest:
      type: object
      properties:
        templateId:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the template.
        id:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
      required:
      - templateId
      - id
    GetTemplateStepGroupResponse:
      type: object
      properties:
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step group.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the step group.
        status:
          allOf:
          - $ref: '#/components/schemas/StepGroupStatus'
          description: The status of the step group.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step group was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step group was last modified.
        tools:
          allOf:
          - $ref: '#/components/schemas/ToolsList'
          description: List of AWS services utilized in a migration workflow.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step group.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step group.
    GetTemplateStepRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The ID of the step.
        templateId:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the template.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
      required:
      - id
      - templateId
      - stepGroupId
    GetTemplateStepResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The ID of the step.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
        templateId:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the template.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the step.
        stepActionType:
          allOf:
          - $ref: '#/components/schemas/StepActionType'
          description: The action type of the step. You must run and update the status
            of a manual step for the workflow to continue after the completion of
            the step.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time at which the step was created.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step.
        outputs:
          allOf:
          - $ref: '#/components/schemas/StepOutputList'
          description: The outputs of the step.
        stepAutomationConfiguration:
          allOf:
          - $ref: '#/components/schemas/StepAutomationConfiguration'
          description: The custom script to run tests on source or target environments.
    GetWorkflowStepGroupRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
      required:
      - id
      - workflowId
    GetWorkflowStepGroupResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step group.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the step group.
        status:
          allOf:
          - $ref: '#/components/schemas/StepGroupStatus'
          description: The status of the step group.
        owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: The owner of the step group.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step group was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step group was last modified.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step group ended.
        tools:
          allOf:
          - $ref: '#/components/schemas/ToolsList'
          description: List of AWS services utilized in a migration workflow.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step group.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step group.
    GetWorkflowStepRequest:
      type: object
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
        id:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The ID of the step.
      required:
      - workflowId
      - stepGroupId
      - id
    GetWorkflowStepResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow.
        stepId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the step.
        stepActionType:
          allOf:
          - $ref: '#/components/schemas/StepActionType'
          description: The action type of the step. You must run and update the status
            of a manual step for the workflow to continue after the completion of
            the step.
        owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: The owner of the step.
        workflowStepAutomationConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepAutomationConfiguration'
          description: The custom script to run tests on source or target environments.
        stepTarget:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The servers on which a step will be run.
        outputs:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepOutputList'
          description: The outputs of the step.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step.
        status:
          allOf:
          - $ref: '#/components/schemas/StepStatus'
          description: The status of the step.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message of the migration workflow.
        scriptOutputLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The output location of the script.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step was created.
        lastStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the workflow was last started.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step ended.
        noOfSrvCompleted:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of servers that have been migrated.
        noOfSrvFailed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of servers that have failed to migrate.
        totalNoOfSrv:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of servers that have been migrated.
    IPAddress:
      type: string
      pattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$
      minLength: 0
      maxLength: 15
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: An internal error has occurred.
    ListMigrationWorkflowTemplatesRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that can be returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the template.
    ListMigrationWorkflowTemplatesResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        templateSummary:
          allOf:
          - $ref: '#/components/schemas/TemplateSummaryList'
          description: The summary of the template.
      required:
      - templateSummary
    ListMigrationWorkflowsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that can be returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        templateId:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the template.
        adsApplicationConfigurationName:
          allOf:
          - $ref: '#/components/schemas/ApplicationConfigurationName'
          description: The name of the application configured in Application Discovery
            Service.
        status:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
          description: The status of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow.
    ListMigrationWorkflowsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        migrationWorkflowSummary:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowSummaryList'
          description: The summary of the migration workflow.
      required:
      - migrationWorkflowSummary
    ListPluginsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of plugins that can be returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
    ListPluginsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        plugins:
          allOf:
          - $ref: '#/components/schemas/PluginSummaries'
          description: Migration Hub Orchestrator plugins.
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags added to a resource.
    ListTemplateStepGroupsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that can be returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        templateId:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the template.
      required:
      - templateId
    ListTemplateStepGroupsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        templateStepGroupSummary:
          allOf:
          - $ref: '#/components/schemas/TemplateStepGroupSummaryList'
          description: The summary of the step group in the template.
      required:
      - templateStepGroupSummary
    ListTemplateStepsRequest:
      type: object
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that can be returned.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        templateId:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the template.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
      required:
      - templateId
      - stepGroupId
    ListTemplateStepsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        templateStepSummaryList:
          allOf:
          - $ref: '#/components/schemas/TemplateStepSummaryList'
          description: The list of summaries of steps in a template.
    ListWorkflowStepGroupsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that can be returned.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
      required:
      - workflowId
    ListWorkflowStepGroupsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        workflowStepGroupsSummary:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepGroupsSummaryList'
          description: The summary of step groups in a migration workflow.
      required:
      - workflowStepGroupsSummary
    ListWorkflowStepsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of results that can be returned.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
      required:
      - workflowId
      - stepGroupId
    ListWorkflowStepsResponse:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The pagination token.
        workflowStepsSummary:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepsSummaryList'
          description: The summary of steps in a migration workflow.
      required:
      - workflowStepsSummary
    MaxResults:
      type: integer
      default: 0
      minimum: 0
      maximum: 100
    MaxStringList:
      type: array
      items:
        $ref: '#/components/schemas/MaxStringValue'
    MaxStringValue:
      type: string
      minLength: 0
      maxLength: 2048
    MigrationWorkflowDescription:
      type: string
      pattern: ^[-a-zA-Z0-9_.+, ]*$
      minLength: 0
      maxLength: 500
    MigrationWorkflowId:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 100
    MigrationWorkflowName:
      type: string
      pattern: ^[-a-zA-Z0-9_.+]+[-a-zA-Z0-9_.+ ]*$
      minLength: 1
      maxLength: 100
    MigrationWorkflowStatusEnum:
      type: string
      enum:
      - CREATING
      - NOT_STARTED
      - CREATION_FAILED
      - STARTING
      - IN_PROGRESS
      - WORKFLOW_FAILED
      - PAUSED
      - PAUSING
      - PAUSING_FAILED
      - USER_ATTENTION_REQUIRED
      - DELETING
      - DELETION_FAILED
      - DELETED
      - COMPLETED
    MigrationWorkflowSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow.
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        adsApplicationConfigurationName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the application configured in Application Discovery
            Service.
        status:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
          description: The status of the migration workflow.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was created.
        endTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow ended.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message of the migration workflow.
        completedSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The steps completed in the migration workflow.
        totalSteps:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: All the steps in a migration workflow.
      description: The summary of a migration workflow.
    MigrationWorkflowSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/MigrationWorkflowSummary'
    NextToken:
      type: string
      pattern: .*\S.*
      minLength: 0
      maxLength: 2048
    Owner:
      type: string
      enum:
      - AWS_MANAGED
      - CUSTOM
    PlatformCommand:
      type: object
      properties:
        linux:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Command for Linux.
        windows:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Command for Windows.
      description: Command to be run on a particular operating system.
    PlatformScriptKey:
      type: object
      properties:
        linux:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The script location for Linux.
        windows:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The script location for Windows.
      description: The script location for a particular operating system.
    PluginHealth:
      type: string
      enum:
      - HEALTHY
      - UNHEALTHY
    PluginId:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 60
    PluginSummaries:
      type: array
      items:
        $ref: '#/components/schemas/PluginSummary'
    PluginSummary:
      type: object
      properties:
        pluginId:
          allOf:
          - $ref: '#/components/schemas/PluginId'
          description: The ID of the plugin.
        hostname:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the host.
        status:
          allOf:
          - $ref: '#/components/schemas/PluginHealth'
          description: The status of the plugin.
        ipAddress:
          allOf:
          - $ref: '#/components/schemas/IPAddress'
          description: The IP address at which the plugin is located.
        version:
          allOf:
          - $ref: '#/components/schemas/PluginVersion'
          description: The version of the plugin.
        registeredTime:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The time at which the plugin was registered.
      description: The summary of the Migration Hub Orchestrator plugin.
    PluginVersion:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    ResourceArn:
      type: string
      pattern: ^arn:aws:migrationhub-orchestrator:[a-z0-9-]+:[0-9]+:(template|workflow)/[.]*$
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The resource is not available.
    RetryWorkflowStepRequest:
      type: object
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
        id:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The ID of the step.
      required:
      - workflowId
      - stepGroupId
      - id
    RetryWorkflowStepResponse:
      type: object
      properties:
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step.
        status:
          allOf:
          - $ref: '#/components/schemas/StepStatus'
          description: The status of the step.
    RunEnvironment:
      type: string
      enum:
      - AWS
      - ONPREMISE
    S3Bucket:
      type: string
      pattern: ^[0-9a-z]+[0-9a-z\.\-]*[0-9a-z]+$
      minLength: 0
      maxLength: 63
    S3Key:
      type: string
      minLength: 0
      maxLength: 1024
    StartMigrationWorkflowRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
      required:
      - id
    StartMigrationWorkflowResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the migration workflow.
        status:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
          description: The status of the migration workflow.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message of the migration workflow.
        lastStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was last started.
    StepActionType:
      type: string
      enum:
      - MANUAL
      - AUTOMATED
    StepAutomationConfiguration:
      type: object
      properties:
        scriptLocationS3Bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon S3 bucket where the script is located.
        scriptLocationS3Key:
          allOf:
          - $ref: '#/components/schemas/PlatformScriptKey'
          description: The Amazon S3 key for the script location.
        command:
          allOf:
          - $ref: '#/components/schemas/PlatformCommand'
          description: The command to run the script.
        runEnvironment:
          allOf:
          - $ref: '#/components/schemas/RunEnvironment'
          description: The source or target environment.
        targetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: The servers on which to run the script.
      description: The custom script to run tests on source or target environments.
    StepDescription:
      type: string
      pattern: ^[-a-zA-Z0-9_.+, ]*$
      minLength: 0
      maxLength: 500
    StepGroupDescription:
      type: string
      pattern: ^[-a-zA-Z0-9_.+, ]*$
      minLength: 0
      maxLength: 500
    StepGroupId:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 100
    StepGroupName:
      type: string
      pattern: ^[-a-zA-Z0-9_.+]+[-a-zA-Z0-9_.+ ]*$
      minLength: 1
      maxLength: 100
    StepGroupStatus:
      type: string
      enum:
      - AWAITING_DEPENDENCIES
      - READY
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - PAUSED
      - PAUSING
      - USER_ATTENTION_REQUIRED
    StepId:
      type: string
      pattern: ^[a-zA-Z0-9-]+$
      minLength: 1
      maxLength: 100
    StepInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Integer'
        description: |-
          The value of the integer.
      - allOf:
        - $ref: '#/components/schemas/StringValue'
        description: |-
          String value.
      - allOf:
        - $ref: '#/components/schemas/StringList'
        description: |-
          List of string values.
      - allOf:
        - $ref: '#/components/schemas/StringMap'
        description: |-
          Map of string values.
      description: |-
        A map of key value pairs that is generated when you create a migration workflow. The key value pairs will differ based on your selection of the template.
    StepInputParameters:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StepInput'
    StepInputParametersKey:
      type: string
      pattern: ^[a-zA-Z0-9-_ ()]+$
      minLength: 1
      maxLength: 100
    StepName:
      type: string
      pattern: ^[-a-zA-Z0-9_.+]+[-a-zA-Z0-9_.+ ]*$
      minLength: 1
      maxLength: 100
    StepOutput:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step.
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType'
          description: The data type of the step output.
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Determine if an output is required from a step.
      description: The output of the step.
    StepOutputList:
      type: array
      items:
        $ref: '#/components/schemas/StepOutput'
    StepStatus:
      type: string
      enum:
      - AWAITING_DEPENDENCIES
      - SKIPPED
      - READY
      - IN_PROGRESS
      - COMPLETED
      - FAILED
      - PAUSED
      - USER_ATTENTION_REQUIRED
    StopMigrationWorkflowRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
      required:
      - id
    StopMigrationWorkflowResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the migration workflow.
        status:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
          description: The status of the migration workflow.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message of the migration workflow.
        lastStopTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was stopped.
    StringList:
      type: array
      items:
        $ref: '#/components/schemas/StringListMember'
    StringListMember:
      type: string
      minLength: 0
      maxLength: 500
    StringMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/StringMapValue'
    StringMapKey:
      type: string
      pattern: ^[a-zA-Z0-9-_ ()]+$
      minLength: 1
      maxLength: 100
    StringMapValue:
      type: string
      minLength: 0
      maxLength: 100
    StringValue:
      type: string
      minLength: 0
      maxLength: 100
    TagKey:
      type: string
      pattern: ^(?!aws:)[a-zA-Z+-=._:/]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource to which you
            want to add tags.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A collection of labels, in the form of key:value pairs, that
            apply to this resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetType:
      type: string
      enum:
      - SINGLE
      - ALL
      - NONE
    TemplateId:
      type: string
      pattern: ^[-a-zA-Z0-9_.+]+[-a-zA-Z0-9_.+ ]*$
      minLength: 1
      maxLength: 100
    TemplateInput:
      type: object
      properties:
        inputName:
          allOf:
          - $ref: '#/components/schemas/TemplateInputName'
          description: The name of the template.
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType'
          description: The data type of the template input.
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Determine if an input is required from the template.
      description: The input parameters of a template.
    TemplateInputList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateInput'
    TemplateInputName:
      type: string
      pattern: ^[-a-zA-Z0-9_.+]+[-a-zA-Z0-9_.+ ]*$
      minLength: 1
      maxLength: 100
    TemplateName:
      type: string
      pattern: ^[-a-zA-Z0-9_.+]+[-a-zA-Z0-9_.+ ]*$
      minLength: 1
      maxLength: 100
    TemplateSource:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/MigrationWorkflowId'
        description: |-
          The ID of the workflow from the source migration workflow template.
      description: |-
        The migration workflow template used as the source for the new template.
    TemplateStatus:
      type: string
      enum:
      - CREATED
      - READY
      - PENDING_CREATION
      - CREATING
      - CREATION_FAILED
    TemplateStepGroupSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step group.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step group.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step group.
      description: The summary of the step group in the template.
    TemplateStepGroupSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateStepGroupSummary'
    TemplateStepSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step.
        stepActionType:
          allOf:
          - $ref: '#/components/schemas/StepActionType'
          description: The action type of the step. You must run and update the status
            of a manual step for the workflow to continue after the completion of
            the step.
        targetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: The servers on which to run the script.
        owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: The owner of the step.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step.
      description: The summary of the step.
    TemplateStepSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateStepSummary'
    TemplateSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the template.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the template.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the template.
      description: The summary of the template.
    TemplateSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TemplateSummary'
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The request was denied due to request throttling.
    Tool:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of an AWS service.
        url:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL of an AWS service.
      description: List of AWS services utilized in a migration workflow.
    ToolsList:
      type: array
      items:
        $ref: '#/components/schemas/Tool'
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource from which you
            want to remove tags.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: One or more tag keys. Specify only the tag keys, not the tag
            values.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateMigrationWorkflowRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the migration workflow.
        inputParameters:
          allOf:
          - $ref: '#/components/schemas/StepInputParameters'
          description: The input parameters required to update a migration workflow.
        stepTargets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The servers on which a step will be run.
      required:
      - id
    UpdateMigrationWorkflowResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the migration workflow.
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the template.
        adsApplicationConfigurationId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the application configured in Application Discovery
            Service.
        workflowInputs:
          allOf:
          - $ref: '#/components/schemas/StepInputParameters'
          description: The inputs required to update a migration workflow.
        stepTargets:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The servers on which a step will be run.
        status:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowStatusEnum'
          description: The status of the migration workflow.
        creationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was created.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the migration workflow was last modified.
        tags:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: The tags added to the migration workflow.
    UpdateTemplateRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/TemplateId'
          description: The ID of the request to update a migration workflow template.
        templateName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the migration workflow template to update.
        templateDescription:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the migration workflow template to update.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: A unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
      required:
      - id
    UpdateTemplateResponse:
      type: object
      properties:
        templateId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow template being updated.
        templateArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the migration workflow template being updated. The
            format for an Migration Hub Orchestrator template ARN is `arn:aws:migrationhub-orchestrator:region:account:template/template-abcd1234`.
            For more information about ARNs, see [Amazon Resource Names (ARNs)](https://docs.aws.amazon.com/IAM/latest/UserGuide/reference-arns.html)
            in the _AWS General Reference_.
        tags:
          allOf:
          - $ref: '#/components/schemas/StringMap'
          description: The tags added to the migration workflow template.
    UpdateWorkflowStepGroupRequest:
      type: object
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        id:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
        name:
          allOf:
          - $ref: '#/components/schemas/StepGroupName'
          description: The name of the step group.
        description:
          allOf:
          - $ref: '#/components/schemas/StepGroupDescription'
          description: The description of the step group.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step group.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step group.
      required:
      - workflowId
      - id
    UpdateWorkflowStepGroupResponse:
      type: object
      properties:
        workflowId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step group.
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the step group.
        tools:
          allOf:
          - $ref: '#/components/schemas/ToolsList'
          description: List of AWS services utilized in a migration workflow.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step group.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step group.
        lastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the step group was last modified.
    UpdateWorkflowStepRequest:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The ID of the step.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/StepGroupId'
          description: The ID of the step group.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/MigrationWorkflowId'
          description: The ID of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/StepName'
          description: The name of the step.
        description:
          allOf:
          - $ref: '#/components/schemas/StepDescription'
          description: The description of the step.
        stepActionType:
          allOf:
          - $ref: '#/components/schemas/StepActionType'
          description: The action type of the step. You must run and update the status
            of a manual step for the workflow to continue after the completion of
            the step.
        workflowStepAutomationConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepAutomationConfiguration'
          description: The custom script to run tests on the source and target environments.
        stepTarget:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The servers on which a step will be run.
        outputs:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepOutputList'
          description: The outputs of a step.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step.
        status:
          allOf:
          - $ref: '#/components/schemas/StepStatus'
          description: The status of the step.
      required:
      - id
      - stepGroupId
      - workflowId
    UpdateWorkflowStepResponse:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/StepId'
          description: The ID of the step.
        stepGroupId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        workflowId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the migration workflow.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step.
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The input fails to satisfy the constraints specified by an AWS
        service.
    WorkflowStepAutomationConfiguration:
      type: object
      properties:
        scriptLocationS3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The Amazon S3 bucket where the script is located.
        scriptLocationS3Key:
          allOf:
          - $ref: '#/components/schemas/PlatformScriptKey'
          description: The Amazon S3 key for the script location.
        command:
          allOf:
          - $ref: '#/components/schemas/PlatformCommand'
          description: The command required to run the script.
        runEnvironment:
          allOf:
          - $ref: '#/components/schemas/RunEnvironment'
          description: The source or target environment.
        targetType:
          allOf:
          - $ref: '#/components/schemas/TargetType'
          description: The servers on which to run the script.
      description: The custom script to run tests on source or target environments.
    WorkflowStepGroupSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step group.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step group.
        owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: The owner of the step group.
        status:
          allOf:
          - $ref: '#/components/schemas/StepGroupStatus'
          description: The status of the step group.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step group.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step group.
      description: The summary of a step group in a workflow.
    WorkflowStepGroupsSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowStepGroupSummary'
    WorkflowStepOutput:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepOutputName'
          description: The name of the step.
        dataType:
          allOf:
          - $ref: '#/components/schemas/DataType'
          description: The data type of the output.
        required:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Determine if an output is required from a step.
        value:
          allOf:
          - $ref: '#/components/schemas/WorkflowStepOutputUnion'
          description: The value of the output.
      description: The output of a step.
    WorkflowStepOutputList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowStepOutput'
    WorkflowStepOutputName:
      type: string
      pattern: ^[-a-zA-Z0-9_.+]+[-a-zA-Z0-9_.+ ]*$
      minLength: 1
      maxLength: 100
    WorkflowStepOutputUnion:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/Integer'
        description: |-
          The integer value.
      - allOf:
        - $ref: '#/components/schemas/MaxStringValue'
        description: |-
          The string value.
      - allOf:
        - $ref: '#/components/schemas/MaxStringList'
        description: |-
          The list of string value.
      description: |-
        A structure to hold multiple values of an output.
    WorkflowStepSummary:
      type: object
      properties:
        stepId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ID of the step.
        name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the step.
        stepActionType:
          allOf:
          - $ref: '#/components/schemas/StepActionType'
          description: The action type of the step. You must run and update the status
            of a manual step for the workflow to continue after the completion of
            the step.
        owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          description: The owner of the step.
        previous:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The previous step.
        next:
          allOf:
          - $ref: '#/components/schemas/StringList'
          description: The next step.
        status:
          allOf:
          - $ref: '#/components/schemas/StepStatus'
          description: The status of the step.
        statusMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The status message of the migration workflow.
        noOfSrvCompleted:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of servers that have been migrated.
        noOfSrvFailed:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of servers that have failed to migrate.
        totalNoOfSrv:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of servers that have been migrated.
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the step.
        scriptLocation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The location of the script.
      description: The summary of the step in a migration workflow.
    WorkflowStepsSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/WorkflowStepSummary'
