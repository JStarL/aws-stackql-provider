openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: notifications
  x-aws-serviceName: notifications
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2018-05-10'
  title: AWS User Notifications
  description: |-
    The _Amazon Web Services User Notifications API Reference_ provides descriptions, API request parameters, and the JSON response for each of the User Notification API actions.

    User Notification control plane APIs are currently available in US East (Virginia) - `us-east-1`.

    [GetNotificationEvent](https://docs.aws.amazon.com/notifications/latest/APIReference/API_GetNotificationEvent.html) and [ListNotificationEvents](https://docs.aws.amazon.com/notifications/latest/APIReference/API_ListNotificationEvents.html) APIs are currently available in [commercial partition Regions](https://docs.aws.amazon.com/notifications/latest/userguide/supported-regions.html) and only return notifications stored in the same Region in which they're called.

    The User Notifications console can only be used in US East (Virginia). Your data however, is stored in each Region chosen as a [notification hub](https://docs.aws.amazon.com/notifications/latest/userguide/notification-hubs.html) in addition to US East (Virginia).
servers:
- description: The AWS User Notifications regional endpoint
  url: https://notifications.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AccessStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
      - PENDING
    AccountContactType:
      type: string
      enum:
      - ACCOUNT_PRIMARY
      - ACCOUNT_ALTERNATE_BILLING
      - ACCOUNT_ALTERNATE_OPERATIONS
      - ACCOUNT_ALTERNATE_SECURITY
    AccountId:
      type: string
      pattern: ^\d{12}$
    AggregatedNotificationRegions:
      type: array
      items:
        $ref: '#/components/schemas/Region'
    AggregationDuration:
      type: string
      enum:
      - LONG
      - SHORT
      - NONE
    AggregationEventType:
      type: string
      enum:
      - AGGREGATE
      - CHILD
      - NONE
    AggregationKeys:
      type: array
      items:
        $ref: '#/components/schemas/AggregationKey'
    Arn:
      type: string
      pattern: ^arn:[^:]*:[^:]*:[^:]*:.*$
    ChannelArn:
      type: string
      pattern: ^arn:aws:(chatbot|consoleapp|notifications-contacts):[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-_.@]+/[a-zA-Z0-9/_.@:-]+$
    ChannelAssociationOverrideOption:
      type: string
      enum:
      - ENABLED
      - DISABLED
    ChannelIdentifier:
      type: string
      pattern: ^ACCOUNT_PRIMARY|ACCOUNT_ALTERNATE_BILLING|ACCOUNT_ALTERNATE_OPERATIONS|ACCOUNT_ALTERNATE_SECURITY|arn:aws:(chatbot|consoleapp|notifications-contacts):[a-zA-Z0-9-]*:[0-9]{12}:[a-zA-Z0-9-_.@]+/[a-zA-Z0-9/_.@:-]+$
    ChannelType:
      type: string
      enum:
      - MOBILE
      - CHATBOT
      - EMAIL
      - ACCOUNT_CONTACT
    Channels:
      type: array
      items:
        $ref: '#/components/schemas/ChannelArn'
    CreationTime:
      type: string
      format: date-time
    Dimensions:
      type: array
      items:
        $ref: '#/components/schemas/Dimension'
    ErrorMessage:
      type: string
    EventRuleArn:
      type: string
      pattern: ^arn:aws:notifications::[0-9]{12}:configuration/[a-z0-9]{27}/rule/[a-z0-9]{27}$
    EventRuleEventPattern:
      type: string
      minLength: 0
      maxLength: 4096
    EventRuleStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
      - CREATING
      - UPDATING
      - DELETING
    EventRuleStatusReason:
      type: string
    EventRules:
      type: array
      items:
        $ref: '#/components/schemas/EventRuleStructure'
    EventStatus:
      type: string
      enum:
      - HEALTHY
      - UNHEALTHY
    EventType:
      type: string
      pattern: ^([a-zA-Z0-9 \-\(\)])+$
      minLength: 1
      maxLength: 128
    LastActivationTime:
      type: string
      format: date-time
    LocaleCode:
      type: string
      enum:
      - de_DE
      - en_CA
      - en_US
      - en_UK
      - es_ES
      - fr_CA
      - fr_FR
      - id_ID
      - it_IT
      - ja_JP
      - ko_KR
      - pt_BR
      - tr_TR
      - zh_CN
      - zh_TW
    ManagedNotificationChannelAssociations:
      type: array
      items:
        $ref: '#/components/schemas/ManagedNotificationChannelAssociationSummary'
    ManagedNotificationChildEventArn:
      type: string
      pattern: ^arn:[-.a-z0-9]{1,63}:notifications::[0-9]{12}:managed-notification-configuration/category/[a-zA-Z0-9\-]{3,64}/sub-category/[a-zA-Z0-9\-]{3,64}/event/[a-z0-9]{27}/child-event/[a-z0-9]{27}$
    ManagedNotificationChildEvents:
      type: array
      items:
        $ref: '#/components/schemas/ManagedNotificationChildEventOverview'
    ManagedNotificationConfigurationDescription:
      type: string
      pattern: ^[^\u0001-\u001F\u007F-\u009F]*$
      minLength: 0
      maxLength: 256
    ManagedNotificationConfigurationName:
      type: string
      pattern: ^[A-Za-z0-9\-]+$
      minLength: 1
      maxLength: 64
    ManagedNotificationConfigurationOsArn:
      type: string
      pattern: ^arn:[-.a-z0-9]{1,63}:notifications::[0-9]{12}:managed-notification-configuration/category/[a-zA-Z0-9\-]{3,64}/sub-category/[a-zA-Z0-9\-]{3,64}$
    ManagedNotificationConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/ManagedNotificationConfigurationStructure'
    ManagedNotificationEventArn:
      type: string
      pattern: ^arn:[-.a-z0-9]{1,63}:notifications::[0-9]{12}:managed-notification-configuration/category/[a-zA-Z0-9\-]{3,64}/sub-category/[a-zA-Z0-9\-]{3,64}/event/[a-z0-9]{27}$
    ManagedNotificationEvents:
      type: array
      items:
        $ref: '#/components/schemas/ManagedNotificationEventOverview'
    ManagedRuleArn:
      type: string
      pattern: ^arn:aws:events:[a-z-\d]{2,25}:\d{12}:rule\/[a-zA-Z-\d]{1,1024}$
    ManagedRuleArns:
      type: array
      items:
        $ref: '#/components/schemas/ManagedRuleArn'
    Media:
      type: array
      items:
        $ref: '#/components/schemas/MediaElement'
    MediaElementType:
      type: string
      enum:
      - IMAGE
    MediaId:
      type: string
      minLength: 1
      maxLength: 256
    NextToken:
      type: string
      pattern: ^[\w+-/=]+$
      minLength: 1
      maxLength: 4096
    NotificationConfigurationArn:
      type: string
      pattern: ^arn:aws:notifications::[0-9]{12}:configuration/[a-z0-9]{27}$
    NotificationConfigurationDescription:
      type: string
      pattern: ^[^\u0001-\u001F\u007F-\u009F]*$
      minLength: 0
      maxLength: 256
    NotificationConfigurationName:
      type: string
      pattern: ^[A-Za-z0-9_\-]+$
      minLength: 1
      maxLength: 64
    NotificationConfigurationStatus:
      type: string
      enum:
      - ACTIVE
      - PARTIALLY_ACTIVE
      - INACTIVE
      - DELETING
    NotificationConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/NotificationConfigurationStructure'
    NotificationEventArn:
      type: string
      pattern: ^arn:[-.a-z0-9]{1,63}:notifications:[-.a-z0-9]{1,63}:[0-9]{12}:configuration/[a-z0-9]{27}/event/[a-z0-9]{27}$
    NotificationEventId:
      type: string
      pattern: ^[a-z0-9]{27}$
    NotificationEvents:
      type: array
      items:
        $ref: '#/components/schemas/NotificationEventOverview'
    NotificationHubStatus:
      type: string
      enum:
      - ACTIVE
      - REGISTERING
      - DEREGISTERING
      - INACTIVE
    NotificationHubStatusReason:
      type: string
    NotificationHubs:
      type: array
      items:
        $ref: '#/components/schemas/NotificationHubOverview'
    NotificationType:
      type: string
      enum:
      - ALERT
      - WARNING
      - ANNOUNCEMENT
      - INFORMATIONAL
    OrganizationalUnitId:
      type: string
      pattern: ^Root|ou-[0-9a-z]{4,32}-[a-z0-9]{8,32}$
    QuotaCode:
      type: string
    Region:
      type: string
      pattern: ^([a-z]{1,2})-([a-z]{1,15}-)+([0-9])$
      minLength: 2
      maxLength: 25
    Regions:
      type: array
      items:
        $ref: '#/components/schemas/Region'
    ResourceId:
      type: string
    ResourceType:
      type: string
    Resources:
      type: array
      items:
        $ref: '#/components/schemas/Resource'
    SampleAggregationDimensionValues:
      type: array
      items:
        type: string
    SchemaVersion:
      type: string
      enum:
      - v1.0
    ServiceCode:
      type: string
    Source:
      type: string
      pattern: ^aws.([a-z0-9\-])+$
      minLength: 1
      maxLength: 36
    StatusSummaryByRegion:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EventRuleStatusSummary'
    SummarizationDimensionDetails:
      type: array
      items:
        $ref: '#/components/schemas/SummarizationDimensionDetail'
    SummarizationDimensionOverviews:
      type: array
      items:
        $ref: '#/components/schemas/SummarizationDimensionOverview'
    TagKey:
      type: string
      pattern: ^(?!aws:).{1,128}$
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    Tags:
      type: array
      items:
        type: string
    TextByLocale:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    TextPartId:
      type: string
      pattern: ^[A-Za-z0-9_]+$
      minLength: 1
      maxLength: 256
    TextPartReference:
      type: string
    TextPartType:
      type: string
      enum:
      - LOCALIZED_TEXT
      - PLAIN_TEXT
      - URL
    TextParts:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TextPartValue'
    Url:
      type: string
      pattern: ^(https?)://.*$
      maxLength: 2000
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - fieldValidationFailed
      - other
