openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: mediatailor
  x-aws-serviceName: mediatailor
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-04-23'
  title: AWS MediaTailor
  description: |-
    Use the AWS Elemental MediaTailor SDKs and CLI to configure scalable ad insertion and linear channels. With MediaTailor, you can assemble existing content into a linear stream and serve targeted ads to viewers while maintaining broadcast quality in over-the-top (OTT) video applications. For information about using the service, including detailed information about the settings covered in this guide, see the [AWS Elemental MediaTailor User Guide](https://docs.aws.amazon.com/mediatailor/latest/ug/).

    Through the SDKs and the CLI you manage AWS Elemental MediaTailor configurations and channels the same as you do through the console. For example, you specify ad insertion behavior and mapping information for the origin server and the ad decision server (ADS).
servers:
- description: The AWS MediaTailor regional endpoint
  url: https://api.mediatailor.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /configureLogs/channel:
    put:
      operationId: ConfigureLogsForChannel
      description: |-
        Configures Amazon CloudWatch log settings for a channel.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChannelName:
                  $ref: '#/components/schemas/__string'
                LogTypes:
                  $ref: '#/components/schemas/LogTypes'
      responses:
        '200': {}
  /configureLogs/playbackConfiguration:
    put:
      operationId: ConfigureLogsForPlaybackConfiguration
      description: |-
        Defines where AWS Elemental MediaTailor sends logs for the playback configuration.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PercentEnabled:
                  $ref: '#/components/schemas/__integer'
                PlaybackConfigurationName:
                  $ref: '#/components/schemas/__string'
                EnabledLoggingStrategies:
                  $ref: '#/components/schemas/__listOfLoggingStrategies'
                AdsInteractionLog:
                  $ref: '#/components/schemas/AdsInteractionLog'
                ManifestServiceInteractionLog:
                  $ref: '#/components/schemas/ManifestServiceInteractionLog'
      responses:
        '200': {}
  /channel/{ChannelName}:
    post:
      operationId: CreateChannel
      description: |-
        Creates a channel. For information about MediaTailor channels, see [Working with channels](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FillerSlate:
                  $ref: '#/components/schemas/SlateSource'
                Outputs:
                  $ref: '#/components/schemas/RequestOutputs'
                PlaybackMode:
                  $ref: '#/components/schemas/PlaybackMode'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
                Tier:
                  $ref: '#/components/schemas/Tier'
                TimeShiftConfiguration:
                  $ref: '#/components/schemas/TimeShiftConfiguration'
                Audiences:
                  $ref: '#/components/schemas/Audiences'
      responses:
        '200': {}
    delete:
      operationId: DeleteChannel
      description: |-
        Deletes a channel. For information about MediaTailor channels, see [Working with channels](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    get:
      operationId: DescribeChannel
      description: |-
        Describes a channel. For information about MediaTailor channels, see [Working with channels](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    put:
      operationId: UpdateChannel
      description: |-
        Updates a channel. For information about MediaTailor channels, see [Working with channels](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FillerSlate:
                  $ref: '#/components/schemas/SlateSource'
                Outputs:
                  $ref: '#/components/schemas/RequestOutputs'
                TimeShiftConfiguration:
                  $ref: '#/components/schemas/TimeShiftConfiguration'
                Audiences:
                  $ref: '#/components/schemas/Audiences'
      responses:
        '200': {}
  /sourceLocation/{SourceLocationName}/liveSource/{LiveSourceName}:
    post:
      operationId: CreateLiveSource
      description: |-
        The live source configuration.
      parameters:
      - name: LiveSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HttpPackageConfigurations:
                  $ref: '#/components/schemas/HttpPackageConfigurations'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '200': {}
    delete:
      operationId: DeleteLiveSource
      description: |-
        The live source to delete.
      parameters:
      - name: LiveSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    get:
      operationId: DescribeLiveSource
      description: |-
        The live source to describe.
      parameters:
      - name: LiveSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    put:
      operationId: UpdateLiveSource
      description: |-
        Updates a live source's configuration.
      parameters:
      - name: LiveSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HttpPackageConfigurations:
                  $ref: '#/components/schemas/HttpPackageConfigurations'
      responses:
        '200': {}
  /prefetchSchedule/{PlaybackConfigurationName}/{Name}:
    post:
      operationId: CreatePrefetchSchedule
      description: |-
        Creates a prefetch schedule for a playback configuration. A prefetch schedule allows you to tell MediaTailor to fetch and prepare certain ads before an ad break happens. For more information about ad prefetching, see [Using ad prefetching](https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html) in the _MediaTailor User Guide_.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: PlaybackConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Consumption:
                  $ref: '#/components/schemas/PrefetchConsumption'
                Retrieval:
                  $ref: '#/components/schemas/PrefetchRetrieval'
                RecurringPrefetchConfiguration:
                  $ref: '#/components/schemas/RecurringPrefetchConfiguration'
                ScheduleType:
                  $ref: '#/components/schemas/PrefetchScheduleType'
                StreamId:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    delete:
      operationId: DeletePrefetchSchedule
      description: |-
        Deletes a prefetch schedule for a specific playback configuration. If you call `DeletePrefetchSchedule` on an expired prefetch schedule, MediaTailor returns an HTTP 404 status code. For more information about ad prefetching, see [Using ad prefetching](https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html) in the _MediaTailor User Guide_.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: PlaybackConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
    get:
      operationId: GetPrefetchSchedule
      description: |-
        Retrieves a prefetch schedule for a playback configuration. A prefetch schedule allows you to tell MediaTailor to fetch and prepare certain ads before an ad break happens. For more information about ad prefetching, see [Using ad prefetching](https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html) in the _MediaTailor User Guide_.
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: PlaybackConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /channel/{ChannelName}/program/{ProgramName}:
    post:
      operationId: CreateProgram
      description: |-
        Creates a program within a channel. For information about programs, see [Working with programs](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ProgramName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdBreaks:
                  $ref: '#/components/schemas/__listOfAdBreak'
                LiveSourceName:
                  $ref: '#/components/schemas/__string'
                ScheduleConfiguration:
                  $ref: '#/components/schemas/ScheduleConfiguration'
                SourceLocationName:
                  $ref: '#/components/schemas/__string'
                VodSourceName:
                  $ref: '#/components/schemas/__string'
                AudienceMedia:
                  $ref: '#/components/schemas/__listOfAudienceMedia'
      responses:
        '200': {}
    delete:
      operationId: DeleteProgram
      description: |-
        Deletes a program within a channel. For information about programs, see [Working with programs](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ProgramName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    get:
      operationId: DescribeProgram
      description: |-
        Describes a program within a channel. For information about programs, see [Working with programs](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-programs.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ProgramName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    put:
      operationId: UpdateProgram
      description: |-
        Updates a program within a channel.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: ProgramName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdBreaks:
                  $ref: '#/components/schemas/__listOfAdBreak'
                ScheduleConfiguration:
                  $ref: '#/components/schemas/UpdateProgramScheduleConfiguration'
                AudienceMedia:
                  $ref: '#/components/schemas/__listOfAudienceMedia'
      responses:
        '200': {}
  /sourceLocation/{SourceLocationName}:
    post:
      operationId: CreateSourceLocation
      description: |-
        Creates a source location. A source location is a container for sources. For more information about source locations, see [Working with source locations](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html) in the _MediaTailor User Guide_.
      parameters:
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccessConfiguration:
                  $ref: '#/components/schemas/AccessConfiguration'
                DefaultSegmentDeliveryConfiguration:
                  $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
                HttpConfiguration:
                  $ref: '#/components/schemas/HttpConfiguration'
                SegmentDeliveryConfigurations:
                  $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '200': {}
    delete:
      operationId: DeleteSourceLocation
      description: |-
        Deletes a source location. A source location is a container for sources. For more information about source locations, see [Working with source locations](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html) in the _MediaTailor User Guide_.
      parameters:
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    get:
      operationId: DescribeSourceLocation
      description: |-
        Describes a source location. A source location is a container for sources. For more information about source locations, see [Working with source locations](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html) in the _MediaTailor User Guide_.
      parameters:
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    put:
      operationId: UpdateSourceLocation
      description: |-
        Updates a source location. A source location is a container for sources. For more information about source locations, see [Working with source locations](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html) in the _MediaTailor User Guide_.
      parameters:
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AccessConfiguration:
                  $ref: '#/components/schemas/AccessConfiguration'
                DefaultSegmentDeliveryConfiguration:
                  $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
                HttpConfiguration:
                  $ref: '#/components/schemas/HttpConfiguration'
                SegmentDeliveryConfigurations:
                  $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
      responses:
        '200': {}
  /sourceLocation/{SourceLocationName}/vodSource/{VodSourceName}:
    post:
      operationId: CreateVodSource
      description: |-
        The VOD source configuration parameters.
      parameters:
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: VodSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HttpPackageConfigurations:
                  $ref: '#/components/schemas/HttpPackageConfigurations'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '200': {}
    delete:
      operationId: DeleteVodSource
      description: |-
        The video on demand (VOD) source to delete.
      parameters:
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: VodSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    get:
      operationId: DescribeVodSource
      description: |-
        Provides details about a specific video on demand (VOD) source in a specific source location.
      parameters:
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: VodSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    put:
      operationId: UpdateVodSource
      description: |-
        Updates a VOD source's configuration.
      parameters:
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: VodSourceName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                HttpPackageConfigurations:
                  $ref: '#/components/schemas/HttpPackageConfigurations'
      responses:
        '200': {}
  /channel/{ChannelName}/policy:
    delete:
      operationId: DeleteChannelPolicy
      description: |-
        The channel policy to delete.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    get:
      operationId: GetChannelPolicy
      description: |-
        Returns the channel's IAM policy. IAM policies are used to control access to your channel.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    put:
      operationId: PutChannelPolicy
      description: |-
        Creates an IAM policy for the channel. IAM policies are used to control access to your channel.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /playbackConfiguration/{Name}:
    delete:
      operationId: DeletePlaybackConfiguration
      description: |-
        Deletes a playback configuration. For information about MediaTailor configurations, see [Working with configurations in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html).
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '204': {}
    get:
      operationId: GetPlaybackConfiguration
      description: |-
        Retrieves a playback configuration. For information about MediaTailor configurations, see [Working with configurations in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html).
      parameters:
      - name: Name
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /channel/{ChannelName}/schedule:
    get:
      operationId: GetChannelSchedule
      description: |-
        Retrieves information about your channel's schedule.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: durationMinutes
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: audience
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /alerts:
    get:
      operationId: ListAlerts
      description: |-
        Lists the alerts that are associated with a MediaTailor channel assembly resource.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: resourceArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /channels:
    get:
      operationId: ListChannels
      description: |-
        Retrieves information about the channels that are associated with the current AWS account.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /sourceLocation/{SourceLocationName}/liveSources:
    get:
      operationId: ListLiveSources
      description: |-
        Lists the live sources contained in a source location. A source represents a piece of content.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /playbackConfigurations:
    get:
      operationId: ListPlaybackConfigurations
      description: |-
        Retrieves existing playback configurations. For information about MediaTailor configurations, see [Working with Configurations in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html).
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /prefetchSchedule/{PlaybackConfigurationName}:
    post:
      operationId: ListPrefetchSchedules
      description: |-
        Lists the prefetch schedules for a playback configuration.
      parameters:
      - name: PlaybackConfigurationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MaxResults:
                  $ref: '#/components/schemas/__integerMin1Max100'
                NextToken:
                  $ref: '#/components/schemas/__string'
                ScheduleType:
                  $ref: '#/components/schemas/ListPrefetchScheduleType'
                StreamId:
                  $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /sourceLocations:
    get:
      operationId: ListSourceLocations
      description: |-
        Lists the source locations for a channel. A source location defines the host server URL, and contains a list of sources.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        A list of tags that are associated with this resource. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see [Tagging AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
    post:
      operationId: TagResource
      description: |-
        The resource to tag. Tags are key-value pairs that you can associate with Amazon resources to help with organization, access control, and cost tracking. For more information, see [Tagging AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
      responses:
        '204': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
    delete:
      operationId: UntagResource
      description: |-
        The resource to untag.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/__listOf__string'
      responses:
        '204': {}
        '400':
          description: |-
            A request contains unexpected data.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
  /sourceLocation/{SourceLocationName}/vodSources:
    get:
      operationId: ListVodSources
      description: |-
        Lists the VOD sources contained in a source location. A source represents a piece of content.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: SourceLocationName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /playbackConfiguration:
    put:
      operationId: PutPlaybackConfiguration
      description: |-
        Creates a playback configuration. For information about MediaTailor configurations, see [Working with configurations in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AdDecisionServerUrl:
                  $ref: '#/components/schemas/__string'
                AvailSuppression:
                  $ref: '#/components/schemas/AvailSuppression'
                Bumper:
                  $ref: '#/components/schemas/Bumper'
                CdnConfiguration:
                  $ref: '#/components/schemas/CdnConfiguration'
                ConfigurationAliases:
                  $ref: '#/components/schemas/ConfigurationAliasesRequest'
                DashConfiguration:
                  $ref: '#/components/schemas/DashConfigurationForPut'
                InsertionMode:
                  $ref: '#/components/schemas/InsertionMode'
                LivePreRollConfiguration:
                  $ref: '#/components/schemas/LivePreRollConfiguration'
                ManifestProcessingRules:
                  $ref: '#/components/schemas/ManifestProcessingRules'
                Name:
                  $ref: '#/components/schemas/__string'
                PersonalizationThresholdSeconds:
                  $ref: '#/components/schemas/__integerMin1'
                SlateAdUrl:
                  $ref: '#/components/schemas/__string'
                Tags:
                  $ref: '#/components/schemas/__mapOf__string'
                TranscodeProfileName:
                  $ref: '#/components/schemas/__string'
                VideoContentSourceUrl:
                  $ref: '#/components/schemas/__string'
                AdConditioningConfiguration:
                  $ref: '#/components/schemas/AdConditioningConfiguration'
      responses:
        '200': {}
  /channel/{ChannelName}/start:
    put:
      operationId: StartChannel
      description: |-
        Starts a channel. For information about MediaTailor channels, see [Working with channels](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
  /channel/{ChannelName}/stop:
    put:
      operationId: StopChannel
      description: |-
        Stops a channel. For information about MediaTailor channels, see [Working with channels](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html) in the _MediaTailor User Guide_.
      parameters:
      - name: ChannelName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
components:
  schemas:
    AccessConfiguration:
      type: object
      properties:
        AccessType:
          allOf:
          - $ref: '#/components/schemas/AccessType'
          description: 'The type of authentication used to access content from `HttpConfiguration::BaseUrl`
            on your source location.


            `S3_SIGV4` \- AWS Signature Version 4 authentication for Amazon S3 hosted
            virtual-style access. If your source location base URL is an Amazon S3
            bucket, MediaTailor can use AWS Signature Version 4 (SigV4) authentication
            to access the bucket where your source content is stored. Your MediaTailor
            source location baseURL must follow the S3 virtual hosted-style request
            URL format. For example, https://bucket-name.s3.Region.amazonaws.com/key-name.


            Before you can use `S3_SIGV4`, you must meet these requirements:


            • You must allow MediaTailor to access your S3 bucket by granting mediatailor.amazonaws.com
            principal access in IAM. For information about configuring access in IAM,
            see Access management in the IAM User Guide.


            • The mediatailor.amazonaws.com service principal must have permissions
            to read all top level manifests referenced by the VodSource packaging
            configurations.


            • The caller of the API must have s3:GetObject IAM permissions to read
            all top level manifests referenced by your MediaTailor VodSource packaging
            configurations.


            `AUTODETECT_SIGV4` \- AWS Signature Version 4 authentication for a set
            of supported services: MediaPackage Version 2 and Amazon S3 hosted virtual-style
            access. If your source location base URL is a MediaPackage Version 2 endpoint
            or an Amazon S3 bucket, MediaTailor can use AWS Signature Version 4 (SigV4)
            authentication to access the resource where your source content is stored.


            Before you can use `AUTODETECT_SIGV4` with a MediaPackage Version 2 endpoint,
            you must meet these requirements:


            • You must grant MediaTailor access to your MediaPackage endpoint by granting
            `mediatailor.amazonaws.com` principal access in an Origin Access policy
            on the endpoint.


            • Your MediaTailor source location base URL must be a MediaPackage V2
            endpoint.


            • The caller of the API must have `mediapackagev2:GetObject` IAM permissions
            to read all top level manifests referenced by the MediaTailor source packaging
            configurations.


            Before you can use `AUTODETECT_SIGV4` with an Amazon S3 bucket, you must
            meet these requirements:


            • You must grant MediaTailor access to your S3 bucket by granting `mediatailor.amazonaws.com`
            principal access in IAM. For more information about configuring access
            in IAM, see [Access management](https://docs.aws.amazon.com/IAM/latest/UserGuide/access.html)
            in the _IAM User Guide._.


            • The `mediatailor.amazonaws.com` service principal must have permissions
            to read all top-level manifests referenced by the `VodSource` packaging
            configurations.


            • The caller of the API must have `s3:GetObject` IAM permissions to read
            all top level manifests referenced by your MediaTailor `VodSource` packaging
            configurations.'
        SecretsManagerAccessTokenConfiguration:
          allOf:
          - $ref: '#/components/schemas/SecretsManagerAccessTokenConfiguration'
          description: AWS Secrets Manager access token configuration parameters.
      description: Access configuration parameters.
    AccessType:
      type: string
      enum:
      - S3_SIGV4
      - SECRETS_MANAGER_ACCESS_TOKEN
      - AUTODETECT_SIGV4
    AdBreak:
      type: object
      properties:
        MessageType:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: 'The SCTE-35 ad insertion type. Accepted value: `SPLICE_INSERT`,
            `TIME_SIGNAL`.'
        OffsetMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: How long (in milliseconds) after the beginning of the program
            that an ad starts. This value must fall within 100ms of a segment boundary,
            otherwise the ad break will be skipped.
        Slate:
          allOf:
          - $ref: '#/components/schemas/SlateSource'
          description: Ad break slate configuration.
        SpliceInsertMessage:
          allOf:
          - $ref: '#/components/schemas/SpliceInsertMessage'
          description: This defines the SCTE-35 `splice_insert()` message inserted
            around the ad. For information about using `splice_insert()`, see the
            SCTE-35 specficiaiton, section 9.7.3.1.
        TimeSignalMessage:
          allOf:
          - $ref: '#/components/schemas/TimeSignalMessage'
          description: 'Defines the SCTE-35 `time_signal` message inserted around
            the ad.


            Programs on a channel''s schedule can be configured with one or more ad
            breaks. You can attach a `splice_insert` SCTE-35 message to the ad break.
            This message provides basic metadata about the ad break.


            See section 9.7.4 of the 2022 SCTE-35 specification for more information.'
        AdBreakMetadata:
          allOf:
          - $ref: '#/components/schemas/AdBreakMetadataList'
          description: Defines a list of key/value pairs that MediaTailor generates
            within the `EXT-X-ASSET`tag for `SCTE35_ENHANCED` output.
      required:
      - OffsetMillis
      description: Ad break configuration parameters.
    AdBreakMetadataList:
      type: array
      items:
        $ref: '#/components/schemas/KeyValuePair'
    AdBreakOpportunities:
      type: array
      items:
        $ref: '#/components/schemas/AdBreakOpportunity'
      description: <p>The list of ad break opportunities detected within the VOD source.</p>
    AdBreakOpportunity:
      type: object
      properties:
        OffsetMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The offset in milliseconds from the start of the VOD source
            at which an ad marker was detected.
      required:
      - OffsetMillis
      description: A location at which a zero-duration ad marker was detected in a
        VOD source manifest.
    AdConditioningConfiguration:
      type: object
      properties:
        StreamingMediaFileConditioning:
          allOf:
          - $ref: '#/components/schemas/StreamingMediaFileConditioning'
          description: For ads that have media files with streaming delivery and supported
            file extensions, indicates what transcoding action MediaTailor takes when
            it first receives these ads from the ADS. `TRANSCODE` indicates that MediaTailor
            must transcode the ads. `NONE` indicates that you have already transcoded
            the ads outside of MediaTailor and don't need them transcoded as part
            of the ad insertion workflow. For more information about ad conditioning
            see [Using preconditioned ads](https://docs.aws.amazon.com/mediatailor/latest/ug/precondition-ads.html)
            in the Elemental MediaTailor user guide.
      required:
      - StreamingMediaFileConditioning
      description: The setting that indicates what conditioning MediaTailor will perform
        on ads that the ad decision server (ADS) returns.
    AdMarkerPassthrough:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Enables ad marker passthrough for your configuration.
      description: 'For HLS, when set to `true`, MediaTailor passes through `EXT-X-CUE-IN`,
        `EXT-X-CUE-OUT`, and `EXT-X-SPLICEPOINT-SCTE35` ad markers from the origin
        manifest to the MediaTailor personalized manifest.


        No logic is applied to these ad markers. For example, if `EXT-X-CUE-OUT` has
        a value of `60`, but no ads are filled for that ad break, MediaTailor will
        not set the value to `0`.'
    AdMarkupType:
      type: string
      enum:
      - DATERANGE
      - SCTE35_ENHANCED
    AdsInteractionExcludeEventType:
      type: string
      enum:
      - AD_MARKER_FOUND
      - NON_AD_MARKER_FOUND
      - MAKING_ADS_REQUEST
      - MODIFIED_TARGET_URL
      - VAST_REDIRECT
      - EMPTY_VAST_RESPONSE
      - EMPTY_VMAP_RESPONSE
      - VAST_RESPONSE
      - REDIRECTED_VAST_RESPONSE
      - FILLED_AVAIL
      - FILLED_OVERLAY_AVAIL
      - BEACON_FIRED
      - WARNING_NO_ADVERTISEMENTS
      - WARNING_VPAID_AD_DROPPED
      - WARNING_URL_VARIABLE_SUBSTITUTION_FAILED
      - ERROR_UNKNOWN
      - ERROR_UNKNOWN_HOST
      - ERROR_DISALLOWED_HOST
      - ERROR_ADS_IO
      - ERROR_ADS_TIMEOUT
      - ERROR_ADS_RESPONSE_PARSE
      - ERROR_ADS_RESPONSE_UNKNOWN_ROOT_ELEMENT
      - ERROR_ADS_INVALID_RESPONSE
      - ERROR_VAST_REDIRECT_EMPTY_RESPONSE
      - ERROR_VAST_REDIRECT_MULTIPLE_VAST
      - ERROR_VAST_REDIRECT_FAILED
      - ERROR_VAST_MISSING_MEDIAFILES
      - ERROR_VAST_MISSING_CREATIVES
      - ERROR_VAST_MISSING_OVERLAYS
      - ERROR_VAST_MISSING_IMPRESSION
      - ERROR_VAST_INVALID_VAST_AD_TAG_URI
      - ERROR_VAST_MULTIPLE_TRACKING_EVENTS
      - ERROR_VAST_MULTIPLE_LINEAR
      - ERROR_VAST_INVALID_MEDIA_FILE
      - ERROR_FIRING_BEACON_FAILED
      - ERROR_PERSONALIZATION_DISABLED
      - VOD_TIME_BASED_AVAIL_PLAN_VAST_RESPONSE_FOR_OFFSET
      - VOD_TIME_BASED_AVAIL_PLAN_SUCCESS
      - VOD_TIME_BASED_AVAIL_PLAN_WARNING_NO_ADVERTISEMENTS
      - INTERSTITIAL_VOD_SUCCESS
      - INTERSTITIAL_VOD_FAILURE
    AdsInteractionLog:
      type: object
      properties:
        PublishOptInEventTypes:
          allOf:
          - $ref: '#/components/schemas/__adsInteractionPublishOptInEventTypesList'
          description: Indicates that MediaTailor emits `RAW_ADS_RESPONSE` logs for
            playback sessions that are initialized with this configuration.
        ExcludeEventTypes:
          allOf:
          - $ref: '#/components/schemas/__adsInteractionExcludeEventTypesList'
          description: Indicates that MediaTailor won't emit the selected events in
            the logs for playback sessions that are initialized with this configuration.
      description: 'Settings for customizing what events are included in logs for
        interactions with the ad decision server (ADS).


        For more information about ADS logs, inlcuding descriptions of the event types,
        see [MediaTailor ADS logs description and event types](https://docs.aws.amazon.com/mediatailor/latest/ug/ads-log-format.html)
        in Elemental MediaTailor User Guide.'
    AdsInteractionPublishOptInEventType:
      type: string
      enum:
      - RAW_ADS_RESPONSE
    Alert:
      type: object
      properties:
        AlertCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The code for the alert. For example, `NOT_PROCESSED`.
        AlertMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: If an alert is generated for a resource, an explanation of
            the reason for the alert.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp when the alert was last modified.
        RelatedResourceArns:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The Amazon Resource Names (ARNs) related to this alert.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource.
        Category:
          allOf:
          - $ref: '#/components/schemas/AlertCategory'
          description: The category that MediaTailor assigns to the alert.
      required:
      - AlertCode
      - AlertMessage
      - LastModifiedTime
      - RelatedResourceArns
      - ResourceArn
      description: Alert configuration parameters.
    AlertCategory:
      type: string
      enum:
      - SCHEDULING_ERROR
      - PLAYBACK_WARNING
      - INFO
    AlternateMedia:
      type: object
      properties:
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location for alternateMedia.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the live source for alternateMedia.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD source for alternateMedia.
        ClipRange:
          $ref: '#/components/schemas/ClipRange'
        ScheduledStartTimeMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The date and time that the alternateMedia is scheduled to start,
            in epoch milliseconds.
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          description: Ad break configuration parameters defined in AlternateMedia.
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The duration of the alternateMedia in milliseconds.
      description: A playlist of media (VOD and/or live) to be played instead of the
        default media on a particular program.
    AudienceMedia:
      type: object
      properties:
        Audience:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Audience defined in AudienceMedia.
        AlternateMedia:
          allOf:
          - $ref: '#/components/schemas/__listOfAlternateMedia'
          description: The list of AlternateMedia defined in AudienceMedia.
      description: An AudienceMedia object contains an Audience and a list of AlternateMedia.
    Audiences:
      type: array
      items:
        type: string
    AvailMatchingCriteria:
      type: object
      properties:
        DynamicVariable:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The dynamic variable(s) that MediaTailor should use as avail
            matching criteria. MediaTailor only places the prefetched ads into the
            avail if the avail matches the criteria defined by the dynamic variable.
            For information about dynamic variables, see [Using dynamic ad variables](https://docs.aws.amazon.com/mediatailor/latest/ug/variables.html)
            in the _MediaTailor User Guide_.


            You can include up to 100 dynamic variables.'
        Operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          description: For the `DynamicVariable` specified in `AvailMatchingCriteria`,
            the Operator that is used for the comparison.
      required:
      - DynamicVariable
      - Operator
      description: 'MediaTailor only places (consumes) prefetched ads if the ad break
        meets the criteria defined by the dynamic variables. This gives you granular
        control over which ad break to place the prefetched ads into.


        As an example, let''s say that you set `DynamicVariable` to `scte.event_id`
        and `Operator` to `EQUALS`, and your playback configuration has an ADS URL
        of `https://my.ads.server.com/path?&podId=[scte.avail_num]&event=[scte.event_id]&duration=[session.avail_duration_secs]`.
        And the prefetch request to the ADS contains these values `https://my.ads.server.com/path?&podId=3&event=my-awesome-event&duration=30`.
        MediaTailor will only insert the prefetched ads into the ad break if has a
        SCTE marker with an event id of `my-awesome-event`, since it must match the
        event id that MediaTailor uses to query the ADS.


        You can specify up to five `AvailMatchingCriteria`. If you specify multiple
        `AvailMatchingCriteria`, MediaTailor combines them to match using a logical
        `AND`. You can model logical `OR` combinations by creating multiple prefetch
        schedules.'
    AvailSuppression:
      type: object
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/Mode'
          description: Sets the ad suppression mode. By default, ad suppression is
            off and all ad breaks are filled with ads or slate. When Mode is set to
            `BEHIND_LIVE_EDGE`, ad suppression is active and MediaTailor won't fill
            ad breaks on or behind the ad suppression Value time in the manifest lookback
            window. When Mode is set to `AFTER_LIVE_EDGE`, ad suppression is active
            and MediaTailor won't fill ad breaks that are within the live edge plus
            the avail suppression value.
        Value:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A live edge offset time in HH:MM:SS. MediaTailor won't fill
            ad breaks on or behind this time in the manifest lookback window. If Value
            is set to 00:00:00, it is in sync with the live edge, and MediaTailor
            won't fill any ad breaks on or behind the live edge. If you set a Value
            time, MediaTailor won't fill any ad breaks on or behind this time in the
            manifest lookback window. For example, if you set 00:45:00, then MediaTailor
            will fill ad breaks that occur within 45 minutes behind the live edge,
            but won't fill ad breaks on or behind 45 minutes behind the live edge.
        FillPolicy:
          allOf:
          - $ref: '#/components/schemas/FillPolicy'
          description: Defines the policy to apply to the avail suppression mode.
            `BEHIND_LIVE_EDGE` will always use the full avail suppression policy.
            `AFTER_LIVE_EDGE` mode can be used to invoke partial ad break fills when
            a session starts mid-break.
      description: The configuration for avail suppression, also known as ad suppression.
        For more information about ad suppression, see [Ad Suppression](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
    BadRequestException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/__string'
      description: A request contains unexpected data.
    Bumper:
      type: object
      properties:
        EndUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for the end bumper asset.
        StartUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for the start bumper asset.
      description: The configuration for bumpers. Bumpers are short audio or video
        clips that play at the start or before the end of an ad break. To learn more
        about bumpers, see [Bumpers](https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
    CdnConfiguration:
      type: object
      properties:
        AdSegmentUrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A non-default content delivery network (CDN) to serve ad segments.
            By default, AWS Elemental MediaTailor uses Amazon CloudFront with default
            cache settings as its CDN for ad segments. To set up an alternate CDN,
            create a rule in your CDN for the origin ads.mediatailor._< region>_.amazonaws.com.
            Then specify the rule's name in this `AdSegmentUrlPrefix`. When AWS Elemental
            MediaTailor serves a manifest, it reports your CDN as the source for ad
            segments.
        ContentSegmentUrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A content delivery network (CDN) to cache content segments,
            so that content requests don’t always have to go to the origin server.
            First, create a rule in your CDN for the content segment origin server.
            Then specify the rule's name in this `ContentSegmentUrlPrefix`. When AWS
            Elemental MediaTailor serves a manifest, it reports your CDN as the source
            for content segments.
      description: The configuration for using a content delivery network (CDN), like
        Amazon CloudFront, for content and ad segment management.
    Channel:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the channel.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        ChannelState:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Returns the state whether the channel is running or not.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp of when the channel was created.
        FillerSlate:
          allOf:
          - $ref: '#/components/schemas/SlateSource'
          description: The slate used to fill gaps between programs in the schedule.
            You must configure filler slate if your channel uses the `LINEAR` `PlaybackMode`.
            MediaTailor doesn't support filler slate for channels using the `LOOP`
            `PlaybackMode`.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp of when the channel was last modified.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/ResponseOutputs'
          description: The channel's output properties.
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The type of playback mode for this channel.


            `LINEAR` \- Programs play back-to-back only once.


            `LOOP` \- Programs play back-to-back in an endless loop. When the last
            program in the schedule plays, playback loops back to the first program
            in the schedule.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the channel. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        Tier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The tier for this channel. STANDARD tier channels can contain
            live programs.
        LogConfiguration:
          allOf:
          - $ref: '#/components/schemas/LogConfigurationForChannel'
          description: The log configuration.
        Audiences:
          allOf:
          - $ref: '#/components/schemas/Audiences'
          description: The list of audiences defined in channel.
      required:
      - Arn
      - ChannelName
      - ChannelState
      - Outputs
      - PlaybackMode
      - Tier
      - LogConfiguration
      description: The configuration parameters for a channel. For information about
        MediaTailor channels, see [Working with channels](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-channels.html)
        in the _MediaTailor User Guide_.
    ChannelState:
      type: string
      enum:
      - RUNNING
      - STOPPED
    ClipRange:
      type: object
      properties:
        EndOffsetMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The end offset of the clip range, in milliseconds, starting
            from the beginning of the VOD source associated with the program.
        StartOffsetMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The start offset of the clip range, in milliseconds. This offset
            truncates the start at the number of milliseconds into the duration of
            the VOD source.
      description: Clip range configuration for the VOD source associated with the
        program.
    ConfigurationAliasesRequest:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__mapOf__string'
      description: <p>The predefined aliases for dynamic variables.</p>
    ConfigurationAliasesResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__mapOf__string'
      description: <p>The predefined aliases for dynamic variables.</p>
    ConfigureLogsForChannelRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        LogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypes'
          description: The types of logs to collect.
      required:
      - ChannelName
      - LogTypes
    ConfigureLogsForChannelResponse:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        LogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypes'
          description: The types of logs collected.
    ConfigureLogsForPlaybackConfigurationRequest:
      type: object
      properties:
        PercentEnabled:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The percentage of session logs that MediaTailor sends to your
            CloudWatch Logs account. For example, if your playback configuration has
            1000 sessions and percentEnabled is set to `60`, MediaTailor sends logs
            for 600 of the sessions to CloudWatch Logs. MediaTailor decides at random
            which of the playback configuration sessions to send logs for. If you
            want to view logs for a specific session, you can use the [debug log mode](https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html).


            Valid values: `0` \- `100`'
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the playback configuration.
        EnabledLoggingStrategies:
          allOf:
          - $ref: '#/components/schemas/__listOfLoggingStrategies'
          description: 'The method used for collecting logs from AWS Elemental MediaTailor.
            To configure MediaTailor to send logs directly to Amazon CloudWatch Logs,
            choose `LEGACY_CLOUDWATCH`. To configure MediaTailor to send logs to CloudWatch,
            which then vends the logs to your destination of choice, choose `VENDED_LOGS`.
            Supported destinations are CloudWatch Logs log group, Amazon S3 bucket,
            and Amazon Data Firehose stream.


            To use vended logs, you must configure the delivery destination in Amazon
            CloudWatch, as described in [Enable logging from AWS services, Logging
            that requires additional permissions [V2]](https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/AWS-logs-and-resource-policy.html#AWS-vended-logs-permissions-V2).'
        AdsInteractionLog:
          allOf:
          - $ref: '#/components/schemas/AdsInteractionLog'
          description: The event types that MediaTailor emits in logs for interactions
            with the ADS.
        ManifestServiceInteractionLog:
          allOf:
          - $ref: '#/components/schemas/ManifestServiceInteractionLog'
          description: The event types that MediaTailor emits in logs for interactions
            with the origin server.
      required:
      - PercentEnabled
      - PlaybackConfigurationName
      description: Configures Amazon CloudWatch log settings for a playback configuration.
    ConfigureLogsForPlaybackConfigurationResponse:
      type: object
      properties:
        PercentEnabled:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The percentage of session logs that MediaTailor sends to your
            Cloudwatch Logs account.
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the playback configuration.
        EnabledLoggingStrategies:
          allOf:
          - $ref: '#/components/schemas/__listOfLoggingStrategies'
          description: The method used for collecting logs from AWS Elemental MediaTailor.
            `LEGACY_CLOUDWATCH` indicates that MediaTailor is sending logs directly
            to Amazon CloudWatch Logs. `VENDED_LOGS` indicates that MediaTailor is
            sending logs to CloudWatch, which then vends the logs to your destination
            of choice. Supported destinations are CloudWatch Logs log group, Amazon
            S3 bucket, and Amazon Data Firehose stream.
        AdsInteractionLog:
          allOf:
          - $ref: '#/components/schemas/AdsInteractionLog'
          description: The event types that MediaTailor emits in logs for interactions
            with the ADS.
        ManifestServiceInteractionLog:
          allOf:
          - $ref: '#/components/schemas/ManifestServiceInteractionLog'
          description: The event types that MediaTailor emits in logs for interactions
            with the origin server.
      required:
      - PercentEnabled
    CreateChannelRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        FillerSlate:
          allOf:
          - $ref: '#/components/schemas/SlateSource'
          description: The slate used to fill gaps between programs in the schedule.
            You must configure filler slate if your channel uses the `LINEAR` `PlaybackMode`.
            MediaTailor doesn't support filler slate for channels using the `LOOP`
            `PlaybackMode`.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/RequestOutputs'
          description: The channel's output properties.
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/PlaybackMode'
          description: 'The type of playback mode to use for this channel.


            `LINEAR` \- The programs in the schedule play once back-to-back in the
            schedule.


            `LOOP` \- The programs in the schedule play back-to-back in an endless
            loop. When the last program in the schedule stops playing, playback loops
            back to the first program in the schedule.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the channel. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        Tier:
          allOf:
          - $ref: '#/components/schemas/Tier'
          description: The tier of the channel.
        TimeShiftConfiguration:
          allOf:
          - $ref: '#/components/schemas/TimeShiftConfiguration'
          description: The time-shifted viewing configuration you want to associate
            to the channel.
        Audiences:
          allOf:
          - $ref: '#/components/schemas/Audiences'
          description: The list of audiences defined in channel.
      required:
      - ChannelName
      - Outputs
      - PlaybackMode
    CreateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) to assign to the channel.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the channel.
        ChannelState:
          allOf:
          - $ref: '#/components/schemas/ChannelState'
          description: Indicates whether the channel is in a running state or not.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp of when the channel was created.
        FillerSlate:
          allOf:
          - $ref: '#/components/schemas/SlateSource'
          description: Contains information about the slate used to fill gaps between
            programs in the schedule.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp of when the channel was last modified.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/ResponseOutputs'
          description: The output properties to assign to the channel.
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The playback mode to assign to the channel.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the channel. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        Tier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The tier of the channel.
        TimeShiftConfiguration:
          allOf:
          - $ref: '#/components/schemas/TimeShiftConfiguration'
          description: The time-shifted viewing configuration assigned to the channel.
        Audiences:
          allOf:
          - $ref: '#/components/schemas/Audiences'
          description: The list of audiences defined in channel.
    CreateLiveSourceRequest:
      type: object
      properties:
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: A list of HTTP package configuration parameters for this live
            source.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the live source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the live source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
      required:
      - HttpPackageConfigurations
      - LiveSourceName
      - SourceLocationName
    CreateLiveSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN to assign to the live source.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time the live source was created.
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: A list of HTTP package configuration parameters for this live
            source.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time the live source was last modified.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the live source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the source location of the live source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the live source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
    CreatePrefetchScheduleRequest:
      type: object
      properties:
        Consumption:
          allOf:
          - $ref: '#/components/schemas/PrefetchConsumption'
          description: The configuration settings for how and when MediaTailor consumes
            prefetched ads from the ad decision server for single prefetch schedules.
            Each consumption configuration contains an end time and an optional start
            time that define the _consumption window_. Prefetch schedules automatically
            expire no earlier than seven days after the end time.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the schedule request.
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the playback configuration.
        Retrieval:
          allOf:
          - $ref: '#/components/schemas/PrefetchRetrieval'
          description: The configuration settings for retrieval of prefetched ads
            from the ad decision server. Only one set of prefetched ads will be retrieved
            and subsequently consumed for each ad break.
        RecurringPrefetchConfiguration:
          allOf:
          - $ref: '#/components/schemas/RecurringPrefetchConfiguration'
          description: The configuration that defines how and when MediaTailor performs
            ad prefetching in a live event.
        ScheduleType:
          allOf:
          - $ref: '#/components/schemas/PrefetchScheduleType'
          description: 'The frequency that MediaTailor creates prefetch schedules.
            `SINGLE` indicates that this schedule applies to one ad break. `RECURRING`
            indicates that MediaTailor automatically creates a schedule for each ad
            avail in a live event.


            For more information about the prefetch types and when you might use each,
            see [Prefetching ads in Elemental MediaTailor.](https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html)'
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional stream identifier that MediaTailor uses to prefetch
            ads for multiple streams that use the same playback configuration. If
            `StreamId` is specified, MediaTailor returns all of the prefetch schedules
            with an exact match on `StreamId`. If not specified, MediaTailor returns
            all of the prefetch schedules for the playback configuration, regardless
            of `StreamId`.
      required:
      - Name
      - PlaybackConfigurationName
    CreatePrefetchScheduleResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN to assign to the prefetch schedule.
        Consumption:
          allOf:
          - $ref: '#/components/schemas/PrefetchConsumption'
          description: The configuration settings for how and when MediaTailor consumes
            prefetched ads from the ad decision server for single prefetch schedules.
            Each consumption configuration contains an end time and an optional start
            time that define the _consumption window_. Prefetch schedules automatically
            expire no earlier than seven days after the end time.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the prefetch schedule.
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the playback configuration.
        Retrieval:
          allOf:
          - $ref: '#/components/schemas/PrefetchRetrieval'
          description: The configuration settings for retrieval of prefetched ads
            from the ad decision server. Only one set of prefetched ads will be retrieved
            and subsequently consumed for each ad break.
        RecurringPrefetchConfiguration:
          allOf:
          - $ref: '#/components/schemas/RecurringPrefetchConfiguration'
          description: The configuration that defines how MediaTailor performs recurring
            prefetch.
        ScheduleType:
          allOf:
          - $ref: '#/components/schemas/PrefetchScheduleType'
          description: The frequency that MediaTailor creates prefetch schedules.
            `SINGLE` indicates that this schedule applies to one ad break. `RECURRING`
            indicates that MediaTailor automatically creates a schedule for each ad
            avail in a live event.
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional stream identifier that MediaTailor uses to prefetch
            ads for multiple streams that use the same playback configuration. If
            `StreamId` is specified, MediaTailor returns all of the prefetch schedules
            with an exact match on `StreamId`. If not specified, MediaTailor returns
            all of the prefetch schedules for the playback configuration, regardless
            of `StreamId`.
    CreateProgramRequest:
      type: object
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          description: The ad break configuration settings.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel for this Program.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the LiveSource for this Program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the Program.
        ScheduleConfiguration:
          allOf:
          - $ref: '#/components/schemas/ScheduleConfiguration'
          description: The schedule configuration settings.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that's used to refer to a VOD source.
        AudienceMedia:
          allOf:
          - $ref: '#/components/schemas/__listOfAudienceMedia'
          description: The list of AudienceMedia defined in program.
      required:
      - ChannelName
      - ProgramName
      - ScheduleConfiguration
      - SourceLocationName
    CreateProgramResponse:
      type: object
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          description: The ad break configuration settings.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN to assign to the program.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the channel for this program.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time the program was created.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the LiveSource for this Program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to this program.
        ScheduledStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The scheduled start time for this Program.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the source location for this program.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that's used to refer to a VOD source.
        ClipRange:
          allOf:
          - $ref: '#/components/schemas/ClipRange'
          description: The clip range configuration settings.
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The duration of the live program in milliseconds.
        AudienceMedia:
          allOf:
          - $ref: '#/components/schemas/__listOfAudienceMedia'
          description: The list of AudienceMedia defined in program.
    CreateSourceLocationRequest:
      type: object
      properties:
        AccessConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccessConfiguration'
          description: Access configuration parameters. Configures the type of authentication
            used to access content from your source location.
        DefaultSegmentDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
          description: The optional configuration for the server that serves segments.
        HttpConfiguration:
          allOf:
          - $ref: '#/components/schemas/HttpConfiguration'
          description: The source's HTTP package configurations.
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          description: A list of the segment delivery configurations associated with
            this resource.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name associated with the source location.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the source location. Tags are key-value
            pairs that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
      required:
      - HttpConfiguration
      - SourceLocationName
    CreateSourceLocationResponse:
      type: object
      properties:
        AccessConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccessConfiguration'
          description: Access configuration parameters. Configures the type of authentication
            used to access content from your source location.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN to assign to the source location.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time the source location was created.
        DefaultSegmentDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
          description: The optional configuration for the server that serves segments.
        HttpConfiguration:
          allOf:
          - $ref: '#/components/schemas/HttpConfiguration'
          description: The source's HTTP package configurations.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time the source location was last modified.
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          description: The segment delivery configurations for the source location.
            For information about MediaTailor configurations, see [Working with configurations
            in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html).
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the source location.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the source location. Tags are key-value
            pairs that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
    CreateVodSourceRequest:
      type: object
      properties:
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: A list of HTTP package configuration parameters for this VOD
            source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location for this VOD source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the VOD source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name associated with the VOD source.>
      required:
      - HttpPackageConfigurations
      - SourceLocationName
      - VodSourceName
    CreateVodSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN to assign to this VOD source.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time the VOD source was created.
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: A list of HTTP package configuration parameters for this VOD
            source.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time the VOD source was last modified.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the source location for this VOD source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the VOD source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the VOD source.
    DashConfiguration:
      type: object
      properties:
        ManifestEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL generated by MediaTailor to initiate a playback session.
            The session uses server-side reporting. This setting is ignored in PUT
            operations.
        MpdLocation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The setting that controls whether MediaTailor includes the
            Location tag in DASH manifests. MediaTailor populates the Location tag
            with the URL for manifest update requests, to be used by players that
            don't support sticky redirects. Disable this if you have CDN routing rules
            set up for accessing MediaTailor manifests, and you are either using client-side
            reporting or your players support sticky HTTP redirects. Valid values
            are `DISABLED` and `EMT_DEFAULT`. The `EMT_DEFAULT` setting enables the
            inclusion of the tag and is the default value.
        OriginManifestType:
          allOf:
          - $ref: '#/components/schemas/OriginManifestType'
          description: The setting that controls whether MediaTailor handles manifests
            from the origin server as multi-period manifests or single-period manifests.
            If your origin server produces single-period manifests, set this to `SINGLE_PERIOD`.
            The default setting is `MULTI_PERIOD`. For multi-period manifests, omit
            this setting or set it to `MULTI_PERIOD`.
      description: The configuration for DASH content.
    DashConfigurationForPut:
      type: object
      properties:
        MpdLocation:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The setting that controls whether MediaTailor includes the
            Location tag in DASH manifests. MediaTailor populates the Location tag
            with the URL for manifest update requests, to be used by players that
            don't support sticky redirects. Disable this if you have CDN routing rules
            set up for accessing MediaTailor manifests, and you are either using client-side
            reporting or your players support sticky HTTP redirects. Valid values
            are `DISABLED` and `EMT_DEFAULT`. The `EMT_DEFAULT` setting enables the
            inclusion of the tag and is the default value.
        OriginManifestType:
          allOf:
          - $ref: '#/components/schemas/OriginManifestType'
          description: The setting that controls whether MediaTailor handles manifests
            from the origin server as multi-period manifests or single-period manifests.
            If your origin server produces single-period manifests, set this to `SINGLE_PERIOD`.
            The default setting is `MULTI_PERIOD`. For multi-period manifests, omit
            this setting or set it to `MULTI_PERIOD`.
      description: The configuration for DASH PUT operations.
    DashPlaylistSettings:
      type: object
      properties:
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The total duration (in seconds) of each manifest. Minimum
            value: `30` seconds. Maximum value: `3600` seconds.'
        MinBufferTimeSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'Minimum amount of content (measured in seconds) that a player
            must keep available in the buffer. Minimum value: `2` seconds. Maximum
            value: `60` seconds.'
        MinUpdatePeriodSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'Minimum amount of time (in seconds) that the player should
            wait before requesting updates to the manifest. Minimum value: `2` seconds.
            Maximum value: `60` seconds.'
        SuggestedPresentationDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'Amount of time (in seconds) that the player should be from
            the live point at the end of the manifest. Minimum value: `2` seconds.
            Maximum value: `60` seconds.'
      description: Dash manifest configuration parameters.
    DefaultSegmentDeliveryConfiguration:
      type: object
      properties:
        BaseUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The hostname of the server that will be used to serve segments.
            This string must include the protocol, such as **https://**.
      description: The optional configuration for a server that serves segments. Use
        this if you want the segment delivery server to be different from the source
        location server. For example, you can configure your source location server
        to be an origination server, such as MediaPackage, and the segment delivery
        server to be a content delivery network (CDN), such as CloudFront. If you
        don't specify a segment delivery server, then the source location server is
        used.
    DeleteChannelPolicyRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel associated with this channel policy.
      required:
      - ChannelName
    DeleteChannelPolicyResponse:
      type: object
      properties: {}
    DeleteChannelRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
      required:
      - ChannelName
    DeleteChannelResponse:
      type: object
      properties: {}
    DeleteLiveSourceRequest:
      type: object
      properties:
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the live source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with this Live Source.
      required:
      - LiveSourceName
      - SourceLocationName
    DeleteLiveSourceResponse:
      type: object
      properties: {}
    DeletePlaybackConfigurationRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the playback configuration.
      required:
      - Name
    DeletePlaybackConfigurationResponse:
      type: object
      properties: {}
    DeletePrefetchScheduleRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the prefetch schedule. If the action is successful,
            the service sends back an HTTP 204 response with an empty HTTP body.
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the playback configuration for this prefetch schedule.
      required:
      - Name
      - PlaybackConfigurationName
    DeletePrefetchScheduleResponse:
      type: object
      properties: {}
    DeleteProgramRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the program.
      required:
      - ChannelName
      - ProgramName
    DeleteProgramResponse:
      type: object
      properties: {}
    DeleteSourceLocationRequest:
      type: object
      properties:
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
      required:
      - SourceLocationName
    DeleteSourceLocationResponse:
      type: object
      properties: {}
    DeleteVodSourceRequest:
      type: object
      properties:
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with this VOD Source.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD source.
      required:
      - SourceLocationName
      - VodSourceName
    DeleteVodSourceResponse:
      type: object
      properties: {}
    DescribeChannelRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
      required:
      - ChannelName
    DescribeChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the channel.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        ChannelState:
          allOf:
          - $ref: '#/components/schemas/ChannelState'
          description: Indicates whether the channel is in a running state or not.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp of when the channel was created.
        FillerSlate:
          allOf:
          - $ref: '#/components/schemas/SlateSource'
          description: Contains information about the slate used to fill gaps between
            programs in the schedule.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp of when the channel was last modified.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/ResponseOutputs'
          description: The channel's output properties.
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The channel's playback mode.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags assigned to the channel. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        Tier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The channel's tier.
        LogConfiguration:
          allOf:
          - $ref: '#/components/schemas/LogConfigurationForChannel'
          description: The log configuration for the channel.
        TimeShiftConfiguration:
          allOf:
          - $ref: '#/components/schemas/TimeShiftConfiguration'
          description: The time-shifted viewing configuration for the channel.
        Audiences:
          allOf:
          - $ref: '#/components/schemas/Audiences'
          description: The list of audiences defined in channel.
      required:
      - LogConfiguration
    DescribeLiveSourceRequest:
      type: object
      properties:
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the live source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with this Live Source.
      required:
      - LiveSourceName
      - SourceLocationName
    DescribeLiveSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the live source.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the live source was created.
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: The HTTP package configurations.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the live source was modified.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the live source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with the live source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags assigned to the live source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
    DescribeProgramRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel associated with this Program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the program.
      required:
      - ChannelName
      - ProgramName
    DescribeProgramResponse:
      type: object
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          description: The ad break configuration settings.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the program.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel that the program belongs to.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp of when the program was created.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the LiveSource for this Program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the program.
        ScheduledStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The date and time that the program is scheduled to start in
            ISO 8601 format and Coordinated Universal Time (UTC). For example, the
            value 2021-03-27T17:48:16.751Z represents March 27, 2021 at 17:48:16.751
            UTC.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The source location name.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that's used to refer to a VOD source.
        ClipRange:
          allOf:
          - $ref: '#/components/schemas/ClipRange'
          description: The clip range configuration settings.
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The duration of the live program in milliseconds.
        AudienceMedia:
          allOf:
          - $ref: '#/components/schemas/__listOfAudienceMedia'
          description: The list of AudienceMedia defined in program.
    DescribeSourceLocationRequest:
      type: object
      properties:
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
      required:
      - SourceLocationName
    DescribeSourceLocationResponse:
      type: object
      properties:
        AccessConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccessConfiguration'
          description: The access configuration for the source location.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the source location.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the source location was created.
        DefaultSegmentDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
          description: The default segment delivery configuration settings.
        HttpConfiguration:
          allOf:
          - $ref: '#/components/schemas/HttpConfiguration'
          description: The HTTP package configuration settings for the source location.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the source location was last
            modified.
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          description: A list of the segment delivery configurations associated with
            this resource.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags assigned to the source location. Tags are key-value
            pairs that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
    DescribeVodSourceRequest:
      type: object
      properties:
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with this VOD Source.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD Source.
      required:
      - SourceLocationName
      - VodSourceName
    DescribeVodSourceResponse:
      type: object
      properties:
        AdBreakOpportunities:
          allOf:
          - $ref: '#/components/schemas/AdBreakOpportunities'
          description: The ad break opportunities within the VOD source.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the VOD source.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the VOD source was created.
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: The HTTP package configurations.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The last modified time of the VOD source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with the VOD source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags assigned to the VOD source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD source.
    FillPolicy:
      type: string
      enum:
      - FULL_AVAIL_ONLY
      - PARTIAL_AVAIL
    GetChannelPolicyRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel associated with this Channel Policy.
      required:
      - ChannelName
    GetChannelPolicyResponse:
      type: object
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IAM policy for the channel. IAM policies are used to control
            access to your channel.
    GetChannelScheduleRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel associated with this Channel Schedule.
        DurationMinutes:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The duration in minutes of the channel schedule.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of channel schedules that you want MediaTailor
            to return in response to the current request. If there are more than `MaxResults`
            channel schedules, use the value of `NextToken` in the response to get
            the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: '(Optional) If the playback configuration has more than `MaxResults`
            channel schedules, use `NextToken` to get the second and subsequent pages
            of results.


            For the first `GetChannelScheduleRequest` request, omit this value.


            For the second and subsequent requests, get the value of `NextToken` from
            the previous response and specify that value for `NextToken` in the request.


            If the previous response didn''t include a `NextToken` element, there
            are no more channel schedules to get.'
        Audience:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The single audience for GetChannelScheduleRequest.
      required:
      - ChannelName
    GetChannelScheduleResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfScheduleEntry'
          description: A list of schedule entries for the channel.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    GetPlaybackConfigurationRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the playback configuration.
      required:
      - Name
    GetPlaybackConfigurationResponse:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for the ad decision server (ADS). This includes the
            specification of static parameters and placeholders for dynamic parameters.
            AWS Elemental MediaTailor substitutes player-specific and session-specific
            parameters as needed when calling the ADS. Alternately, for testing, you
            can provide a static VAST URL. The maximum length is 25,000 characters.
        AvailSuppression:
          allOf:
          - $ref: '#/components/schemas/AvailSuppression'
          description: The configuration for avail suppression, also known as ad suppression.
            For more information about ad suppression, see [Ad Suppression](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
        Bumper:
          allOf:
          - $ref: '#/components/schemas/Bumper'
          description: The configuration for bumpers. Bumpers are short audio or video
            clips that play at the start or before the end of an ad break. To learn
            more about bumpers, see [Bumpers](https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
        CdnConfiguration:
          allOf:
          - $ref: '#/components/schemas/CdnConfiguration'
          description: The configuration for using a content delivery network (CDN),
            like Amazon CloudFront, for content and ad segment management.
        ConfigurationAliases:
          allOf:
          - $ref: '#/components/schemas/ConfigurationAliasesResponse'
          description: The player parameters and aliases used as dynamic variables
            during session initialization. For more information, see [Domain Variables](https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domains.html).
        DashConfiguration:
          allOf:
          - $ref: '#/components/schemas/DashConfiguration'
          description: The configuration for DASH content.
        HlsConfiguration:
          allOf:
          - $ref: '#/components/schemas/HlsConfiguration'
          description: The configuration for HLS content.
        InsertionMode:
          allOf:
          - $ref: '#/components/schemas/InsertionMode'
          description: The setting that controls whether players can use stitched
            or guided ad insertion. The default, `STITCHED_ONLY`, forces all player
            sessions to use stitched (server-side) ad insertion. Choosing `PLAYER_SELECT`
            allows players to select either stitched or guided ad insertion at session-initialization
            time. The default for players that do not specify an insertion mode is
            stitched.
        LivePreRollConfiguration:
          allOf:
          - $ref: '#/components/schemas/LivePreRollConfiguration'
          description: The configuration for pre-roll ad insertion.
        LogConfiguration:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: The configuration that defines where AWS Elemental MediaTailor
            sends logs for the playback configuration.
        ManifestProcessingRules:
          allOf:
          - $ref: '#/components/schemas/ManifestProcessingRules'
          description: The configuration for manifest processing rules. Manifest processing
            rules enable customization of the personalized manifests created by MediaTailor.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Defines the maximum duration of underfilled ad time (in seconds)
            allowed in an ad break. If the duration of underfilled ad time exceeds
            the personalization threshold, then the personalization of the ad break
            is abandoned and the underlying content is shown. This feature applies
            to _ad replacement_ in live and VOD streams, rather than ad insertion,
            because it relies on an underlying content stream. For more information
            about ad break behavior, including ad replacement and insertion, see [Ad
            Behavior in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
        PlaybackConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the playback configuration.
        PlaybackEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL that the player accesses to get a manifest from AWS
            Elemental MediaTailor. This session will use server-side reporting.
        SessionInitializationEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL that the player uses to initialize a session that uses
            client-side reporting.
        SlateAdUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for a high-quality video asset to transcode and use
            to fill in time that's not used by ads. AWS Elemental MediaTailor shows
            the slate to fill in gaps in media content. Configuring the slate is optional
            for non-VPAID playback configurations. For VPAID, the slate is required
            because MediaTailor provides it in the slots designated for dynamic ad
            content. The slate must be a high-quality asset that contains both audio
            and video.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags assigned to the playback configuration. Tags are key-value
            pairs that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        TranscodeProfileName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that is used to associate this playback configuration
            with a custom transcode profile. This overrides the dynamic transcoding
            defaults of MediaTailor. Use this only if you have already set up custom
            profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL prefix for the parent manifest for the stream, minus
            the asset ID. The maximum length is 512 characters.
        AdConditioningConfiguration:
          allOf:
          - $ref: '#/components/schemas/AdConditioningConfiguration'
          description: The setting that indicates what conditioning MediaTailor will
            perform on ads that the ad decision server (ADS) returns, and what priority
            MediaTailor uses when inserting ads.
    GetPrefetchScheduleRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the prefetch schedule. The name must be unique
            among all prefetch schedules that are associated with the specified playback
            configuration.
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Returns information about the prefetch schedule for a specific
            playback configuration. If you call `GetPrefetchSchedule` on an expired
            prefetch schedule, MediaTailor returns an HTTP 404 status code.
      required:
      - Name
      - PlaybackConfigurationName
    GetPrefetchScheduleResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the prefetch schedule.
        Consumption:
          allOf:
          - $ref: '#/components/schemas/PrefetchConsumption'
          description: The configuration settings for how and when MediaTailor consumes
            prefetched ads from the ad decision server for single prefetch schedules.
            Each consumption configuration contains an end time and an optional start
            time that define the _consumption window_. Prefetch schedules automatically
            expire no earlier than seven days after the end time.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the prefetch schedule. The name must be unique
            among all prefetch schedules that are associated with the specified playback
            configuration.
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the playback configuration to create the prefetch
            schedule for.
        Retrieval:
          allOf:
          - $ref: '#/components/schemas/PrefetchRetrieval'
          description: A complex type that contains settings for prefetch retrieval
            from the ad decision server (ADS).
        ScheduleType:
          allOf:
          - $ref: '#/components/schemas/PrefetchScheduleType'
          description: The frequency that MediaTailor creates prefetch schedules.
            `SINGLE` indicates that this schedule applies to one ad break. `RECURRING`
            indicates that MediaTailor automatically creates a schedule for each ad
            avail in a live event.
        RecurringPrefetchConfiguration:
          allOf:
          - $ref: '#/components/schemas/RecurringPrefetchConfiguration'
          description: The configuration that defines how and when MediaTailor performs
            ad prefetching in a live event.
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional stream identifier that you can specify in order
            to prefetch for multiple streams that use the same playback configuration.
    HlsConfiguration:
      type: object
      properties:
        ManifestEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL that is used to initiate a playback session for devices
            that support Apple HLS. The session uses server-side reporting.
      description: The configuration for HLS content.
    HlsPlaylistSettings:
      type: object
      properties:
        ManifestWindowSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The total duration (in seconds) of each manifest. Minimum
            value: `30` seconds. Maximum value: `3600` seconds.'
        AdMarkupType:
          allOf:
          - $ref: '#/components/schemas/adMarkupTypes'
          description: Determines the type of SCTE 35 tags to use in ad markup. Specify
            `DATERANGE` to use `DATERANGE` tags (for live or VOD content). Specify
            `SCTE35_ENHANCED` to use `EXT-X-CUE-OUT` and `EXT-X-CUE-IN` tags (for
            VOD content only).
      description: HLS playlist configuration parameters.
    HttpConfiguration:
      type: object
      properties:
        BaseUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The base URL for the source location host server. This string
            must include the protocol, such as **https://**.
      required:
      - BaseUrl
      description: The HTTP configuration for the source location.
    HttpPackageConfiguration:
      type: object
      properties:
        Path:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The relative path to the URL for this VOD source. This is combined
            with `SourceLocation::HttpConfiguration::BaseUrl` to form a valid URL.
        SourceGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source group. This has to match one of the
            `Channel::Outputs::SourceGroup`.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: The streaming protocol for this package configuration. Supported
            values are `HLS` and `DASH`.
      required:
      - Path
      - SourceGroup
      - Type
      description: The HTTP package configuration properties for the requested VOD
        source.
    HttpPackageConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/HttpPackageConfiguration'
      description: <p>The VOD source's HTTP package configuration settings.</p>
    InsertionMode:
      type: string
      enum:
      - STITCHED_ONLY
      - PLAYER_SELECT
      description: <p>Insertion Mode controls whether players can use stitched or
        guided ad insertion.</p>
    KeyValuePair:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: For `SCTE35_ENHANCED` output, defines a key. MediaTailor takes
            this key, and its associated value, and generates the key/value pair within
            the `EXT-X-ASSET`tag. If you specify a key, you must also specify a corresponding
            value.
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: For `SCTE35_ENHANCED` output, defines a value. MediaTailor;
            takes this value, and its associated key, and generates the key/value
            pair within the `EXT-X-ASSET`tag. If you specify a value, you must also
            specify a corresponding key.
      required:
      - Key
      - Value
      description: For `SCTE35_ENHANCED` output, defines a key and corresponding value.
        MediaTailor generates these pairs within the `EXT-X-ASSET`tag.
    ListAlertsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of alerts that you want MediaTailor to return
            in response to the current request. If there are more than `MaxResults`
            alerts, use the value of `NextToken` in the response to get the next page
            of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
    ListAlertsResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfAlert'
          description: A list of alerts that are associated with this resource.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListChannelsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of channels that you want MediaTailor to
            return in response to the current request. If there are more than `MaxResults`
            channels, use the value of `NextToken` in the response to get the next
            page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListChannelsResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfChannel'
          description: A list of channels that are associated with this account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListLiveSourcesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of live sources that you want MediaTailor
            to return in response to the current request. If there are more than `MaxResults`
            live sources, use the value of `NextToken` in the response to get the
            next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with this Live Sources
            list.
      required:
      - SourceLocationName
    ListLiveSourcesResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfLiveSource'
          description: Lists the live sources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListPlaybackConfigurationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of playback configurations that you want
            MediaTailor to return in response to the current request. If there are
            more than `MaxResults` playback configurations, use the value of `NextToken`
            in the response to get the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListPlaybackConfigurationsResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfPlaybackConfiguration'
          description: Array of playback configurations. This might be all the available
            configurations or a subset, depending on the settings that you provide
            and the total number of configurations stored.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the GET list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListPrefetchScheduleType:
      type: string
      enum:
      - SINGLE
      - RECURRING
      - ALL
    ListPrefetchSchedulesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/__integerMin1Max100'
          description: The maximum number of prefetch schedules that you want MediaTailor
            to return in response to the current request. If there are more than `MaxResults`
            prefetch schedules, use the value of `NextToken` in the response to get
            the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: '(Optional) If the playback configuration has more than `MaxResults`
            prefetch schedules, use `NextToken` to get the second and subsequent pages
            of results.


            For the first `ListPrefetchSchedulesRequest` request, omit this value.


            For the second and subsequent requests, get the value of `NextToken` from
            the previous response and specify that value for `NextToken` in the request.


            If the previous response didn''t include a `NextToken` element, there
            are no more prefetch schedules to get.'
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Retrieves the prefetch schedule(s) for a specific playback
            configuration.
        ScheduleType:
          allOf:
          - $ref: '#/components/schemas/ListPrefetchScheduleType'
          description: The type of prefetch schedules that you want to list. `SINGLE`
            indicates that you want to list the configured single prefetch schedules.
            `RECURRING` indicates that you want to list the configured recurring prefetch
            schedules. `ALL` indicates that you want to list all configured prefetch
            schedules.
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional filtering parameter whereby MediaTailor filters
            the prefetch schedules to include only specific streams.
      required:
      - PlaybackConfigurationName
    ListPrefetchSchedulesResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfPrefetchSchedule'
          description: Lists the prefetch schedules. An empty `Items` list doesn't
            mean there aren't more items to fetch, just that that page was empty.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListSourceLocationsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of source locations that you want MediaTailor
            to return in response to the current request. If there are more than `MaxResults`
            source locations, use the value of `NextToken` in the response to get
            the next page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListSourceLocationsResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfSourceLocation'
          description: A list of source locations.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) associated with this resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags associated with this resource. Tags are key-value
            pairs that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
    ListVodSourcesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of VOD sources that you want MediaTailor
            to return in response to the current request. If there are more than `MaxResults`
            VOD sources, use the value of `NextToken` in the response to get the next
            page of results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with this VOD Source
            list.
      required:
      - SourceLocationName
    ListVodSourcesResponse:
      type: object
      properties:
        Items:
          allOf:
          - $ref: '#/components/schemas/__listOfVodSource'
          description: Lists the VOD sources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Pagination token returned by the list request when results
            exceed the maximum allowed. Use the token to fetch the next page of results.
    LivePreRollConfiguration:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for the ad decision server (ADS) for pre-roll ads.
            This includes the specification of static parameters and placeholders
            for dynamic parameters. AWS Elemental MediaTailor substitutes player-specific
            and session-specific parameters as needed when calling the ADS. Alternately,
            for testing, you can provide a static VAST URL. The maximum length is
            25,000 characters.
        MaxDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum allowed duration for the pre-roll ad avail. AWS
            Elemental MediaTailor won't play pre-roll ads to exceed this duration,
            regardless of the total duration of ads that the ADS returns.
      description: The configuration for pre-roll ad insertion.
    LiveSource:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN for the live source.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the live source was created.
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: The HTTP package configurations for the live source.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the live source was last
            modified.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that's used to refer to a live source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags assigned to the live source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
      required:
      - Arn
      - HttpPackageConfigurations
      - LiveSourceName
      - SourceLocationName
      description: Live source configuration parameters.
    LogConfiguration:
      type: object
      properties:
        PercentEnabled:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The percentage of session logs that MediaTailor sends to your
            configured log destination. For example, if your playback configuration
            has 1000 sessions and `percentEnabled` is set to `60`, MediaTailor sends
            logs for 600 of the sessions to CloudWatch Logs. MediaTailor decides at
            random which of the playback configuration sessions to send logs for.
            If you want to view logs for a specific session, you can use the [debug
            log mode](https://docs.aws.amazon.com/mediatailor/latest/ug/debug-log-mode.html).


            Valid values: `0` \- `100`'
        EnabledLoggingStrategies:
          allOf:
          - $ref: '#/components/schemas/__listOfLoggingStrategies'
          description: The method used for collecting logs from AWS Elemental MediaTailor.
            `LEGACY_CLOUDWATCH` indicates that MediaTailor is sending logs directly
            to Amazon CloudWatch Logs. `VENDED_LOGS` indicates that MediaTailor is
            sending logs to CloudWatch, which then vends the logs to your destination
            of choice. Supported destinations are CloudWatch Logs log group, Amazon
            S3 bucket, and Amazon Data Firehose stream.
        AdsInteractionLog:
          allOf:
          - $ref: '#/components/schemas/AdsInteractionLog'
          description: Settings for customizing what events are included in logs for
            interactions with the ad decision server (ADS).
        ManifestServiceInteractionLog:
          allOf:
          - $ref: '#/components/schemas/ManifestServiceInteractionLog'
          description: Settings for customizing what events are included in logs for
            interactions with the origin server.
      required:
      - PercentEnabled
      description: Defines where AWS Elemental MediaTailor sends logs for the playback
        configuration.
    LogConfigurationForChannel:
      type: object
      properties:
        LogTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypes'
          description: The log types.
      description: The log configuration for the channel.
    LogType:
      type: string
      enum:
      - AS_RUN
    LogTypes:
      type: array
      items:
        $ref: '#/components/schemas/LogType'
    LoggingStrategy:
      type: string
      enum:
      - VENDED_LOGS
      - LEGACY_CLOUDWATCH
    ManifestProcessingRules:
      type: object
      properties:
        AdMarkerPassthrough:
          allOf:
          - $ref: '#/components/schemas/AdMarkerPassthrough'
          description: 'For HLS, when set to `true`, MediaTailor passes through `EXT-X-CUE-IN`,
            `EXT-X-CUE-OUT`, and `EXT-X-SPLICEPOINT-SCTE35` ad markers from the origin
            manifest to the MediaTailor personalized manifest.


            No logic is applied to these ad markers. For example, if `EXT-X-CUE-OUT`
            has a value of `60`, but no ads are filled for that ad break, MediaTailor
            will not set the value to `0`.'
      description: The configuration for manifest processing rules. Manifest processing
        rules enable customization of the personalized manifests created by MediaTailor.
    ManifestServiceExcludeEventType:
      type: string
      enum:
      - GENERATED_MANIFEST
      - ORIGIN_MANIFEST
      - SESSION_INITIALIZED
      - TRACKING_RESPONSE
      - CONFIG_SYNTAX_ERROR
      - CONFIG_SECURITY_ERROR
      - UNKNOWN_HOST
      - TIMEOUT_ERROR
      - CONNECTION_ERROR
      - IO_ERROR
      - UNKNOWN_ERROR
      - HOST_DISALLOWED
      - PARSING_ERROR
      - MANIFEST_ERROR
      - NO_MASTER_OR_MEDIA_PLAYLIST
      - NO_MASTER_PLAYLIST
      - NO_MEDIA_PLAYLIST
      - INCOMPATIBLE_HLS_VERSION
      - SCTE35_PARSING_ERROR
      - INVALID_SINGLE_PERIOD_DASH_MANIFEST
      - UNSUPPORTED_SINGLE_PERIOD_DASH_MANIFEST
      - LAST_PERIOD_MISSING_AUDIO
      - LAST_PERIOD_MISSING_AUDIO_WARNING
      - ERROR_ORIGIN_PREFIX_INTERPOLATION
      - ERROR_ADS_INTERPOLATION
      - ERROR_LIVE_PRE_ROLL_ADS_INTERPOLATION
      - ERROR_CDN_AD_SEGMENT_INTERPOLATION
      - ERROR_CDN_CONTENT_SEGMENT_INTERPOLATION
      - ERROR_SLATE_AD_URL_INTERPOLATION
      - ERROR_PROFILE_NAME_INTERPOLATION
      - ERROR_BUMPER_START_INTERPOLATION
      - ERROR_BUMPER_END_INTERPOLATION
    ManifestServiceInteractionLog:
      type: object
      properties:
        ExcludeEventTypes:
          allOf:
          - $ref: '#/components/schemas/__manifestServiceExcludeEventTypesList'
          description: Indicates that MediaTailor won't emit the selected events in
            the logs for playback sessions that are initialized with this configuration.
      description: 'Settings for customizing what events are included in logs for
        interactions with the origin server.


        For more information about manifest service logs, including descriptions of
        the event types, see [MediaTailor manifest logs description and event types](https://docs.aws.amazon.com/mediatailor/latest/ug/log-types.html)
        in Elemental MediaTailor User Guide.'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    MessageType:
      type: string
      enum:
      - SPLICE_INSERT
      - TIME_SIGNAL
    Mode:
      type: string
      enum:
      - 'OFF'
      - BEHIND_LIVE_EDGE
      - AFTER_LIVE_EDGE
    Operator:
      type: string
      enum:
      - EQUALS
    OriginManifestType:
      type: string
      enum:
      - SINGLE_PERIOD
      - MULTI_PERIOD
    PlaybackConfiguration:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for the ad decision server (ADS). This includes the
            specification of static parameters and placeholders for dynamic parameters.
            AWS Elemental MediaTailor substitutes player-specific and session-specific
            parameters as needed when calling the ADS. Alternately, for testing you
            can provide a static VAST URL. The maximum length is 25,000 characters.
        AvailSuppression:
          allOf:
          - $ref: '#/components/schemas/AvailSuppression'
          description: The configuration for avail suppression, also known as ad suppression.
            For more information about ad suppression, see [Ad Suppression](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
        Bumper:
          allOf:
          - $ref: '#/components/schemas/Bumper'
          description: The configuration for bumpers. Bumpers are short audio or video
            clips that play at the start or before the end of an ad break. To learn
            more about bumpers, see [Bumpers](https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
        CdnConfiguration:
          allOf:
          - $ref: '#/components/schemas/CdnConfiguration'
          description: The configuration for using a content delivery network (CDN),
            like Amazon CloudFront, for content and ad segment management.
        ConfigurationAliases:
          allOf:
          - $ref: '#/components/schemas/ConfigurationAliasesResponse'
          description: The player parameters and aliases used as dynamic variables
            during session initialization. For more information, see [Domain Variables](https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domains.html).
        DashConfiguration:
          allOf:
          - $ref: '#/components/schemas/DashConfiguration'
          description: The configuration for a DASH source.
        HlsConfiguration:
          allOf:
          - $ref: '#/components/schemas/HlsConfiguration'
          description: The configuration for HLS content.
        InsertionMode:
          allOf:
          - $ref: '#/components/schemas/InsertionMode'
          description: The setting that controls whether players can use stitched
            or guided ad insertion. The default, `STITCHED_ONLY`, forces all player
            sessions to use stitched (server-side) ad insertion. Choosing `PLAYER_SELECT`
            allows players to select either stitched or guided ad insertion at session-initialization
            time. The default for players that do not specify an insertion mode is
            stitched.
        LivePreRollConfiguration:
          allOf:
          - $ref: '#/components/schemas/LivePreRollConfiguration'
          description: The configuration for pre-roll ad insertion.
        LogConfiguration:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: Defines where AWS Elemental MediaTailor sends logs for the
            playback configuration.
        ManifestProcessingRules:
          allOf:
          - $ref: '#/components/schemas/ManifestProcessingRules'
          description: The configuration for manifest processing rules. Manifest processing
            rules enable customization of the personalized manifests created by MediaTailor.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Defines the maximum duration of underfilled ad time (in seconds)
            allowed in an ad break. If the duration of underfilled ad time exceeds
            the personalization threshold, then the personalization of the ad break
            is abandoned and the underlying content is shown. This feature applies
            to _ad replacement_ in live and VOD streams, rather than ad insertion,
            because it relies on an underlying content stream. For more information
            about ad break behavior, including ad replacement and insertion, see [Ad
            Behavior in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
        PlaybackConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) for the playback configuration.
        PlaybackEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL that the player accesses to get a manifest from AWS
            Elemental MediaTailor.
        SessionInitializationEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL that the player uses to initialize a session that uses
            client-side reporting.
        SlateAdUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for a video asset to transcode and use to fill in time
            that's not used by ads. AWS Elemental MediaTailor shows the slate to fill
            in gaps in media content. Configuring the slate is optional for non-VPAID
            playback configurations. For VPAID, the slate is required because MediaTailor
            provides it in the slots designated for dynamic ad content. The slate
            must be a high-quality asset that contains both audio and video.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the playback configuration. Tags are
            key-value pairs that you can associate with Amazon resources to help with
            organization, access control, and cost tracking. For more information,
            see [Tagging AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        TranscodeProfileName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that is used to associate this playback configuration
            with a custom transcode profile. This overrides the dynamic transcoding
            defaults of MediaTailor. Use this only if you have already set up custom
            profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL prefix for the parent manifest for the stream, minus
            the asset ID. The maximum length is 512 characters.
        AdConditioningConfiguration:
          allOf:
          - $ref: '#/components/schemas/AdConditioningConfiguration'
          description: The setting that indicates what conditioning MediaTailor will
            perform on ads that the ad decision server (ADS) returns, and what priority
            MediaTailor uses when inserting ads.
      description: A playback configuration. For information about MediaTailor configurations,
        see [Working with configurations in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html).
    PlaybackMode:
      type: string
      enum:
      - LOOP
      - LINEAR
    PrefetchConsumption:
      type: object
      properties:
        AvailMatchingCriteria:
          allOf:
          - $ref: '#/components/schemas/__listOfAvailMatchingCriteria'
          description: If you only want MediaTailor to insert prefetched ads into
            avails (ad breaks) that match specific dynamic variables, such as `scte.event_id`,
            set the avail matching criteria.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time when MediaTailor no longer considers the prefetched
            ads for use in an ad break. MediaTailor automatically deletes prefetch
            schedules no less than seven days after the end time. If you'd like to
            manually delete the prefetch schedule, you can call `DeletePrefetchSchedule`.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time when prefetched ads are considered for use in an ad
            break. If you don't specify `StartTime`, the prefetched ads are available
            after MediaTailor retrieves them from the ad decision server.
      required:
      - EndTime
      description: For single prefetch, describes how and when that MediaTailor places
        prefetched ads into upcoming ad breaks.
    PrefetchRetrieval:
      type: object
      properties:
        DynamicVariables:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: 'The dynamic variables to use for substitution during prefetch
            requests to the ad decision server (ADS).


            You initially configure [dynamic variables](https://docs.aws.amazon.com/mediatailor/latest/ug/variables.html)
            for the ADS URL when you set up your playback configuration. When you
            specify `DynamicVariables` for prefetch retrieval, MediaTailor includes
            the dynamic variables in the request to the ADS.'
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time when prefetch retrieval ends for the ad break. Prefetching
            will be attempted for manifest requests that occur at or before this time.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time when prefetch retrievals can start for this break.
            Ad prefetching will be attempted for manifest requests that occur at or
            after this time. Defaults to the current time. If not specified, the prefetch
            retrieval starts as soon as possible.
        TrafficShapingType:
          allOf:
          - $ref: '#/components/schemas/TrafficShapingType'
          description: Indicates if this configuration uses a retrieval window for
            traffic shaping and limiting the number of requests to the ADS at one
            time.
        TrafficShapingRetrievalWindow:
          allOf:
          - $ref: '#/components/schemas/TrafficShapingRetrievalWindow'
          description: Configuration for spreading ADS traffic across a set window
            instead of sending ADS requests for all sessions at the same time.
      required:
      - EndTime
      description: A complex type that contains settings governing when MediaTailor
        prefetches ads, and which dynamic variables that MediaTailor includes in the
        request to the ad decision server.
    PrefetchSchedule:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the prefetch schedule.
        Consumption:
          allOf:
          - $ref: '#/components/schemas/PrefetchConsumption'
          description: Consumption settings determine how, and when, MediaTailor places
            the prefetched ads into ad breaks for single prefetch schedules. Ad consumption
            occurs within a span of time that you define, called a _consumption window_.
            You can designate which ad breaks that MediaTailor fills with prefetch
            ads by setting avail matching criteria.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the prefetch schedule. The name must be unique
            among all prefetch schedules that are associated with the specified playback
            configuration.
        PlaybackConfigurationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the playback configuration to create the prefetch
            schedule for.
        Retrieval:
          allOf:
          - $ref: '#/components/schemas/PrefetchRetrieval'
          description: A complex type that contains settings for prefetch retrieval
            from the ad decision server (ADS).
        ScheduleType:
          allOf:
          - $ref: '#/components/schemas/PrefetchScheduleType'
          description: 'The frequency that MediaTailor creates prefetch schedules.
            `SINGLE` indicates that this schedule applies to one ad break. `RECURRING`
            indicates that MediaTailor automatically creates a schedule for each ad
            avail in a live event.


            For more information about the prefetch types and when you might use each,
            see [Prefetching ads in Elemental MediaTailor.](https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html)'
        RecurringPrefetchConfiguration:
          allOf:
          - $ref: '#/components/schemas/RecurringPrefetchConfiguration'
          description: The settings that determine how and when MediaTailor prefetches
            ads and inserts them into ad breaks.
        StreamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An optional stream identifier that you can specify in order
            to prefetch for multiple streams that use the same playback configuration.
      required:
      - Arn
      - Name
      - PlaybackConfigurationName
      description: A prefetch schedule allows you to tell MediaTailor to fetch and
        prepare certain ads before an ad break happens. For more information about
        ad prefetching, see [Using ad prefetching](https://docs.aws.amazon.com/mediatailor/latest/ug/prefetching-ads.html)
        in the _MediaTailor User Guide_.
    PrefetchScheduleType:
      type: string
      enum:
      - SINGLE
      - RECURRING
    PutChannelPolicyRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The channel name associated with this Channel Policy.
        Policy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Adds an IAM role that determines the permissions of your channel.
      required:
      - ChannelName
      - Policy
    PutChannelPolicyResponse:
      type: object
      properties: {}
    PutPlaybackConfigurationRequest:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for the ad decision server (ADS). This includes the
            specification of static parameters and placeholders for dynamic parameters.
            AWS Elemental MediaTailor substitutes player-specific and session-specific
            parameters as needed when calling the ADS. Alternately, for testing you
            can provide a static VAST URL. The maximum length is 25,000 characters.
        AvailSuppression:
          allOf:
          - $ref: '#/components/schemas/AvailSuppression'
          description: The configuration for avail suppression, also known as ad suppression.
            For more information about ad suppression, see [Ad Suppression](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
        Bumper:
          allOf:
          - $ref: '#/components/schemas/Bumper'
          description: The configuration for bumpers. Bumpers are short audio or video
            clips that play at the start or before the end of an ad break. To learn
            more about bumpers, see [Bumpers](https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
        CdnConfiguration:
          allOf:
          - $ref: '#/components/schemas/CdnConfiguration'
          description: The configuration for using a content delivery network (CDN),
            like Amazon CloudFront, for content and ad segment management.
        ConfigurationAliases:
          allOf:
          - $ref: '#/components/schemas/ConfigurationAliasesRequest'
          description: The player parameters and aliases used as dynamic variables
            during session initialization. For more information, see [Domain Variables](https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domains.html).
        DashConfiguration:
          allOf:
          - $ref: '#/components/schemas/DashConfigurationForPut'
          description: The configuration for DASH content.
        InsertionMode:
          allOf:
          - $ref: '#/components/schemas/InsertionMode'
          description: The setting that controls whether players can use stitched
            or guided ad insertion. The default, `STITCHED_ONLY`, forces all player
            sessions to use stitched (server-side) ad insertion. Choosing `PLAYER_SELECT`
            allows players to select either stitched or guided ad insertion at session-initialization
            time. The default for players that do not specify an insertion mode is
            stitched.
        LivePreRollConfiguration:
          allOf:
          - $ref: '#/components/schemas/LivePreRollConfiguration'
          description: The configuration for pre-roll ad insertion.
        ManifestProcessingRules:
          allOf:
          - $ref: '#/components/schemas/ManifestProcessingRules'
          description: The configuration for manifest processing rules. Manifest processing
            rules enable customization of the personalized manifests created by MediaTailor.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Defines the maximum duration of underfilled ad time (in seconds)
            allowed in an ad break. If the duration of underfilled ad time exceeds
            the personalization threshold, then the personalization of the ad break
            is abandoned and the underlying content is shown. This feature applies
            to _ad replacement_ in live and VOD streams, rather than ad insertion,
            because it relies on an underlying content stream. For more information
            about ad break behavior, including ad replacement and insertion, see [Ad
            Behavior in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
        SlateAdUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for a high-quality video asset to transcode and use
            to fill in time that's not used by ads. AWS Elemental MediaTailor shows
            the slate to fill in gaps in media content. Configuring the slate is optional
            for non-VPAID configurations. For VPAID, the slate is required because
            MediaTailor provides it in the slots that are designated for dynamic ad
            content. The slate must be a high-quality asset that contains both audio
            and video.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the playback configuration. Tags are
            key-value pairs that you can associate with Amazon resources to help with
            organization, access control, and cost tracking. For more information,
            see [Tagging AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        TranscodeProfileName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that is used to associate this playback configuration
            with a custom transcode profile. This overrides the dynamic transcoding
            defaults of MediaTailor. Use this only if you have already set up custom
            profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL prefix for the parent manifest for the stream, minus
            the asset ID. The maximum length is 512 characters.
        AdConditioningConfiguration:
          allOf:
          - $ref: '#/components/schemas/AdConditioningConfiguration'
          description: The setting that indicates what conditioning MediaTailor will
            perform on ads that the ad decision server (ADS) returns, and what priority
            MediaTailor uses when inserting ads.
      required:
      - Name
    PutPlaybackConfigurationResponse:
      type: object
      properties:
        AdDecisionServerUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for the ad decision server (ADS). This includes the
            specification of static parameters and placeholders for dynamic parameters.
            AWS Elemental MediaTailor substitutes player-specific and session-specific
            parameters as needed when calling the ADS. Alternately, for testing you
            can provide a static VAST URL. The maximum length is 25,000 characters.
        AvailSuppression:
          allOf:
          - $ref: '#/components/schemas/AvailSuppression'
          description: The configuration for avail suppression, also known as ad suppression.
            For more information about ad suppression, see [Ad Suppression](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
        Bumper:
          allOf:
          - $ref: '#/components/schemas/Bumper'
          description: The configuration for bumpers. Bumpers are short audio or video
            clips that play at the start or before the end of an ad break. To learn
            more about bumpers, see [Bumpers](https://docs.aws.amazon.com/mediatailor/latest/ug/bumpers.html).
        CdnConfiguration:
          allOf:
          - $ref: '#/components/schemas/CdnConfiguration'
          description: The configuration for using a content delivery network (CDN),
            like Amazon CloudFront, for content and ad segment management.
        ConfigurationAliases:
          allOf:
          - $ref: '#/components/schemas/ConfigurationAliasesResponse'
          description: The player parameters and aliases used as dynamic variables
            during session initialization. For more information, see [Domain Variables](https://docs.aws.amazon.com/mediatailor/latest/ug/variables-domains.html).
        DashConfiguration:
          allOf:
          - $ref: '#/components/schemas/DashConfiguration'
          description: The configuration for DASH content.
        HlsConfiguration:
          allOf:
          - $ref: '#/components/schemas/HlsConfiguration'
          description: The configuration for HLS content.
        InsertionMode:
          allOf:
          - $ref: '#/components/schemas/InsertionMode'
          description: The setting that controls whether players can use stitched
            or guided ad insertion. The default, `STITCHED_ONLY`, forces all player
            sessions to use stitched (server-side) ad insertion. Choosing `PLAYER_SELECT`
            allows players to select either stitched or guided ad insertion at session-initialization
            time. The default for players that do not specify an insertion mode is
            stitched.
        LivePreRollConfiguration:
          allOf:
          - $ref: '#/components/schemas/LivePreRollConfiguration'
          description: The configuration for pre-roll ad insertion.
        LogConfiguration:
          allOf:
          - $ref: '#/components/schemas/LogConfiguration'
          description: The configuration that defines where AWS Elemental MediaTailor
            sends logs for the playback configuration.
        ManifestProcessingRules:
          allOf:
          - $ref: '#/components/schemas/ManifestProcessingRules'
          description: The configuration for manifest processing rules. Manifest processing
            rules enable customization of the personalized manifests created by MediaTailor.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the playback configuration.
        PersonalizationThresholdSeconds:
          allOf:
          - $ref: '#/components/schemas/__integerMin1'
          description: Defines the maximum duration of underfilled ad time (in seconds)
            allowed in an ad break. If the duration of underfilled ad time exceeds
            the personalization threshold, then the personalization of the ad break
            is abandoned and the underlying content is shown. This feature applies
            to _ad replacement_ in live and VOD streams, rather than ad insertion,
            because it relies on an underlying content stream. For more information
            about ad break behavior, including ad replacement and insertion, see [Ad
            Behavior in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/ad-behavior.html).
        PlaybackConfigurationArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) associated with the playback
            configuration.
        PlaybackEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The playback endpoint prefix associated with the playback configuration.
        SessionInitializationEndpointPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The session initialization endpoint prefix associated with
            the playback configuration.
        SlateAdUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL for a high-quality video asset to transcode and use
            to fill in time that's not used by ads. AWS Elemental MediaTailor shows
            the slate to fill in gaps in media content. Configuring the slate is optional
            for non-VPAID configurations. For VPAID, the slate is required because
            MediaTailor provides it in the slots that are designated for dynamic ad
            content. The slate must be a high-quality asset that contains both audio
            and video.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the playback configuration. Tags are
            key-value pairs that you can associate with Amazon resources to help with
            organization, access control, and cost tracking. For more information,
            see [Tagging AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        TranscodeProfileName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that is used to associate this playback configuration
            with a custom transcode profile. This overrides the dynamic transcoding
            defaults of MediaTailor. Use this only if you have already set up custom
            profiles with the help of AWS Support.
        VideoContentSourceUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL prefix for the parent manifest for the stream, minus
            the asset ID. The maximum length is 512 characters.
        AdConditioningConfiguration:
          allOf:
          - $ref: '#/components/schemas/AdConditioningConfiguration'
          description: The setting that indicates what conditioning MediaTailor will
            perform on ads that the ad decision server (ADS) returns, and what priority
            MediaTailor uses when inserting ads.
    RecurringConsumption:
      type: object
      properties:
        RetrievedAdExpirationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of seconds that an ad is available for insertion
            after it was prefetched.
        AvailMatchingCriteria:
          allOf:
          - $ref: '#/components/schemas/__listOfAvailMatchingCriteria'
          description: The configuration for the dynamic variables that determine
            which ad breaks that MediaTailor inserts prefetched ads in.
      description: The settings that determine how and when MediaTailor places prefetched
        ads into upcoming ad breaks for recurring prefetch scedules.
    RecurringPrefetchConfiguration:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The start time for the window that MediaTailor prefetches and
            inserts ads in a live event.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The end time for the window that MediaTailor prefetches and
            inserts ads in a live event.
        RecurringConsumption:
          allOf:
          - $ref: '#/components/schemas/RecurringConsumption'
          description: The settings that determine how and when MediaTailor places
            prefetched ads into upcoming ad breaks for recurring prefetch scedules.
        RecurringRetrieval:
          allOf:
          - $ref: '#/components/schemas/RecurringRetrieval'
          description: The configuration for prefetch ad retrieval from the ADS.
      required:
      - EndTime
      - RecurringConsumption
      - RecurringRetrieval
      description: The configuration that defines how MediaTailor performs recurring
        prefetch.
    RecurringRetrieval:
      type: object
      properties:
        DynamicVariables:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The dynamic variables to use for substitution during prefetch
            requests to the ADS.
        DelayAfterAvailEndSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of seconds that MediaTailor waits after an ad avail
            before prefetching ads for the next avail. If not set, the default is
            0 (no delay).
        TrafficShapingType:
          allOf:
          - $ref: '#/components/schemas/TrafficShapingType'
          description: Indicates if this configuration uses a retrieval window for
            traffic shaping and limiting the number of requests to the ADS at one
            time.
        TrafficShapingRetrievalWindow:
          allOf:
          - $ref: '#/components/schemas/TrafficShapingRetrievalWindow'
          description: Configuration for spreading ADS traffic across a set window
            instead of sending ADS requests for all sessions at the same time.
      description: With recurring prefetch, MediaTailor automatically prefetches ads
        for every avail that occurs during the retrieval window. The following configurations
        describe the MediaTailor behavior when prefetching ads for a live event.
    RelativePosition:
      type: string
      enum:
      - BEFORE_PROGRAM
      - AFTER_PROGRAM
    RequestOutputItem:
      type: object
      properties:
        DashPlaylistSettings:
          allOf:
          - $ref: '#/components/schemas/DashPlaylistSettings'
          description: DASH manifest configuration parameters.
        HlsPlaylistSettings:
          allOf:
          - $ref: '#/components/schemas/HlsPlaylistSettings'
          description: HLS playlist configuration parameters.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the manifest for the channel. The name appears
            in the `PlaybackUrl`.
        SourceGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string used to match which `HttpPackageConfiguration` is
            used for each `VodSource`.
      required:
      - ManifestName
      - SourceGroup
      description: The output configuration for this channel.
    RequestOutputs:
      type: array
      items:
        $ref: '#/components/schemas/RequestOutputItem'
      description: <p>An object that represents an object in the CreateChannel request.</p>
    ResponseOutputItem:
      type: object
      properties:
        DashPlaylistSettings:
          allOf:
          - $ref: '#/components/schemas/DashPlaylistSettings'
          description: DASH manifest configuration settings.
        HlsPlaylistSettings:
          allOf:
          - $ref: '#/components/schemas/HlsPlaylistSettings'
          description: HLS manifest configuration settings.
        ManifestName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the manifest for the channel that will appear in
            the channel output's playback URL.
        PlaybackUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL used for playback by content players.
        SourceGroup:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A string used to associate a package configuration source group
            with a channel output.
      required:
      - ManifestName
      - PlaybackUrl
      - SourceGroup
      description: The output item response.
    ResponseOutputs:
      type: array
      items:
        $ref: '#/components/schemas/ResponseOutputItem'
    ScheduleAdBreak:
      type: object
      properties:
        ApproximateDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The approximate duration of the ad break, in seconds.
        ApproximateStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The approximate time that the ad will start playing.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location containing the VOD source used
            for the ad break.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD source used for the ad break.
      description: The schedule's ad break properties.
    ScheduleConfiguration:
      type: object
      properties:
        Transition:
          allOf:
          - $ref: '#/components/schemas/Transition'
          description: Program transition configurations.
        ClipRange:
          allOf:
          - $ref: '#/components/schemas/ClipRange'
          description: Program clip range configuration.
      required:
      - Transition
      description: Schedule configuration parameters. A channel must be stopped before
        changes can be made to the schedule.
    ScheduleEntry:
      type: object
      properties:
        ApproximateDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The approximate duration of this program, in seconds.
        ApproximateStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The approximate time that the program will start playing.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the program.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel that uses this schedule.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the live source used for the program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the program.
        ScheduleAdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfScheduleAdBreak'
          description: The schedule's ad break properties.
        ScheduleEntryType:
          allOf:
          - $ref: '#/components/schemas/ScheduleEntryType'
          description: The type of schedule entry.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD source.
        Audiences:
          allOf:
          - $ref: '#/components/schemas/Audiences'
          description: The list of audiences defined in ScheduleEntry.
      required:
      - Arn
      - ChannelName
      - ProgramName
      - SourceLocationName
      description: The properties for a schedule.
    ScheduleEntryType:
      type: string
      enum:
      - PROGRAM
      - FILLER_SLATE
      - ALTERNATE_MEDIA
    SecretsManagerAccessTokenConfiguration:
      type: object
      properties:
        HeaderName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the HTTP header used to supply the access token
            in requests to the source location.
        SecretArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Secrets Manager secret
            that contains the access token.
        SecretStringKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The AWS Secrets Manager [SecretString](https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_CreateSecret.html#SecretsManager-CreateSecret-request-SecretString.html)
            key associated with the access token. MediaTailor uses the key to look
            up SecretString key and value pair containing the access token.
      description: AWS Secrets Manager access token configuration parameters. For
        information about Secrets Manager access token authentication, see [Working
        with AWS Secrets Manager access token authentication](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-access-configuration-access-token.html).
    SegmentDeliveryConfiguration:
      type: object
      properties:
        BaseUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The base URL of the host or path of the segment delivery server
            that you're using to serve segments. This is typically a content delivery
            network (CDN). The URL can be absolute or relative. To use an absolute
            URL include the protocol, such as `https://example.com/some/path`. To
            use a relative URL specify the relative path, such as `/some/path*`.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A unique identifier used to distinguish between multiple segment
            delivery configurations in a source location.
      description: The segment delivery configuration settings.
    SegmentationDescriptor:
      type: object
      properties:
        SegmentationEventId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The Event Identifier to assign to the `segmentation_descriptor.segmentation_event_id`
            message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.
            The default value is 1.
        SegmentationUpidType:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The Upid Type to assign to the `segmentation_descriptor.segmentation_upid_type`
            message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.
            Values must be between 0 and 256, inclusive. The default value is 14.
        SegmentationUpid:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Upid to assign to the `segmentation_descriptor.segmentation_upid`
            message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.
            The value must be a hexadecimal string containing only the characters
            0 though 9 and A through F. The default value is "" (an empty string).
        SegmentationTypeId:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The Type Identifier to assign to the `segmentation_descriptor.segmentation_type_id`
            message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.
            Values must be between 0 and 256, inclusive. The default value is 48.
        SegmentNum:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The segment number to assign to the `segmentation_descriptor.segment_num`
            message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification
            Values must be between 0 and 256, inclusive. The default value is 0.
        SegmentsExpected:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of segments expected, which is assigned to the `segmentation_descriptor.segments_expectedS`
            message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification
            Values must be between 0 and 256, inclusive. The default value is 0.
        SubSegmentNum:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The sub-segment number to assign to the `segmentation_descriptor.sub_segment_num`
            message, as defined in section 10.3.3.1 of the 2022 SCTE-35 specification.
            Values must be between 0 and 256, inclusive. The defualt value is null.
        SubSegmentsExpected:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of sub-segments expected, which is assigned to the
            `segmentation_descriptor.sub_segments_expected` message, as defined in
            section 10.3.3.1 of the 2022 SCTE-35 specification. Values must be between
            0 and 256, inclusive. The default value is null.
      description: 'The `segmentation_descriptor` message can contain advanced metadata
        fields, like content identifiers, to convey a wide range of information about
        the ad break. MediaTailor writes the ad metadata in the egress manifest as
        part of the `EXT-X-DATERANGE` or `EventStream` ad marker''s SCTE-35 data.


        `segmentation_descriptor` messages must be sent with the `time_signal` message
        type.


        See the `segmentation_descriptor()` table of the 2022 SCTE-35 specification
        for more information.'
    SegmentationDescriptorList:
      type: array
      items:
        $ref: '#/components/schemas/SegmentationDescriptor'
    SlateSource:
      type: object
      properties:
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location where the slate VOD source
            is stored.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The slate VOD source name. The VOD source must already exist
            in a source location before it can be used for slate.
      description: Slate VOD source configuration.
    SourceLocation:
      type: object
      properties:
        AccessConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccessConfiguration'
          description: The access configuration for the source location.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the SourceLocation.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the source location was created.
        DefaultSegmentDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
          description: The default segment delivery configuration.
        HttpConfiguration:
          allOf:
          - $ref: '#/components/schemas/HttpConfiguration'
          description: The HTTP configuration for the source location.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the source location was last
            modified.
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          description: The segment delivery configurations for the source location.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags assigned to the source location. Tags are key-value
            pairs that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
      required:
      - Arn
      - HttpConfiguration
      - SourceLocationName
      description: A source location is a container for sources. For more information
        about source locations, see [Working with source locations](https://docs.aws.amazon.com/mediatailor/latest/ug/channel-assembly-source-locations.html)
        in the _MediaTailor User Guide_.
    SpliceInsertMessage:
      type: object
      properties:
        AvailNum:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: This is written to `splice_insert.avail_num`, as defined in
            section 9.7.3.1 of the SCTE-35 specification. The default value is `0`.
            Values must be between `0` and `256`, inclusive.
        AvailsExpected:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: This is written to `splice_insert.avails_expected`, as defined
            in section 9.7.3.1 of the SCTE-35 specification. The default value is
            `0`. Values must be between `0` and `256`, inclusive.
        SpliceEventId:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: This is written to `splice_insert.splice_event_id`, as defined
            in section 9.7.3.1 of the SCTE-35 specification. The default value is
            `1`.
        UniqueProgramId:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: This is written to `splice_insert.unique_program_id`, as defined
            in section 9.7.3.1 of the SCTE-35 specification. The default value is
            `0`. Values must be between `0` and `256`, inclusive.
      description: Splice insert message configuration.
    StartChannelRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
      required:
      - ChannelName
    StartChannelResponse:
      type: object
      properties: {}
    StopChannelRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
      required:
      - ChannelName
    StopChannelResponse:
      type: object
      properties: {}
    StreamingMediaFileConditioning:
      type: string
      enum:
      - TRANSCODE
      - NONE
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) associated with the resource.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the resource. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
      required:
      - ResourceArn
      - Tags
    Tier:
      type: string
      enum:
      - BASIC
      - STANDARD
    TimeShiftConfiguration:
      type: object
      properties:
        MaxTimeDelaySeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum time delay for time-shifted viewing. The minimum
            allowed maximum time delay is 0 seconds, and the maximum allowed maximum
            time delay is 21600 seconds (6 hours).
      required:
      - MaxTimeDelaySeconds
      description: The configuration for time-shifted viewing.
    TimeSignalMessage:
      type: object
      properties:
        SegmentationDescriptors:
          allOf:
          - $ref: '#/components/schemas/SegmentationDescriptorList'
          description: The configurations for the SCTE-35 `segmentation_descriptor`
            message(s) sent with the `time_signal` message.
      description: 'The SCTE-35 `time_signal` message can be sent with one or more
        `segmentation_descriptor` messages. A `time_signal` message can be sent only
        if a single `segmentation_descriptor` message is sent.


        The `time_signal` message contains only the `splice_time` field which is constructed
        using a given presentation timestamp. When sending a `time_signal` message,
        the `splice_command_type` field in the `splice_info_section` message is set
        to 6 (0x06).


        See the `time_signal()` table of the 2022 SCTE-35 specification for more information.'
    TrafficShapingRetrievalWindow:
      type: object
      properties:
        RetrievalWindowDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The amount of time, in seconds, that MediaTailor spreads prefetch
            requests to the ADS.
      description: The configuration that tells Elemental MediaTailor how to spread
        out requests to the ad decision server (ADS). Instead of sending ADS requests
        for all sessions at the same time, MediaTailor spreads the requests across
        the amount of time specified in the retrieval window.
    TrafficShapingType:
      type: string
      enum:
      - RETRIEVAL_WINDOW
    Transition:
      type: object
      properties:
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The duration of the live program in seconds.
        RelativePosition:
          allOf:
          - $ref: '#/components/schemas/RelativePosition'
          description: The position where this program will be inserted relative to
            the `RelativePosition`.
        RelativeProgram:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the program that this program will be inserted
            next to, as defined by `RelativePosition`.
        ScheduledStartTimeMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The date and time that the program is scheduled to start, in
            epoch milliseconds.
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Defines when the program plays in the schedule. You can set
            the value to `ABSOLUTE` or `RELATIVE`.


            `ABSOLUTE` \- The program plays at a specific wall clock time. This setting
            can only be used for channels using the `LINEAR` `PlaybackMode`.


            Note the following considerations when using `ABSOLUTE` transitions:


            If the preceding program in the schedule has a duration that extends past
            the wall clock time, MediaTailor truncates the preceding program on a
            common segment boundary.


            If there are gaps in playback, MediaTailor plays the `FillerSlate` you
            configured for your linear channel.


            `RELATIVE` \- The program is inserted into the schedule either before
            or after a program that you specify via `RelativePosition`.'
      required:
      - RelativePosition
      - Type
      description: Program transition configuration.
    Type:
      type: string
      enum:
      - DASH
      - HLS
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource to untag.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/__listOf__string'
          description: The tag keys associated with the resource.
      required:
      - ResourceArn
      - TagKeys
    UpdateChannelRequest:
      type: object
      properties:
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        FillerSlate:
          allOf:
          - $ref: '#/components/schemas/SlateSource'
          description: The slate used to fill gaps between programs in the schedule.
            You must configure filler slate if your channel uses the `LINEAR` `PlaybackMode`.
            MediaTailor doesn't support filler slate for channels using the `LOOP`
            `PlaybackMode`.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/RequestOutputs'
          description: The channel's output properties.
        TimeShiftConfiguration:
          allOf:
          - $ref: '#/components/schemas/TimeShiftConfiguration'
          description: The time-shifted viewing configuration you want to associate
            to the channel.
        Audiences:
          allOf:
          - $ref: '#/components/schemas/Audiences'
          description: The list of audiences defined in channel.
      required:
      - ChannelName
      - Outputs
    UpdateChannelResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) associated with the channel.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel.
        ChannelState:
          allOf:
          - $ref: '#/components/schemas/ChannelState'
          description: Returns the state whether the channel is running or not.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp of when the channel was created.
        FillerSlate:
          allOf:
          - $ref: '#/components/schemas/SlateSource'
          description: The slate used to fill gaps between programs in the schedule.
            You must configure filler slate if your channel uses the `LINEAR` `PlaybackMode`.
            MediaTailor doesn't support filler slate for channels using the `LOOP`
            `PlaybackMode`.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the channel was last modified.
        Outputs:
          allOf:
          - $ref: '#/components/schemas/ResponseOutputs'
          description: The channel's output properties.
        PlaybackMode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The type of playback mode for this channel.


            `LINEAR` \- Programs play back-to-back only once.


            `LOOP` \- Programs play back-to-back in an endless loop. When the last
            program in the schedule plays, playback loops back to the first program
            in the schedule.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the channel. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        Tier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The tier associated with this Channel.
        TimeShiftConfiguration:
          allOf:
          - $ref: '#/components/schemas/TimeShiftConfiguration'
          description: The time-shifted viewing configuration for the channel.
        Audiences:
          allOf:
          - $ref: '#/components/schemas/Audiences'
          description: The list of audiences defined in channel.
    UpdateLiveSourceRequest:
      type: object
      properties:
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: A list of HTTP package configurations for the live source on
            this account.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the live source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with this Live Source.
      required:
      - HttpPackageConfigurations
      - LiveSourceName
      - SourceLocationName
    UpdateLiveSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) associated with this live source.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the live source was created.
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: A list of HTTP package configurations for the live source on
            this account.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the live source was last
            modified.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the live source.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with the live source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the live source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
    UpdateProgramRequest:
      type: object
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          description: The ad break configuration settings.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the channel for this Program.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the Program.
        ScheduleConfiguration:
          allOf:
          - $ref: '#/components/schemas/UpdateProgramScheduleConfiguration'
          description: The schedule configuration settings.
        AudienceMedia:
          allOf:
          - $ref: '#/components/schemas/__listOfAudienceMedia'
          description: The list of AudienceMedia defined in program.
      required:
      - ChannelName
      - ProgramName
      - ScheduleConfiguration
    UpdateProgramResponse:
      type: object
      properties:
        AdBreaks:
          allOf:
          - $ref: '#/components/schemas/__listOfAdBreak'
          description: The ad break configuration settings.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN to assign to the program.
        ChannelName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the channel for this program.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The time the program was created.
        ProgramName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to this program.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name to assign to the source location for this program.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name that's used to refer to a VOD source.
        LiveSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the LiveSource for this Program.
        ClipRange:
          allOf:
          - $ref: '#/components/schemas/ClipRange'
          description: The clip range configuration settings.
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The duration of the live program in milliseconds.
        ScheduledStartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The scheduled start time for this Program.
        AudienceMedia:
          allOf:
          - $ref: '#/components/schemas/__listOfAudienceMedia'
          description: The list of AudienceMedia defined in program.
    UpdateProgramScheduleConfiguration:
      type: object
      properties:
        Transition:
          allOf:
          - $ref: '#/components/schemas/UpdateProgramTransition'
          description: Program transition configuration.
        ClipRange:
          allOf:
          - $ref: '#/components/schemas/ClipRange'
          description: Program clip range configuration.
      description: Schedule configuration parameters.
    UpdateProgramTransition:
      type: object
      properties:
        ScheduledStartTimeMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The date and time that the program is scheduled to start, in
            epoch milliseconds.
        DurationMillis:
          allOf:
          - $ref: '#/components/schemas/__long'
          description: The duration of the live program in seconds.
      description: Program transition configuration.
    UpdateSourceLocationRequest:
      type: object
      properties:
        AccessConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccessConfiguration'
          description: Access configuration parameters. Configures the type of authentication
            used to access content from your source location.
        DefaultSegmentDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
          description: The optional configuration for the host server that serves
            segments.
        HttpConfiguration:
          allOf:
          - $ref: '#/components/schemas/HttpConfiguration'
          description: The HTTP configuration for the source location.
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          description: A list of the segment delivery configurations associated with
            this resource.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
      required:
      - HttpConfiguration
      - SourceLocationName
    UpdateSourceLocationResponse:
      type: object
      properties:
        AccessConfiguration:
          allOf:
          - $ref: '#/components/schemas/AccessConfiguration'
          description: Access configuration parameters. Configures the type of authentication
            used to access content from your source location.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) associated with the source location.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the source location was created.
        DefaultSegmentDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/DefaultSegmentDeliveryConfiguration'
          description: The optional configuration for the host server that serves
            segments.
        HttpConfiguration:
          allOf:
          - $ref: '#/components/schemas/HttpConfiguration'
          description: The HTTP configuration for the source location.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the source location was last
            modified.
        SegmentDeliveryConfigurations:
          allOf:
          - $ref: '#/components/schemas/__listOfSegmentDeliveryConfiguration'
          description: The segment delivery configurations for the source location.
            For information about MediaTailor configurations, see [Working with configurations
            in AWS Elemental MediaTailor](https://docs.aws.amazon.com/mediatailor/latest/ug/configurations.html).
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the source location. Tags are key-value
            pairs that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
    UpdateVodSourceRequest:
      type: object
      properties:
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: A list of HTTP package configurations for the VOD source on
            this account.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with this VOD Source.
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD source.
      required:
      - HttpPackageConfigurations
      - SourceLocationName
      - VodSourceName
    UpdateVodSourceResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) associated with the VOD source.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the VOD source was created.
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: A list of HTTP package configurations for the VOD source on
            this account.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the VOD source was last modified.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location associated with the VOD source.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags to assign to the VOD source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD source.
    VodSource:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN for the VOD source.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the VOD source was created.
        HttpPackageConfigurations:
          allOf:
          - $ref: '#/components/schemas/HttpPackageConfigurations'
          description: The HTTP package configurations for the VOD source.
        LastModifiedTime:
          allOf:
          - $ref: '#/components/schemas/__timestampUnix'
          description: The timestamp that indicates when the VOD source was last modified.
        SourceLocationName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the source location that the VOD source is associated
            with.
        Tags:
          allOf:
          - $ref: '#/components/schemas/__mapOf__string'
          description: The tags assigned to the VOD source. Tags are key-value pairs
            that you can associate with Amazon resources to help with organization,
            access control, and cost tracking. For more information, see [Tagging
            AWS Elemental MediaTailor Resources](https://docs.aws.amazon.com/mediatailor/latest/ug/tagging.html).
        VodSourceName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the VOD source.
      required:
      - Arn
      - HttpPackageConfigurations
      - SourceLocationName
      - VodSourceName
      description: VOD source configuration parameters.
    __adsInteractionExcludeEventTypesList:
      type: array
      items:
        $ref: '#/components/schemas/AdsInteractionExcludeEventType'
    __adsInteractionPublishOptInEventTypesList:
      type: array
      items:
        $ref: '#/components/schemas/AdsInteractionPublishOptInEventType'
    __boolean:
      type: boolean
    __integer:
      type: integer
    __integerMin1:
      type: integer
      minimum: 1
    __integerMin1Max100:
      type: integer
      minimum: 1
      maximum: 100
    __listOfAdBreak:
      type: array
      items:
        $ref: '#/components/schemas/AdBreak'
    __listOfAlert:
      type: array
      items:
        $ref: '#/components/schemas/Alert'
    __listOfAlternateMedia:
      type: array
      items:
        $ref: '#/components/schemas/AlternateMedia'
    __listOfAudienceMedia:
      type: array
      items:
        $ref: '#/components/schemas/AudienceMedia'
    __listOfAvailMatchingCriteria:
      type: array
      items:
        $ref: '#/components/schemas/AvailMatchingCriteria'
    __listOfChannel:
      type: array
      items:
        $ref: '#/components/schemas/Channel'
    __listOfLiveSource:
      type: array
      items:
        $ref: '#/components/schemas/LiveSource'
    __listOfLoggingStrategies:
      type: array
      items:
        $ref: '#/components/schemas/LoggingStrategy'
    __listOfPlaybackConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/PlaybackConfiguration'
    __listOfPrefetchSchedule:
      type: array
      items:
        $ref: '#/components/schemas/PrefetchSchedule'
    __listOfScheduleAdBreak:
      type: array
      items:
        $ref: '#/components/schemas/ScheduleAdBreak'
    __listOfScheduleEntry:
      type: array
      items:
        $ref: '#/components/schemas/ScheduleEntry'
    __listOfSegmentDeliveryConfiguration:
      type: array
      items:
        $ref: '#/components/schemas/SegmentDeliveryConfiguration'
    __listOfSourceLocation:
      type: array
      items:
        $ref: '#/components/schemas/SourceLocation'
    __listOfVodSource:
      type: array
      items:
        $ref: '#/components/schemas/VodSource'
    __listOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    __long:
      type: integer
      format: int64
    __manifestServiceExcludeEventTypesList:
      type: array
      items:
        $ref: '#/components/schemas/ManifestServiceExcludeEventType'
    __mapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    __string:
      type: string
    __timestampUnix:
      type: string
      format: date-time
    adMarkupTypes:
      type: array
      items:
        $ref: '#/components/schemas/AdMarkupType'
