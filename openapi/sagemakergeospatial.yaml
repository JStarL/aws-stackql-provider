openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: sagemaker_geospatial
  x-aws-serviceName: sagemakergeospatial
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2020-05-27'
  title: Amazon SageMaker geospatial capabilities
  description: |-
    Provides APIs for creating and managing SageMaker geospatial resources.
servers:
- description: The Amazon SageMaker geospatial capabilities regional endpoint
  url: https://sagemaker-geospatial.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /earth-observation-jobs/{Arn}:
    delete:
      operationId: DeleteEarthObservationJob
      description: |-
        Use this operation to delete an Earth Observation job.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EarthObservationJobArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetEarthObservationJob
      description: |-
        Get the details for a previously initiated Earth Observation job.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/EarthObservationJobArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /vector-enrichment-jobs/{Arn}:
    delete:
      operationId: DeleteVectorEnrichmentJob
      description: |-
        Use this operation to delete a Vector Enrichment job.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VectorEnrichmentJobArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetVectorEnrichmentJob
      description: |-
        Retrieves details of a Vector Enrichment Job for a given job Amazon Resource Name (ARN).
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/VectorEnrichmentJobArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /export-earth-observation-job:
    post:
      operationId: ExportEarthObservationJob
      description: |-
        Use this operation to export results of an Earth Observation job and optionally source images used as input to the EOJ to an Amazon S3 location.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/EarthObservationJobArn'
                ClientToken:
                  $ref: '#/components/schemas/String'
                ExecutionRoleArn:
                  $ref: '#/components/schemas/ExecutionRoleArn'
                OutputConfig:
                  $ref: '#/components/schemas/OutputConfigInput'
                ExportSourceImages:
                  $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You have exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /export-vector-enrichment-jobs:
    post:
      operationId: ExportVectorEnrichmentJob
      description: |-
        Use this operation to copy results of a Vector Enrichment job to an Amazon S3 location.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/VectorEnrichmentJobArn'
                ClientToken:
                  $ref: '#/components/schemas/String'
                ExecutionRoleArn:
                  $ref: '#/components/schemas/ExecutionRoleArn'
                OutputConfig:
                  $ref: '#/components/schemas/ExportVectorEnrichmentJobOutputConfig'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You have exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /raster-data-collection/{Arn}:
    get:
      operationId: GetRasterDataCollection
      description: |-
        Use this operation to get details of a specific raster data collection.
      parameters:
      - name: Arn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/DataCollectionArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tile/{z}/{x}/{y}:
    get:
      operationId: GetTile
      description: |-
        Gets a web mercator tile for the given Earth Observation job.
      parameters:
      - name: x
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      - name: y
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      - name: z
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Integer'
      - name: ImageAssets
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/StringListInput'
      - name: Target
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TargetOptions'
      - name: Arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/EarthObservationJobArn'
      - name: ImageMask
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      - name: OutputFormat
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: TimeRangeFilter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: PropertyFilters
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: OutputDataType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/OutputType'
      - name: ExecutionRoleArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ExecutionRoleArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-earth-observation-jobs:
    post:
      operationId: ListEarthObservationJobs
      description: |-
        Use this operation to get a list of the Earth Observation jobs associated with the calling Amazon Web Services account.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StatusEquals:
                  $ref: '#/components/schemas/EarthObservationJobStatus'
                SortOrder:
                  $ref: '#/components/schemas/SortOrder'
                SortBy:
                  $ref: '#/components/schemas/String'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /raster-data-collections:
    get:
      operationId: ListRasterDataCollections
      description: |-
        Use this operation to get raster data collections.
      parameters:
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags attached to the resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: TagResource
      description: |-
        The resource you want to tag.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        The resource you want to untag.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-vector-enrichment-jobs:
    post:
      operationId: ListVectorEnrichmentJobs
      description: |-
        Retrieves a list of vector enrichment jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                StatusEquals:
                  $ref: '#/components/schemas/String'
                SortOrder:
                  $ref: '#/components/schemas/SortOrder'
                SortBy:
                  $ref: '#/components/schemas/String'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
                MaxResults:
                  $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /search-raster-data-collection:
    post:
      operationId: SearchRasterDataCollection
      description: |-
        Allows you run image query on a specific raster data collection to get a list of the satellite imagery matching the selected filters.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/DataCollectionArn'
                RasterDataCollectionQuery:
                  $ref: '#/components/schemas/RasterDataCollectionQueryWithBandFilterInput'
                NextToken:
                  $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /earth-observation-jobs:
    post:
      operationId: StartEarthObservationJob
      description: |-
        Use this operation to create an Earth observation job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/String'
                ClientToken:
                  $ref: '#/components/schemas/String'
                KmsKeyId:
                  $ref: '#/components/schemas/KmsKey'
                InputConfig:
                  $ref: '#/components/schemas/InputConfigInput'
                JobConfig:
                  $ref: '#/components/schemas/JobConfigInput'
                ExecutionRoleArn:
                  $ref: '#/components/schemas/ExecutionRoleArn'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You have exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /vector-enrichment-jobs:
    post:
      operationId: StartVectorEnrichmentJob
      description: |-
        Creates a Vector Enrichment job for the supplied job type. Currently, there are two supported job types: reverse geocoding and map matching.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/String'
                ClientToken:
                  $ref: '#/components/schemas/String'
                KmsKeyId:
                  $ref: '#/components/schemas/KmsKey'
                InputConfig:
                  $ref: '#/components/schemas/VectorEnrichmentJobInputConfig'
                JobConfig:
                  $ref: '#/components/schemas/VectorEnrichmentJobConfig'
                ExecutionRoleArn:
                  $ref: '#/components/schemas/ExecutionRoleArn'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            You have exceeded the service quota.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /earth-observation-jobs/stop:
    post:
      operationId: StopEarthObservationJob
      description: |-
        Use this operation to stop an existing earth observation job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/EarthObservationJobArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /vector-enrichment-jobs/stop:
    post:
      operationId: StopVectorEnrichmentJob
      description: |-
        Stops the Vector Enrichment job for a given job ARN.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Arn:
                  $ref: '#/components/schemas/VectorEnrichmentJobArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            Updating or deleting a resource can cause an inconsistent state.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            The request processing has failed because of an unknown error, exception, or failure.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The request references a resource which does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      required:
      - Message
      description: You do not have sufficient access to perform this action.
    AlgorithmNameCloudRemoval:
      type: string
      enum:
      - INTERPOLATION
    AlgorithmNameGeoMosaic:
      type: string
      enum:
      - NEAR
      - BILINEAR
      - CUBIC
      - CUBICSPLINE
      - LANCZOS
      - AVERAGE
      - RMS
      - MODE
      - MAX
      - MIN
      - MED
      - Q1
      - Q3
      - SUM
    AlgorithmNameResampling:
      type: string
      enum:
      - NEAR
      - BILINEAR
      - CUBIC
      - CUBICSPLINE
      - LANCZOS
      - AVERAGE
      - RMS
      - MODE
      - MAX
      - MIN
      - MED
      - Q1
      - Q3
      - SUM
    AreaOfInterest:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/AreaOfInterestGeometry'
        description: |-
          A GeoJSON object representing the geographic extent in the coordinate space.
      description: |-
        The geographic extent of the Earth Observation job.
    AreaOfInterestGeometry:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PolygonGeometryInput'
        description: |-
          The structure representing Polygon Geometry.
      - allOf:
        - $ref: '#/components/schemas/MultiPolygonGeometryInput'
        description: |-
          The structure representing the MultiPolygon Geometry.
      description: |-
        A GeoJSON object representing the geographic extent in the coordinate space.
    Arn:
      type: string
      minLength: 1
      maxLength: 2048
    AssetValue:
      type: object
      properties:
        Href:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Link to the asset object.
      description: The structure containing the asset properties.
    AssetsMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AssetValue'
    BandMathConfigInput:
      type: object
      properties:
        PredefinedIndices:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: 'One or many of the supported predefined indices to compute.
            Allowed values: `NDVI`, `EVI2`, `MSAVI`, `NDWI`, `NDMI`, `NDSI`, and `WDRVI`.'
        CustomIndices:
          allOf:
          - $ref: '#/components/schemas/CustomIndicesInput'
          description: CustomIndices that are computed.
      description: Input structure for the BandMath operation type. Defines Predefined
        and CustomIndices to be computed using BandMath.
    BinaryFile:
      type: string
      format: byte
    CloudMaskingConfigInput:
      type: object
      properties: {}
      description: Input structure for CloudMasking operation type.
    CloudRemovalConfigInput:
      type: object
      properties:
        AlgorithmName:
          allOf:
          - $ref: '#/components/schemas/AlgorithmNameCloudRemoval'
          description: The name of the algorithm used for cloud removal.
        InterpolationValue:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The interpolation value you provide for cloud removal.
        TargetBands:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: TargetBands to be returned in the output of CloudRemoval operation.
      description: Input structure for Cloud Removal Operation type
    ComparisonOperator:
      type: string
      enum:
      - EQUALS
      - NOT_EQUALS
      - STARTS_WITH
    ConflictException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifier of the resource affected.
      required:
      - Message
      description: Updating or deleting a resource can cause an inconsistent state.
    CustomIndicesInput:
      type: object
      properties:
        Operations:
          allOf:
          - $ref: '#/components/schemas/OperationsListInput'
          description: A list of BandMath indices to compute.
      description: Input object defining the custom BandMath indices to compute.
    DataCollectionArn:
      type: string
      pattern: ^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:raster-data-collection/(public|premium|user)/[a-z0-9]{12,}$
    DataCollectionType:
      type: string
      enum:
      - PUBLIC
      - PREMIUM
      - USER
    DataCollectionsList:
      type: array
      items:
        $ref: '#/components/schemas/RasterDataCollectionMetadata'
    DeleteEarthObservationJobInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobArn'
          description: The Amazon Resource Name (ARN) of the Earth Observation job
            being deleted.
      required:
      - Arn
    DeleteEarthObservationJobOutput:
      type: object
      properties: {}
    DeleteVectorEnrichmentJobInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobArn'
          description: The Amazon Resource Name (ARN) of the Vector Enrichment job
            being deleted.
      required:
      - Arn
    DeleteVectorEnrichmentJobOutput:
      type: object
      properties: {}
    EarthObservationJobArn:
      type: string
      pattern: ^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:earth-observation-job/[a-z0-9]{12,}$
    EarthObservationJobErrorDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobErrorType'
          description: The type of error in an Earth Observation job.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the error in an Earth Observation
            job.
      description: The structure representing the errors in an EarthObservationJob.
    EarthObservationJobErrorType:
      type: string
      enum:
      - CLIENT_ERROR
      - SERVER_ERROR
    EarthObservationJobExportStatus:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
    EarthObservationJobList:
      type: array
      items:
        $ref: '#/components/schemas/ListEarthObservationJobOutputConfig'
    EarthObservationJobOutputBands:
      type: array
      items:
        $ref: '#/components/schemas/OutputBand'
    EarthObservationJobStatus:
      type: string
      enum:
      - INITIALIZING
      - IN_PROGRESS
      - STOPPING
      - COMPLETED
      - STOPPED
      - FAILED
      - DELETING
      - DELETED
    EoCloudCoverInput:
      type: object
      properties:
        LowerBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: Lower bound for EoCloudCover.
        UpperBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: Upper bound for EoCloudCover.
      required:
      - LowerBound
      - UpperBound
      description: The structure representing the EoCloudCover filter.
    ExecutionRoleArn:
      type: string
      pattern: ^arn:(aws[a-z-]*):iam::([0-9]{12}):role/[a-zA-Z0-9+=,.@_/-]+$
      minLength: 20
      maxLength: 2048
    ExportEarthObservationJobInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobArn'
          description: The input Amazon Resource Name (ARN) of the Earth Observation
            job being exported.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique token that guarantees that the call to this API is
            idempotent.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified
            for the job.
        OutputConfig:
          allOf:
          - $ref: '#/components/schemas/OutputConfigInput'
          description: An object containing information about the output file.
        ExportSourceImages:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The source images provided to the Earth Observation job being
            exported.
      required:
      - Arn
      - ExecutionRoleArn
      - OutputConfig
    ExportEarthObservationJobOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobArn'
          description: The output Amazon Resource Name (ARN) of the Earth Observation
            job being exported.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        ExportStatus:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobExportStatus'
          description: The status of the results of the Earth Observation job being
            exported.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified
            for the job.
        OutputConfig:
          allOf:
          - $ref: '#/components/schemas/OutputConfigInput'
          description: An object containing information about the output file.
        ExportSourceImages:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: The source images provided to the Earth Observation job being
            exported.
      required:
      - Arn
      - CreationTime
      - ExportStatus
      - ExecutionRoleArn
      - OutputConfig
    ExportErrorDetails:
      type: object
      properties:
        ExportResults:
          allOf:
          - $ref: '#/components/schemas/ExportErrorDetailsOutput'
          description: The structure for returning the export error details while
            exporting results of an Earth Observation job.
        ExportSourceImages:
          allOf:
          - $ref: '#/components/schemas/ExportErrorDetailsOutput'
          description: The structure for returning the export error details while
            exporting the source images of an Earth Observation job.
      description: The structure for returning the export error details in a GetEarthObservationJob.
    ExportErrorDetailsOutput:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ExportErrorType'
          description: The type of error in an export EarthObservationJob operation.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A detailed message describing the error in an export EarthObservationJob
            operation.
      description: The structure representing the errors in an export EarthObservationJob
        operation.
    ExportErrorType:
      type: string
      enum:
      - CLIENT_ERROR
      - SERVER_ERROR
    ExportS3DataInput:
      type: object
      properties:
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The URL to the Amazon S3 data input.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Key Management Service key ID for server-side encryption.
      required:
      - S3Uri
      description: The structure containing the Amazon S3 path to export the Earth
        Observation job output.
    ExportVectorEnrichmentJobInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobArn'
          description: The Amazon Resource Name (ARN) of the Vector Enrichment job.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique token that guarantees that the call to this API is
            idempotent.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM rolewith permission
            to upload to the location in OutputConfig.
        OutputConfig:
          allOf:
          - $ref: '#/components/schemas/ExportVectorEnrichmentJobOutputConfig'
          description: Output location information for exporting Vector Enrichment
            Job results.
      required:
      - Arn
      - ExecutionRoleArn
      - OutputConfig
    ExportVectorEnrichmentJobOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobArn'
          description: The Amazon Resource Name (ARN) of the Vector Enrichment job
            being exported.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role with permission
            to upload to the location in OutputConfig.
        ExportStatus:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobExportStatus'
          description: The status of the results the Vector Enrichment job being exported.
        OutputConfig:
          allOf:
          - $ref: '#/components/schemas/ExportVectorEnrichmentJobOutputConfig'
          description: Output location information for exporting Vector Enrichment
            Job results.
      required:
      - Arn
      - CreationTime
      - ExecutionRoleArn
      - ExportStatus
      - OutputConfig
    ExportVectorEnrichmentJobOutputConfig:
      type: object
      properties:
        S3Data:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobS3Data'
          description: The input structure for Amazon S3 data; representing the Amazon
            S3 location of the input data objects.
      required:
      - S3Data
      description: An object containing information about the output file.
    Filter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the filter.
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of the filter being used.
        Minimum:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The minimum value of the filter.
        Maximum:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The maximum value of the filter.
      required:
      - Name
      - Type
      description: The structure representing the filters supported by a RasterDataCollection.
    FilterList:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    GeoMosaicConfigInput:
      type: object
      properties:
        AlgorithmName:
          allOf:
          - $ref: '#/components/schemas/AlgorithmNameGeoMosaic'
          description: The name of the algorithm being used for geomosaic.
        TargetBands:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: The target bands for geomosaic.
      description: Input configuration information for the geomosaic.
    Geometry:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          description: GeoJson Geometry types like Polygon and MultiPolygon.
        Coordinates:
          allOf:
          - $ref: '#/components/schemas/LinearRings'
          description: The coordinates of the GeoJson Geometry.
      required:
      - Type
      - Coordinates
      description: The structure representing a Geometry in terms of Type and Coordinates
        as per GeoJson spec.
    GetEarthObservationJobInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobArn'
          description: The Amazon Resource Name (ARN) of the Earth Observation job.
      required:
      - Arn
    GetEarthObservationJobOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Earth Observation job.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Earth Observation job.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time of the initiated Earth Observation job.
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration of Earth Observation job, in seconds.
        Status:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobStatus'
          description: The status of a previously initiated Earth Observation job.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Key Management Service key ID for server-side encryption.
        InputConfig:
          allOf:
          - $ref: '#/components/schemas/InputConfigOutput'
          description: Input data for the Earth Observation job.
        JobConfig:
          allOf:
          - $ref: '#/components/schemas/JobConfigInput'
          description: An object containing information about the job configuration.
        OutputBands:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobOutputBands'
          description: Bands available in the output of an operation.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified
            for the job.
        ErrorDetails:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobErrorDetails'
          description: Details about the errors generated during the Earth Observation
            job.
        ExportStatus:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobExportStatus'
          description: The status of the Earth Observation job.
        ExportErrorDetails:
          allOf:
          - $ref: '#/components/schemas/ExportErrorDetails'
          description: Details about the errors generated during ExportEarthObservationJob.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Arn
      - Name
      - CreationTime
      - DurationInSeconds
      - Status
      - InputConfig
      - JobConfig
    GetRasterDataCollectionInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DataCollectionArn'
          description: The Amazon Resource Name (ARN) of the raster data collection.
      required:
      - Arn
    GetRasterDataCollectionOutput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the raster data collection.
        Arn:
          allOf:
          - $ref: '#/components/schemas/DataCollectionArn'
          description: The Amazon Resource Name (ARN) of the raster data collection.
        Type:
          allOf:
          - $ref: '#/components/schemas/DataCollectionType'
          description: The raster data collection type.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the raster data collection.
        DescriptionPageUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The URL of the description page.
        SupportedFilters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: The filters supported by the raster data collection.
        ImageSourceBands:
          allOf:
          - $ref: '#/components/schemas/ImageSourceBandList'
          description: The list of image source bands in the raster data collection.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Name
      - Arn
      - Type
      - Description
      - DescriptionPageUrl
      - SupportedFilters
      - ImageSourceBands
    GetTileInput:
      type: object
      properties:
        x:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The x coordinate of the tile input.
        y:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The y coordinate of the tile input.
        z:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The z coordinate of the tile input.
        ImageAssets:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: The particular assets or bands to tile.
        Target:
          allOf:
          - $ref: '#/components/schemas/TargetOptions'
          description: Determines what part of the Earth Observation job to tile.
            'INPUT' or 'OUTPUT' are the valid options.
        Arn:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobArn'
          description: The Amazon Resource Name (ARN) of the tile operation.
        ImageMask:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Determines whether or not to return a valid data mask.
        OutputFormat:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The data format of the output tile. The formats include .npy,
            .png and .jpg.
        TimeRangeFilter:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Time range filter applied to imagery to find the images to
            tile.
        PropertyFilters:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Property filters for the imagery to tile.
        OutputDataType:
          allOf:
          - $ref: '#/components/schemas/OutputType'
          description: The output data type of the tile operation.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specify.
      required:
      - x
      - y
      - z
      - ImageAssets
      - Target
      - Arn
    GetTileOutput:
      type: object
      properties:
        BinaryFile:
          allOf:
          - $ref: '#/components/schemas/BinaryFile'
          description: The output binary file.
    GetVectorEnrichmentJobInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobArn'
          description: The Amazon Resource Name (ARN) of the Vector Enrichment job.
      required:
      - Arn
    GetVectorEnrichmentJobOutput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Vector Enrichment job.
        Type:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobType'
          description: The type of the Vector Enrichment job being initiated.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Vector Enrichment job.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration of the Vector Enrichment job, in seconds.
        Status:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobStatus'
          description: The status of the initiated Vector Enrichment job.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Key Management Service key ID for server-side encryption.
        InputConfig:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobInputConfig'
          description: Input configuration information for the Vector Enrichment job.
        JobConfig:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobConfig'
          description: An object containing information about the job configuration.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified
            for the job.
        ErrorDetails:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobErrorDetails'
          description: Details about the errors generated during the Vector Enrichment
            job.
        ExportStatus:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobExportStatus'
          description: The export status of the Vector Enrichment job being initiated.
        ExportErrorDetails:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobExportErrorDetails'
          description: Details about the errors generated during the ExportVectorEnrichmentJob.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Arn
      - Type
      - Name
      - CreationTime
      - DurationInSeconds
      - Status
      - InputConfig
      - JobConfig
      - ExecutionRoleArn
    GroupBy:
      type: string
      enum:
      - ALL
      - YEARLY
    ImageSourceBandList:
      type: array
      items:
        type: string
    InputConfigInput:
      type: object
      properties:
        PreviousEarthObservationJobArn:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobArn'
          description: The Amazon Resource Name (ARN) of the previous Earth Observation
            job.
        RasterDataCollectionQuery:
          allOf:
          - $ref: '#/components/schemas/RasterDataCollectionQueryInput'
          description: The structure representing the RasterDataCollection Query consisting
            of the Area of Interest, RasterDataCollectionArn,TimeRange and Property
            Filters.
      description: Input configuration information.
    InputConfigOutput:
      type: object
      properties:
        PreviousEarthObservationJobArn:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobArn'
          description: The Amazon Resource Name (ARN) of the previous Earth Observation
            job.
        RasterDataCollectionQuery:
          allOf:
          - $ref: '#/components/schemas/RasterDataCollectionQueryOutput'
          description: The structure representing the RasterDataCollection Query consisting
            of the Area of Interest, RasterDataCollectionArn, RasterDataCollectionName,
            TimeRange, and Property Filters.
      description: The InputConfig for an EarthObservationJob response.
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
      required:
      - Message
      description: The request processing has failed because of an unknown error,
        exception, or failure.
    ItemSource:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique Id for the source item.
        Geometry:
          allOf:
          - $ref: '#/components/schemas/Geometry'
          description: The item Geometry in GeoJson format.
        Assets:
          allOf:
          - $ref: '#/components/schemas/AssetsMap'
          description: This is a dictionary of Asset Objects data associated with
            the Item that can be downloaded or streamed, each with a unique key.
        DateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The searchable date and time of the item, in UTC.
        Properties:
          allOf:
          - $ref: '#/components/schemas/Properties'
          description: This field contains additional properties of the item.
      required:
      - Id
      - Geometry
      - DateTime
      description: The structure representing the items in the response for SearchRasterDataCollection.
    ItemSourceList:
      type: array
      items:
        $ref: '#/components/schemas/ItemSource'
    JobConfigInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/BandMathConfigInput'
        description: |-
          An object containing information about the job configuration for BandMath.
      - allOf:
        - $ref: '#/components/schemas/ResamplingConfigInput'
        description: |-
          An object containing information about the job configuration for resampling.
      - allOf:
        - $ref: '#/components/schemas/TemporalStatisticsConfigInput'
        description: |-
          An object containing information about the job configuration for temporal statistics.
      - allOf:
        - $ref: '#/components/schemas/CloudRemovalConfigInput'
        description: |-
          An object containing information about the job configuration for cloud removal.
      - allOf:
        - $ref: '#/components/schemas/ZonalStatisticsConfigInput'
        description: |-
          An object containing information about the job configuration for zonal statistics.
      - allOf:
        - $ref: '#/components/schemas/GeoMosaicConfigInput'
        description: |-
          An object containing information about the job configuration for geomosaic.
      - allOf:
        - $ref: '#/components/schemas/StackConfigInput'
        description: |-
          An object containing information about the job configuration for a Stacking Earth Observation job.
      - allOf:
        - $ref: '#/components/schemas/CloudMaskingConfigInput'
        description: |-
          An object containing information about the job configuration for cloud masking.
      - allOf:
        - $ref: '#/components/schemas/LandCoverSegmentationConfigInput'
        description: |-
          An object containing information about the job configuration for land cover segmentation.
      description: |-
        The input structure for the JobConfig in an EarthObservationJob.
    KmsKey:
      type: string
      minLength: 0
      maxLength: 2048
    LandCoverSegmentationConfigInput:
      type: object
      properties: {}
      description: The input structure for Land Cover Operation type.
    LandsatCloudCoverLandInput:
      type: object
      properties:
        LowerBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The minimum value for Land Cloud Cover property filter. This
            will filter items having Land Cloud Cover greater than or equal to this
            value.
        UpperBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The maximum value for Land Cloud Cover property filter. This
            will filter items having Land Cloud Cover less than or equal to this value.
      required:
      - LowerBound
      - UpperBound
      description: The structure representing Land Cloud Cover property for Landsat
        data collection.
    LinearRing:
      type: array
      items:
        $ref: '#/components/schemas/Position'
    LinearRings:
      type: array
      items:
        $ref: '#/components/schemas/LinearRing'
    LinearRingsList:
      type: array
      items:
        $ref: '#/components/schemas/LinearRings'
    ListEarthObservationJobInput:
      type: object
      properties:
        StatusEquals:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobStatus'
          description: A filter that retrieves only jobs with a specific status.
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: An optional value that specifies whether you want the results
            sorted in `Ascending` or `Descending` order.
        SortBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The parameter by which to sort the results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the previous response was truncated, you receive this token.
            Use it in your next request to receive the next set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of items to return.
    ListEarthObservationJobOutput:
      type: object
      properties:
        EarthObservationJobSummaries:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobList'
          description: Contains summary information about the Earth Observation jobs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the previous response was truncated, you receive this token.
            Use it in your next request to receive the next set of results.
      required:
      - EarthObservationJobSummaries
    ListEarthObservationJobOutputConfig:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the list of the Earth Observation
            jobs.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The names of the Earth Observation jobs in the list.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration of the session, in seconds.
        Status:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobStatus'
          description: The status of the list of the Earth Observation jobs.
        OperationType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The operation type for an Earth Observation job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Arn
      - Name
      - CreationTime
      - DurationInSeconds
      - Status
      - OperationType
      description: An object containing information about the output file.
    ListRasterDataCollectionsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the previous response was truncated, you receive this token.
            Use it in your next request to receive the next set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of items to return.
    ListRasterDataCollectionsOutput:
      type: object
      properties:
        RasterDataCollectionSummaries:
          allOf:
          - $ref: '#/components/schemas/DataCollectionsList'
          description: Contains summary information about the raster data collection.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the previous response was truncated, you receive this token.
            Use it in your next request to receive the next set of results.
      required:
      - RasterDataCollectionSummaries
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource you want to
            tag.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
    ListVectorEnrichmentJobInput:
      type: object
      properties:
        StatusEquals:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A filter that retrieves only jobs with a specific status.
        SortOrder:
          allOf:
          - $ref: '#/components/schemas/SortOrder'
          description: An optional value that specifies whether you want the results
            sorted in `Ascending` or `Descending` order.
        SortBy:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The parameter by which to sort the results.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the previous response was truncated, you receive this token.
            Use it in your next request to receive the next set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of items to return.
    ListVectorEnrichmentJobOutput:
      type: object
      properties:
        VectorEnrichmentJobSummaries:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobList'
          description: Contains summary information about the Vector Enrichment jobs.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the previous response was truncated, you receive this token.
            Use it in your next request to receive the next set of results.
      required:
      - VectorEnrichmentJobSummaries
    ListVectorEnrichmentJobOutputConfig:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobArn'
          description: The Amazon Resource Name (ARN) of the list of the Vector Enrichment
            jobs.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The names of the Vector Enrichment jobs in the list.
        Type:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobType'
          description: The type of the list of Vector Enrichment jobs.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration of the session, in seconds.
        Status:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobStatus'
          description: The status of the Vector Enrichment jobs list.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Arn
      - Name
      - Type
      - CreationTime
      - DurationInSeconds
      - Status
      description: An object containing information about the output file.
    LogicalOperator:
      type: string
      enum:
      - AND
    MapMatchingConfig:
      type: object
      properties:
        IdAttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name for the data that describes the identifier representing
            a collection of GPS points belonging to an individual trace.
        YAttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Y-attribute
        XAttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the X-attribute
        TimestampAttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the timestamp attribute.
      required:
      - IdAttributeName
      - YAttributeName
      - XAttributeName
      - TimestampAttributeName
      description: The input structure for Map Matching operation type.
    MultiPolygonGeometryInput:
      type: object
      properties:
        Coordinates:
          allOf:
          - $ref: '#/components/schemas/LinearRingsList'
          description: The coordinates of the multipolygon geometry.
      required:
      - Coordinates
      description: The structure representing Polygon Geometry based on the [GeoJson
        spec](https://www.rfc-editor.org/rfc/rfc7946#section-3.1.6).
    NextToken:
      type: string
      maxLength: 8192
    Operation:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the operation.
        Equation:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Textual representation of the math operation; Equation used
            to compute the spectral index.
        OutputType:
          allOf:
          - $ref: '#/components/schemas/OutputType'
          description: The type of the operation.
      required:
      - Name
      - Equation
      description: Represents an arithmetic operation to compute spectral index.
    OperationsListInput:
      type: array
      items:
        $ref: '#/components/schemas/Operation'
    OutputBand:
      type: object
      properties:
        BandName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the band.
        OutputDataType:
          allOf:
          - $ref: '#/components/schemas/OutputType'
          description: The datatype of the output band.
      required:
      - BandName
      - OutputDataType
      description: A single EarthObservationJob output band.
    OutputConfigInput:
      type: object
      properties:
        S3Data:
          allOf:
          - $ref: '#/components/schemas/ExportS3DataInput'
          description: Path to Amazon S3 storage location for the output configuration
            file.
      required:
      - S3Data
      description: The response structure for an OutputConfig returned by an ExportEarthObservationJob.
    OutputResolutionResamplingInput:
      type: object
      properties:
        UserDefined:
          allOf:
          - $ref: '#/components/schemas/UserDefined'
          description: User Defined Resolution for the output of Resampling operation
            defined by value and unit.
      required:
      - UserDefined
      description: OutputResolution Configuration indicating the target resolution
        for the output of Resampling operation.
    OutputResolutionStackInput:
      type: object
      properties:
        Predefined:
          allOf:
          - $ref: '#/components/schemas/PredefinedResolution'
          description: A string value representing Predefined Output Resolution for
            a stacking operation. Allowed values are `HIGHEST`, `LOWEST`, and `AVERAGE`.
        UserDefined:
          allOf:
          - $ref: '#/components/schemas/UserDefined'
          description: The structure representing User Output Resolution for a Stacking
            operation defined as a value and unit.
      description: The input structure representing Output Resolution for Stacking
        Operation.
    OutputType:
      type: string
      enum:
      - INT32
      - FLOAT32
      - INT16
      - FLOAT64
      - UINT16
    PlatformInput:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The value of the platform.
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/ComparisonOperator'
          description: The ComparisonOperator to use with PlatformInput.
      required:
      - Value
      description: The input structure for specifying Platform. Platform refers to
        the unique name of the specific platform the instrument is attached to. For
        satellites it is the name of the satellite, eg. landsat-8 (Landsat-8), sentinel-2a.
    PolygonGeometryInput:
      type: object
      properties:
        Coordinates:
          allOf:
          - $ref: '#/components/schemas/LinearRings'
          description: Coordinates representing a Polygon based on the [GeoJson spec](https://www.rfc-editor.org/rfc/rfc7946#section-3.1.6).
      required:
      - Coordinates
      description: The structure representing Polygon Geometry based on the [GeoJson
        spec](https://www.rfc-editor.org/rfc/rfc7946#section-3.1.6).
    Position:
      type: array
      items:
        type: number
      x-sensitive: true
    PredefinedResolution:
      type: string
      enum:
      - HIGHEST
      - LOWEST
      - AVERAGE
    Properties:
      type: object
      properties:
        EoCloudCover:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: Estimate of cloud cover.
        ViewOffNadir:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The angle from the sensor between nadir (straight down) and
            the scene center. Measured in degrees (0-90).
        ViewSunAzimuth:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The sun azimuth angle. From the scene center point on the ground,
            this is the angle between truth north and the sun. Measured clockwise
            in degrees (0-360).
        ViewSunElevation:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The sun elevation angle. The angle from the tangent of the
            scene center point to the sun. Measured from the horizon in degrees (-90-90).
            Negative values indicate the sun is below the horizon, e.g. sun elevation
            of -10° means the data was captured during [nautical twilight](https://www.timeanddate.com/astronomy/different-types-twilight.html).
        Platform:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Platform property. Platform refers to the unique name of the
            specific platform the instrument is attached to. For satellites it is
            the name of the satellite, eg. landsat-8 (Landsat-8), sentinel-2a.
        LandsatCloudCoverLand:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: Land cloud cover for Landsat Data Collection.
      description: Properties associated with the Item.
    Property:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/EoCloudCoverInput'
        description: |-
          The structure representing EoCloudCover property filter containing a lower bound and upper bound.
      - allOf:
        - $ref: '#/components/schemas/ViewOffNadirInput'
        description: |-
          The structure representing ViewOffNadir property filter containing a lower bound and upper bound.
      - allOf:
        - $ref: '#/components/schemas/ViewSunAzimuthInput'
        description: |-
          The structure representing ViewSunAzimuth property filter containing a lower bound and upper bound.
      - allOf:
        - $ref: '#/components/schemas/ViewSunElevationInput'
        description: |-
          The structure representing ViewSunElevation property filter containing a lower bound and upper bound.
      - allOf:
        - $ref: '#/components/schemas/PlatformInput'
        description: |-
          The structure representing Platform property filter consisting of value and comparison operator.
      - allOf:
        - $ref: '#/components/schemas/LandsatCloudCoverLandInput'
        description: |-
          The structure representing Land Cloud Cover property filter for Landsat collection containing a lower bound and upper bound.
      description: |-
        Represents a single searchable property to search on.
    PropertyFilter:
      type: object
      properties:
        Property:
          allOf:
          - $ref: '#/components/schemas/Property'
          description: Represents a single property to match with when searching a
            raster data collection.
      required:
      - Property
      description: The structure representing a single PropertyFilter.
    PropertyFilters:
      type: object
      properties:
        Properties:
          allOf:
          - $ref: '#/components/schemas/PropertyFiltersList'
          description: A list of Property Filters.
        LogicalOperator:
          allOf:
          - $ref: '#/components/schemas/LogicalOperator'
          description: The Logical Operator used to combine the Property Filters.
      description: A list of PropertyFilter objects.
    PropertyFiltersList:
      type: array
      items:
        $ref: '#/components/schemas/PropertyFilter'
    RasterDataCollectionMetadata:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the raster data collection.
        Arn:
          allOf:
          - $ref: '#/components/schemas/DataCollectionArn'
          description: The Amazon Resource Name (ARN) of the raster data collection.
        Type:
          allOf:
          - $ref: '#/components/schemas/DataCollectionType'
          description: The type of raster data collection.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the raster data collection.
        DescriptionPageUrl:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description URL of the raster data collection.
        SupportedFilters:
          allOf:
          - $ref: '#/components/schemas/FilterList'
          description: The list of filters supported by the raster data collection.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Name
      - Arn
      - Type
      - Description
      - SupportedFilters
      description: Response object containing details for a specific RasterDataCollection.
    RasterDataCollectionQueryInput:
      type: object
      properties:
        RasterDataCollectionArn:
          allOf:
          - $ref: '#/components/schemas/DataCollectionArn'
          description: The Amazon Resource Name (ARN) of the raster data collection.
        TimeRangeFilter:
          allOf:
          - $ref: '#/components/schemas/TimeRangeFilterInput'
          description: The TimeRange Filter used in the RasterDataCollection Query.
        AreaOfInterest:
          allOf:
          - $ref: '#/components/schemas/AreaOfInterest'
          description: The area of interest being queried for the raster data collection.
        PropertyFilters:
          allOf:
          - $ref: '#/components/schemas/PropertyFilters'
          description: The list of Property filters used in the Raster Data Collection
            Query.
      required:
      - RasterDataCollectionArn
      - TimeRangeFilter
      description: The input structure for Raster Data Collection Query containing
        the Area of Interest, TimeRange Filters, and Property Filters.
    RasterDataCollectionQueryOutput:
      type: object
      properties:
        RasterDataCollectionArn:
          allOf:
          - $ref: '#/components/schemas/DataCollectionArn'
          description: The ARN of the Raster Data Collection against which the search
            is done.
        RasterDataCollectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the raster data collection.
        TimeRangeFilter:
          allOf:
          - $ref: '#/components/schemas/TimeRangeFilterOutput'
          description: The TimeRange filter used in the search.
        AreaOfInterest:
          allOf:
          - $ref: '#/components/schemas/AreaOfInterest'
          description: The Area of Interest used in the search.
        PropertyFilters:
          allOf:
          - $ref: '#/components/schemas/PropertyFilters'
          description: Property filters used in the search.
      required:
      - RasterDataCollectionArn
      - RasterDataCollectionName
      - TimeRangeFilter
      description: The output structure contains the Raster Data Collection Query
        input along with some additional metadata.
    RasterDataCollectionQueryWithBandFilterInput:
      type: object
      properties:
        TimeRangeFilter:
          allOf:
          - $ref: '#/components/schemas/TimeRangeFilterInput'
          description: The TimeRange Filter used in the search query.
        AreaOfInterest:
          allOf:
          - $ref: '#/components/schemas/AreaOfInterest'
          description: The Area of interest to be used in the search query.
        PropertyFilters:
          allOf:
          - $ref: '#/components/schemas/PropertyFilters'
          description: The Property Filters used in the search query.
        BandFilter:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: The list of Bands to be displayed in the result for each item.
      required:
      - TimeRangeFilter
      description: This is a RasterDataCollectionQueryInput containing AreaOfInterest,
        Time Range filter and Property filters.
    ResamplingConfigInput:
      type: object
      properties:
        OutputResolution:
          allOf:
          - $ref: '#/components/schemas/OutputResolutionResamplingInput'
          description: The structure representing output resolution (in target georeferenced
            units) of the result of resampling operation.
        AlgorithmName:
          allOf:
          - $ref: '#/components/schemas/AlgorithmNameResampling'
          description: The name of the algorithm used for resampling.
        TargetBands:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: Bands used in the operation. If no target bands are specified,
            it uses all bands available in the input.
      required:
      - OutputResolution
      description: The structure representing input for resampling operation.
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifier of the resource that was not found.
      required:
      - Message
      description: The request references a resource which does not exist.
    ReverseGeocodingConfig:
      type: object
      properties:
        YAttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name for the data that describes y-axis coordinate,
            eg. latitude of a point.
        XAttributeName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The field name for the data that describes x-axis coordinate,
            eg. longitude of a point.
      required:
      - YAttributeName
      - XAttributeName
      description: The input structure for Reverse Geocoding operation type.
    S3Uri:
      type: string
      pattern: ^s3://([^/]+)/?(.*)$
    SearchRasterDataCollectionInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DataCollectionArn'
          description: The Amazon Resource Name (ARN) of the raster data collection.
        RasterDataCollectionQuery:
          allOf:
          - $ref: '#/components/schemas/RasterDataCollectionQueryWithBandFilterInput'
          description: RasterDataCollectionQuery consisting of [AreaOfInterest(AOI)](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_geospatial_AreaOfInterest.html),
            [PropertyFilters](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_geospatial_PropertyFilter.html)
            and [TimeRangeFilterInput](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_geospatial_TimeRangeFilterInput.html)
            used in [SearchRasterDataCollection](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_geospatial_SearchRasterDataCollection.html).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the previous response was truncated, you receive this token.
            Use it in your next request to receive the next set of results.
      required:
      - Arn
      - RasterDataCollectionQuery
    SearchRasterDataCollectionOutput:
      type: object
      properties:
        ApproximateResultCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Approximate number of results in the response.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: If the previous response was truncated, you receive this token.
            Use it in your next request to receive the next set of results.
        Items:
          allOf:
          - $ref: '#/components/schemas/ItemSourceList'
          description: List of items matching the Raster DataCollectionQuery.
      required:
      - ApproximateResultCount
    ServiceQuotaExceededException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifier of the resource affected.
      required:
      - Message
      description: You have exceeded the service quota.
    SortOrder:
      type: string
      enum:
      - ASCENDING
      - DESCENDING
    StackConfigInput:
      type: object
      properties:
        OutputResolution:
          allOf:
          - $ref: '#/components/schemas/OutputResolutionStackInput'
          description: The structure representing output resolution (in target georeferenced
            units) of the result of stacking operation.
        TargetBands:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: A list of bands to be stacked in the specified order. When
            the parameter is not provided, all the available bands in the data collection
            are stacked in the alphabetical order of their asset names.
      description: The input structure for Stacking Operation.
    StartEarthObservationJobInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Earth Observation job.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique token that guarantees that the call to this API is
            idempotent.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Key Management Service key ID for server-side encryption.
        InputConfig:
          allOf:
          - $ref: '#/components/schemas/InputConfigInput'
          description: Input configuration information for the Earth Observation job.
        JobConfig:
          allOf:
          - $ref: '#/components/schemas/JobConfigInput'
          description: An object containing information about the job configuration.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified
            for the job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Name
      - InputConfig
      - JobConfig
      - ExecutionRoleArn
    StartEarthObservationJobOutput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Earth Observation job.
        Arn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the Earth Observation job.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration of the session, in seconds.
        Status:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobStatus'
          description: The status of the Earth Observation job.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Key Management Service key ID for server-side encryption.
        InputConfig:
          allOf:
          - $ref: '#/components/schemas/InputConfigOutput'
          description: Input configuration information for the Earth Observation job.
        JobConfig:
          allOf:
          - $ref: '#/components/schemas/JobConfigInput'
          description: An object containing information about the job configuration.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified
            for the job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Name
      - Arn
      - CreationTime
      - DurationInSeconds
      - Status
      - JobConfig
      - ExecutionRoleArn
    StartVectorEnrichmentJobInput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Vector Enrichment job.
        ClientToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A unique token that guarantees that the call to this API is
            idempotent.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Key Management Service key ID for server-side encryption.
        InputConfig:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobInputConfig'
          description: Input configuration information for the Vector Enrichment job.
        JobConfig:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobConfig'
          description: An object containing information about the job configuration.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified
            for the job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Name
      - InputConfig
      - JobConfig
      - ExecutionRoleArn
    StartVectorEnrichmentJobOutput:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the Vector Enrichment job.
        Arn:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobArn'
          description: The Amazon Resource Name (ARN) of the Vector Enrichment job.
        Type:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobType'
          description: The type of the Vector Enrichment job.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The creation time.
        DurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The duration of the Vector Enrichment job, in seconds.
        Status:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobStatus'
          description: The status of the Vector Enrichment job being started.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Key Management Service key ID for server-side encryption.
        InputConfig:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobInputConfig'
          description: Input configuration information for starting the Vector Enrichment
            job.
        JobConfig:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobConfig'
          description: An object containing information about the job configuration.
        ExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/ExecutionRoleArn'
          description: The Amazon Resource Name (ARN) of the IAM role that you specified
            for the job.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - Name
      - Arn
      - Type
      - CreationTime
      - DurationInSeconds
      - Status
      - InputConfig
      - JobConfig
      - ExecutionRoleArn
    StopEarthObservationJobInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/EarthObservationJobArn'
          description: The Amazon Resource Name (ARN) of the Earth Observation job
            being stopped.
      required:
      - Arn
    StopEarthObservationJobOutput:
      type: object
      properties: {}
    StopVectorEnrichmentJobInput:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobArn'
          description: The Amazon Resource Name (ARN) of the Vector Enrichment job.
      required:
      - Arn
    StopVectorEnrichmentJobOutput:
      type: object
      properties: {}
    StringListInput:
      type: array
      items:
        type: string
    TagKeyList:
      type: array
      items:
        type: string
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource you want to
            tag.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Each tag consists of a key and a value.
      required:
      - ResourceArn
      - Tags
    TagResourceResponse:
      type: object
      properties: {}
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    TargetOptions:
      type: string
      enum:
      - INPUT
      - OUTPUT
    TemporalStatistics:
      type: string
      enum:
      - MEAN
      - MEDIAN
      - STANDARD_DEVIATION
    TemporalStatisticsConfigInput:
      type: object
      properties:
        GroupBy:
          allOf:
          - $ref: '#/components/schemas/GroupBy'
          description: The input for the temporal statistics grouping by time frequency
            option.
        Statistics:
          allOf:
          - $ref: '#/components/schemas/TemporalStatisticsListInput'
          description: The list of the statistics method options.
        TargetBands:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: The list of target band names for the temporal statistic to
            calculate.
      required:
      - Statistics
      description: The structure representing the configuration for Temporal Statistics
        operation.
    TemporalStatisticsListInput:
      type: array
      items:
        $ref: '#/components/schemas/TemporalStatistics'
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
      required:
      - Message
      description: The request was denied due to request throttling.
    TimeRangeFilterInput:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The start time for the time-range filter.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The end time for the time-range filter.
      required:
      - StartTime
      - EndTime
      description: The input for the time-range filter.
    TimeRangeFilterOutput:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The starting time for the time range filter.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The ending time for the time range filter.
      required:
      - StartTime
      - EndTime
      description: The output structure of the time range filter.
    Unit:
      type: string
      enum:
      - METERS
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the resource you want to
            untag.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: Keys of the tags you want to remove.
      required:
      - ResourceArn
      - TagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UserDefined:
      type: object
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The value for output resolution of the result.
        Unit:
          allOf:
          - $ref: '#/components/schemas/Unit'
          description: The units for output resolution of the result.
      required:
      - Value
      - Unit
      description: The output resolution (in target georeferenced units) of the result
        of the operation
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
        ResourceId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: ''
      required:
      - Message
      description: The input fails to satisfy the constraints specified by an Amazon
        Web Services service.
    VectorEnrichmentJobArn:
      type: string
      pattern: ^arn:aws[a-z-]{0,12}:sagemaker-geospatial:[a-z0-9-]{1,25}:[0-9]{12}:vector-enrichment-job/[a-z0-9]{12,}$
    VectorEnrichmentJobConfig:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ReverseGeocodingConfig'
        description: |-
          The input structure for Reverse Geocoding operation type.
      - allOf:
        - $ref: '#/components/schemas/MapMatchingConfig'
        description: |-
          The input structure for Map Matching operation type.
      description: |-
        It contains configs such as ReverseGeocodingConfig and MapMatchingConfig.
    VectorEnrichmentJobDataSourceConfigInput:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/VectorEnrichmentJobS3Data'
        description: |-
          The input structure for the Amazon S3 data that represents the Amazon S3 location of the input data objects.
      description: |-
        The input structure for the data source that represents the storage type of the input data objects.
    VectorEnrichmentJobDocumentType:
      type: string
      enum:
      - CSV
    VectorEnrichmentJobErrorDetails:
      type: object
      properties:
        ErrorType:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobErrorType'
          description: The type of error generated during the Vector Enrichment job.
        ErrorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A message that you define and then is processed and rendered
            by the Vector Enrichment job when the error occurs.
      description: VectorEnrichmentJob error details in response from GetVectorEnrichmentJob.
    VectorEnrichmentJobErrorType:
      type: string
      enum:
      - CLIENT_ERROR
      - SERVER_ERROR
    VectorEnrichmentJobExportErrorDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobExportErrorType'
          description: The output error details for an Export operation on a Vector
            Enrichment job.
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The message providing details about the errors generated during
            the Vector Enrichment job.
      description: VectorEnrichmentJob export error details in response from GetVectorEnrichmentJob.
    VectorEnrichmentJobExportErrorType:
      type: string
      enum:
      - CLIENT_ERROR
      - SERVER_ERROR
    VectorEnrichmentJobExportStatus:
      type: string
      enum:
      - IN_PROGRESS
      - SUCCEEDED
      - FAILED
    VectorEnrichmentJobInputConfig:
      type: object
      properties:
        DocumentType:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobDocumentType'
          description: The input structure that defines the data source file type.
        DataSourceConfig:
          allOf:
          - $ref: '#/components/schemas/VectorEnrichmentJobDataSourceConfigInput'
          description: The input structure for the data source that represents the
            storage type of the input data objects.
      required:
      - DocumentType
      - DataSourceConfig
      description: The input structure for the InputConfig in a VectorEnrichmentJob.
    VectorEnrichmentJobList:
      type: array
      items:
        $ref: '#/components/schemas/ListVectorEnrichmentJobOutputConfig'
    VectorEnrichmentJobS3Data:
      type: object
      properties:
        S3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The URL to the Amazon S3 data for the Vector Enrichment job.
        KmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: The Key Management Service key ID for server-side encryption.
      required:
      - S3Uri
      description: The Amazon S3 data for the Vector Enrichment job.
    VectorEnrichmentJobStatus:
      type: string
      enum:
      - INITIALIZING
      - IN_PROGRESS
      - STOPPING
      - STOPPED
      - COMPLETED
      - FAILED
      - DELETING
      - DELETED
    VectorEnrichmentJobType:
      type: string
      enum:
      - REVERSE_GEOCODING
      - MAP_MATCHING
    ViewOffNadirInput:
      type: object
      properties:
        LowerBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The minimum value for ViewOffNadir property filter. This filters
            items having ViewOffNadir greater than or equal to this value.
        UpperBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The maximum value for ViewOffNadir property filter. This filters
            items having ViewOffNadir lesser than or equal to this value.
      required:
      - LowerBound
      - UpperBound
      description: The input structure for specifying ViewOffNadir property filter.
        ViewOffNadir refers to the angle from the sensor between nadir (straight down)
        and the scene center. Measured in degrees (0-90).
    ViewSunAzimuthInput:
      type: object
      properties:
        LowerBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The minimum value for ViewSunAzimuth property filter. This
            filters items having ViewSunAzimuth greater than or equal to this value.
        UpperBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The maximum value for ViewSunAzimuth property filter. This
            filters items having ViewSunAzimuth lesser than or equal to this value.
      required:
      - LowerBound
      - UpperBound
      description: The input structure for specifying ViewSunAzimuth property filter.
        ViewSunAzimuth refers to the Sun azimuth angle. From the scene center point
        on the ground, this is the angle between truth north and the sun. Measured
        clockwise in degrees (0-360).
    ViewSunElevationInput:
      type: object
      properties:
        LowerBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The lower bound to view the sun elevation.
        UpperBound:
          allOf:
          - $ref: '#/components/schemas/Float'
          description: The upper bound to view the sun elevation.
      required:
      - LowerBound
      - UpperBound
      description: The input structure for specifying ViewSunElevation angle property
        filter.
    ZonalStatistics:
      type: string
      enum:
      - MEAN
      - MEDIAN
      - STANDARD_DEVIATION
      - MAX
      - MIN
      - SUM
    ZonalStatisticsConfigInput:
      type: object
      properties:
        ZoneS3Path:
          allOf:
          - $ref: '#/components/schemas/S3Uri'
          description: The Amazon S3 path pointing to the GeoJSON containing the polygonal
            zones.
        Statistics:
          allOf:
          - $ref: '#/components/schemas/ZonalStatisticsListInput'
          description: List of zonal statistics to compute.
        TargetBands:
          allOf:
          - $ref: '#/components/schemas/StringListInput'
          description: Bands used in the operation. If no target bands are specified,
            it uses all bands available input.
        ZoneS3PathKmsKeyId:
          allOf:
          - $ref: '#/components/schemas/KmsKey'
          description: "The Amazon Resource Name (ARN) or an ID of a Amazon Web Services\
            \ Key Management Service (Amazon Web Services KMS) key that Amazon SageMaker\
            \ uses to decrypt your output artifacts with Amazon S3 server-side encryption.\
            \ The SageMaker execution role must have `kms:GenerateDataKey` permission.\n\
            \nThe `KmsKeyId` can be any of the following formats:\n\n  * // KMS Key\
            \ ID\n\n`\"1234abcd-12ab-34cd-56ef-1234567890ab\"`\n\n  * // Amazon Resource\
            \ Name (ARN) of a KMS Key\n\n`\"arn:aws:kms:<region>:<account>:key/<key-id-12ab-34cd-56ef-1234567890ab>\"\
            `\n\nFor more information about key identifiers, see [Key identifiers\
            \ (KeyID)](https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html#key-id-key-id)\
            \ in the Amazon Web Services Key Management Service (Amazon Web Services\
            \ KMS) documentation."
      required:
      - ZoneS3Path
      - Statistics
      description: The structure representing input configuration of ZonalStatistics
        operation.
    ZonalStatisticsListInput:
      type: array
      items:
        $ref: '#/components/schemas/ZonalStatistics'
