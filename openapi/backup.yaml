openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: backup
  x-aws-serviceName: backup
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-11-15'
  title: AWS Backup
  description: |-
    Backup

    Backup is a unified backup service designed to protect Amazon Web Services services and their associated data. Backup simplifies the creation, migration, restoration, and deletion of backups, while also providing reporting and auditing.
servers:
- description: The AWS Backup regional endpoint
  url: https://backup.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /legal-holds/{LegalHoldId}:
    delete:
      operationId: CancelLegalHold
      description: |-
        Removes the specified legal hold on a recovery point. This action can only be performed by a user with sufficient permissions.
      parameters:
      - name: LegalHoldId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: cancelDescription
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: retainRecordInDays
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Long'
      responses:
        '201': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: GetLegalHold
      description: |-
        This action returns details for a specified legal hold. The details are the body of a legal hold in JSON format, in addition to metadata.
      parameters:
      - name: LegalHoldId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/plans:
    put:
      operationId: CreateBackupPlan
      description: |-
        Creates a backup plan using a backup plan name and backup rules. A backup plan is a document that contains information that Backup uses to schedule tasks that create recovery points for resources.

        If you call `CreateBackupPlan` with a plan that already exists, you receive an `AlreadyExistsException` exception.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupPlan:
                  $ref: '#/components/schemas/BackupPlanInput'
                BackupPlanTags:
                  $ref: '#/components/schemas/Tags'
                CreatorRequestId:
                  $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListBackupPlans
      description: |-
        Lists the active backup plans for the account.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: includeDeleted
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/plans/{BackupPlanId}/selections:
    put:
      operationId: CreateBackupSelection
      description: |-
        Creates a JSON document that specifies a set of resources to assign to a backup plan. For examples, see [Assigning resources programmatically](https://docs.aws.amazon.com/aws-backup/latest/devguide/assigning-resources.html#assigning-resources-json).
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupSelection:
                  $ref: '#/components/schemas/BackupSelection'
                CreatorRequestId:
                  $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListBackupSelections
      description: |-
        Returns an array containing metadata of the resources associated with the target backup plan.
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}:
    put:
      operationId: CreateBackupVault
      description: |-
        Creates a logical container where backups are stored. A `CreateBackupVault` request includes a name, optionally one or more resource tags, an encryption key, and a request ID.

        Do not include sensitive data, such as passport numbers, in the name of a backup vault.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupVaultTags:
                  $ref: '#/components/schemas/Tags'
                EncryptionKeyArn:
                  $ref: '#/components/schemas/ARN'
                CreatorRequestId:
                  $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    delete:
      operationId: DeleteBackupVault
      description: |-
        Deletes the backup vault identified by its name. A vault can be deleted only if it is empty.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: DescribeBackupVault
      description: |-
        Returns metadata about a backup vault specified by its name.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: backupVaultAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/frameworks:
    post:
      operationId: CreateFramework
      description: |-
        Creates a framework with one or more controls. A framework is a collection of controls that you can use to evaluate your backup practices. By using pre-built customizable controls to define your policies, you can evaluate whether your backup practices comply with your policies and which resources are not yet in compliance.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FrameworkName:
                  $ref: '#/components/schemas/FrameworkName'
                FrameworkDescription:
                  $ref: '#/components/schemas/FrameworkDescription'
                FrameworkControls:
                  $ref: '#/components/schemas/FrameworkControls'
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
                FrameworkTags:
                  $ref: '#/components/schemas/stringMap'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListFrameworks
      description: |-
        Returns a list of all frameworks for an Amazon Web Services account and Amazon Web Services Region.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxFrameworkInputs'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /legal-holds:
    post:
      operationId: CreateLegalHold
      description: |-
        Creates a legal hold on a recovery point (backup). A legal hold is a restraint on altering or deleting a backup until an authorized user cancels the legal hold. Any actions to delete or disassociate a recovery point will fail with an error if one or more active legal holds are on the recovery point.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Title:
                  $ref: '#/components/schemas/string'
                Description:
                  $ref: '#/components/schemas/string'
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
                RecoveryPointSelection:
                  $ref: '#/components/schemas/RecoveryPointSelection'
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListLegalHolds
      description: |-
        This action returns metadata about active and previous legal holds.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /logically-air-gapped-backup-vaults/{BackupVaultName}:
    put:
      operationId: CreateLogicallyAirGappedBackupVault
      description: |-
        Creates a logical container to where backups may be copied.

        This request includes a name, the Region, the maximum number of retention days, the minimum number of retention days, and optionally can include tags and a creator request ID.

        Do not include sensitive data, such as passport numbers, in the name of a backup vault.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupVaultTags:
                  $ref: '#/components/schemas/Tags'
                CreatorRequestId:
                  $ref: '#/components/schemas/string'
                MinRetentionDays:
                  $ref: '#/components/schemas/Long'
                MaxRetentionDays:
                  $ref: '#/components/schemas/Long'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/report-plans:
    post:
      operationId: CreateReportPlan
      description: |-
        Creates a report plan. A report plan is a document that contains information about the contents of the report and where Backup will deliver it.

        If you call `CreateReportPlan` with a plan that already exists, you receive an `AlreadyExistsException` exception.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReportPlanName:
                  $ref: '#/components/schemas/ReportPlanName'
                ReportPlanDescription:
                  $ref: '#/components/schemas/ReportPlanDescription'
                ReportDeliveryChannel:
                  $ref: '#/components/schemas/ReportDeliveryChannel'
                ReportSetting:
                  $ref: '#/components/schemas/ReportSetting'
                ReportPlanTags:
                  $ref: '#/components/schemas/stringMap'
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListReportPlans
      description: |-
        Returns a list of your report plans. For detailed information about a single report plan, use `DescribeReportPlan`.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-testing/plans:
    put:
      operationId: CreateRestoreTestingPlan
      description: |-
        Creates a restore testing plan.

        The first of two steps to create a restore testing plan. After this request is successful, finish the procedure using CreateRestoreTestingSelection.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CreatorRequestId:
                  $ref: '#/components/schemas/String'
                RestoreTestingPlan:
                  $ref: '#/components/schemas/RestoreTestingPlanForCreate'
                Tags:
                  $ref: '#/components/schemas/SensitiveStringMap'
      responses:
        '201': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '409':
          description: |-
            Backup can't perform the action that you requested until it finishes performing a previous action. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
    get:
      operationId: ListRestoreTestingPlans
      description: |-
        Returns a list of restore testing plans.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListRestoreTestingPlansInputMaxResultsInteger'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-testing/plans/{RestoreTestingPlanName}/selections:
    put:
      operationId: CreateRestoreTestingSelection
      description: |-
        This request can be sent after CreateRestoreTestingPlan request returns successfully. This is the second part of creating a resource testing plan, and it must be completed sequentially.

        This consists of `RestoreTestingSelectionName`, `ProtectedResourceType`, and one of the following:

          * `ProtectedResourceArns`

          * `ProtectedResourceConditions`

        Each protected resource type can have one single value.

        A restore testing selection can include a wildcard value ("*") for `ProtectedResourceArns` along with `ProtectedResourceConditions`. Alternatively, you can include up to 30 specific protected resource ARNs in `ProtectedResourceArns`.

        Cannot select by both protected resource types AND specific ARNs. Request will fail if both are included.
      parameters:
      - name: RestoreTestingPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CreatorRequestId:
                  $ref: '#/components/schemas/String'
                RestoreTestingSelection:
                  $ref: '#/components/schemas/RestoreTestingSelectionForCreate'
      responses:
        '201': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: ListRestoreTestingSelections
      description: |-
        Returns a list of restore testing selections. Can be filtered by `MaxResults` and `RestoreTestingPlanName`.
      parameters:
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ListRestoreTestingSelectionsInputMaxResultsInteger'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: RestoreTestingPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/plans/{BackupPlanId}:
    delete:
      operationId: DeleteBackupPlan
      description: |-
        Deletes a backup plan. A backup plan can only be deleted after all associated selections of resources have been deleted. Deleting a backup plan deletes the current version of a backup plan. Previous versions, if any, will still exist.
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: GetBackupPlan
      description: |-
        Returns `BackupPlan` details for the specified `BackupPlanId`. The details are the body of a backup plan in JSON format, in addition to plan metadata.
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: versionId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: UpdateBackupPlan
      description: |-
        Updates the specified backup plan. The new version is uniquely identified by its ID.
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupPlan:
                  $ref: '#/components/schemas/BackupPlanInput'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/plans/{BackupPlanId}/selections/{SelectionId}:
    delete:
      operationId: DeleteBackupSelection
      description: |-
        Deletes the resource selection associated with a backup plan that is specified by the `SelectionId`.
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: SelectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: GetBackupSelection
      description: |-
        Returns selection metadata and a document in JSON format that specifies a list of resources that are associated with a backup plan.
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: SelectionId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/access-policy:
    delete:
      operationId: DeleteBackupVaultAccessPolicy
      description: |-
        Deletes the policy document that manages permissions on a backup vault.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: GetBackupVaultAccessPolicy
      description: |-
        Returns the access policy document that is associated with the named backup vault.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: PutBackupVaultAccessPolicy
      description: |-
        Sets a resource-based policy that is used to manage access permissions on the target backup vault. Requires a backup vault name and an access policy document in JSON format.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Policy:
                  $ref: '#/components/schemas/IAMPolicy'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/vault-lock:
    delete:
      operationId: DeleteBackupVaultLockConfiguration
      description: |-
        Deletes Backup Vault Lock from a backup vault specified by a backup vault name.

        If the Vault Lock configuration is immutable, then you cannot delete Vault Lock using API operations, and you will receive an `InvalidRequestException` if you attempt to do so. For more information, see [Vault Lock](https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html) in the _Backup Developer Guide_.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: PutBackupVaultLockConfiguration
      description: |-
        Applies Backup Vault Lock to a backup vault, preventing attempts to delete any recovery point stored in or created in a backup vault. Vault Lock also prevents attempts to update the lifecycle policy that controls the retention period of any recovery point currently stored in a backup vault. If specified, Vault Lock enforces a minimum and maximum retention period for future backup and copy jobs that target a backup vault.

        Backup Vault Lock has been assessed by Cohasset Associates for use in environments that are subject to SEC 17a-4, CFTC, and FINRA regulations. For more information about how Backup Vault Lock relates to these regulations, see the [Cohasset Associates Compliance Assessment.](https://docs.aws.amazon.com/aws-backup/latest/devguide/samples/cohassetreport.zip)

        For more information, see [Backup Vault Lock](https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html).
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MinRetentionDays:
                  $ref: '#/components/schemas/Long'
                MaxRetentionDays:
                  $ref: '#/components/schemas/Long'
                ChangeableForDays:
                  $ref: '#/components/schemas/Long'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/notification-configuration:
    delete:
      operationId: DeleteBackupVaultNotifications
      description: |-
        Deletes event notifications for the specified backup vault.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: GetBackupVaultNotifications
      description: |-
        Returns event notifications for the specified backup vault.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: PutBackupVaultNotifications
      description: |-
        Turns on notifications on a backup vault for the specified topic and events.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SNSTopicArn:
                  $ref: '#/components/schemas/ARN'
                BackupVaultEvents:
                  $ref: '#/components/schemas/BackupVaultEvents'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/frameworks/{FrameworkName}:
    delete:
      operationId: DeleteFramework
      description: |-
        Deletes the framework specified by a framework name.
      parameters:
      - name: FrameworkName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FrameworkName'
      responses:
        '200': {}
        '409':
          description: |-
            Backup can't perform the action that you requested until it finishes performing a previous action. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: DescribeFramework
      description: |-
        Returns the framework details for the specified `FrameworkName`.
      parameters:
      - name: FrameworkName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FrameworkName'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: UpdateFramework
      description: |-
        Updates the specified framework.
      parameters:
      - name: FrameworkName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/FrameworkName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                FrameworkDescription:
                  $ref: '#/components/schemas/FrameworkDescription'
                FrameworkControls:
                  $ref: '#/components/schemas/FrameworkControls'
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '409':
          description: |-
            Backup can't perform the action that you requested until it finishes performing a previous action. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
  /backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}:
    delete:
      operationId: DeleteRecoveryPoint
      description: |-
        Deletes the recovery point specified by a recovery point ID.

        If the recovery point ID belongs to a continuous backup, calling this endpoint deletes the existing continuous backup and stops future continuous backup.

        When an IAM role's permissions are insufficient to call this API, the service sends back an HTTP 200 response with an empty HTTP body, but the recovery point is not deleted. Instead, it enters an `EXPIRED` state.

        `EXPIRED` recovery points can be deleted with this API once the IAM role has the `iam:CreateServiceLinkedRole` action. To learn more about adding this role, see [ Troubleshooting manual deletions](https://docs.aws.amazon.com/aws-backup/latest/devguide/deleting-backups.html#deleting-backups-troubleshooting).

        If the user or role is deleted or the permission within the role is removed, the deletion will not be successful and will enter an `EXPIRED` state.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: RecoveryPointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: DescribeRecoveryPoint
      description: |-
        Returns metadata associated with a recovery point, including ID, status, encryption, and lifecycle.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: RecoveryPointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: backupVaultAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: UpdateRecoveryPointLifecycle
      description: |-
        Sets the transition lifecycle of a recovery point.

        The lifecycle defines when a protected resource is transitioned to cold storage and when it expires. Backup transitions and expires backups automatically according to the lifecycle that you define.

        Resource types that can transition to cold storage are listed in the [Feature availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource) table. Backup ignores this expression for other resource types.

        Backups transitioned to cold storage must be stored in cold storage for a minimum of 90 days. Therefore, the “retention” setting must be 90 days greater than the “transition to cold after days” setting. The “transition to cold after days” setting cannot be changed after a backup has been transitioned to cold.

        If your lifecycle currently uses the parameters `DeleteAfterDays` and `MoveToColdStorageAfterDays`, include these parameters and their values when you call this operation. Not including them may result in your plan updating with null values.

        This operation does not support continuous backups.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: RecoveryPointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Lifecycle:
                  $ref: '#/components/schemas/Lifecycle'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/report-plans/{ReportPlanName}:
    delete:
      operationId: DeleteReportPlan
      description: |-
        Deletes the report plan specified by a report plan name.
      parameters:
      - name: ReportPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReportPlanName'
      responses:
        '200': {}
        '409':
          description: |-
            Backup can't perform the action that you requested until it finishes performing a previous action. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: DescribeReportPlan
      description: |-
        Returns a list of all report plans for an Amazon Web Services account and Amazon Web Services Region.
      parameters:
      - name: ReportPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReportPlanName'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: UpdateReportPlan
      description: |-
        Updates the specified report plan.
      parameters:
      - name: ReportPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReportPlanName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ReportPlanDescription:
                  $ref: '#/components/schemas/ReportPlanDescription'
                ReportDeliveryChannel:
                  $ref: '#/components/schemas/ReportDeliveryChannel'
                ReportSetting:
                  $ref: '#/components/schemas/ReportSetting'
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '409':
          description: |-
            Backup can't perform the action that you requested until it finishes performing a previous action. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-testing/plans/{RestoreTestingPlanName}:
    delete:
      operationId: DeleteRestoreTestingPlan
      description: |-
        This request deletes the specified restore testing plan.

        Deletion can only successfully occur if all associated restore testing selections are deleted first.
      parameters:
      - name: RestoreTestingPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '204': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: GetRestoreTestingPlan
      description: |-
        Returns `RestoreTestingPlan` details for the specified `RestoreTestingPlanName`. The details are the body of a restore testing plan in JSON format, in addition to plan metadata.
      parameters:
      - name: RestoreTestingPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: UpdateRestoreTestingPlan
      description: |-
        This request will send changes to your specified restore testing plan. `RestoreTestingPlanName` cannot be updated after it is created.

        `RecoveryPointSelection` can contain:

          * `Algorithm`

          * `ExcludeVaults`

          * `IncludeVaults`

          * `RecoveryPointTypes`

          * `SelectionWindowDays`
      parameters:
      - name: RestoreTestingPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RestoreTestingPlan:
                  $ref: '#/components/schemas/RestoreTestingPlanForUpdate'
      responses:
        '200': {}
        '409':
          description: |-
            Backup can't perform the action that you requested until it finishes performing a previous action. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-testing/plans/{RestoreTestingPlanName}/selections/{RestoreTestingSelectionName}:
    delete:
      operationId: DeleteRestoreTestingSelection
      description: |-
        Input the Restore Testing Plan name and Restore Testing Selection name.

        All testing selections associated with a restore testing plan must be deleted before the restore testing plan can be deleted.
      parameters:
      - name: RestoreTestingPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: RestoreTestingSelectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '204': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    get:
      operationId: GetRestoreTestingSelection
      description: |-
        Returns RestoreTestingSelection, which displays resources and elements of the restore testing plan.
      parameters:
      - name: RestoreTestingPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: RestoreTestingSelectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: UpdateRestoreTestingSelection
      description: |-
        Updates the specified restore testing selection.

        Most elements except the `RestoreTestingSelectionName` can be updated with this request.

        You can use either protected resource ARNs or conditions, but not both.
      parameters:
      - name: RestoreTestingPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: RestoreTestingSelectionName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RestoreTestingSelection:
                  $ref: '#/components/schemas/RestoreTestingSelectionForUpdate'
      responses:
        '200': {}
        '409':
          description: |-
            Backup can't perform the action that you requested until it finishes performing a previous action. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-jobs/{BackupJobId}:
    get:
      operationId: DescribeBackupJob
      description: |-
        Returns backup job details for the specified `BackupJobId`.
      parameters:
      - name: BackupJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: StopBackupJob
      description: |-
        Attempts to cancel a job to create a one-time backup of a resource.

        This action is not supported for the following services: Amazon FSx for Windows File Server, Amazon FSx for Lustre, Amazon FSx for NetApp ONTAP, Amazon FSx for OpenZFS, Amazon DocumentDB (with MongoDB compatibility), Amazon RDS, Amazon Aurora, and Amazon Neptune.
      parameters:
      - name: BackupJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /copy-jobs/{CopyJobId}:
    get:
      operationId: DescribeCopyJob
      description: |-
        Returns metadata associated with creating a copy of a resource.
      parameters:
      - name: CopyJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /global-settings:
    get:
      operationId: DescribeGlobalSettings
      description: |-
        Describes whether the Amazon Web Services account is opted in to cross-account backup. Returns an error if the account is not a member of an Organizations organization. Example: `describe-global-settings --region us-west-2`
      parameters: []
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: UpdateGlobalSettings
      description: |-
        Updates whether the Amazon Web Services account is opted in to cross-account backup. Returns an error if the account is not an Organizations management account. Use the `DescribeGlobalSettings` API to determine the current settings.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GlobalSettings:
                  $ref: '#/components/schemas/GlobalSettings'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /resources/{ResourceArn}:
    get:
      operationId: DescribeProtectedResource
      description: |-
        Returns information about a saved resource, including the last time it was backed up, its Amazon Resource Name (ARN), and the Amazon Web Services service type of the saved resource.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /account-settings:
    get:
      operationId: DescribeRegionSettings
      description: |-
        Returns the current service opt-in settings for the Region. If service opt-in is enabled for a service, Backup tries to protect that service's resources in this Region, when the resource is included in an on-demand backup or scheduled backup plan. Otherwise, Backup does not try to protect that service's resources in this Region.
      parameters: []
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: UpdateRegionSettings
      description: |-
        Updates the current service opt-in settings for the Region.

        Use the `DescribeRegionSettings` API to determine the resource types that are supported.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceTypeOptInPreference:
                  $ref: '#/components/schemas/ResourceTypeOptInPreference'
                ResourceTypeManagementPreference:
                  $ref: '#/components/schemas/ResourceTypeManagementPreference'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/report-jobs/{ReportJobId}:
    get:
      operationId: DescribeReportJob
      description: |-
        Returns the details associated with creating a report as specified by its `ReportJobId`.
      parameters:
      - name: ReportJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReportJobId'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-jobs/{RestoreJobId}:
    get:
      operationId: DescribeRestoreJob
      description: |-
        Returns metadata associated with a restore job that is specified by a job ID.
      parameters:
      - name: RestoreJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RestoreJobId'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}/disassociate:
    post:
      operationId: DisassociateRecoveryPoint
      description: |-
        Deletes the specified continuous backup recovery point from Backup and releases control of that continuous backup to the source service, such as Amazon RDS. The source service will continue to create and retain continuous backups using the lifecycle that you specified in your original backup plan.

        Does not support snapshot backup recovery points.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: RecoveryPointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}/parentAssociation:
    delete:
      operationId: DisassociateRecoveryPointFromParent
      description: |-
        This action to a specific child (nested) recovery point removes the relationship between the specified recovery point and its parent (composite) recovery point.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: RecoveryPointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '204': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/plans/{BackupPlanId}/toTemplate:
    get:
      operationId: ExportBackupPlanTemplate
      description: |-
        Returns the backup plan that is specified by the plan ID as a backup template.
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/template/json/toPlan:
    post:
      operationId: GetBackupPlanFromJSON
      description: |-
        Returns a valid JSON document specifying a backup plan or an error.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupPlanTemplateJson:
                  $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/template/plans/{BackupPlanTemplateId}/toPlan:
    get:
      operationId: GetBackupPlanFromTemplate
      description: |-
        Returns the template specified by its `templateId` as a backup plan.
      parameters:
      - name: BackupPlanTemplateId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}/index:
    get:
      operationId: GetRecoveryPointIndexDetails
      description: |-
        This operation returns the metadata and details specific to the backup index associated with the specified recovery point.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: RecoveryPointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: UpdateRecoveryPointIndexSettings
      description: |-
        This operation updates the settings of a recovery point index.

        Required: BackupVaultName, RecoveryPointArn, and IAMRoleArn
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: RecoveryPointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IamRoleArn:
                  $ref: '#/components/schemas/IAMRoleArn'
                Index:
                  $ref: '#/components/schemas/Index'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/recovery-points/{RecoveryPointArn}/restore-metadata:
    get:
      operationId: GetRecoveryPointRestoreMetadata
      description: |-
        Returns a set of metadata key-value pairs that were used to create the backup.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: RecoveryPointArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: backupVaultAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-jobs/{RestoreJobId}/metadata:
    get:
      operationId: GetRestoreJobMetadata
      description: |-
        This request returns the metadata for the specified restore job.
      parameters:
      - name: RestoreJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RestoreJobId'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-testing/inferred-metadata:
    get:
      operationId: GetRestoreTestingInferredMetadata
      description: |-
        This request returns the minimal required set of metadata needed to start a restore job with secure default settings. `BackupVaultName` and `RecoveryPointArn` are required parameters. `BackupVaultAccountId` is an optional parameter.
      parameters:
      - name: BackupVaultAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: BackupVaultName
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      - name: RecoveryPointArn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/String'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /supported-resource-types:
    get:
      operationId: GetSupportedResourceTypes
      description: |-
        Returns the Amazon Web Services resource types supported by Backup.
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/backup-job-summaries:
    get:
      operationId: ListBackupJobSummaries
      description: |-
        This is a request for a summary of backup jobs created or running within the most recent 30 days. You can include parameters AccountID, State, ResourceType, MessageCategory, AggregationPeriod, MaxResults, or NextToken to filter results.

        This request returns a summary that contains Region, Account, State, ResourceType, MessageCategory, StartTime, EndTime, and Count of included jobs.
      parameters:
      - name: AccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: State
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BackupJobStatus'
      - name: ResourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: MessageCategory
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MessageCategory'
      - name: AggregationPeriod
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AggregationPeriod'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-jobs:
    get:
      operationId: ListBackupJobs
      description: |-
        Returns a list of existing backup jobs for an authenticated account for the last 30 days. For a longer period of time, consider using these [monitoring tools](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html).
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: resourceArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ARN'
      - name: state
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BackupJobState'
      - name: backupVaultName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: createdBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: createdAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: accountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: completeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: completeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: parentJobId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: messageCategory
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: StartBackupJob
      description: |-
        Starts an on-demand backup job for the specified resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BackupVaultName:
                  $ref: '#/components/schemas/BackupVaultName'
                ResourceArn:
                  $ref: '#/components/schemas/ARN'
                IamRoleArn:
                  $ref: '#/components/schemas/IAMRoleArn'
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
                StartWindowMinutes:
                  $ref: '#/components/schemas/WindowMinutes'
                CompleteWindowMinutes:
                  $ref: '#/components/schemas/WindowMinutes'
                Lifecycle:
                  $ref: '#/components/schemas/Lifecycle'
                RecoveryPointTags:
                  $ref: '#/components/schemas/Tags'
                BackupOptions:
                  $ref: '#/components/schemas/BackupOptions'
                Index:
                  $ref: '#/components/schemas/Index'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/template/plans:
    get:
      operationId: ListBackupPlanTemplates
      description: |-
        Lists the backup plan templates.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup/plans/{BackupPlanId}/versions:
    get:
      operationId: ListBackupPlanVersions
      description: |-
        Returns version metadata of your backup plans, including Amazon Resource Names (ARNs), backup plan IDs, creation and deletion dates, plan names, and version IDs.
      parameters:
      - name: BackupPlanId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults:
    get:
      operationId: ListBackupVaults
      description: |-
        Returns a list of recovery point storage containers along with information about them.
      parameters:
      - name: vaultType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/VaultType'
      - name: shared
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean2'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/copy-job-summaries:
    get:
      operationId: ListCopyJobSummaries
      description: |-
        This request obtains a list of copy jobs created or running within the the most recent 30 days. You can include parameters AccountID, State, ResourceType, MessageCategory, AggregationPeriod, MaxResults, or NextToken to filter results.

        This request returns a summary that contains Region, Account, State, RestourceType, MessageCategory, StartTime, EndTime, and Count of included jobs.
      parameters:
      - name: AccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: State
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CopyJobStatus'
      - name: ResourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: MessageCategory
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MessageCategory'
      - name: AggregationPeriod
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AggregationPeriod'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /copy-jobs:
    get:
      operationId: ListCopyJobs
      description: |-
        Returns metadata about your copy jobs.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: resourceArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ARN'
      - name: state
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/CopyJobState'
      - name: createdBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: createdAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: destinationVaultArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: accountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: completeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: completeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: parentJobId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: messageCategory
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: StartCopyJob
      description: |-
        Starts a job to create a one-time copy of the specified resource.

        Does not support continuous backups.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RecoveryPointArn:
                  $ref: '#/components/schemas/ARN'
                SourceBackupVaultName:
                  $ref: '#/components/schemas/BackupVaultName'
                DestinationBackupVaultArn:
                  $ref: '#/components/schemas/ARN'
                IamRoleArn:
                  $ref: '#/components/schemas/IAMRoleArn'
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
                Lifecycle:
                  $ref: '#/components/schemas/Lifecycle'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /indexes/recovery-point:
    get:
      operationId: ListIndexedRecoveryPoints
      description: |-
        This operation returns a list of recovery points that have an associated index, belonging to the specified account.

        Optional parameters you can include are: MaxResults; NextToken; SourceResourceArns; CreatedBefore; CreatedAfter; and ResourceType.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: sourceResourceArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ARN'
      - name: createdBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: createdAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: indexStatus
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/IndexStatus'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /resources:
    get:
      operationId: ListProtectedResources
      description: |-
        Returns an array of resources successfully backed up by Backup, including the time the resource was saved, an Amazon Resource Name (ARN) of the resource, and a resource type.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/resources:
    get:
      operationId: ListProtectedResourcesByBackupVault
      description: |-
        This request lists the protected resources corresponding to each backup vault.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: backupVaultAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /backup-vaults/{BackupVaultName}/recovery-points:
    get:
      operationId: ListRecoveryPointsByBackupVault
      description: |-
        Returns detailed information about the recovery points stored in a backup vault.
      parameters:
      - name: BackupVaultName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/BackupVaultName'
      - name: backupVaultAccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: resourceArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ARN'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: backupPlanId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: createdBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: createdAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: parentRecoveryPointArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /legal-holds/{LegalHoldId}/recovery-points:
    get:
      operationId: ListRecoveryPointsByLegalHold
      description: |-
        This action returns recovery point ARNs (Amazon Resource Names) of the specified legal hold.
      parameters:
      - name: LegalHoldId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/string'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /resources/{ResourceArn}/recovery-points:
    get:
      operationId: ListRecoveryPointsByResource
      description: |-
        The information about the recovery points of the type specified by a resource Amazon Resource Name (ARN).

        For Amazon EFS and Amazon EC2, this action only lists recovery points created by Backup.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: managedByAWSBackupOnly
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean2'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/report-jobs:
    get:
      operationId: ListReportJobs
      description: |-
        Returns details about your report jobs.
      parameters:
      - name: ReportPlanName
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ReportPlanName'
      - name: CreationBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: CreationAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: Status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/restore-job-summaries:
    get:
      operationId: ListRestoreJobSummaries
      description: |-
        This request obtains a summary of restore jobs created or running within the the most recent 30 days. You can include parameters AccountID, State, ResourceType, AggregationPeriod, MaxResults, or NextToken to filter results.

        This request returns a summary that contains Region, Account, State, RestourceType, MessageCategory, StartTime, EndTime, and Count of included jobs.
      parameters:
      - name: AccountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: State
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RestoreJobState'
      - name: ResourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: AggregationPeriod
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AggregationPeriod'
      - name: MaxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: NextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-jobs:
    get:
      operationId: ListRestoreJobs
      description: |-
        Returns a list of jobs that Backup initiated to restore a saved resource, including details about the recovery process.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: accountId
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AccountId'
      - name: resourceType
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceType'
      - name: createdBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: createdAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RestoreJobStatus'
      - name: completeBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: completeAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: restoreTestingPlanArn
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ARN'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    put:
      operationId: StartRestoreJob
      description: |-
        Recovers the saved resource identified by an Amazon Resource Name (ARN).
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                RecoveryPointArn:
                  $ref: '#/components/schemas/ARN'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
                IamRoleArn:
                  $ref: '#/components/schemas/IAMRoleArn'
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
                ResourceType:
                  $ref: '#/components/schemas/ResourceType'
                CopySourceTagsToRestoredResource:
                  $ref: '#/components/schemas/Boolean2'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /resources/{ResourceArn}/restore-jobs:
    get:
      operationId: ListRestoreJobsByProtectedResource
      description: |-
        This returns restore jobs that contain the specified protected resource.

        You must include `ResourceArn`. You can optionally include `NextToken`, `ByStatus`, `MaxResults`, `ByRecoveryPointCreationDateAfter` , and `ByRecoveryPointCreationDateBefore`.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/RestoreJobStatus'
      - name: recoveryPointCreationDateAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: recoveryPointCreationDateBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/timestamp'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /tags/{ResourceArn}:
    get:
      operationId: ListTags
      description: |-
        Returns the tags assigned to the resource, such as a target recovery point, backup plan, or backup vault.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/string'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
    post:
      operationId: TagResource
      description: |-
        Assigns a set of key-value pairs to a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN).

        This API is supported for recovery points for resource types including Aurora, Amazon DocumentDB. Amazon EBS, Amazon FSx, Neptune, and Amazon RDS.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Tags:
                  $ref: '#/components/schemas/Tags'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /restore-jobs/{RestoreJobId}/validations:
    put:
      operationId: PutRestoreValidationResult
      description: |-
        This request allows you to send your independent self-run restore test validation results. `RestoreJobId` and `ValidationStatus` are required. Optionally, you can input a `ValidationStatusMessage`.
      parameters:
      - name: RestoreJobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/RestoreJobId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ValidationStatus:
                  $ref: '#/components/schemas/RestoreValidationStatus'
                ValidationStatusMessage:
                  $ref: '#/components/schemas/string'
      responses:
        '204': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /audit/report-jobs/{ReportPlanName}:
    post:
      operationId: StartReportJob
      description: |-
        Starts an on-demand report job for the specified report plan.
      parameters:
      - name: ReportPlanName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ReportPlanName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                IdempotencyToken:
                  $ref: '#/components/schemas/string'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /untag/{ResourceArn}:
    post:
      operationId: UntagResource
      description: |-
        Removes a set of key-value pairs from a recovery point, backup plan, or backup vault identified by an Amazon Resource Name (ARN)

        This API is not supported for recovery points for resource types including Aurora, Amazon DocumentDB. Amazon EBS, Amazon FSx, Neptune, and Amazon RDS.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ARN'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TagKeyList:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '400':
          description: |-
            The request failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
components:
  schemas:
    ARN:
      type: string
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
    AdvancedBackupSetting:
      type: object
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: 'Specifies an object containing resource type and backup options.
            The only supported resource type is Amazon EC2 instances with Windows
            Volume Shadow Copy Service (VSS). For a CloudFormation example, see the
            [sample CloudFormation template to enable Windows VSS](https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html)
            in the _Backup User Guide_.


            Valid values: `EC2`.'
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/BackupOptions'
          description: 'Specifies the backup option for a selected resource. This
            option is only available for Windows VSS backup jobs.


            Valid values:


            Set to `"WindowsVSS":"enabled"` to enable the `WindowsVSS` backup option
            and create a Windows VSS backup.


            Set to `"WindowsVSS":"disabled"` to create a regular backup. The `WindowsVSS`
            option is not enabled by default.


            If you specify an invalid option, you get an `InvalidParameterValueException`
            exception.


            For more information about Windows VSS backups, see [Creating a VSS-Enabled
            Windows Backup](https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html).'
      description: The backup options for each resource type.
    AdvancedBackupSettings:
      type: array
      items:
        $ref: '#/components/schemas/AdvancedBackupSetting'
    AggregationPeriod:
      type: string
      enum:
      - ONE_DAY
      - SEVEN_DAYS
      - FOURTEEN_DAYS
    AlreadyExistsException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Arn:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: The required resource already exists.
    BackupJob:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the backup job.
        BackupJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to Backup to back up a resource.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a resource. The format of the
            ARN depends on the resource type.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup job is created, in Unix format and
            Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a job to create a backup job is completed,
            in Unix format and Coordinated Universal Time (UTC). The value of `CompletionDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        State:
          allOf:
          - $ref: '#/components/schemas/BackupJobState'
          description: The current state of a backup job.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of the job to back
            up a resource.
        PercentDone:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Contains an estimated percentage complete of a job at the time
            the job status was queried.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of a backup.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role ARN used to create the target recovery
            point. IAM roles other than the default role must include either `AWSBackup`
            or `AwsBackup` in the role name. For example, `arn:aws:iam::123456789012:role/AWSBackupRDSAccess`.
            Role names without those strings lack permissions to perform backup jobs.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointCreator'
          description: Contains identifying information about the creation of a backup
            job, including the `BackupPlanArn`, `BackupPlanId`, `BackupPlanVersion`,
            and `BackupRuleId` of the backup plan used to create it.
        ExpectedCompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a job to back up resources is expected to
            be completed, in Unix format and Coordinated Universal Time (UTC). The
            value of `ExpectedCompletionDate` is accurate to milliseconds. For example,
            the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087
            AM.
        StartBy:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Specifies the time in Unix format and Coordinated Universal
            Time (UTC) when a backup job must be started before it is canceled. The
            value is calculated by adding the start window to the scheduled time.
            So if the scheduled time were 6:00 PM and the start window is 2 hours,
            the `StartBy` time would be 8:00 PM on the date specified. The value of
            `StartBy` is accurate to milliseconds. For example, the value 1516925490.087
            represents Friday, January 26, 2018 12:11:30.087 AM.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Web Services resource to be backed up; for
            example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon
            Relational Database Service (Amazon RDS) database. For Windows Volume
            Shadow Copy Service (VSS) backups, the only supported resource type is
            Amazon EC2.
        BytesTransferred:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size in bytes transferred to a backup vault at the time
            that the job status was queried.
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/BackupOptions'
          description: 'Specifies the backup option for a selected resource. This
            option is only available for Windows Volume Shadow Copy Service (VSS)
            backup jobs.


            Valid values: Set to `"WindowsVSS":"enabled"` to enable the `WindowsVSS`
            backup option and create a Windows VSS backup. Set to `"WindowsVSS":"disabled"`
            to create a regular backup. If you specify an invalid option, you get
            an `InvalidParameterValueException` exception.'
        BackupType:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Represents the type of backup for a backup job.
        ParentJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This uniquely identifies a request to Backup to back up a resource.
            The return will be the parent (composite) job ID.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This is a boolean value indicating this is a parent (composite)
            backup job.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The non-unique name of the resource that belongs to the specified
            backup.
        InitiationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date on which the backup job was initiated.
        MessageCategory:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'This parameter is the job count for the specified message
            category.


            Example strings may include `AccessDenied`, `SUCCESS`, `AGGREGATE_ALL`,
            and `INVALIDPARAMETERS`. See [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)
            for a list of MessageCategory strings.


            The the value ANY returns count of all message categories.


            `AGGREGATE_ALL` aggregates job counts for all message categories and returns
            the sum.'
      description: Contains detailed information about a backup job.
    BackupJobChildJobsInState:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Long'
    BackupJobState:
      type: string
      enum:
      - CREATED
      - PENDING
      - RUNNING
      - ABORTING
      - ABORTED
      - COMPLETED
      - FAILED
      - EXPIRED
      - PARTIAL
    BackupJobStatus:
      type: string
      enum:
      - CREATED
      - PENDING
      - RUNNING
      - ABORTING
      - ABORTED
      - COMPLETED
      - FAILED
      - EXPIRED
      - PARTIAL
      - AGGREGATE_ALL
      - ANY
    BackupJobSummary:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          description: The Amazon Web Services Regions within the job summary.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the jobs within the summary.
        State:
          allOf:
          - $ref: '#/components/schemas/BackupJobStatus'
          description: This value is job count for jobs with the specified state.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: This value is the job count for the specified resource type.
            The request `GetSupportedResourceTypes` returns strings for supported
            resource types.
        MessageCategory:
          allOf:
          - $ref: '#/components/schemas/MessageCategory'
          description: 'This parameter is the job count for the specified message
            category.


            Example strings include `AccessDenied`, `Success`, and `InvalidParameters`.
            See [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)
            for a list of MessageCategory strings.


            The the value ANY returns count of all message categories.


            `AGGREGATE_ALL` aggregates job counts for all message categories and returns
            the sum.'
        Count:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: The value as a number of jobs in a job summary.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The value of time in number format of a job start time.


            This value is the time in Unix format, Coordinated Universal Time (UTC),
            and accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.'
        EndTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The value of time in number format of a job end time.


            This value is the time in Unix format, Coordinated Universal Time (UTC),
            and accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.'
      description: 'This is a summary of jobs created or running within the most recent
        30 days.


        The returned summary may contain the following: Region, Account, State, RestourceType,
        MessageCategory, StartTime, EndTime, and Count of included jobs.'
    BackupJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/BackupJobSummary'
    BackupJobsList:
      type: array
      items:
        $ref: '#/components/schemas/BackupJob'
    BackupOptionKey:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.]{1,50}$
    BackupOptionValue:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.]{1,50}$
    BackupOptions:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/BackupOptionValue'
    BackupPlan:
      type: object
      properties:
        BackupPlanName:
          allOf:
          - $ref: '#/components/schemas/BackupPlanName'
          description: 'The display name of a backup plan. Must contain only alphanumeric
            or ''-_.'' special characters.


            If this is set in the console, it can contain 1 to 50 characters; if this
            is set through CLI or API, it can contain 1 to 200 characters.'
        Rules:
          allOf:
          - $ref: '#/components/schemas/BackupRules'
          description: An array of `BackupRule` objects, each of which specifies a
            scheduled task that is used to back up a selection of resources.
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Contains a list of `BackupOptions` for each resource type.
      required:
      - BackupPlanName
      - Rules
      description: Contains an optional backup plan display name and an array of `BackupRule`
        objects, each of which specifies a backup rule. Each rule in a backup plan
        is a separate scheduled task and can back up a different selection of Amazon
        Web Services resources.
    BackupPlanInput:
      type: object
      properties:
        BackupPlanName:
          allOf:
          - $ref: '#/components/schemas/BackupPlanName'
          description: The display name of a backup plan. Must contain 1 to 50 alphanumeric
            or '-_.' characters.
        Rules:
          allOf:
          - $ref: '#/components/schemas/BackupRulesInput'
          description: An array of `BackupRule` objects, each of which specifies a
            scheduled task that is used to back up a selection of resources.
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Specifies a list of `BackupOptions` for each resource type.
            These settings are only available for Windows Volume Shadow Copy Service
            (VSS) backup jobs.
      required:
      - BackupPlanName
      - Rules
      description: Contains an optional backup plan display name and an array of `BackupRule`
        objects, each of which specifies a backup rule. Each rule in a backup plan
        is a separate scheduled task.
    BackupPlanName:
      type: string
    BackupPlanTemplatesList:
      type: array
      items:
        $ref: '#/components/schemas/BackupPlanTemplatesListMember'
    BackupPlanTemplatesListMember:
      type: object
      properties:
        BackupPlanTemplateId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a stored backup plan template.
        BackupPlanTemplateName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The optional display name of a backup plan template.
      description: An object specifying metadata associated with a backup plan template.
    BackupPlanVersionsList:
      type: array
      items:
        $ref: '#/components/schemas/BackupPlansListMember'
    BackupPlansList:
      type: array
      items:
        $ref: '#/components/schemas/BackupPlansListMember'
    BackupPlansListMember:
      type: object
      properties:
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            plan; for example, `arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a resource backup plan is created, in Unix
            format and Coordinated Universal Time (UTC). The value of `CreationDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        DeletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup plan is deleted, in Unix format
            and Coordinated Universal Time (UTC). The value of `DeletionDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Unique, randomly generated, Unicode, UTF-8 encoded strings
            that are at most 1,024 bytes long. Version IDs cannot be edited.
        BackupPlanName:
          allOf:
          - $ref: '#/components/schemas/BackupPlanName'
          description: The display name of a saved backup plan.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'A unique string that identifies the request and allows failed
            requests to be retried without the risk of running the operation twice.
            This parameter is optional.


            If used, this parameter must contain 1 to 50 alphanumeric or ''-_.'' characters.'
        LastExecutionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The last time this backup plan was run. A date and time, in
            Unix format and Coordinated Universal Time (UTC). The value of `LastExecutionDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Contains a list of `BackupOptions` for a resource type.
      description: Contains metadata about a backup plan.
    BackupRule:
      type: object
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/BackupRuleName'
          description: A display name for a backup rule. Must contain 1 to 50 alphanumeric
            or '-_.' characters.
        TargetBackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          description: A cron expression in UTC specifying when Backup initiates a
            backup job. For more information about Amazon Web Services cron expressions,
            see [Schedule Expressions for Rules](https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html)
            in the _Amazon CloudWatch Events User Guide._. Two examples of Amazon
            Web Services cron expressions are ` 15 * ? * * *` (take a backup every
            hour at 15 minutes past the hour) and `0 12 * * ? *` (take a backup every
            day at 12 noon UTC). For a table of examples, click the preceding link
            and scroll down the page.
        StartWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          description: 'A value in minutes after a backup is scheduled before a job
            will be canceled if it doesn''t start successfully. This value is optional.
            If this value is included, it must be at least 60 minutes to avoid errors.


            During the start window, the backup job status remains in `CREATED` status
            until it has successfully begun or until the start window time has run
            out. If within the start window time Backup receives an error that allows
            the job to be retried, Backup will automatically retry to begin the job
            at least every 10 minutes until the backup successfully begins (the job
            status changes to `RUNNING`) or until the job status changes to `EXPIRED`
            (which is expected to occur when the start window time is over).'
        CompletionWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          description: A value in minutes after a backup job is successfully started
            before it must be completed or it will be canceled by Backup. This value
            is optional.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/Lifecycle'
          description: 'The lifecycle defines when a protected resource is transitioned
            to cold storage and when it expires. Backup transitions and expires backups
            automatically according to the lifecycle that you define.


            Backups transitioned to cold storage must be stored in cold storage for
            a minimum of 90 days. Therefore, the “retention” setting must be 90 days
            greater than the “transition to cold after days” setting. The “transition
            to cold after days” setting cannot be changed after a backup has been
            transitioned to cold.


            Resource types that can transition to cold storage are listed in the [Feature
            availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
            table. Backup ignores this expression for other resource types.'
        RecoveryPointTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags that are assigned to resources that are associated
            with this rule when restored from backup.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a rule that is used to schedule the backup
            of a selection of resources.
        CopyActions:
          allOf:
          - $ref: '#/components/schemas/CopyActions'
          description: An array of `CopyAction` objects, which contains the details
            of the copy operation.
        EnableContinuousBackup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether Backup creates continuous backups. True causes
            Backup to create continuous backups capable of point-in-time restore (PITR).
            False (or not specified) causes Backup to create snapshot backups.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          description: The timezone in which the schedule expression is set. By default,
            ScheduleExpressions are in UTC. You can modify this to a specified timezone.
        IndexActions:
          allOf:
          - $ref: '#/components/schemas/IndexActions'
          description: 'IndexActions is an array you use to specify how backup data
            should be indexed.


            eEach BackupRule can have 0 or 1 IndexAction, as each backup can have
            up to one index associated with it.


            Within the array is ResourceType. Only one will be accepted for each BackupRule.'
      required:
      - RuleName
      - TargetBackupVaultName
      description: Specifies a scheduled task used to back up a selection of resources.
    BackupRuleInput:
      type: object
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/BackupRuleName'
          description: A display name for a backup rule. Must contain 1 to 50 alphanumeric
            or '-_.' characters.
        TargetBackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          description: A CRON expression in UTC specifying when Backup initiates a
            backup job.
        StartWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          description: 'A value in minutes after a backup is scheduled before a job
            will be canceled if it doesn''t start successfully. This value is optional.
            If this value is included, it must be at least 60 minutes to avoid errors.


            This parameter has a maximum value of 100 years (52,560,000 minutes).


            During the start window, the backup job status remains in `CREATED` status
            until it has successfully begun or until the start window time has run
            out. If within the start window time Backup receives an error that allows
            the job to be retried, Backup will automatically retry to begin the job
            at least every 10 minutes until the backup successfully begins (the job
            status changes to `RUNNING`) or until the job status changes to `EXPIRED`
            (which is expected to occur when the start window time is over).'
        CompletionWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          description: A value in minutes after a backup job is successfully started
            before it must be completed or it will be canceled by Backup. This value
            is optional.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/Lifecycle'
          description: 'The lifecycle defines when a protected resource is transitioned
            to cold storage and when it expires. Backup will transition and expire
            backups automatically according to the lifecycle that you define.


            Backups transitioned to cold storage must be stored in cold storage for
            a minimum of 90 days. Therefore, the “retention” setting must be 90 days
            greater than the “transition to cold after days” setting. The “transition
            to cold after days” setting cannot be changed after a backup has been
            transitioned to cold storage.


            Resource types that can transition to cold storage are listed in the [Feature
            availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
            table. Backup ignores this expression for other resource types.


            This parameter has a maximum value of 100 years (36,500 days).'
        RecoveryPointTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to assign to the resources.
        CopyActions:
          allOf:
          - $ref: '#/components/schemas/CopyActions'
          description: An array of `CopyAction` objects, which contains the details
            of the copy operation.
        EnableContinuousBackup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Specifies whether Backup creates continuous backups. True causes
            Backup to create continuous backups capable of point-in-time restore (PITR).
            False (or not specified) causes Backup to create snapshot backups.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/Timezone'
          description: The timezone in which the schedule expression is set. By default,
            ScheduleExpressions are in UTC. You can modify this to a specified timezone.
        IndexActions:
          allOf:
          - $ref: '#/components/schemas/IndexActions'
          description: "There can up to one IndexAction in each BackupRule, as each\
            \ backup can have 0 or 1 backup index associated with it.\n\nWithin the\
            \ array is ResourceTypes. Only 1 resource type will be accepted for each\
            \ BackupRule. Valid values:\n\n  * `EBS` for Amazon Elastic Block Store\n\
            \n  * `S3` for Amazon Simple Storage Service (Amazon S3)"
      required:
      - RuleName
      - TargetBackupVaultName
      description: Specifies a scheduled task used to back up a selection of resources.
    BackupRuleName:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.]{1,50}$
    BackupRules:
      type: array
      items:
        $ref: '#/components/schemas/BackupRule'
    BackupRulesInput:
      type: array
      items:
        $ref: '#/components/schemas/BackupRuleInput'
    BackupSelection:
      type: object
      properties:
        SelectionName:
          allOf:
          - $ref: '#/components/schemas/BackupSelectionName'
          description: The display name of a resource selection document. Must contain
            1 to 50 alphanumeric or '-_.' characters.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The ARN of the IAM role that Backup uses to authenticate when
            backing up the target resource; for example, `arn:aws:iam::123456789012:role/S3Access`.
        Resources:
          allOf:
          - $ref: '#/components/schemas/ResourceArns'
          description: 'The Amazon Resource Names (ARNs) of the resources to assign
            to a backup plan. The maximum number of ARNs is 500 without wildcards,
            or 30 ARNs with wildcards.


            If you need to assign many resources to a backup plan, consider a different
            resource selection strategy, such as assigning all resources of a resource
            type or refining your resource selection using tags.


            If you specify multiple ARNs, the resources much match any of the ARNs
            (OR logic).'
        ListOfTags:
          allOf:
          - $ref: '#/components/schemas/ListOfTags'
          description: 'The conditions that you define to assign resources to your
            backup plans using tags. For example, `"StringEquals": { "ConditionKey":
            "backup", "ConditionValue": "daily"}`.


            `ListOfTags` supports only `StringEquals`. Condition operators are case
            sensitive.


            If you specify multiple conditions, the resources much match any of the
            conditions (OR logic).'
        NotResources:
          allOf:
          - $ref: '#/components/schemas/ResourceArns'
          description: 'The Amazon Resource Names (ARNs) of the resources to exclude
            from a backup plan. The maximum number of ARNs is 500 without wildcards,
            or 30 ARNs with wildcards.


            If you need to exclude many resources from a backup plan, consider a different
            resource selection strategy, such as assigning only one or a few resource
            types or refining your resource selection using tags.'
        Conditions:
          allOf:
          - $ref: '#/components/schemas/Conditions'
          description: 'The conditions that you define to assign resources to your
            backup plans using tags. For example, `"StringEquals": { "ConditionKey":
            "aws:ResourceTag/backup", "ConditionValue": "daily" }`.


            `Conditions` supports `StringEquals`, `StringLike`, `StringNotEquals`,
            and `StringNotLike`. Condition operators are case sensitive.


            If you specify multiple conditions, the resources much match all conditions
            (AND logic).'
      required:
      - SelectionName
      - IamRoleArn
      description: 'Used to specify a set of resources to a backup plan.


        We recommend that you specify conditions, tags, or resources to include or
        exclude. Otherwise, Backup attempts to select all supported and opted-in storage
        resources, which could have unintended cost implications.


        For more information, see [Assigning resources programmatically](https://docs.aws.amazon.com/aws-backup/latest/devguide/assigning-resources.html#assigning-resources-json).'
    BackupSelectionName:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.]{1,50}$
    BackupSelectionsList:
      type: array
      items:
        $ref: '#/components/schemas/BackupSelectionsListMember'
    BackupSelectionsListMember:
      type: object
      properties:
        SelectionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to assign a set of resources
            to a backup plan.
        SelectionName:
          allOf:
          - $ref: '#/components/schemas/BackupSelectionName'
          description: The display name of a resource selection document.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup plan is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'A unique string that identifies the request and allows failed
            requests to be retried without the risk of running the operation twice.
            This parameter is optional.


            If used, this parameter must contain 1 to 50 alphanumeric or ''-_.'' characters.'
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role Amazon Resource Name (ARN) to create
            the target recovery point; for example, `arn:aws:iam::123456789012:role/S3Access`.
      description: Contains metadata about a `BackupSelection` object.
    BackupVaultEvent:
      type: string
      enum:
      - BACKUP_JOB_STARTED
      - BACKUP_JOB_COMPLETED
      - BACKUP_JOB_SUCCESSFUL
      - BACKUP_JOB_FAILED
      - BACKUP_JOB_EXPIRED
      - RESTORE_JOB_STARTED
      - RESTORE_JOB_COMPLETED
      - RESTORE_JOB_SUCCESSFUL
      - RESTORE_JOB_FAILED
      - COPY_JOB_STARTED
      - COPY_JOB_SUCCESSFUL
      - COPY_JOB_FAILED
      - RECOVERY_POINT_MODIFIED
      - BACKUP_PLAN_CREATED
      - BACKUP_PLAN_MODIFIED
      - S3_BACKUP_OBJECT_FAILED
      - S3_RESTORE_OBJECT_FAILED
    BackupVaultEvents:
      type: array
      items:
        $ref: '#/components/schemas/BackupVaultEvent'
    BackupVaultList:
      type: array
      items:
        $ref: '#/components/schemas/BackupVaultListMember'
    BackupVaultListMember:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        VaultType:
          allOf:
          - $ref: '#/components/schemas/VaultType'
          description: The type of vault in which the described recovery point is
            stored.
        VaultState:
          allOf:
          - $ref: '#/components/schemas/VaultState'
          description: The current state of the vault.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a resource backup is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'A server-side encryption key you can specify to encrypt your
            backups from services that support full Backup management; for example,
            `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`.
            If you specify a key, you must specify its ARN, not its alias. If you
            do not specify a key, Backup creates a KMS key for you by default.


            To learn which Backup services support full Backup management and how
            Backup handles encryption for backups from services that do not yet support
            full Backup, see [ Encryption for backups in Backup](https://docs.aws.amazon.com/aws-backup/latest/devguide/encryption.html)'
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'A unique string that identifies the request and allows failed
            requests to be retried without the risk of running the operation twice.
            This parameter is optional.


            If used, this parameter must contain 1 to 50 alphanumeric or ''-_.'' characters.'
        NumberOfRecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/Long2'
          description: The number of recovery points that are stored in a backup vault.
        Locked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean value that indicates whether Backup Vault Lock applies
            to the selected backup vault. If `true`, Vault Lock prevents delete and
            update operations on the recovery points in the selected vault.
        MinRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The Backup Vault Lock setting that specifies the minimum retention
            period that the vault retains its recovery points. If this parameter is
            not specified, Vault Lock does not enforce a minimum retention period.


            If specified, any backup or copy job to the vault must have a lifecycle
            policy with a retention period equal to or longer than the minimum retention
            period. If the job''s retention period is shorter than that minimum retention
            period, then the vault fails the backup or copy job, and you should either
            modify your lifecycle settings or use a different vault. Recovery points
            already stored in the vault prior to Vault Lock are not affected.'
        MaxRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The Backup Vault Lock setting that specifies the maximum retention
            period that the vault retains its recovery points. If this parameter is
            not specified, Vault Lock does not enforce a maximum retention period
            on the recovery points in the vault (allowing indefinite storage).


            If specified, any backup or copy job to the vault must have a lifecycle
            policy with a retention period equal to or shorter than the maximum retention
            period. If the job''s retention period is longer than that maximum retention
            period, then the vault fails the backup or copy job, and you should either
            modify your lifecycle settings or use a different vault. Recovery points
            already stored in the vault prior to Vault Lock are not affected.'
        LockDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The date and time when Backup Vault Lock configuration becomes
            immutable, meaning it cannot be changed or deleted.


            If you applied Vault Lock to your vault without specifying a lock date,
            you can change your Vault Lock settings, or delete Vault Lock from the
            vault entirely, at any time.


            This value is in Unix format, Coordinated Universal Time (UTC), and accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.'
      description: Contains metadata about a backup vault.
    BackupVaultName:
      type: string
      pattern: ^[a-zA-Z0-9\-\_]{2,50}$
    Boolean:
      type: boolean
    Boolean2:
      type: boolean
      default: false
    CalculatedLifecycle:
      type: object
      properties:
        MoveToColdStorageAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: A timestamp that specifies when to transition a recovery point
            to cold storage.
        DeleteAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: A timestamp that specifies when to delete a recovery point.
      description: 'Contains `DeleteAt` and `MoveToColdStorageAt` timestamps, which
        are used to specify a lifecycle for a recovery point.


        The lifecycle defines when a protected resource is transitioned to cold storage
        and when it expires. Backup transitions and expires backups automatically
        according to the lifecycle that you define.


        Backups transitioned to cold storage must be stored in cold storage for a
        minimum of 90 days. Therefore, the “retention” setting must be 90 days greater
        than the “transition to cold after days” setting. The “transition to cold
        after days” setting cannot be changed after a backup has been transitioned
        to cold.


        Resource types that can transition to cold storage are listed in the [Feature
        availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
        table. Backup ignores this expression for other resource types.'
    CancelLegalHoldInput:
      type: object
      properties:
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the legal hold.
        CancelDescription:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A string the describes the reason for removing the legal hold.
        RetainRecordInDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The integer amount, in days, after which to remove legal hold.
      required:
      - LegalHoldId
      - CancelDescription
    CancelLegalHoldOutput:
      type: object
      properties: {}
    ComplianceResourceIdList:
      type: array
      items:
        $ref: '#/components/schemas/string'
    Condition:
      type: object
      properties:
        ConditionType:
          allOf:
          - $ref: '#/components/schemas/ConditionType'
          description: An operation applied to a key-value pair used to assign resources
            to your backup plan. Condition only supports `StringEquals`. For more
            flexible assignment options, including `StringLike` and the ability to
            exclude resources from your backup plan, use `Conditions` (with an "s"
            on the end) for your [ `BackupSelection` ](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BackupSelection.html).
        ConditionKey:
          allOf:
          - $ref: '#/components/schemas/ConditionKey'
          description: 'The key in a key-value pair. For example, in the tag `Department:
            Accounting`, `Department` is the key.'
        ConditionValue:
          allOf:
          - $ref: '#/components/schemas/ConditionValue'
          description: 'The value in a key-value pair. For example, in the tag `Department:
            Accounting`, `Accounting` is the value.'
      required:
      - ConditionType
      - ConditionKey
      - ConditionValue
      description: Contains an array of triplets made up of a condition type (such
        as `StringEquals`), a key, and a value. Used to filter resources using their
        tags and assign them to a backup plan. Case sensitive.
    ConditionKey:
      type: string
    ConditionParameter:
      type: object
      properties:
        ConditionKey:
          allOf:
          - $ref: '#/components/schemas/ConditionKey'
          description: 'The key in a key-value pair. For example, in the tag `Department:
            Accounting`, `Department` is the key.'
        ConditionValue:
          allOf:
          - $ref: '#/components/schemas/ConditionValue'
          description: 'The value in a key-value pair. For example, in the tag `Department:
            Accounting`, `Accounting` is the value.'
      description: 'Includes information about tags you define to assign tagged resources
        to a backup plan.


        Include the prefix `aws:ResourceTag` in your tags. For example, `"aws:ResourceTag/TagKey1":
        "Value1"`.'
    ConditionParameters:
      type: array
      items:
        $ref: '#/components/schemas/ConditionParameter'
    ConditionType:
      type: string
      enum:
      - STRINGEQUALS
    ConditionValue:
      type: string
    Conditions:
      type: object
      properties:
        StringEquals:
          allOf:
          - $ref: '#/components/schemas/ConditionParameters'
          description: Filters the values of your tagged resources for only those
            resources that you tagged with the same value. Also called "exact matching."
        StringNotEquals:
          allOf:
          - $ref: '#/components/schemas/ConditionParameters'
          description: Filters the values of your tagged resources for only those
            resources that you tagged that do not have the same value. Also called
            "negated matching."
        StringLike:
          allOf:
          - $ref: '#/components/schemas/ConditionParameters'
          description: Filters the values of your tagged resources for matching tag
            values with the use of a wildcard character (*) anywhere in the string.
            For example, "prod*" or "*rod*" matches the tag value "production".
        StringNotLike:
          allOf:
          - $ref: '#/components/schemas/ConditionParameters'
          description: Filters the values of your tagged resources for non-matching
            tag values with the use of a wildcard character (*) anywhere in the string.
      description: Contains information about which resources to include or exclude
        from a backup plan using their tags. Conditions are case sensitive.
    ConflictException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: Backup can't perform the action that you requested until it finishes
        performing a previous action. Try again later.
    ControlInputParameter:
      type: object
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          description: The name of a parameter, for example, `BackupPlanFrequency`.
        ParameterValue:
          allOf:
          - $ref: '#/components/schemas/ParameterValue'
          description: The value of parameter, for example, `hourly`.
      description: 'The parameters for a control. A control can have zero, one, or
        more than one parameter. An example of a control with two parameters is: "backup
        plan frequency is at least `daily` and the retention period is at least `1
        year`". The first parameter is `daily`. The second parameter is `1 year`.'
    ControlInputParameters:
      type: array
      items:
        $ref: '#/components/schemas/ControlInputParameter'
    ControlName:
      type: string
    ControlScope:
      type: object
      properties:
        ComplianceResourceIds:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceIdList'
          description: The ID of the only Amazon Web Services resource that you want
            your control scope to contain.
        ComplianceResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeList'
          description: Describes whether the control scope includes one or more types
            of resources, such as `EFS` or `RDS`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/stringMap'
          description: 'The tag key-value pair applied to those Amazon Web Services
            resources that you want to trigger an evaluation for a rule. A maximum
            of one key-value pair can be provided. The tag value is optional, but
            it cannot be an empty string if you are creating or editing a framework
            from the console (though the value can be an empty string when included
            in a CloudFormation template).


            The structure to assign a tag is: `[{"Key":"string","Value":"string"}]`.'
      description: 'A framework consists of one or more controls. Each control has
        its own control scope. The control scope can include one or more resource
        types, a combination of a tag key and value, or a combination of one resource
        type and one resource ID. If no scope is specified, evaluations for the rule
        are triggered when any resource in your recording group changes in configuration.


        To set a control scope that includes all of a particular resource, leave the
        `ControlScope` empty or do not pass it when calling `CreateFramework`.'
    CopyAction:
      type: object
      properties:
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
        DestinationBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies the
            destination backup vault for the copied backup. For example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
      required:
      - DestinationBackupVaultArn
      description: The details of the copy operation.
    CopyActions:
      type: array
      items:
        $ref: '#/components/schemas/CopyAction'
    CopyJob:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the copy job.
        CopyJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a copy job.
        SourceBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a source
            copy vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        SourceRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a source recovery point; for
            example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        DestinationBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a destination
            copy vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        DestinationRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a destination recovery point;
            for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Web Services resource to be copied; for example,
            an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational
            Database Service (Amazon RDS) database.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a copy job is created, in Unix format and
            Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a copy job is completed, in Unix format and
            Coordinated Universal Time (UTC). The value of `CompletionDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        State:
          allOf:
          - $ref: '#/components/schemas/CopyJobState'
          description: The current state of a copy job.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of the job to copy
            a resource.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of a copy job.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role ARN used to copy the target recovery
            point; for example, `arn:aws:iam::123456789012:role/S3Access`.
        CreatedBy:
          $ref: '#/components/schemas/RecoveryPointCreator'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Web Services resource to be copied; for
            example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon
            Relational Database Service (Amazon RDS) database.
        ParentJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This uniquely identifies a request to Backup to copy a resource.
            The return will be the parent (composite) job ID.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This is a boolean value indicating this is a parent (composite)
            copy job.
        CompositeMemberIdentifier:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The identifier of a resource within a composite group, such
            as nested (child) recovery point belonging to a composite (parent) stack.
            The ID is transferred from the [ logical ID](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html#resources-section-structure-syntax)
            within a stack.
        NumberOfChildJobs:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of child (nested) copy jobs.
        ChildJobsInState:
          allOf:
          - $ref: '#/components/schemas/CopyJobChildJobsInState'
          description: This returns the statistics of the included child (nested)
            copy jobs.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The non-unique name of the resource that belongs to the specified
            backup.
        MessageCategory:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'This parameter is the job count for the specified message
            category.


            Example strings may include `AccessDenied`, `SUCCESS`, `AGGREGATE_ALL`,
            and `InvalidParameters`. See [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)
            for a list of MessageCategory strings.


            The the value ANY returns count of all message categories.


            `AGGREGATE_ALL` aggregates job counts for all message categories and returns
            the sum'
      description: Contains detailed information about a copy job.
    CopyJobChildJobsInState:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Long'
    CopyJobState:
      type: string
      enum:
      - CREATED
      - RUNNING
      - COMPLETED
      - FAILED
      - PARTIAL
    CopyJobStatus:
      type: string
      enum:
      - CREATED
      - RUNNING
      - ABORTING
      - ABORTED
      - COMPLETING
      - COMPLETED
      - FAILING
      - FAILED
      - PARTIAL
      - AGGREGATE_ALL
      - ANY
    CopyJobSummary:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          description: The Amazon Web Services Regions within the job summary.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the jobs within the summary.
        State:
          allOf:
          - $ref: '#/components/schemas/CopyJobStatus'
          description: This value is job count for jobs with the specified state.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: This value is the job count for the specified resource type.
            The request `GetSupportedResourceTypes` returns strings for supported
            resource types
        MessageCategory:
          allOf:
          - $ref: '#/components/schemas/MessageCategory'
          description: 'This parameter is the job count for the specified message
            category.


            Example strings include `AccessDenied`, `Success`, and `InvalidParameters`.
            See [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)
            for a list of MessageCategory strings.


            The the value ANY returns count of all message categories.


            `AGGREGATE_ALL` aggregates job counts for all message categories and returns
            the sum.'
        Count:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: The value as a number of jobs in a job summary.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The value of time in number format of a job start time.


            This value is the time in Unix format, Coordinated Universal Time (UTC),
            and accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.'
        EndTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The value of time in number format of a job end time.


            This value is the time in Unix format, Coordinated Universal Time (UTC),
            and accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.'
      description: 'This is a summary of copy jobs created or running within the most
        recent 30 days.


        The returned summary may contain the following: Region, Account, State, RestourceType,
        MessageCategory, StartTime, EndTime, and Count of included jobs.'
    CopyJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CopyJobSummary'
    CopyJobsList:
      type: array
      items:
        $ref: '#/components/schemas/CopyJob'
    CreateBackupPlanInput:
      type: object
      properties:
        BackupPlan:
          allOf:
          - $ref: '#/components/schemas/BackupPlanInput'
          description: The body of a backup plan. Includes a `BackupPlanName` and
            one or more sets of `Rules`.
        BackupPlanTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to assign to the backup plan.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'Identifies the request and allows failed requests to be retried
            without the risk of running the operation twice. If the request includes
            a `CreatorRequestId` that matches an existing backup plan, that plan is
            returned. This parameter is optional.


            If used, this parameter must contain 1 to 50 alphanumeric or ''-_.'' characters.'
      required:
      - BackupPlan
    CreateBackupPlanOutput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            plan; for example, `arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup plan is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Unique, randomly generated, Unicode, UTF-8 encoded strings
            that are at most 1,024 bytes long. They cannot be edited.
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          description: The settings for a resource type. This option is only available
            for Windows Volume Shadow Copy Service (VSS) backup jobs.
    CreateBackupSelectionInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the backup plan.
        BackupSelection:
          allOf:
          - $ref: '#/components/schemas/BackupSelection'
          description: The body of a request to assign a set of resources to a backup
            plan.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'A unique string that identifies the request and allows failed
            requests to be retried without the risk of running the operation twice.
            This parameter is optional.


            If used, this parameter must contain 1 to 50 alphanumeric or ''-_.'' characters.'
      required:
      - BackupPlanId
      - BackupSelection
    CreateBackupSelectionOutput:
      type: object
      properties:
        SelectionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies the body of a request to assign a set of
            resources to a backup plan.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the backup plan.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup selection is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
    CreateBackupVaultInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
            They consist of letters, numbers, and hyphens.
        BackupVaultTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to assign to the backup vault.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The server-side encryption key that is used to protect your
            backups; for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'A unique string that identifies the request and allows failed
            requests to be retried without the risk of running the operation twice.
            This parameter is optional.


            If used, this parameter must contain 1 to 50 alphanumeric or ''-_.'' characters.'
      required:
      - BackupVaultName
    CreateBackupVaultOutput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Region where they are created. They consist of lowercase
            letters, numbers, and hyphens.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup vault is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
    CreateFrameworkInput:
      type: object
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The unique name of the framework. The name must be between
            1 and 256 characters, starting with a letter, and consisting of letters
            (a-z, A-Z), numbers (0-9), and underscores (_).
        FrameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: An optional description of the framework with a maximum of
            1,024 characters.
        FrameworkControls:
          allOf:
          - $ref: '#/components/schemas/FrameworkControls'
          description: The controls that make up the framework. Each control in the
            list has a name, input parameters, and scope.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `CreateFrameworkInput`. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
        FrameworkTags:
          allOf:
          - $ref: '#/components/schemas/stringMap'
          description: The tags to assign to the framework.
      required:
      - FrameworkName
      - FrameworkControls
    CreateFrameworkOutput:
      type: object
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The unique name of the framework. The name must be between
            1 and 256 characters, starting with a letter, and consisting of letters
            (a-z, A-Z), numbers (0-9), and underscores (_).
        FrameworkArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
    CreateLegalHoldInput:
      type: object
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The title of the legal hold.
        Description:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The description of the legal hold.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This is a user-chosen string used to distinguish between otherwise
            identical calls. Retrying a successful request with the same idempotency
            token results in a success message with no action taken.
        RecoveryPointSelection:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointSelection'
          description: The criteria to assign a set of resources, such as resource
            types or backup vaults.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: 'Optional tags to include. A tag is a key-value pair you can
            use to manage, filter, and search for your resources. Allowed characters
            include UTF-8 letters, numbers, spaces, and the following characters:
            + - = . _ : /.'
      required:
      - Title
      - Description
    CreateLegalHoldOutput:
      type: object
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The title of the legal hold.
        Status:
          allOf:
          - $ref: '#/components/schemas/LegalHoldStatus'
          description: The status of the legal hold.
        Description:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The description of the legal hold.
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the legal hold.
        LegalHoldArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the legal hold.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The time when the legal hold was created.
        RecoveryPointSelection:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointSelection'
          description: The criteria to assign to a set of resources, such as resource
            types or backup vaults.
    CreateLogicallyAirGappedBackupVaultInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Logically
            air-gapped backup vaults are identified by names that are unique to the
            account used to create them and the Region where they are created.
        BackupVaultTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to assign to the vault.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The ID of the creation request.


            This parameter is optional. If used, this parameter must contain 1 to
            50 alphanumeric or ''-_.'' characters.'
        MinRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'This setting specifies the minimum retention period that the
            vault retains its recovery points.


            The minimum value accepted is 7 days.'
        MaxRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The maximum retention period that the vault retains its recovery
            points.
      required:
      - BackupVaultName
      - MinRetentionDays
      - MaxRetentionDays
    CreateLogicallyAirGappedBackupVaultOutput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Logically
            air-gapped backup vaults are identified by names that are unique to the
            account used to create them and the Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN (Amazon Resource Name) of the vault.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The date and time when the vault was created.


            This value is in Unix format, Coordinated Universal Time (UTC), and accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.'
        VaultState:
          allOf:
          - $ref: '#/components/schemas/VaultState'
          description: The current state of the vault.
    CreateReportPlanInput:
      type: object
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: The unique name of the report plan. The name must be between
            1 and 256 characters, starting with a letter, and consisting of letters
            (a-z, A-Z), numbers (0-9), and underscores (_).
        ReportPlanDescription:
          allOf:
          - $ref: '#/components/schemas/ReportPlanDescription'
          description: An optional description of the report plan with a maximum of
            1,024 characters.
        ReportDeliveryChannel:
          allOf:
          - $ref: '#/components/schemas/ReportDeliveryChannel'
          description: A structure that contains information about where and how to
            deliver your reports, specifically your Amazon S3 bucket name, S3 key
            prefix, and the formats of your reports.
        ReportSetting:
          allOf:
          - $ref: '#/components/schemas/ReportSetting'
          description: 'Identifies the report template for the report. Reports are
            built using a report template. The report templates are:


            `RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT
            | COPY_JOB_REPORT | RESTORE_JOB_REPORT`


            If the report template is `RESOURCE_COMPLIANCE_REPORT` or `CONTROL_COMPLIANCE_REPORT`,
            this API resource also describes the report coverage by Amazon Web Services
            Regions and frameworks.'
        ReportPlanTags:
          allOf:
          - $ref: '#/components/schemas/stringMap'
          description: The tags to assign to the report plan.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `CreateReportPlanInput`. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
      required:
      - ReportPlanName
      - ReportDeliveryChannel
      - ReportSetting
    CreateReportPlanOutput:
      type: object
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: The unique name of the report plan.
        ReportPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup vault is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationTime` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
    CreateRestoreTestingPlanInput:
      type: object
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This is a unique string that identifies the request and allows
            failed requests to be retriedwithout the risk of running the operation
            twice. This parameter is optional. If used, this parameter must contain
            1 to 50 alphanumeric or '-_.' characters.
        RestoreTestingPlan:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingPlanForCreate'
          description: 'A restore testing plan must contain a unique `RestoreTestingPlanName`
            string you create and must contain a `ScheduleExpression` cron. You may
            optionally include a `StartWindowHours` integer and a `CreatorRequestId`
            string.


            The `RestoreTestingPlanName` is a unique string that is the name of the
            restore testing plan. This cannot be changed after creation, and it must
            consist of only alphanumeric characters and underscores.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/SensitiveStringMap'
          description: The tags to assign to the restore testing plan.
      required:
      - RestoreTestingPlan
    CreateRestoreTestingPlanOutput:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time a restore testing plan was created, in Unix
            format and Coordinated Universal Time (UTC). The value of `CreationTime`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087AM.
        RestoreTestingPlanArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An Amazon Resource Name (ARN) that uniquely identifies the
            created restore testing plan.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'This unique string is the name of the restore testing plan.


            The name cannot be changed after creation. The name consists of only alphanumeric
            characters and underscores. Maximum length is 50.'
      required:
      - CreationTime
      - RestoreTestingPlanArn
      - RestoreTestingPlanName
    CreateRestoreTestingSelectionInput:
      type: object
      properties:
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: This is an optional unique string that identifies the request
            and allows failed requests to be retried without the risk of running the
            operation twice. If used, this parameter must contain 1 to 50 alphanumeric
            or '-_.' characters.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Input the restore testing plan name that was returned from
            the related CreateRestoreTestingPlan request.
        RestoreTestingSelection:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingSelectionForCreate'
          description: "This consists of `RestoreTestingSelectionName`, `ProtectedResourceType`,\
            \ and one of the following:\n\n  * `ProtectedResourceArns`\n\n  * `ProtectedResourceConditions`\n\
            \nEach protected resource type can have one single value.\n\nA restore\
            \ testing selection can include a wildcard value (\"*\") for `ProtectedResourceArns`\
            \ along with `ProtectedResourceConditions`. Alternatively, you can include\
            \ up to 30 specific protected resource ARNs in `ProtectedResourceArns`."
      required:
      - RestoreTestingPlanName
      - RestoreTestingSelection
    CreateRestoreTestingSelectionOutput:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time that the resource testing selection was created.
        RestoreTestingPlanArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The ARN of the restore testing plan with which the restore
            testing selection is associated.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The name of the restore testing plan.


            The name cannot be changed after creation. The name consists of only alphanumeric
            characters and underscores. Maximum length is 50.'
        RestoreTestingSelectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the restore testing selection for the related restore
            testing plan.
      required:
      - CreationTime
      - RestoreTestingPlanArn
      - RestoreTestingPlanName
      - RestoreTestingSelectionName
    CronExpression:
      type: string
    DateRange:
      type: object
      properties:
        FromDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'This value is the beginning date, inclusive.


            The date and time are in Unix format and Coordinated Universal Time (UTC),
            and it is accurate to milliseconds (milliseconds are optional).'
        ToDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'This value is the end date, inclusive.


            The date and time are in Unix format and Coordinated Universal Time (UTC),
            and it is accurate to milliseconds (milliseconds are optional).'
      required:
      - FromDate
      - ToDate
      description: 'This is a resource filter containing FromDate: DateTime and ToDate:
        DateTime. Both values are required. Future DateTime values are not permitted.


        The date and time are in Unix format and Coordinated Universal Time (UTC),
        and it is accurate to milliseconds ((milliseconds are optional). For example,
        the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087
        AM.'
    DeleteBackupPlanInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
      required:
      - BackupPlanId
    DeleteBackupPlanOutput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            plan; for example, `arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`.
        DeletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup plan is deleted, in Unix format
            and Coordinated Universal Time (UTC). The value of `DeletionDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Unique, randomly generated, Unicode, UTF-8 encoded strings
            that are at most 1,024 bytes long. Version IDs cannot be edited.
    DeleteBackupSelectionInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        SelectionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies the body of a request to assign a set of
            resources to a backup plan.
      required:
      - BackupPlanId
      - SelectionId
    DeleteBackupVaultAccessPolicyInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
            They consist of lowercase letters, numbers, and hyphens.
      required:
      - BackupVaultName
    DeleteBackupVaultInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
      required:
      - BackupVaultName
    DeleteBackupVaultLockConfigurationInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of the backup vault from which to delete Backup Vault
            Lock.
      required:
      - BackupVaultName
    DeleteBackupVaultNotificationsInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Region where they are created.
      required:
      - BackupVaultName
    DeleteFrameworkInput:
      type: object
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The unique name of a framework.
      required:
      - FrameworkName
    DeleteRecoveryPointInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
      required:
      - BackupVaultName
      - RecoveryPointArn
    DeleteReportPlanInput:
      type: object
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: The unique name of a report plan.
      required:
      - ReportPlanName
    DeleteRestoreTestingPlanInput:
      type: object
      properties:
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Required unique name of the restore testing plan you wish to
            delete.
      required:
      - RestoreTestingPlanName
    DeleteRestoreTestingSelectionInput:
      type: object
      properties:
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Required unique name of the restore testing plan that contains
            the restore testing selection you wish to delete.
        RestoreTestingSelectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Required unique name of the restore testing selection you wish
            to delete.
      required:
      - RestoreTestingPlanName
      - RestoreTestingSelectionName
    DependencyFailureException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: A dependent Amazon Web Services service or resource returned an
        error to the Backup service, and the action cannot be completed.
    DescribeBackupJobInput:
      type: object
      properties:
        BackupJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to Backup to back up a resource.
      required:
      - BackupJobId
    DescribeBackupJobOutput:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: Returns the account ID that owns the backup job.
        BackupJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to Backup to back up a resource.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a saved resource. The format
            of the ARN depends on the resource type.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup job is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a job to create a backup job is completed,
            in Unix format and Coordinated Universal Time (UTC). The value of `CompletionDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        State:
          allOf:
          - $ref: '#/components/schemas/BackupJobState'
          description: The current state of a backup job.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of the job to back
            up a resource.
        PercentDone:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Contains an estimated percentage that is complete of a job
            at the time the job status was queried.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of a backup.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role ARN used to create the target recovery
            point; for example, `arn:aws:iam::123456789012:role/S3Access`.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointCreator'
          description: Contains identifying information about the creation of a backup
            job, including the `BackupPlanArn`, `BackupPlanId`, `BackupPlanVersion`,
            and `BackupRuleId` of the backup plan that is used to create it.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Web Services resource to be backed up; for
            example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon
            Relational Database Service (Amazon RDS) database.
        BytesTransferred:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size in bytes transferred to a backup vault at the time
            that the job status was queried.
        ExpectedCompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a job to back up resources is expected
            to be completed, in Unix format and Coordinated Universal Time (UTC).
            The value of `ExpectedCompletionDate` is accurate to milliseconds. For
            example, the value 1516925490.087 represents Friday, January 26, 2018
            12:11:30.087 AM.
        StartBy:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Specifies the time in Unix format and Coordinated Universal
            Time (UTC) when a backup job must be started before it is canceled. The
            value is calculated by adding the start window to the scheduled time.
            So if the scheduled time were 6:00 PM and the start window is 2 hours,
            the `StartBy` time would be 8:00 PM on the date specified. The value of
            `StartBy` is accurate to milliseconds. For example, the value 1516925490.087
            represents Friday, January 26, 2018 12:11:30.087 AM.
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/BackupOptions'
          description: Represents the options specified as part of backup plan or
            on-demand backup job.
        BackupType:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Represents the actual backup type selected for a backup job.
            For example, if a successful Windows Volume Shadow Copy Service (VSS)
            backup was taken, `BackupType` returns `"WindowsVSS"`. If `BackupType`
            is empty, then the backup type was a regular backup.
        ParentJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This returns the parent (composite) resource backup job ID.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This returns the boolean value that a backup job is a parent
            (composite) job.
        NumberOfChildJobs:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: This returns the number of child (nested) backup jobs.
        ChildJobsInState:
          allOf:
          - $ref: '#/components/schemas/BackupJobChildJobsInState'
          description: This returns the statistics of the included child (nested)
            backup jobs.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The non-unique name of the resource that belongs to the specified
            backup.
        InitiationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date a backup job was initiated.
        MessageCategory:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The job count for the specified message category.


            Example strings may include `AccessDenied`, `SUCCESS`, `AGGREGATE_ALL`,
            and `INVALIDPARAMETERS`. View [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)
            for a list of accepted MessageCategory strings.'
    DescribeBackupVaultInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        BackupVaultAccountId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The account ID of the specified backup vault.
      required:
      - BackupVaultName
    DescribeBackupVaultOutput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        VaultType:
          allOf:
          - $ref: '#/components/schemas/VaultType'
          description: The type of vault described.
        VaultState:
          allOf:
          - $ref: '#/components/schemas/VaultState'
          description: The current state of the vault.->
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The server-side encryption key that is used to protect your
            backups; for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup vault is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed
            requests to be retried without the risk of running the operation twice.
            This parameter is optional. If used, this parameter must contain 1 to
            50 alphanumeric or '-_.' characters.
        NumberOfRecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/Long2'
          description: The number of recovery points that are stored in a backup vault.
        Locked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean that indicates whether Backup Vault Lock is currently
            protecting the backup vault. `True` means that Vault Lock causes delete
            or update operations on the recovery points stored in the vault to fail.
        MinRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The Backup Vault Lock setting that specifies the minimum retention
            period that the vault retains its recovery points. If this parameter is
            not specified, Vault Lock will not enforce a minimum retention period.


            If specified, any backup or copy job to the vault must have a lifecycle
            policy with a retention period equal to or longer than the minimum retention
            period. If the job''s retention period is shorter than that minimum retention
            period, then the vault fails the backup or copy job, and you should either
            modify your lifecycle settings or use a different vault. Recovery points
            already stored in the vault prior to Vault Lock are not affected.'
        MaxRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The Backup Vault Lock setting that specifies the maximum retention
            period that the vault retains its recovery points. If this parameter is
            not specified, Vault Lock does not enforce a maximum retention period
            on the recovery points in the vault (allowing indefinite storage).


            If specified, any backup or copy job to the vault must have a lifecycle
            policy with a retention period equal to or shorter than the maximum retention
            period. If the job''s retention period is longer than that maximum retention
            period, then the vault fails the backup or copy job, and you should either
            modify your lifecycle settings or use a different vault. Recovery points
            already stored in the vault prior to Vault Lock are not affected.'
        LockDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The date and time when Backup Vault Lock configuration cannot
            be changed or deleted.


            If you applied Vault Lock to your vault without specifying a lock date,
            you can change any of your Vault Lock settings, or delete Vault Lock from
            the vault entirely, at any time.


            This value is in Unix format, Coordinated Universal Time (UTC), and accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.'
    DescribeCopyJobInput:
      type: object
      properties:
        CopyJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a copy job.
      required:
      - CopyJobId
    DescribeCopyJobOutput:
      type: object
      properties:
        CopyJob:
          allOf:
          - $ref: '#/components/schemas/CopyJob'
          description: Contains detailed information about a copy job.
    DescribeFrameworkInput:
      type: object
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The unique name of a framework.
      required:
      - FrameworkName
    DescribeFrameworkOutput:
      type: object
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The unique name of a framework.
        FrameworkArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        FrameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: An optional description of the framework.
        FrameworkControls:
          allOf:
          - $ref: '#/components/schemas/FrameworkControls'
          description: The controls that make up the framework. Each control in the
            list has a name, input parameters, and scope.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a framework is created, in ISO 8601
            representation. The value of `CreationTime` is accurate to milliseconds.
            For example, 2020-07-10T15:00:00.000-08:00 represents the 10th of July
            2020 at 3:00 PM 8 hours behind UTC.
        DeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The deployment status of a framework. The statuses are:


            `CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED
            | FAILED`'
        FrameworkStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          description: "A framework consists of one or more controls. Each control\
            \ governs a resource, such as backup plans, backup selections, backup\
            \ vaults, or recovery points. You can also turn Config recording on or\
            \ off for each resource. The statuses are:\n\n  * `ACTIVE` when recording\
            \ is turned on for all resources governed by the framework.\n\n  * `PARTIALLY_ACTIVE`\
            \ when recording is turned off for at least one resource governed by the\
            \ framework.\n\n  * `INACTIVE` when recording is turned off for all resources\
            \ governed by the framework.\n\n  * `UNAVAILABLE` when Backup is unable\
            \ to validate recording status at this time."
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `DescribeFrameworkOutput`. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
    DescribeGlobalSettingsInput:
      type: object
      properties: {}
    DescribeGlobalSettingsOutput:
      type: object
      properties:
        GlobalSettings:
          allOf:
          - $ref: '#/components/schemas/GlobalSettings'
          description: The status of the flag `isCrossAccountBackupEnabled`.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that the flag `isCrossAccountBackupEnabled`
            was last updated. This update is in Unix format and Coordinated Universal
            Time (UTC). The value of `LastUpdateTime` is accurate to milliseconds.
            For example, the value 1516925490.087 represents Friday, January 26, 2018
            12:11:30.087 AM.
    DescribeProtectedResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
      required:
      - ResourceArn
    DescribeProtectedResourceOutput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a resource. The format of the
            ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Web Services resource saved as a recovery
            point; for example, an Amazon EBS volume or an Amazon RDS database.
        LastBackupTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a resource was last backed up, in Unix
            format and Coordinated Universal Time (UTC). The value of `LastBackupTime`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The name of the resource that belongs to the specified backup.
        LastBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN (Amazon Resource Name) of the backup vault that contains
            the most recent backup recovery point.
        LastRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN (Amazon Resource Name) of the most recent recovery
            point.
        LatestRestoreExecutionTimeMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The time, in minutes, that the most recent restore job took
            to complete.
        LatestRestoreJobCreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The creation date of the most recent restore job.
        LatestRestoreRecoveryPointCreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date the most recent recovery point was created.
    DescribeRecoveryPointInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        BackupVaultAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID of the specified backup vault.
      required:
      - BackupVaultName
      - RecoveryPointArn
    DescribeRecoveryPointOutput:
      type: object
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a backup vault; for example,
            `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        SourceBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies the
            source vault where the resource was originally backed up in; for example,
            `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`. If
            the recovery is restored to the same Amazon Web Services account or Region,
            this value will be `null`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a saved resource. The format
            of the ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Web Services resource to save as a recovery
            point; for example, an Amazon Elastic Block Store (Amazon EBS) volume
            or an Amazon Relational Database Service (Amazon RDS) database.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointCreator'
          description: Contains identifying information about the creation of a recovery
            point, including the `BackupPlanArn`, `BackupPlanId`, `BackupPlanVersion`,
            and `BackupRuleId` of the backup plan used to create it.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role ARN used to create the target recovery
            point; for example, `arn:aws:iam::123456789012:role/S3Access`.
        Status:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointStatus'
          description: 'A status code specifying the state of the recovery point.


            `PARTIAL` status indicates Backup could not create the recovery point
            before the backup window closed. To increase your backup plan window using
            the API, see [UpdateBackupPlan](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateBackupPlan.html).
            You can also increase your backup plan window using the Console by choosing
            and editing your backup plan.


            `EXPIRED` status indicates that the recovery point has exceeded its retention
            period, but Backup lacks permission or is otherwise unable to delete it.
            To manually delete these recovery points, see [ Step 3: Delete the recovery
            points](https://docs.aws.amazon.com/aws-backup/latest/devguide/gs-cleanup-resources.html#cleanup-backups)
            in the _Clean up resources_ section of _Getting started_.


            `STOPPED` status occurs on a continuous backup where a user has taken
            some action that causes the continuous backup to be disabled. This can
            be caused by the removal of permissions, turning off versioning, turning
            off events being sent to EventBridge, or disabling the EventBridge rules
            that are put in place by Backup. For recovery points of Amazon S3, Amazon
            RDS, and Amazon Aurora resources, this status occurs when the retention
            period of a continuous backup rule is changed.


            To resolve `STOPPED` status, ensure that all requested permissions are
            in place and that versioning is enabled on the S3 bucket. Once these conditions
            are met, the next instance of a backup rule running will result in a new
            continuous recovery point being created. The recovery points with STOPPED
            status do not need to be deleted.


            For SAP HANA on Amazon EC2 `STOPPED` status occurs due to user action,
            application misconfiguration, or backup failure. To ensure that future
            continuous backups succeed, refer to the recovery point status and check
            SAP HANA for details.'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A status message explaining the status of the recovery point.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a recovery point is created, in Unix
            format and Coordinated Universal Time (UTC). The value of `CreationDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a job to create a recovery point is
            completed, in Unix format and Coordinated Universal Time (UTC). The value
            of `CompletionDate` is accurate to milliseconds. For example, the value
            1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of a backup.
        CalculatedLifecycle:
          allOf:
          - $ref: '#/components/schemas/CalculatedLifecycle'
          description: A `CalculatedLifecycle` object containing `DeleteAt` and `MoveToColdStorageAt`
            timestamps.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/Lifecycle'
          description: 'The lifecycle defines when a protected resource is transitioned
            to cold storage and when it expires. Backup transitions and expires backups
            automatically according to the lifecycle that you define.


            Backups that are transitioned to cold storage must be stored in cold storage
            for a minimum of 90 days. Therefore, the “retention” setting must be 90
            days greater than the “transition to cold after days” setting. The “transition
            to cold after days” setting cannot be changed after a backup has been
            transitioned to cold.


            Resource types that can transition to cold storage are listed in the [Feature
            availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
            table. Backup ignores this expression for other resource types.'
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The server-side encryption key used to protect your backups;
            for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`.
        IsEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: A Boolean value that is returned as `TRUE` if the specified
            recovery point is encrypted, or `FALSE` if the recovery point is not encrypted.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/StorageClass'
          description: Specifies the storage class of the recovery point. Valid values
            are `WARM` or `COLD`.
        LastRestoreTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a recovery point was last restored,
            in Unix format and Coordinated Universal Time (UTC). The value of `LastRestoreTime`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        ParentRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: This is an ARN that uniquely identifies a parent (composite)
            recovery point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        CompositeMemberIdentifier:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The identifier of a resource within a composite group, such
            as nested (child) recovery point belonging to a composite (parent) stack.
            The ID is transferred from the [ logical ID](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html#resources-section-structure-syntax)
            within a stack.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This returns the boolean value that a recovery point is a parent
            (composite) job.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The name of the resource that belongs to the specified backup.
        VaultType:
          allOf:
          - $ref: '#/components/schemas/VaultType'
          description: The type of vault in which the described recovery point is
            stored.
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/IndexStatus'
          description: 'This is the current status for the backup index associated
            with the specified recovery point.


            Statuses are: `PENDING` | `ACTIVE` | `FAILED` | `DELETING`


            A recovery point with an index that has the status of `ACTIVE` can be
            included in a search.'
        IndexStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A string in the form of a detailed message explaining the status
            of a backup index associated with the recovery point.
    DescribeRegionSettingsInput:
      type: object
      properties: {}
    DescribeRegionSettingsOutput:
      type: object
      properties:
        ResourceTypeOptInPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeOptInPreference'
          description: The services along with the opt-in preferences in the Region.
        ResourceTypeManagementPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeManagementPreference'
          description: 'Returns whether Backup fully manages the backups for a resource
            type.


            For the benefits of full Backup management, see [Full Backup management](https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#full-management).


            For a list of resource types and whether each supports full Backup management,
            see the [Feature availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
            table.


            If `"DynamoDB":false`, you can enable full Backup management for DynamoDB
            backup by enabling [ Backup''s advanced DynamoDB backup features](https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html#advanced-ddb-backup-enable-cli).'
    DescribeReportJobInput:
      type: object
      properties:
        ReportJobId:
          allOf:
          - $ref: '#/components/schemas/ReportJobId'
          description: The identifier of the report job. A unique, randomly generated,
            Unicode, UTF-8 encoded string that is at most 1,024 bytes long. The report
            job ID cannot be edited.
      required:
      - ReportJobId
    DescribeReportJobOutput:
      type: object
      properties:
        ReportJob:
          allOf:
          - $ref: '#/components/schemas/ReportJob'
          description: The information about a report job, including its completion
            and creation times, report destination, unique report job ID, Amazon Resource
            Name (ARN), report template, status, and status message.
    DescribeReportPlanInput:
      type: object
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: The unique name of a report plan.
      required:
      - ReportPlanName
    DescribeReportPlanOutput:
      type: object
      properties:
        ReportPlan:
          allOf:
          - $ref: '#/components/schemas/ReportPlan'
          description: Returns details about the report plan that is specified by
            its name. These details include the report plan's Amazon Resource Name
            (ARN), description, settings, delivery channel, deployment status, creation
            time, and last attempted and successful run times.
    DescribeRestoreJobInput:
      type: object
      properties:
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/RestoreJobId'
          description: Uniquely identifies the job that restores a recovery point.
      required:
      - RestoreJobId
    DescribeRestoreJobOutput:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: Returns the account ID that owns the restore job.
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies the job that restores a recovery point.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a restore job is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a job to restore a recovery point is
            completed, in Unix format and Coordinated Universal Time (UTC). The value
            of `CompletionDate` is accurate to milliseconds. For example, the value
            1516925490.087 represents Friday, January 26, 2018 12:11:30.087 AM.
        Status:
          allOf:
          - $ref: '#/components/schemas/RestoreJobStatus'
          description: Status code specifying the state of the job that is initiated
            by Backup to restore a recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A message showing the status of a job to restore a recovery
            point.
        PercentDone:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Contains an estimated percentage that is complete of a job
            at the time the job status was queried.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of the restored resource.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role ARN used to create the target recovery
            point; for example, `arn:aws:iam::123456789012:role/S3Access`.
        ExpectedCompletionTimeMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The amount of time in minutes that a job restoring a recovery
            point is expected to take.
        CreatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'The Amazon Resource Name (ARN) of the resource that was created
            by the restore job.


            The format of the ARN depends on the resource type of the backed-up resource.'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: Returns metadata associated with a restore job listed by resource
            type.
        RecoveryPointCreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The creation date of the recovery point made by the specifed
            restore job.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/RestoreJobCreator'
          description: Contains identifying information about the creation of a restore
            job.
        ValidationStatus:
          allOf:
          - $ref: '#/components/schemas/RestoreValidationStatus'
          description: The status of validation run on the indicated restore job.
        ValidationStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The status message.
        DeletionStatus:
          allOf:
          - $ref: '#/components/schemas/RestoreDeletionStatus'
          description: The status of the data generated by the restore test.
        DeletionStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This describes the restore job deletion status.
    DisassociateRecoveryPointFromParentInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where the child (nested) recovery
            point is stored. Backup vaults are identified by names that are unique
            to the account used to create them and the Amazon Web Services Region
            where they are created.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) that uniquely identifies the
            child (nested) recovery point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45.`
      required:
      - BackupVaultName
      - RecoveryPointArn
    DisassociateRecoveryPointInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The unique name of an Backup vault.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies an Backup
            recovery point.
      required:
      - BackupVaultName
      - RecoveryPointArn
    ExportBackupPlanTemplateInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
      required:
      - BackupPlanId
    ExportBackupPlanTemplateOutput:
      type: object
      properties:
        BackupPlanTemplateJson:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The body of a backup plan template in JSON format.


            This is a signed JSON document that cannot be modified before being passed
            to `GetBackupPlanFromJSON.`'
    FormatList:
      type: array
      items:
        $ref: '#/components/schemas/string'
    Framework:
      type: object
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The unique name of a framework. This name is between 1 and
            256 characters, starting with a letter, and consisting of letters (a-z,
            A-Z), numbers (0-9), and underscores (_).
        FrameworkArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        FrameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: An optional description of the framework with a maximum 1,024
            characters.
        NumberOfControls:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: The number of controls contained by the framework.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a framework is created, in ISO 8601
            representation. The value of `CreationTime` is accurate to milliseconds.
            For example, 2020-07-10T15:00:00.000-08:00 represents the 10th of July
            2020 at 3:00 PM 8 hours behind UTC.
        DeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The deployment status of a framework. The statuses are:


            `CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED
            | FAILED`'
      description: Contains detailed information about a framework. Frameworks contain
        controls, which evaluate and report on your backup events and resources. Frameworks
        generate daily compliance results.
    FrameworkControl:
      type: object
      properties:
        ControlName:
          allOf:
          - $ref: '#/components/schemas/ControlName'
          description: The name of a control. This name is between 1 and 256 characters.
        ControlInputParameters:
          allOf:
          - $ref: '#/components/schemas/ControlInputParameters'
          description: The name/value pairs.
        ControlScope:
          allOf:
          - $ref: '#/components/schemas/ControlScope'
          description: 'The scope of a control. The control scope defines what the
            control will evaluate. Three examples of control scopes are: a specific
            backup plan, all backup plans with a specific tag, or all backup plans.


            For more information, see [ `ControlScope`.](https://docs.aws.amazon.com/aws-backup/latest/devguide/API_ControlScope.html)'
      required:
      - ControlName
      description: Contains detailed information about all of the controls of a framework.
        Each framework must contain at least one control.
    FrameworkControls:
      type: array
      items:
        $ref: '#/components/schemas/FrameworkControl'
    FrameworkDescription:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 1024
    FrameworkList:
      type: array
      items:
        $ref: '#/components/schemas/Framework'
    FrameworkName:
      type: string
      pattern: ^[a-zA-Z][_a-zA-Z0-9]*$
      minLength: 1
      maxLength: 256
    GetBackupPlanFromJSONInput:
      type: object
      properties:
        BackupPlanTemplateJson:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-supplied backup plan document in JSON format.
      required:
      - BackupPlanTemplateJson
    GetBackupPlanFromJSONOutput:
      type: object
      properties:
        BackupPlan:
          allOf:
          - $ref: '#/components/schemas/BackupPlan'
          description: Specifies the body of a backup plan. Includes a `BackupPlanName`
            and one or more sets of `Rules`.
    GetBackupPlanFromTemplateInput:
      type: object
      properties:
        BackupPlanTemplateId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a stored backup plan template.
      required:
      - BackupPlanTemplateId
    GetBackupPlanFromTemplateOutput:
      type: object
      properties:
        BackupPlanDocument:
          allOf:
          - $ref: '#/components/schemas/BackupPlan'
          description: Returns the body of a backup plan based on the target template,
            including the name, rules, and backup vault of the plan.
    GetBackupPlanInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Unique, randomly generated, Unicode, UTF-8 encoded strings
            that are at most 1,024 bytes long. Version IDs cannot be edited.
      required:
      - BackupPlanId
    GetBackupPlanOutput:
      type: object
      properties:
        BackupPlan:
          allOf:
          - $ref: '#/components/schemas/BackupPlan'
          description: Specifies the body of a backup plan. Includes a `BackupPlanName`
            and one or more sets of `Rules`.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            plan; for example, `arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Unique, randomly generated, Unicode, UTF-8 encoded strings
            that are at most 1,024 bytes long. Version IDs cannot be edited.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed
            requests to be retried without the risk of running the operation twice.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup plan is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        DeletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup plan is deleted, in Unix format
            and Coordinated Universal Time (UTC). The value of `DeletionDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        LastExecutionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The last time this backup plan was run. A date and time, in
            Unix format and Coordinated Universal Time (UTC). The value of `LastExecutionDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Contains a list of `BackupOptions` for each resource type.
            The list is populated only if the advanced option is set for the backup
            plan.
    GetBackupSelectionInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        SelectionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies the body of a request to assign a set of
            resources to a backup plan.
      required:
      - BackupPlanId
      - SelectionId
    GetBackupSelectionOutput:
      type: object
      properties:
        BackupSelection:
          allOf:
          - $ref: '#/components/schemas/BackupSelection'
          description: Specifies the body of a request to assign a set of resources
            to a backup plan.
        SelectionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies the body of a request to assign a set of
            resources to a backup plan.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup selection is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A unique string that identifies the request and allows failed
            requests to be retried without the risk of running the operation twice.
    GetBackupVaultAccessPolicyInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
      required:
      - BackupVaultName
    GetBackupVaultAccessPolicyOutput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        Policy:
          allOf:
          - $ref: '#/components/schemas/IAMPolicy'
          description: The backup vault access policy document in JSON format.
    GetBackupVaultNotificationsInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
      required:
      - BackupVaultName
    GetBackupVaultNotificationsOutput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            vault; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        SNSTopicArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies an Amazon Simple Notification
            Service (Amazon SNS) topic; for example, `arn:aws:sns:us-west-2:111122223333:MyTopic`.
        BackupVaultEvents:
          allOf:
          - $ref: '#/components/schemas/BackupVaultEvents'
          description: An array of events that indicate the status of jobs to back
            up resources to the backup vault.
    GetLegalHoldInput:
      type: object
      properties:
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the legal hold.
      required:
      - LegalHoldId
    GetLegalHoldOutput:
      type: object
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The title of the legal hold.
        Status:
          allOf:
          - $ref: '#/components/schemas/LegalHoldStatus'
          description: The status of the legal hold.
        Description:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The description of the legal hold.
        CancelDescription:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The reason for removing the legal hold.
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the legal hold.
        LegalHoldArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The framework ARN for the specified legal hold. The format
            of the ARN depends on the resource type.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The time when the legal hold was created.
        CancellationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The time when the legal hold was cancelled.
        RetainRecordUntil:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time until which the legal hold record is retained.
        RecoveryPointSelection:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointSelection'
          description: The criteria to assign a set of resources, such as resource
            types or backup vaults.
    GetRecoveryPointIndexDetailsInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored.
            Backup vaults are identified by names that are unique to the account used
            to create them and the Region where they are created.


            Accepted characters include lowercase letters, numbers, and hyphens.'
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
      required:
      - BackupVaultName
      - RecoveryPointArn
    GetRecoveryPointIndexDetailsOutput:
      type: object
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies the backup vault where the
            recovery point index is stored.


            For example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.'
        SourceResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: A string of the Amazon Resource Name (ARN) that uniquely identifies
            the source resource.
        IndexCreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup index was created, in Unix
            format and Coordinated Universal Time (UTC). The value of `CreationDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        IndexDeletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup index was deleted, in Unix
            format and Coordinated Universal Time (UTC). The value of `CreationDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        IndexCompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup index finished creation, in
            Unix format and Coordinated Universal Time (UTC). The value of `CreationDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/IndexStatus'
          description: 'This is the current status for the backup index associated
            with the specified recovery point.


            Statuses are: `PENDING` | `ACTIVE` | `FAILED` | `DELETING`


            A recovery point with an index that has the status of `ACTIVE` can be
            included in a search.'
        IndexStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of a backup index
            associated with the recovery point.
        TotalItemsIndexed:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: Count of items within the backup index associated with the
            recovery point.
    GetRecoveryPointRestoreMetadataInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        BackupVaultAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID of the specified backup vault.
      required:
      - BackupVaultName
      - RecoveryPointArn
    GetRecoveryPointRestoreMetadataOutput:
      type: object
      properties:
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a backup vault; for example,
            `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        RestoreMetadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The set of metadata key-value pairs that describe the original
            configuration of the backed-up resource. These values vary depending on
            the service that is being restored.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type of the recovery point.
    GetRestoreJobMetadataInput:
      type: object
      properties:
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/RestoreJobId'
          description: This is a unique identifier of a restore job within Backup.
      required:
      - RestoreJobId
    GetRestoreJobMetadataOutput:
      type: object
      properties:
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/RestoreJobId'
          description: This is a unique identifier of a restore job within Backup.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: This contains the metadata of the specified backup job.
    GetRestoreTestingInferredMetadataInput:
      type: object
      properties:
        BackupVaultAccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The account ID of the specified backup vault.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web ServicesRegion where they are created.
            They consist of letters, numbers, and hyphens.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
      required:
      - BackupVaultName
      - RecoveryPointArn
    GetRestoreTestingInferredMetadataOutput:
      type: object
      properties:
        InferredMetadata:
          allOf:
          - $ref: '#/components/schemas/stringMap'
          description: This is a string map of the metadata inferred from the request.
      required:
      - InferredMetadata
    GetRestoreTestingPlanInput:
      type: object
      properties:
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Required unique name of the restore testing plan.
      required:
      - RestoreTestingPlanName
    GetRestoreTestingPlanOutput:
      type: object
      properties:
        RestoreTestingPlan:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingPlanForGet'
          description: Specifies the body of a restore testing plan. Includes `RestoreTestingPlanName`.
      required:
      - RestoreTestingPlan
    GetRestoreTestingSelectionInput:
      type: object
      properties:
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Required unique name of the restore testing plan.
        RestoreTestingSelectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Required unique name of the restore testing selection.
      required:
      - RestoreTestingPlanName
      - RestoreTestingSelectionName
    GetRestoreTestingSelectionOutput:
      type: object
      properties:
        RestoreTestingSelection:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingSelectionForGet'
          description: Unique name of the restore testing selection.
      required:
      - RestoreTestingSelection
    GetSupportedResourceTypesOutput:
      type: object
      properties:
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypes'
          description: "Contains a string with the supported Amazon Web Services resource\
            \ types:\n\n  * `Aurora` for Amazon Aurora\n\n  * `CloudFormation` for\
            \ CloudFormation\n\n  * `DocumentDB` for Amazon DocumentDB (with MongoDB\
            \ compatibility)\n\n  * `DynamoDB` for Amazon DynamoDB\n\n  * `EBS` for\
            \ Amazon Elastic Block Store\n\n  * `EC2` for Amazon Elastic Compute Cloud\n\
            \n  * `EFS` for Amazon Elastic File System\n\n  * `FSx` for Amazon FSx\n\
            \n  * `Neptune` for Amazon Neptune\n\n  * `RDS` for Amazon Relational\
            \ Database Service\n\n  * `Redshift` for Amazon Redshift\n\n  * `S3` for\
            \ Amazon Simple Storage Service (Amazon S3)\n\n  * `SAP HANA on Amazon\
            \ EC2` for SAP HANA databases on Amazon Elastic Compute Cloud instances\n\
            \n  * `Storage Gateway` for Storage Gateway\n\n  * `Timestream` for Amazon\
            \ Timestream\n\n  * `VirtualMachine` for VMware virtual machines"
    GlobalSettings:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/GlobalSettingsValue'
    GlobalSettingsName:
      type: string
    GlobalSettingsValue:
      type: string
    IAMPolicy:
      type: string
    IAMRoleArn:
      type: string
    Index:
      type: string
      enum:
      - ENABLED
      - DISABLED
    IndexAction:
      type: object
      properties:
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypes'
          description: "0 or 1 index action will be accepted for each BackupRule.\n\
            \nValid values:\n\n  * `EBS` for Amazon Elastic Block Store\n\n  * `S3`\
            \ for Amazon Simple Storage Service (Amazon S3)"
      description: 'This is an optional array within a BackupRule.


        IndexAction consists of one ResourceTypes.'
    IndexActions:
      type: array
      items:
        $ref: '#/components/schemas/IndexAction'
    IndexStatus:
      type: string
      enum:
      - PENDING
      - ACTIVE
      - FAILED
      - DELETING
    IndexedRecoveryPoint:
      type: object
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`
        SourceResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: A string of the Amazon Resource Name (ARN) that uniquely identifies
            the source resource.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'This specifies the IAM role ARN used for this operation.


            For example, arn:aws:iam::123456789012:role/S3Access'
        BackupCreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup was created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: "The resource type of the indexed recovery point.\n\n  * `EBS`\
            \ for Amazon Elastic Block Store\n\n  * `S3` for Amazon Simple Storage\
            \ Service (Amazon S3)"
        IndexCreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup index was created, in Unix
            format and Coordinated Universal Time (UTC). The value of `CreationDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/IndexStatus'
          description: 'This is the current status for the backup index associated
            with the specified recovery point.


            Statuses are: `PENDING` | `ACTIVE` | `FAILED` | `DELETING`


            A recovery point with an index that has the status of `ACTIVE` can be
            included in a search.'
        IndexStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A string in the form of a detailed message explaining the status
            of a backup index associated with the recovery point.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies the backup vault where the
            recovery point index is stored.


            For example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.'
      description: 'This is a recovery point that has an associated backup index.


        Only recovery points with a backup index can be included in a search.'
    IndexedRecoveryPointList:
      type: array
      items:
        $ref: '#/components/schemas/IndexedRecoveryPoint'
    InvalidParameterValueException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: Indicates that something is wrong with a parameter's value. For
        example, the value is out of range.
    InvalidRequestException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: Indicates that something is wrong with the input to the request.
        For example, a parameter is of the wrong type.
    InvalidResourceStateException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: Backup is already performing an action on this recovery point.
        It can't perform the action you requested until the first action finishes.
        Try again later.
    IsEnabled:
      type: boolean
      default: false
    KeyValue:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The tag key (String). The key can''t start with `aws:`.


            Length Constraints: Minimum length of 1. Maximum length of 128.


            Pattern: `^(?![aA]{1}[wW]{1}[sS]{1}:)([\p{L}\p{Z}\p{N}_.:/=+\-@]+)$`'
        Value:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The value of the key.


            Length Constraints: Maximum length of 256.


            Pattern: `^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$`'
      required:
      - Key
      - Value
      description: 'Pair of two related strings. Allowed characters are letters, white
        space, and numbers that can be represented in UTF-8 and the following characters:
        ` + - = . _ : /`'
    KeyValueList:
      type: array
      items:
        $ref: '#/components/schemas/KeyValue'
    LegalHold:
      type: object
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The title of a legal hold.
        Status:
          allOf:
          - $ref: '#/components/schemas/LegalHoldStatus'
          description: The status of the legal hold.
        Description:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The description of a legal hold.
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the legal hold.
        LegalHoldArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the legal hold; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The time when the legal hold was created.
        CancellationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The time when the legal hold was cancelled.
      description: A legal hold is an administrative tool that helps prevent backups
        from being deleted while under a hold. While the hold is in place, backups
        under a hold cannot be deleted and lifecycle policies that would alter the
        backup status (such as transition to cold storage) are delayed until the legal
        hold is removed. A backup can have more than one legal hold. Legal holds are
        applied to one or more backups (also known as recovery points). These backups
        can be filtered by resource types and by resource IDs.
    LegalHoldStatus:
      type: string
      enum:
      - CREATING
      - ACTIVE
      - CANCELING
      - CANCELED
    LegalHoldsList:
      type: array
      items:
        $ref: '#/components/schemas/LegalHold'
    Lifecycle:
      type: object
      properties:
        MoveToColdStorageAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of days after creation that a recovery point is
            moved to cold storage.
        DeleteAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The number of days after creation that a recovery point is
            deleted. This value must be at least 90 days after the number of days
            specified in `MoveToColdStorageAfterDays`.
        OptInToArchiveForSupportedResources:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: If the value is true, your backup plan transitions supported
            resources to archive (cold) storage tier in accordance with your lifecycle
            settings.
      description: 'Specifies the time period, in days, before a recovery point transitions
        to cold storage or is deleted.


        Backups transitioned to cold storage must be stored in cold storage for a
        minimum of 90 days. Therefore, on the console, the retention setting must
        be 90 days greater than the transition to cold after days setting. The transition
        to cold after days setting can''t be changed after a backup has been transitioned
        to cold.


        Resource types that can transition to cold storage are listed in the [Feature
        availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
        table. Backup ignores this expression for other resource types.


        To remove the existing lifecycle and retention periods and keep your recovery
        points indefinitely, specify -1 for `MoveToColdStorageAfterDays` and `DeleteAfterDays`.'
    LimitExceededException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: A limit in the request has been exceeded; for example, a maximum
        number of items allowed in a request.
    ListBackupJobSummariesInput:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Returns the job count for the specified account.


            If the request is sent from a member account or an account not part of
            Amazon Web Services Organizations, jobs within requestor''s account will
            be returned.


            Root, admin, and delegated administrator accounts can use the value ANY
            to return job counts from every account in the organization.


            `AGGREGATE_ALL` aggregates job counts from all accounts within the authenticated
            organization, then returns the sum.'
        State:
          allOf:
          - $ref: '#/components/schemas/BackupJobStatus'
          description: 'This parameter returns the job count for jobs with the specified
            state.


            The the value ANY returns count of all states.


            `AGGREGATE_ALL` aggregates job counts for all states and returns the sum.


            `Completed with issues` is a status found only in the Backup console.
            For API, this status refers to jobs with a state of `COMPLETED` and a
            `MessageCategory` with a value other than `SUCCESS`; that is, the status
            is completed but comes with a status message. To obtain the job count
            for `Completed with issues`, run two GET requests, and subtract the second,
            smaller number:


            GET /audit/backup-job-summaries?AggregationPeriod=FOURTEEN_DAYS&State;=COMPLETED


            GET /audit/backup-job-summaries?AggregationPeriod=FOURTEEN_DAYS&MessageCategory;=SUCCESS&State;=COMPLETED'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: 'Returns the job count for the specified resource type. Use
            request `GetSupportedResourceTypes` to obtain strings for supported resource
            types.


            The the value ANY returns count of all resource types.


            `AGGREGATE_ALL` aggregates job counts for all resource types and returns
            the sum.


            The type of Amazon Web Services resource to be backed up; for example,
            an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational
            Database Service (Amazon RDS) database.'
        MessageCategory:
          allOf:
          - $ref: '#/components/schemas/MessageCategory'
          description: 'This parameter returns the job count for the specified message
            category.


            Example accepted strings include `AccessDenied`, `Success`, and `InvalidParameters`.
            See [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)
            for a list of accepted MessageCategory strings.


            The the value ANY returns count of all message categories.


            `AGGREGATE_ALL` aggregates job counts for all message categories and returns
            the sum.'
        AggregationPeriod:
          allOf:
          - $ref: '#/components/schemas/AggregationPeriod'
          description: "The period for the returned results.\n\n  * `ONE_DAY` \\-\
            \ The daily job count for the prior 14 days.\n\n  * `SEVEN_DAYS` \\- The\
            \ aggregated job count for the prior 7 days.\n\n  * `FOURTEEN_DAYS` \\\
            - The aggregated job count for prior 14 days."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of items to be returned.


            The value is an integer. Range of accepted values is from 1 to 500.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListBackupJobSummariesOutput:
      type: object
      properties:
        BackupJobSummaries:
          allOf:
          - $ref: '#/components/schemas/BackupJobSummaryList'
          description: The summary information.
        AggregationPeriod:
          allOf:
          - $ref: '#/components/schemas/string'
          description: "The period for the returned results.\n\n  * `ONE_DAY` \\-\
            \ The daily job count for the prior 14 days.\n\n  * `SEVEN_DAYS` \\- The\
            \ aggregated job count for the prior 7 days.\n\n  * `FOURTEEN_DAYS` \\\
            - The aggregated job count for prior 14 days."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListBackupJobsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
        ByResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Returns only backup jobs that match the specified resource
            Amazon Resource Name (ARN).
        ByState:
          allOf:
          - $ref: '#/components/schemas/BackupJobState'
          description: 'Returns only backup jobs that are in the specified state.


            `Completed with issues` is a status found only in the Backup console.
            For API, this status refers to jobs with a state of `COMPLETED` and a
            `MessageCategory` with a value other than `SUCCESS`; that is, the status
            is completed but comes with a status message.


            To obtain the job count for `Completed with issues`, run two GET requests,
            and subtract the second, smaller number:


            GET /backup-jobs/?state=COMPLETED


            GET /backup-jobs/?messageCategory=SUCCESS&state;=COMPLETED'
        ByBackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: Returns only backup jobs that will be stored in the specified
            backup vault. Backup vaults are identified by names that are unique to
            the account used to create them and the Amazon Web Services Region where
            they are created.
        ByCreatedBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only backup jobs that were created before the specified
            date.
        ByCreatedAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only backup jobs that were created after the specified
            date.
        ByResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: "Returns only backup jobs for the specified resources:\n\n\
            \  * `Aurora` for Amazon Aurora\n\n  * `CloudFormation` for CloudFormation\n\
            \n  * `DocumentDB` for Amazon DocumentDB (with MongoDB compatibility)\n\
            \n  * `DynamoDB` for Amazon DynamoDB\n\n  * `EBS` for Amazon Elastic Block\
            \ Store\n\n  * `EC2` for Amazon Elastic Compute Cloud\n\n  * `EFS` for\
            \ Amazon Elastic File System\n\n  * `FSx` for Amazon FSx\n\n  * `Neptune`\
            \ for Amazon Neptune\n\n  * `RDS` for Amazon Relational Database Service\n\
            \n  * `Redshift` for Amazon Redshift\n\n  * `S3` for Amazon Simple Storage\
            \ Service (Amazon S3)\n\n  * `SAP HANA on Amazon EC2` for SAP HANA databases\
            \ on Amazon Elastic Compute Cloud instances\n\n  * `Storage Gateway` for\
            \ Storage Gateway\n\n  * `Timestream` for Amazon Timestream\n\n  * `VirtualMachine`\
            \ for VMware virtual machines"
        ByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'The account ID to list the jobs from. Returns only backup
            jobs associated with the specified account ID.


            If used from an Organizations management account, passing `*` returns
            all jobs across the organization.'
        ByCompleteAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only backup jobs completed after a date expressed in
            Unix format and Coordinated Universal Time (UTC).
        ByCompleteBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only backup jobs completed before a date expressed
            in Unix format and Coordinated Universal Time (UTC).
        ByParentJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This is a filter to list child (nested) jobs based on parent
            job ID.
        ByMessageCategory:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'This is an optional parameter that can be used to filter out
            jobs with a MessageCategory which matches the value you input.


            Example strings may include `AccessDenied`, `SUCCESS`, `AGGREGATE_ALL`,
            and `InvalidParameters`.


            View [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)


            The wildcard () returns count of all message categories.


            `AGGREGATE_ALL` aggregates job counts for all message categories and returns
            the sum.'
    ListBackupJobsOutput:
      type: object
      properties:
        BackupJobs:
          allOf:
          - $ref: '#/components/schemas/BackupJobsList'
          description: An array of structures containing metadata about your backup
            jobs returned in JSON format.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListBackupPlanTemplatesInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to return.
    ListBackupPlanTemplatesOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        BackupPlanTemplatesList:
          allOf:
          - $ref: '#/components/schemas/BackupPlanTemplatesList'
          description: An array of template list items containing metadata about your
            saved templates.
    ListBackupPlanVersionsInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
      required:
      - BackupPlanId
    ListBackupPlanVersionsOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        BackupPlanVersionsList:
          allOf:
          - $ref: '#/components/schemas/BackupPlanVersionsList'
          description: An array of version list items containing metadata about your
            backup plans.
    ListBackupPlansInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
        IncludeDeleted:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean value with a default value of `FALSE` that returns
            deleted backup plans when set to `TRUE`.
    ListBackupPlansOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        BackupPlansList:
          allOf:
          - $ref: '#/components/schemas/BackupPlansList'
          description: Information about the backup plans.
    ListBackupSelectionsInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
      required:
      - BackupPlanId
    ListBackupSelectionsOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        BackupSelectionsList:
          allOf:
          - $ref: '#/components/schemas/BackupSelectionsList'
          description: An array of backup selection list items containing metadata
            about each resource in the list.
    ListBackupVaultsInput:
      type: object
      properties:
        ByVaultType:
          allOf:
          - $ref: '#/components/schemas/VaultType'
          description: This parameter will sort the list of vaults by vault type.
        ByShared:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This parameter will sort the list of vaults by shared vaults.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
    ListBackupVaultsOutput:
      type: object
      properties:
        BackupVaultList:
          allOf:
          - $ref: '#/components/schemas/BackupVaultList'
          description: An array of backup vault list members containing vault metadata,
            including Amazon Resource Name (ARN), display name, creation date, number
            of saved recovery points, and encryption information if the resources
            saved in the backup vault are encrypted.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListCopyJobSummariesInput:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Returns the job count for the specified account.


            If the request is sent from a member account or an account not part of
            Amazon Web Services Organizations, jobs within requestor''s account will
            be returned.


            Root, admin, and delegated administrator accounts can use the value ANY
            to return job counts from every account in the organization.


            `AGGREGATE_ALL` aggregates job counts from all accounts within the authenticated
            organization, then returns the sum.'
        State:
          allOf:
          - $ref: '#/components/schemas/CopyJobStatus'
          description: 'This parameter returns the job count for jobs with the specified
            state.


            The the value ANY returns count of all states.


            `AGGREGATE_ALL` aggregates job counts for all states and returns the sum.'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: 'Returns the job count for the specified resource type. Use
            request `GetSupportedResourceTypes` to obtain strings for supported resource
            types.


            The the value ANY returns count of all resource types.


            `AGGREGATE_ALL` aggregates job counts for all resource types and returns
            the sum.


            The type of Amazon Web Services resource to be backed up; for example,
            an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational
            Database Service (Amazon RDS) database.'
        MessageCategory:
          allOf:
          - $ref: '#/components/schemas/MessageCategory'
          description: 'This parameter returns the job count for the specified message
            category.


            Example accepted strings include `AccessDenied`, `Success`, and `InvalidParameters`.
            See [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)
            for a list of accepted MessageCategory strings.


            The the value ANY returns count of all message categories.


            `AGGREGATE_ALL` aggregates job counts for all message categories and returns
            the sum.'
        AggregationPeriod:
          allOf:
          - $ref: '#/components/schemas/AggregationPeriod'
          description: "The period for the returned results.\n\n  * `ONE_DAY` \\-\
            \ The daily job count for the prior 14 days.\n\n  * `SEVEN_DAYS` \\- The\
            \ aggregated job count for the prior 7 days.\n\n  * `FOURTEEN_DAYS` \\\
            - The aggregated job count for prior 14 days."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'This parameter sets the maximum number of items to be returned.


            The value is an integer. Range of accepted values is from 1 to 500.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListCopyJobSummariesOutput:
      type: object
      properties:
        CopyJobSummaries:
          allOf:
          - $ref: '#/components/schemas/CopyJobSummaryList'
          description: This return shows a summary that contains Region, Account,
            State, ResourceType, MessageCategory, StartTime, EndTime, and Count of
            included jobs.
        AggregationPeriod:
          allOf:
          - $ref: '#/components/schemas/string'
          description: "The period for the returned results.\n\n  * `ONE_DAY` \\-\
            \ The daily job count for the prior 14 days.\n\n  * `SEVEN_DAYS` \\- The\
            \ aggregated job count for the prior 7 days.\n\n  * `FOURTEEN_DAYS` \\\
            - The aggregated job count for prior 14 days."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListCopyJobsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return MaxResults number of items, NextToken
            allows you to return more items in your list starting at the location
            pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
        ByResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Returns only copy jobs that match the specified resource Amazon
            Resource Name (ARN).
        ByState:
          allOf:
          - $ref: '#/components/schemas/CopyJobState'
          description: Returns only copy jobs that are in the specified state.
        ByCreatedBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only copy jobs that were created before the specified
            date.
        ByCreatedAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only copy jobs that were created after the specified
            date.
        ByResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: "Returns only backup jobs for the specified resources:\n\n\
            \  * `Aurora` for Amazon Aurora\n\n  * `CloudFormation` for CloudFormation\n\
            \n  * `DocumentDB` for Amazon DocumentDB (with MongoDB compatibility)\n\
            \n  * `DynamoDB` for Amazon DynamoDB\n\n  * `EBS` for Amazon Elastic Block\
            \ Store\n\n  * `EC2` for Amazon Elastic Compute Cloud\n\n  * `EFS` for\
            \ Amazon Elastic File System\n\n  * `FSx` for Amazon FSx\n\n  * `Neptune`\
            \ for Amazon Neptune\n\n  * `RDS` for Amazon Relational Database Service\n\
            \n  * `Redshift` for Amazon Redshift\n\n  * `S3` for Amazon Simple Storage\
            \ Service (Amazon S3)\n\n  * `SAP HANA on Amazon EC2` for SAP HANA databases\
            \ on Amazon Elastic Compute Cloud instances\n\n  * `Storage Gateway` for\
            \ Storage Gateway\n\n  * `Timestream` for Amazon Timestream\n\n  * `VirtualMachine`\
            \ for VMware virtual machines"
        ByDestinationVaultArn:
          allOf:
          - $ref: '#/components/schemas/string'
          description: An Amazon Resource Name (ARN) that uniquely identifies a source
            backup vault to copy from; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        ByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID to list the jobs from. Returns only copy jobs
            associated with the specified account ID.
        ByCompleteBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only copy jobs completed before a date expressed in
            Unix format and Coordinated Universal Time (UTC).
        ByCompleteAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only copy jobs completed after a date expressed in
            Unix format and Coordinated Universal Time (UTC).
        ByParentJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This is a filter to list child (nested) jobs based on parent
            job ID.
        ByMessageCategory:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'This is an optional parameter that can be used to filter out
            jobs with a MessageCategory which matches the value you input.


            Example strings may include `AccessDenied`, `SUCCESS`, `AGGREGATE_ALL`,
            and `INVALIDPARAMETERS`.


            View [Monitoring](https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html)
            for a list of accepted strings.


            The the value ANY returns count of all message categories.


            `AGGREGATE_ALL` aggregates job counts for all message categories and returns
            the sum.'
    ListCopyJobsOutput:
      type: object
      properties:
        CopyJobs:
          allOf:
          - $ref: '#/components/schemas/CopyJobsList'
          description: An array of structures containing metadata about your copy
            jobs returned in JSON format.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return MaxResults number of items, NextToken
            allows you to return more items in your list starting at the location
            pointed to by the next token.
    ListFrameworksInput:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxFrameworkInputs'
          description: The number of desired results from 1 to 1000. Optional. If
            unspecified, the query will return 1 MB of data.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the list.
    ListFrameworksOutput:
      type: object
      properties:
        Frameworks:
          allOf:
          - $ref: '#/components/schemas/FrameworkList'
          description: The frameworks with details for each framework, including the
            framework name, Amazon Resource Name (ARN), description, number of controls,
            creation time, and deployment status.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the list.
    ListIndexedRecoveryPointsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned recovery
            points.


            For example, if a request is made to return `MaxResults` number of indexed
            recovery points, `NextToken` allows you to return more items in your list
            starting at the location pointed to by the next token.'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of resource list items to be returned.
        SourceResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: A string of the Amazon Resource Name (ARN) that uniquely identifies
            the source resource.
        CreatedBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only indexed recovery points that were created before
            the specified date.
        CreatedAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only indexed recovery points that were created after
            the specified date.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: "Returns a list of indexed recovery points for the specified\
            \ resource type(s).\n\nAccepted values include:\n\n  * `EBS` for Amazon\
            \ Elastic Block Store\n\n  * `S3` for Amazon Simple Storage Service (Amazon\
            \ S3)"
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/IndexStatus'
          description: 'Include this parameter to filter the returned list by the
            indicated statuses.


            Accepted values: `PENDING` | `ACTIVE` | `FAILED` | `DELETING`


            A recovery point with an index that has the status of `ACTIVE` can be
            included in a search.'
    ListIndexedRecoveryPointsOutput:
      type: object
      properties:
        IndexedRecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/IndexedRecoveryPointList'
          description: This is a list of recovery points that have an associated index,
            belonging to the specified account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The next item following a partial list of returned recovery
            points.


            For example, if a request is made to return `MaxResults` number of indexed
            recovery points, `NextToken` allows you to return more items in your list
            starting at the location pointed to by the next token.'
    ListLegalHoldsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of resource list items to be returned.
    ListLegalHoldsOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        LegalHolds:
          allOf:
          - $ref: '#/components/schemas/LegalHoldsList'
          description: This is an array of returned legal holds, both active and previous.
    ListOfTags:
      type: array
      items:
        $ref: '#/components/schemas/Condition'
    ListProtectedResourcesByBackupVaultInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The list of protected resources by backup vault within the
            vault(s) you specify by name.
        BackupVaultAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The list of protected resources by backup vault within the
            vault(s) you specify by account ID.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
      required:
      - BackupVaultName
    ListProtectedResourcesByBackupVaultOutput:
      type: object
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/ProtectedResourcesList'
          description: These are the results returned for the request ListProtectedResourcesByBackupVault.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListProtectedResourcesInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
    ListProtectedResourcesOutput:
      type: object
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/ProtectedResourcesList'
          description: An array of resources successfully backed up by Backup including
            the time the resource was saved, an Amazon Resource Name (ARN) of the
            resource, and a resource type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListRecoveryPointsByBackupVaultInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored.
            Backup vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are created.


            Backup vault name might not be available when a supported service creates
            the backup.'
        BackupVaultAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: This parameter will sort the list of recovery points by account
            ID.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
        ByResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Returns only recovery points that match the specified resource
            Amazon Resource Name (ARN).
        ByResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: "Returns only recovery points that match the specified resource\
            \ type(s):\n\n  * `Aurora` for Amazon Aurora\n\n  * `CloudFormation` for\
            \ CloudFormation\n\n  * `DocumentDB` for Amazon DocumentDB (with MongoDB\
            \ compatibility)\n\n  * `DynamoDB` for Amazon DynamoDB\n\n  * `EBS` for\
            \ Amazon Elastic Block Store\n\n  * `EC2` for Amazon Elastic Compute Cloud\n\
            \n  * `EFS` for Amazon Elastic File System\n\n  * `FSx` for Amazon FSx\n\
            \n  * `Neptune` for Amazon Neptune\n\n  * `RDS` for Amazon Relational\
            \ Database Service\n\n  * `Redshift` for Amazon Redshift\n\n  * `S3` for\
            \ Amazon Simple Storage Service (Amazon S3)\n\n  * `SAP HANA on Amazon\
            \ EC2` for SAP HANA databases on Amazon Elastic Compute Cloud instances\n\
            \n  * `Storage Gateway` for Storage Gateway\n\n  * `Timestream` for Amazon\
            \ Timestream\n\n  * `VirtualMachine` for VMware virtual machines"
        ByBackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Returns only recovery points that match the specified backup
            plan ID.
        ByCreatedBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only recovery points that were created before the specified
            timestamp.
        ByCreatedAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only recovery points that were created after the specified
            timestamp.
        ByParentRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: This returns only recovery points that match the specified
            parent (composite) recovery point Amazon Resource Name (ARN).
      required:
      - BackupVaultName
    ListRecoveryPointsByBackupVaultOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        RecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointByBackupVaultList'
          description: An array of objects that contain detailed information about
            recovery points saved in a backup vault.
    ListRecoveryPointsByLegalHoldInput:
      type: object
      properties:
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the legal hold.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of resource list items to be returned.
      required:
      - LegalHoldId
    ListRecoveryPointsByLegalHoldOutput:
      type: object
      properties:
        RecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointsList'
          description: The recovery points.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
    ListRecoveryPointsByResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a resource. The format of the
            ARN depends on the resource type.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'The maximum number of items to be returned.


            Amazon RDS requires a value of at least 20.'
        ManagedByAWSBackupOnly:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: 'This attribute filters recovery points based on ownership.


            If this is set to `TRUE`, the response will contain recovery points associated
            with the selected resources that are managed by Backup.


            If this is set to `FALSE`, the response will contain all recovery points
            associated with the selected resource.


            Type: Boolean'
      required:
      - ResourceArn
    ListRecoveryPointsByResourceOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        RecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointByResourceList'
          description: 'An array of objects that contain detailed information about
            recovery points of the specified resource type.


            Only Amazon EFS and Amazon EC2 recovery points return BackupVaultName.'
    ListReportJobsInput:
      type: object
      properties:
        ByReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: Returns only report jobs with the specified report plan name.
        ByCreationBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only report jobs that were created before the date
            and time specified in Unix format and Coordinated Universal Time (UTC).
            For example, the value 1516925490 represents Friday, January 26, 2018
            12:11:30 AM.
        ByCreationAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only report jobs that were created after the date and
            time specified in Unix format and Coordinated Universal Time (UTC). For
            example, the value 1516925490 represents Friday, January 26, 2018 12:11:30
            AM.
        ByStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'Returns only report jobs that are in the specified status.
            The statuses are:


            `CREATED | RUNNING | COMPLETED | FAILED`'
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of desired results from 1 to 1000. Optional. If
            unspecified, the query will return 1 MB of data.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the list.
    ListReportJobsOutput:
      type: object
      properties:
        ReportJobs:
          allOf:
          - $ref: '#/components/schemas/ReportJobList'
          description: Details about your report jobs in JSON format.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the list.
    ListReportPlansInput:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of desired results from 1 to 1000. Optional. If
            unspecified, the query will return 1 MB of data.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the list.
    ListReportPlansOutput:
      type: object
      properties:
        ReportPlans:
          allOf:
          - $ref: '#/components/schemas/ReportPlanList'
          description: The report plans with detailed information for each plan. This
            information includes the Amazon Resource Name (ARN), report plan name,
            description, settings, delivery channel, deployment status, creation time,
            and last times the report plan attempted to and successfully ran.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: An identifier that was returned from the previous call to this
            operation, which can be used to return the next set of items in the list.
    ListRestoreJobSummariesInput:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: 'Returns the job count for the specified account.


            If the request is sent from a member account or an account not part of
            Amazon Web Services Organizations, jobs within requestor''s account will
            be returned.


            Root, admin, and delegated administrator accounts can use the value ANY
            to return job counts from every account in the organization.


            `AGGREGATE_ALL` aggregates job counts from all accounts within the authenticated
            organization, then returns the sum.'
        State:
          allOf:
          - $ref: '#/components/schemas/RestoreJobState'
          description: 'This parameter returns the job count for jobs with the specified
            state.


            The the value ANY returns count of all states.


            `AGGREGATE_ALL` aggregates job counts for all states and returns the sum.'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: 'Returns the job count for the specified resource type. Use
            request `GetSupportedResourceTypes` to obtain strings for supported resource
            types.


            The the value ANY returns count of all resource types.


            `AGGREGATE_ALL` aggregates job counts for all resource types and returns
            the sum.


            The type of Amazon Web Services resource to be backed up; for example,
            an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational
            Database Service (Amazon RDS) database.'
        AggregationPeriod:
          allOf:
          - $ref: '#/components/schemas/AggregationPeriod'
          description: "The period for the returned results.\n\n  * `ONE_DAY` \\-\
            \ The daily job count for the prior 14 days.\n\n  * `SEVEN_DAYS` \\- The\
            \ aggregated job count for the prior 7 days.\n\n  * `FOURTEEN_DAYS` \\\
            - The aggregated job count for prior 14 days."
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: 'This parameter sets the maximum number of items to be returned.


            The value is an integer. Range of accepted values is from 1 to 500.'
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListRestoreJobSummariesOutput:
      type: object
      properties:
        RestoreJobSummaries:
          allOf:
          - $ref: '#/components/schemas/RestoreJobSummaryList'
          description: This return contains a summary that contains Region, Account,
            State, ResourceType, MessageCategory, StartTime, EndTime, and Count of
            included jobs.
        AggregationPeriod:
          allOf:
          - $ref: '#/components/schemas/string'
          description: "The period for the returned results.\n\n  * `ONE_DAY` \\-\
            \ The daily job count for the prior 14 days.\n\n  * `SEVEN_DAYS` \\- The\
            \ aggregated job count for the prior 7 days.\n\n  * `FOURTEEN_DAYS` \\\
            - The aggregated job count for prior 14 days."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned resources.
            For example, if a request is made to return `MaxResults` number of resources,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListRestoreJobsByProtectedResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: Returns only restore jobs that match the specified resource
            Amazon Resource Name (ARN).
        ByStatus:
          allOf:
          - $ref: '#/components/schemas/RestoreJobStatus'
          description: Returns only restore jobs associated with the specified job
            status.
        ByRecoveryPointCreationDateAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only restore jobs of recovery points that were created
            after the specified date.
        ByRecoveryPointCreationDateBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only restore jobs of recovery points that were created
            before the specified date.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request ismade to return `MaxResults` number of items, `NextToken`
            allows you to return more items in your list starting at the location
            pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
      required:
      - ResourceArn
    ListRestoreJobsByProtectedResourceOutput:
      type: object
      properties:
        RestoreJobs:
          allOf:
          - $ref: '#/components/schemas/RestoreJobsList'
          description: An array of objects that contain detailed information about
            jobs to restore saved resources.>
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows youto return more items in your list starting at the
            location pointed to by the next token
    ListRestoreJobsInput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
        ByAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID to list the jobs from. Returns only restore
            jobs associated with the specified account ID.
        ByResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: "Include this parameter to return only restore jobs for the\
            \ specified resources:\n\n  * `Aurora` for Amazon Aurora\n\n  * `CloudFormation`\
            \ for CloudFormation\n\n  * `DocumentDB` for Amazon DocumentDB (with MongoDB\
            \ compatibility)\n\n  * `DynamoDB` for Amazon DynamoDB\n\n  * `EBS` for\
            \ Amazon Elastic Block Store\n\n  * `EC2` for Amazon Elastic Compute Cloud\n\
            \n  * `EFS` for Amazon Elastic File System\n\n  * `FSx` for Amazon FSx\n\
            \n  * `Neptune` for Amazon Neptune\n\n  * `RDS` for Amazon Relational\
            \ Database Service\n\n  * `Redshift` for Amazon Redshift\n\n  * `S3` for\
            \ Amazon Simple Storage Service (Amazon S3)\n\n  * `SAP HANA on Amazon\
            \ EC2` for SAP HANA databases on Amazon Elastic Compute Cloud instances\n\
            \n  * `Storage Gateway` for Storage Gateway\n\n  * `Timestream` for Amazon\
            \ Timestream\n\n  * `VirtualMachine` for VMware virtual machines"
        ByCreatedBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only restore jobs that were created before the specified
            date.
        ByCreatedAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only restore jobs that were created after the specified
            date.
        ByStatus:
          allOf:
          - $ref: '#/components/schemas/RestoreJobStatus'
          description: Returns only restore jobs associated with the specified job
            status.
        ByCompleteBefore:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only copy jobs completed before a date expressed in
            Unix format and Coordinated Universal Time (UTC).
        ByCompleteAfter:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: Returns only copy jobs completed after a date expressed in
            Unix format and Coordinated Universal Time (UTC).
        ByRestoreTestingPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: This returns only restore testing jobs that match the specified
            resource Amazon Resource Name (ARN).
    ListRestoreJobsOutput:
      type: object
      properties:
        RestoreJobs:
          allOf:
          - $ref: '#/components/schemas/RestoreJobsList'
          description: An array of objects that contain detailed information about
            jobs to restore saved resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
    ListRestoreTestingPlansInput:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListRestoreTestingPlansInputMaxResultsInteger'
          description: The maximum number of items to be returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the nexttoken.
    ListRestoreTestingPlansInputMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 1000
    ListRestoreTestingPlansOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the nexttoken.
        RestoreTestingPlans:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingPlans'
          description: This is a returned list of restore testing plans.
      required:
      - RestoreTestingPlans
    ListRestoreTestingSelectionsInput:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/ListRestoreTestingSelectionsInputMaxResultsInteger'
          description: The maximum number of items to be returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the nexttoken.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Returns restore testing selections by the specified restore
            testing plan name.
      required:
      - RestoreTestingPlanName
    ListRestoreTestingSelectionsInputMaxResultsInteger:
      type: integer
      minimum: 1
      maximum: 1000
    ListRestoreTestingSelectionsOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the nexttoken.
        RestoreTestingSelections:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingSelections'
          description: The returned restore testing selections associated with the
            restore testing plan.
      required:
      - RestoreTestingSelections
    ListTagsInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the type of resource. Valid targets for
            `ListTags` are recovery points, backup plans, and backup vaults.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of items to be returned.
      required:
      - ResourceArn
    ListTagsOutput:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The next item following a partial list of returned items. For
            example, if a request is made to return `MaxResults` number of items,
            `NextToken` allows you to return more items in your list starting at the
            location pointed to by the next token.
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: Information about the tags.
    Long:
      type: integer
      format: int64
    Long2:
      type: integer
      format: int64
      default: 0
    MaxFrameworkInputs:
      type: integer
      minimum: 1
      maximum: 1000
    MaxResults:
      type: integer
      minimum: 1
      maximum: 1000
    MessageCategory:
      type: string
    Metadata:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MetadataValue'
    MetadataKey:
      type: string
    MetadataValue:
      type: string
    MissingParameterValueException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: Indicates that a required parameter is missing.
    ParameterName:
      type: string
    ParameterValue:
      type: string
    ProtectedResource:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Web Services resource; for example, an Amazon
            Elastic Block Store (Amazon EBS) volume or an Amazon Relational Database
            Service (Amazon RDS) database. For Windows Volume Shadow Copy Service
            (VSS) backups, the only supported resource type is Amazon EC2.
        LastBackupTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a resource was last backed up, in Unix format
            and Coordinated Universal Time (UTC). The value of `LastBackupTime` is
            accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The non-unique name of the resource that belongs to the specified
            backup.
        LastBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN (Amazon Resource Name) of the backup vault that contains
            the most recent backup recovery point.
        LastRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The ARN (Amazon Resource Name) of the most recent recovery
            point.
      description: A structure that contains information about a backed-up resource.
    ProtectedResourceConditions:
      type: object
      properties:
        StringEquals:
          allOf:
          - $ref: '#/components/schemas/KeyValueList'
          description: Filters the values of your tagged resources for only those
            resources that you tagged with the same value. Also called "exact matching."
        StringNotEquals:
          allOf:
          - $ref: '#/components/schemas/KeyValueList'
          description: Filters the values of your tagged resources for only those
            resources that you tagged that do not have the same value. Also called
            "negated matching."
      description: The conditions that you define for resources in your restore testing
        plan using tags.
    ProtectedResourcesList:
      type: array
      items:
        $ref: '#/components/schemas/ProtectedResource'
    PutBackupVaultAccessPolicyInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        Policy:
          allOf:
          - $ref: '#/components/schemas/IAMPolicy'
          description: The backup vault access policy document in JSON format.
      required:
      - BackupVaultName
    PutBackupVaultLockConfigurationInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The Backup Vault Lock configuration that specifies the name
            of the backup vault it protects.
        MinRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The Backup Vault Lock configuration that specifies the minimum
            retention period that the vault retains its recovery points. This setting
            can be useful if, for example, your organization''s policies require you
            to retain certain data for at least seven years (2555 days).


            This parameter is required when a vault lock is created through CloudFormation;
            otherwise, this parameter is optional. If this parameter is not specified,
            Vault Lock will not enforce a minimum retention period.


            If this parameter is specified, any backup or copy job to the vault must
            have a lifecycle policy with a retention period equal to or longer than
            the minimum retention period. If the job''s retention period is shorter
            than that minimum retention period, then the vault fails that backup or
            copy job, and you should either modify your lifecycle settings or use
            a different vault. The shortest minimum retention period you can specify
            is 1 day. Recovery points already saved in the vault prior to Vault Lock
            are not affected.'
        MaxRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The Backup Vault Lock configuration that specifies the maximum
            retention period that the vault retains its recovery points. This setting
            can be useful if, for example, your organization''s policies require you
            to destroy certain data after retaining it for four years (1460 days).


            If this parameter is not included, Vault Lock does not enforce a maximum
            retention period on the recovery points in the vault. If this parameter
            is included without a value, Vault Lock will not enforce a maximum retention
            period.


            If this parameter is specified, any backup or copy job to the vault must
            have a lifecycle policy with a retention period equal to or shorter than
            the maximum retention period. If the job''s retention period is longer
            than that maximum retention period, then the vault fails the backup or
            copy job, and you should either modify your lifecycle settings or use
            a different vault. The longest maximum retention period you can specify
            is 36500 days (approximately 100 years). Recovery points already saved
            in the vault prior to Vault Lock are not affected.'
        ChangeableForDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: 'The Backup Vault Lock configuration that specifies the number
            of days before the lock date. For example, setting `ChangeableForDays`
            to 30 on Jan. 1, 2022 at 8pm UTC will set the lock date to Jan. 31, 2022
            at 8pm UTC.


            Backup enforces a 72-hour cooling-off period before Vault Lock takes effect
            and becomes immutable. Therefore, you must set `ChangeableForDays` to
            3 or greater.


            Before the lock date, you can delete Vault Lock from the vault using `DeleteBackupVaultLockConfiguration`
            or change the Vault Lock configuration using `PutBackupVaultLockConfiguration`.
            On and after the lock date, the Vault Lock becomes immutable and cannot
            be changed or deleted.


            If this parameter is not specified, you can delete Vault Lock from the
            vault using `DeleteBackupVaultLockConfiguration` or change the Vault Lock
            configuration using `PutBackupVaultLockConfiguration` at any time.'
      required:
      - BackupVaultName
    PutBackupVaultNotificationsInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        SNSTopicArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) that specifies the topic for
            a backup vault’s events; for example, `arn:aws:sns:us-west-2:111122223333:MyVaultTopic`.
        BackupVaultEvents:
          allOf:
          - $ref: '#/components/schemas/BackupVaultEvents'
          description: "An array of events that indicate the status of jobs to back\
            \ up resources to the backup vault.\n\nFor common use cases and code samples,\
            \ see [Using Amazon SNS to track Backup events](https://docs.aws.amazon.com/aws-backup/latest/devguide/sns-notifications.html).\n\
            \nThe following events are supported:\n\n  * `BACKUP_JOB_STARTED` | `BACKUP_JOB_COMPLETED`\n\
            \n  * `COPY_JOB_STARTED` | `COPY_JOB_SUCCESSFUL` | `COPY_JOB_FAILED`\n\
            \n  * `RESTORE_JOB_STARTED` | `RESTORE_JOB_COMPLETED` | `RECOVERY_POINT_MODIFIED`\n\
            \n  * `S3_BACKUP_OBJECT_FAILED` | `S3_RESTORE_OBJECT_FAILED`\n\nThe list\
            \ below includes both supported events and deprecated events that are\
            \ no longer in use (for reference). Deprecated events do not return statuses\
            \ or notifications. Refer to the list above for the supported events."
      required:
      - BackupVaultName
      - SNSTopicArn
      - BackupVaultEvents
    PutRestoreValidationResultInput:
      type: object
      properties:
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/RestoreJobId'
          description: This is a unique identifier of a restore job within Backup.
        ValidationStatus:
          allOf:
          - $ref: '#/components/schemas/RestoreValidationStatus'
          description: The status of your restore validation.
        ValidationStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This is an optional message string you can input to describe
            the validation status for the restore test validation.
      required:
      - RestoreJobId
      - ValidationStatus
    RecoveryPointByBackupVault:
      type: object
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a backup vault; for example,
            `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        SourceBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The backup vault where the recovery point was originally copied
            from. If the recovery point is restored to the same account this value
            will be `null`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a resource. The format of the
            ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The type of Amazon Web Services resource saved as a recovery
            point; for example, an Amazon Elastic Block Store (Amazon EBS) volume
            or an Amazon Relational Database Service (Amazon RDS) database. For Windows
            Volume Shadow Copy Service (VSS) backups, the only supported resource
            type is Amazon EC2.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointCreator'
          description: Contains identifying information about the creation of a recovery
            point, including the `BackupPlanArn`, `BackupPlanId`, `BackupPlanVersion`,
            and `BackupRuleId` of the backup plan that is used to create it.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role ARN used to create the target recovery
            point; for example, `arn:aws:iam::123456789012:role/S3Access`.
        Status:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointStatus'
          description: A status code specifying the state of the recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A message explaining the current status of the recovery point.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a recovery point is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a job to restore a recovery point is completed,
            in Unix format and Coordinated Universal Time (UTC). The value of `CompletionDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of a backup.
        CalculatedLifecycle:
          allOf:
          - $ref: '#/components/schemas/CalculatedLifecycle'
          description: A `CalculatedLifecycle` object containing `DeleteAt` and `MoveToColdStorageAt`
            timestamps.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/Lifecycle'
          description: 'The lifecycle defines when a protected resource is transitioned
            to cold storage and when it expires. Backup transitions and expires backups
            automatically according to the lifecycle that you define.


            Backups transitioned to cold storage must be stored in cold storage for
            a minimum of 90 days. Therefore, the “retention” setting must be 90 days
            greater than the “transition to cold after days” setting. The “transition
            to cold after days” setting cannot be changed after a backup has been
            transitioned to cold.


            Resource types that can transition to cold storage are listed in the [Feature
            availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
            table. Backup ignores this expression for other resource types.'
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The server-side encryption key that is used to protect your
            backups; for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`.
        IsEncrypted:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: A Boolean value that is returned as `TRUE` if the specified
            recovery point is encrypted, or `FALSE` if the recovery point is not encrypted.
        LastRestoreTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a recovery point was last restored, in Unix
            format and Coordinated Universal Time (UTC). The value of `LastRestoreTime`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        ParentRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the parent (composite) recovery
            point.
        CompositeMemberIdentifier:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The identifier of a resource within a composite group, such
            as nested (child) recovery point belonging to a composite (parent) stack.
            The ID is transferred from the [ logical ID](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html#resources-section-structure-syntax)
            within a stack.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This is a boolean value indicating this is a parent (composite)
            recovery point.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The non-unique name of the resource that belongs to the specified
            backup.
        VaultType:
          allOf:
          - $ref: '#/components/schemas/VaultType'
          description: The type of vault in which the described recovery point is
            stored.
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/IndexStatus'
          description: 'This is the current status for the backup index associated
            with the specified recovery point.


            Statuses are: `PENDING` | `ACTIVE` | `FAILED` | `DELETING`


            A recovery point with an index that has the status of `ACTIVE` can be
            included in a search.'
        IndexStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A string in the form of a detailed message explaining the status
            of a backup index associated with the recovery point.
      description: Contains detailed information about the recovery points stored
        in a backup vault.
    RecoveryPointByBackupVaultList:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryPointByBackupVault'
    RecoveryPointByResource:
      type: object
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a recovery point is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        Status:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointStatus'
          description: A status code specifying the state of the recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A message explaining the current status of the recovery point.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The server-side encryption key that is used to protect your
            backups; for example, `arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab`.
        BackupSizeBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of a backup.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This is a boolean value indicating this is a parent (composite)
            recovery point.
        ParentRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the parent (composite) recovery
            point.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The non-unique name of the resource that belongs to the specified
            backup.
        VaultType:
          allOf:
          - $ref: '#/components/schemas/VaultType'
          description: The type of vault in which the described recovery point is
            stored.
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/IndexStatus'
          description: 'This is the current status for the backup index associated
            with the specified recovery point.


            Statuses are: `PENDING` | `ACTIVE` | `FAILED` | `DELETING`


            A recovery point with an index that has the status of `ACTIVE` can be
            included in a search.'
        IndexStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A string in the form of a detailed message explaining the status
            of a backup index associated with the recovery point.
      description: Contains detailed information about a saved recovery point.
    RecoveryPointByResourceList:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryPointByResource'
    RecoveryPointCreator:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            plan; for example, `arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`.
        BackupPlanVersion:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Version IDs are unique, randomly generated, Unicode, UTF-8
            encoded strings that are at most 1,024 bytes long. They cannot be edited.
        BackupRuleId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a rule used to schedule the backup of a
            selection of resources.
      description: Contains information about the backup plan and rule that Backup
        used to initiate the recovery point backup.
    RecoveryPointMember:
      type: object
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) of the parent (composite) recovery
            point.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: The Amazon Resource Name (ARN) that uniquely identifies a saved
            resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The Amazon Web Services resource type that is saved as a recovery
            point.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of the backup vault (the logical container in which
            backups are stored).
      description: This is a recovery point which is a child (nested) recovery point
        of a parent (composite) recovery point. These recovery points can be disassociated
        from their parent (composite) recovery point, in which case they will no longer
        be a member.
    RecoveryPointSelection:
      type: object
      properties:
        VaultNames:
          allOf:
          - $ref: '#/components/schemas/VaultNames'
          description: These are the names of the vaults in which the selected recovery
            points are contained.
        ResourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifiers'
          description: These are the resources included in the resource selection
            (including type of resources and vaults).
        DateRange:
          $ref: '#/components/schemas/DateRange'
      description: This specifies criteria to assign a set of resources, such as resource
        types or backup vaults.
    RecoveryPointStatus:
      type: string
      enum:
      - COMPLETED
      - PARTIAL
      - DELETING
      - EXPIRED
    RecoveryPointsList:
      type: array
      items:
        $ref: '#/components/schemas/RecoveryPointMember'
    Region:
      type: string
    ReportDeliveryChannel:
      type: object
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The unique name of the S3 bucket that receives your reports.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The prefix for where Backup Audit Manager delivers your reports
            to Amazon S3. The prefix is this part of the following path: s3://your-bucket-name/`prefix`/Backup/us-west-2/year/month/day/report-name.
            If not specified, there is no prefix.'
        Formats:
          allOf:
          - $ref: '#/components/schemas/FormatList'
          description: 'The format of your reports: `CSV`, `JSON`, or both. If not
            specified, the default format is `CSV`.'
      required:
      - S3BucketName
      description: Contains information from your report plan about where to deliver
        your reports, specifically your Amazon S3 bucket name, S3 key prefix, and
        the formats of your reports.
    ReportDestination:
      type: object
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The unique name of the Amazon S3 bucket that receives your
            reports.
        S3Keys:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: The object key that uniquely identifies your reports in your
            S3 bucket.
      description: Contains information from your report job about your report destination.
    ReportJob:
      type: object
      properties:
        ReportJobId:
          allOf:
          - $ref: '#/components/schemas/ReportJobId'
          description: The identifier for a report job. A unique, randomly generated,
            Unicode, UTF-8 encoded string that is at most 1,024 bytes long. Report
            job IDs cannot be edited.
        ReportPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        ReportTemplate:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'Identifies the report template for the report. Reports are
            built using a report template. The report templates are:


            `RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT
            | COPY_JOB_REPORT | RESTORE_JOB_REPORT`'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a report job is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationTime` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CompletionTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a report job is completed, in Unix format
            and Coordinated Universal Time (UTC). The value of `CompletionTime` is
            accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        Status:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The status of a report job. The statuses are:


            `CREATED | RUNNING | COMPLETED | FAILED`


            `COMPLETED` means that the report is available for your review at your
            designated destination. If the status is `FAILED`, review the `StatusMessage`
            for the reason.'
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A message explaining the status of the report job.
        ReportDestination:
          allOf:
          - $ref: '#/components/schemas/ReportDestination'
          description: The S3 bucket name and S3 keys for the destination where the
            report job publishes the report.
      description: Contains detailed information about a report job. A report job
        compiles a report based on a report plan and publishes it to Amazon S3.
    ReportJobId:
      type: string
    ReportJobList:
      type: array
      items:
        $ref: '#/components/schemas/ReportJob'
    ReportPlan:
      type: object
      properties:
        ReportPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: The unique name of the report plan. This name is between 1
            and 256 characters starting with a letter, and consisting of letters (a-z,
            A-Z), numbers (0-9), and underscores (_).
        ReportPlanDescription:
          allOf:
          - $ref: '#/components/schemas/ReportPlanDescription'
          description: An optional description of the report plan with a maximum 1,024
            characters.
        ReportSetting:
          allOf:
          - $ref: '#/components/schemas/ReportSetting'
          description: 'Identifies the report template for the report. Reports are
            built using a report template. The report templates are:


            `RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT
            | COPY_JOB_REPORT | RESTORE_JOB_REPORT`


            If the report template is `RESOURCE_COMPLIANCE_REPORT` or `CONTROL_COMPLIANCE_REPORT`,
            this API resource also describes the report coverage by Amazon Web Services
            Regions and frameworks.'
        ReportDeliveryChannel:
          allOf:
          - $ref: '#/components/schemas/ReportDeliveryChannel'
          description: Contains information about where and how to deliver your reports,
            specifically your Amazon S3 bucket name, S3 key prefix, and the formats
            of your reports.
        DeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'The deployment status of a report plan. The statuses are:


            `CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS | COMPLETED`'
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a report plan is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationTime` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        LastAttemptedExecutionTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a report job associated with this report
            plan last attempted to run, in Unix format and Coordinated Universal Time
            (UTC). The value of `LastAttemptedExecutionTime` is accurate to milliseconds.
            For example, the value 1516925490.087 represents Friday, January 26, 2018
            12:11:30.087 AM.
        LastSuccessfulExecutionTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a report job associated with this report
            plan last successfully ran, in Unix format and Coordinated Universal Time
            (UTC). The value of `LastSuccessfulExecutionTime` is accurate to milliseconds.
            For example, the value 1516925490.087 represents Friday, January 26, 2018
            12:11:30.087 AM.
      description: Contains detailed information about a report plan.
    ReportPlanDescription:
      type: string
      pattern: \S
      minLength: 0
      maxLength: 1024
    ReportPlanList:
      type: array
      items:
        $ref: '#/components/schemas/ReportPlan'
    ReportPlanName:
      type: string
      pattern: ^[a-zA-Z][_a-zA-Z0-9]*$
      minLength: 1
      maxLength: 256
    ReportSetting:
      type: object
      properties:
        ReportTemplate:
          allOf:
          - $ref: '#/components/schemas/string'
          description: 'Identifies the report template for the report. Reports are
            built using a report template. The report templates are:


            `RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT
            | COPY_JOB_REPORT | RESTORE_JOB_REPORT`'
        FrameworkArns:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: The Amazon Resource Names (ARNs) of the frameworks a report
            covers.
        NumberOfFrameworks:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: The number of frameworks a report covers.
        Accounts:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: 'These are the accounts to be included in the report.


            Use string value of `ROOT` to include all organizational units.'
        OrganizationUnits:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: These are the Organizational Units to be included in the report.
        Regions:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: 'These are the Regions to be included in the report.


            Use the wildcard as the string value to include all Regions.'
      required:
      - ReportTemplate
      description: Contains detailed information about a report setting.
    ResourceArns:
      type: array
      items:
        $ref: '#/components/schemas/ARN'
    ResourceIdentifiers:
      type: array
      items:
        $ref: '#/components/schemas/string'
    ResourceNotFoundException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: A resource that is required for the action doesn't exist.
    ResourceType:
      type: string
      pattern: ^[a-zA-Z0-9\-\_\.]{1,50}$
    ResourceTypeList:
      type: array
      items:
        $ref: '#/components/schemas/ARN'
    ResourceTypeManagementPreference:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/IsEnabled'
    ResourceTypeOptInPreference:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/IsEnabled'
    ResourceTypes:
      type: array
      items:
        $ref: '#/components/schemas/ResourceType'
    RestoreDeletionStatus:
      type: string
      enum:
      - DELETING
      - FAILED
      - SUCCESSFUL
    RestoreJobCreator:
      type: object
      properties:
        RestoreTestingPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a restore
            testing plan.
      description: Contains information about the restore testing plan that Backup
        used to initiate the restore job.
    RestoreJobId:
      type: string
    RestoreJobState:
      type: string
      enum:
      - CREATED
      - PENDING
      - RUNNING
      - ABORTED
      - COMPLETED
      - FAILED
      - AGGREGATE_ALL
      - ANY
    RestoreJobStatus:
      type: string
      enum:
      - PENDING
      - RUNNING
      - COMPLETED
      - ABORTED
      - FAILED
    RestoreJobSummary:
      type: object
      properties:
        Region:
          allOf:
          - $ref: '#/components/schemas/Region'
          description: The Amazon Web Services Regions within the job summary.
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the jobs within the summary.
        State:
          allOf:
          - $ref: '#/components/schemas/RestoreJobState'
          description: This value is job count for jobs with the specified state.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: This value is the job count for the specified resource type.
            The request `GetSupportedResourceTypes` returns strings for supported
            resource types.
        Count:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: The value as a number of jobs in a job summary.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The value of time in number format of a job start time.


            This value is the time in Unix format, Coordinated Universal Time (UTC),
            and accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.'
        EndTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: 'The value of time in number format of a job end time.


            This value is the time in Unix format, Coordinated Universal Time (UTC),
            and accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.'
      description: 'This is a summary of restore jobs created or running within the
        most recent 30 days.


        The returned summary may contain the following: Region, Account, State, ResourceType,
        MessageCategory, StartTime, EndTime, and Count of included jobs.'
    RestoreJobSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RestoreJobSummary'
    RestoreJobsList:
      type: array
      items:
        $ref: '#/components/schemas/RestoreJobsListMember'
    RestoreJobsListMember:
      type: object
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          description: The account ID that owns the restore job.
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies the job that restores a recovery point.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a restore job is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a job to restore a recovery point is completed,
            in Unix format and Coordinated Universal Time (UTC). The value of `CompletionDate`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        Status:
          allOf:
          - $ref: '#/components/schemas/RestoreJobStatus'
          description: A status code specifying the state of the job initiated by
            Backup to restore a recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A detailed message explaining the status of the job to restore
            a recovery point.
        PercentDone:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Contains an estimated percentage complete of a job at the time
            the job status was queried.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The size, in bytes, of the restored resource.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The IAM role ARN used to create the target recovery point;
            for example, `arn:aws:iam::123456789012:role/S3Access`.
        ExpectedCompletionTimeMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The amount of time in minutes that a job restoring a recovery
            point is expected to take.
        CreatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: The resource type of the listed restore jobs; for example,
            an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational
            Database Service (Amazon RDS) database. For Windows Volume Shadow Copy
            Service (VSS) backups, the only supported resource type is Amazon EC2.
        RecoveryPointCreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date on which a recovery point was created.
        CreatedBy:
          allOf:
          - $ref: '#/components/schemas/RestoreJobCreator'
          description: Contains identifying information about the creation of a restore
            job.
        ValidationStatus:
          allOf:
          - $ref: '#/components/schemas/RestoreValidationStatus'
          description: The status of validation run on the indicated restore job.
        ValidationStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This describes the status of validation run on the indicated
            restore job.
        DeletionStatus:
          allOf:
          - $ref: '#/components/schemas/RestoreDeletionStatus'
          description: This notes the status of the data generated by the restore
            test. The status may be `Deleting`, `Failed`, or `Successful`.
        DeletionStatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          description: This describes the restore job deletion status.
      description: Contains metadata about a restore job.
    RestoreTestingPlanForCreate:
      type: object
      properties:
        RecoveryPointSelection:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingRecoveryPointSelection'
          description: '`RecoveryPointSelection` has five parameters (three required
            and two optional). The values you specify determine which recovery point
            is included in the restore test. You must indicate with `Algorithm` if
            you want the latest recovery point within your `SelectionWindowDays` or
            if you want a random recovery point, and you must indicate through `IncludeVaults`
            from which vaults the recovery points can be chosen.


            `Algorithm` (_required_) Valid values: "`LATEST_WITHIN_WINDOW`" or "`RANDOM_WITHIN_WINDOW`".


            `Recovery point types` (_required_) Valid values: "`SNAPSHOT`" and/or
            "`CONTINUOUS`". Include `SNAPSHOT` to restore only snapshot recovery points;
            include `CONTINUOUS` to restore continuous recovery points (point in time
            restore / PITR); use both to restore either a snapshot or a continuous
            recovery point. The recovery point will be determined by the value for
            `Algorithm`.


            `IncludeVaults` (_required_). You must include one or more backup vaults.
            Use the wildcard ["*"] or specific ARNs.


            `SelectionWindowDays` (_optional_) Value must be an integer (in days)
            from 1 to 365. If not included, the value defaults to `30`.


            `ExcludeVaults` (_optional_). You can choose to input one or more specific
            backup vault ARNs to exclude those vaults'' contents from restore eligibility.
            Or, you can include a list of selectors. If this parameter and its value
            are not included, it defaults to empty list.'
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The RestoreTestingPlanName is a unique string that is the name
            of the restore testing plan. This cannot be changed after creation, and
            it must consist of only alphanumeric characters and underscores.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A CRON expression in specified timezone when a restore testing
            plan is executed.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional. This is the timezone in which the schedule expression
            is set. By default, ScheduleExpressions are in UTC. You can modify this
            to a specified timezone.
        StartWindowHours:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: 'Defaults to 24 hours.


            A value in hours after a restore test is scheduled before a job will be
            canceled if it doesn''t start successfully. This value is optional. If
            this value is included, this parameter has a maximum value of 168 hours
            (one week).'
      required:
      - RecoveryPointSelection
      - RestoreTestingPlanName
      - ScheduleExpression
      description: This contains metadata about a restore testing plan.
    RestoreTestingPlanForGet:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that a restore testing plan was created,
            in Unix format and Coordinated Universal Time (UTC). The value of `CreationTime`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'This identifies the request and allows failed requests to
            be retried without the risk of running the operation twice. If the request
            includes a `CreatorRequestId` that matches an existing backup plan, that
            plan is returned. This parameter is optional.


            If used, this parameter must contain 1 to 50 alphanumeric or ''-_.'' characters.'
        LastExecutionTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time a restore test was run with the specified restore
            testing plan. A date and time, in Unix format and Coordinated Universal
            Time (UTC). The value of `LastExecutionDate` is accurate to milliseconds.
            For example, the value 1516925490.087 represents Friday, January 26, 2018
            12:11:30.087 AM.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the restore testing plan was updated.
            This update is in Unix format and Coordinated Universal Time (UTC). The
            value of `LastUpdateTime` is accurate to milliseconds. For example, the
            value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087
            AM.
        RecoveryPointSelection:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingRecoveryPointSelection'
          description: The specified criteria to assign a set of resources, such as
            recovery point types or backup vaults.
        RestoreTestingPlanArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An Amazon Resource Name (ARN) that uniquely identifies a restore
            testing plan.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The restore testing plan name.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A CRON expression in specified timezone when a restore testing
            plan is executed.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional. This is the timezone in which the schedule expression
            is set. By default, ScheduleExpressions are in UTC. You can modify this
            to a specified timezone.
        StartWindowHours:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: 'Defaults to 24 hours.


            A value in hours after a restore test is scheduled before a job will be
            canceled if it doesn''t start successfully. This value is optional. If
            this value is included, this parameter has a maximum value of 168 hours
            (one week).'
      required:
      - CreationTime
      - RecoveryPointSelection
      - RestoreTestingPlanArn
      - RestoreTestingPlanName
      - ScheduleExpression
      description: This contains metadata about a restore testing plan.
    RestoreTestingPlanForList:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that a restore testing plan was created,
            in Unix format and Coordinated Universal Time (UTC). The value of `CreationTime`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 2018 12:11:30.087 AM.
        LastExecutionTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The last time a restore test was run with the specified restore
            testing plan. A date and time, in Unix format and Coordinated Universal
            Time (UTC). The value of `LastExecutionDate` is accurate to milliseconds.
            For example, the value 1516925490.087 represents Friday, January 26, 2018
            12:11:30.087 AM.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that the restore testing plan was updated.
            This update is in Unix format and Coordinated Universal Time (UTC). The
            value of `LastUpdateTime` is accurate to milliseconds. For example, the
            value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087
            AM.
        RestoreTestingPlanArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: An Amazon Resource Name (ARN) that uniquely identifiesa restore
            testing plan.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The restore testing plan name.
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A CRON expression in specified timezone when a restore testing
            plan is executed.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional. This is the timezone in which the schedule expression
            is set. By default, ScheduleExpressions are in UTC. You can modify this
            to a specified timezone.
        StartWindowHours:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: 'Defaults to 24 hours.


            A value in hours after a restore test is scheduled before a job will be
            canceled if it doesn''t start successfully. This value is optional. If
            this value is included, this parameter has a maximum value of 168 hours
            (one week).'
      required:
      - CreationTime
      - RestoreTestingPlanArn
      - RestoreTestingPlanName
      - ScheduleExpression
      description: This contains metadata about a restore testing plan.
    RestoreTestingPlanForUpdate:
      type: object
      properties:
        RecoveryPointSelection:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingRecoveryPointSelection'
          description: 'Required: `Algorithm`; `RecoveryPointTypes`; `IncludeVaults`
            (_one or more_).


            Optional: _SelectionWindowDays_ (_''30'' if not specified_); `ExcludeVaults`
            (defaults to empty list if not listed).'
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A CRON expression in specified timezone when a restore testing
            plan is executed.
        ScheduleExpressionTimezone:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Optional. This is the timezone in which the schedule expression
            is set. By default, ScheduleExpressions are in UTC. You can modify this
            to a specified timezone.
        StartWindowHours:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: 'Defaults to 24 hours.


            A value in hours after a restore test is scheduled before a job will be
            canceled if it doesn''t start successfully. This value is optional. If
            this value is included, this parameter has a maximum value of 168 hours
            (one week).'
      description: This contains metadata about a restore testing plan.
    RestoreTestingPlans:
      type: array
      items:
        $ref: '#/components/schemas/RestoreTestingPlanForList'
    RestoreTestingRecoveryPointSelection:
      type: object
      properties:
        Algorithm:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingRecoveryPointSelectionAlgorithm'
          description: Acceptable values include "LATEST_WITHIN_WINDOW" or "RANDOM_WITHIN_WINDOW"
        ExcludeVaults:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: Accepted values include specific ARNs or list of selectors.
            Defaults to empty list if not listed.
        IncludeVaults:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: Accepted values include wildcard ["*"] or by specific ARNs
            or ARN wilcard replacement ["arn:aws:backup:us-west-2:123456789012:backup-vault:asdf",
            ...] ["arn:aws:backup:*:*:backup-vault:asdf-*", ...]
        RecoveryPointTypes:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingRecoveryPointTypeList'
          description: 'These are the types of recovery points.


            Include `SNAPSHOT` to restore only snapshot recovery points; include `CONTINUOUS`
            to restore continuous recovery points (point in time restore / PITR);
            use both to restore either a snapshot or a continuous recovery point.
            The recovery point will be determined by the value for `Algorithm`.'
        SelectionWindowDays:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: Accepted values are integers from 1 to 365.
      description: '`RecoveryPointSelection` has five parameters (three required and
        two optional). The values you specify determine which recovery point is included
        in the restore test. You must indicate with `Algorithm` if you want the latest
        recovery point within your `SelectionWindowDays` or if you want a random recovery
        point, and you must indicate through `IncludeVaults` from which vaults the
        recovery points can be chosen.


        `Algorithm` (_required_) Valid values: "`LATEST_WITHIN_WINDOW`" or "`RANDOM_WITHIN_WINDOW`".


        `Recovery point types` (_required_) Valid values: "`SNAPSHOT`" and/or "`CONTINUOUS`".
        Include `SNAPSHOT` to restore only snapshot recovery points; include `CONTINUOUS`
        to restore continuous recovery points (point in time restore / PITR); use
        both to restore either a snapshot or a continuous recovery point. The recovery
        point will be determined by the value for `Algorithm`.


        `IncludeVaults` (_required_). You must include one or more backup vaults.
        Use the wildcard ["*"] or specific ARNs.


        `SelectionWindowDays` (_optional_) Value must be an integer (in days) from
        1 to 365. If not included, the value defaults to `30`.


        `ExcludeVaults` (_optional_). You can choose to input one or more specific
        backup vault ARNs to exclude those vaults'' contents from restore eligibility.
        Or, you can include a list of selectors. If this parameter and its value are
        not included, it defaults to empty list.'
    RestoreTestingRecoveryPointSelectionAlgorithm:
      type: string
      enum:
      - LATEST_WITHIN_WINDOW
      - RANDOM_WITHIN_WINDOW
    RestoreTestingRecoveryPointType:
      type: string
      enum:
      - CONTINUOUS
      - SNAPSHOT
    RestoreTestingRecoveryPointTypeList:
      type: array
      items:
        $ref: '#/components/schemas/RestoreTestingRecoveryPointType'
    RestoreTestingSelectionForCreate:
      type: object
      properties:
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) of the IAM role that Backup
            uses to create the target resource; for example: `arn:aws:iam::123456789012:role/S3Access`.'
        ProtectedResourceArns:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: 'Each protected resource can be filtered by its specific ARNs,
            such as `ProtectedResourceArns: ["arn:aws:...", "arn:aws:..."]` or by
            a wildcard: `ProtectedResourceArns: ["*"]`, but not both.'
        ProtectedResourceConditions:
          allOf:
          - $ref: '#/components/schemas/ProtectedResourceConditions'
          description: 'If you have included the wildcard in ProtectedResourceArns,
            you can include resource conditions, such as `ProtectedResourceConditions:
            { StringEquals: [{ key: "XXXX", value: "YYYY" }]`.'
        ProtectedResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: "The type of Amazon Web Services resource included in a restore\
            \ testing selection; for example, an Amazon EBS volume or an Amazon RDS\
            \ database.\n\nSupported resource types accepted include:\n\n  * `Aurora`\
            \ for Amazon Aurora\n\n  * `DocumentDB` for Amazon DocumentDB (with MongoDB\
            \ compatibility)\n\n  * `DynamoDB` for Amazon DynamoDB\n\n  * `EBS` for\
            \ Amazon Elastic Block Store\n\n  * `EC2` for Amazon Elastic Compute Cloud\n\
            \n  * `EFS` for Amazon Elastic File System\n\n  * `FSx` for Amazon FSx\n\
            \n  * `Neptune` for Amazon Neptune\n\n  * `RDS` for Amazon Relational\
            \ Database Service\n\n  * `S3` for Amazon S3"
        RestoreMetadataOverrides:
          allOf:
          - $ref: '#/components/schemas/SensitiveStringMap'
          description: 'You can override certain restore metadata keys by including
            the parameter `RestoreMetadataOverrides` in the body of `RestoreTestingSelection`.
            Key values are not case sensitive.


            See the complete list of [restore testing inferred metadata](https://docs.aws.amazon.com/aws-backup/latest/devguide/restore-testing-inferred-metadata.html).'
        RestoreTestingSelectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique name of the restore testing selection that belongs
            to the related restore testing plan.
        ValidationWindowHours:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: This is amount of hours (1 to 168) available to run a validation
            script on the data. The data will be deleted upon the completion of the
            validation script or the end of the specified retention period, whichever
            comes first.
      required:
      - IamRoleArn
      - ProtectedResourceType
      - RestoreTestingSelectionName
      description: "This contains metadata about a specific restore testing selection.\n\
        \nProtectedResourceType is required, such as Amazon EBS or Amazon EC2.\n\n\
        This consists of `RestoreTestingSelectionName`, `ProtectedResourceType`, and\
        \ one of the following:\n\n  * `ProtectedResourceArns`\n\n  * `ProtectedResourceConditions`\n\
        \nEach protected resource type can have one single value.\n\nA restore testing\
        \ selection can include a wildcard value (\"*\") for `ProtectedResourceArns`\
        \ along with `ProtectedResourceConditions`. Alternatively, you can include\
        \ up to 30 specific protected resource ARNs in `ProtectedResourceArns`.\n\n\
        `ProtectedResourceConditions` examples include as `StringEquals` and `StringNotEquals`."
    RestoreTestingSelectionForGet:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that a restore testing selection was created,
            in Unix format and Coordinated Universal Time (UTC). The value of `CreationTime`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26, 201812:11:30.087 AM.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'This identifies the request and allows failed requests to
            be retried without the risk of running the operation twice. If the request
            includes a `CreatorRequestId` that matches an existing backup plan, that
            plan is returned. This parameter is optional.


            If used, this parameter must contain 1 to 50 alphanumeric or ''-_.'' characters.'
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The Amazon Resource Name (ARN) of the IAM role that Backup
            uses to create the target resource; for example:`arn:aws:iam::123456789012:role/S3Access`.
        ProtectedResourceArns:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: 'You can include specific ARNs, such as `ProtectedResourceArns:
            ["arn:aws:...", "arn:aws:..."]` or you can include a wildcard: `ProtectedResourceArns:
            ["*"]`, but not both.'
        ProtectedResourceConditions:
          allOf:
          - $ref: '#/components/schemas/ProtectedResourceConditions'
          description: In a resource testing selection, this parameter filters by
            specific conditions such as `StringEquals` or `StringNotEquals`.
        ProtectedResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of Amazon Web Services resource included in a resource
            testing selection; for example, an Amazon EBS volume or an Amazon RDS
            database.
        RestoreMetadataOverrides:
          allOf:
          - $ref: '#/components/schemas/SensitiveStringMap'
          description: 'You can override certain restore metadata keys by including
            the parameter `RestoreMetadataOverrides` in the body of `RestoreTestingSelection`.
            Key values are not case sensitive.


            See the complete list of [restore testing inferred metadata](https://docs.aws.amazon.com/aws-backup/latest/devguide/restore-testing-inferred-metadata.html).'
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The RestoreTestingPlanName is a unique string that is the name
            of the restore testing plan.
        RestoreTestingSelectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The unique name of the restore testing selection that belongs
            to the related restore testing plan.
        ValidationWindowHours:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: This is amount of hours (1 to 168) available to run a validation
            script on the data. The data will be deleted upon the completion of the
            validation script or the end of the specified retention period, whichever
            comes first.
      required:
      - CreationTime
      - IamRoleArn
      - ProtectedResourceType
      - RestoreTestingPlanName
      - RestoreTestingSelectionName
      description: This contains metadata about a restore testing selection.
    RestoreTestingSelectionForList:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The date and time that a restore testing selection was created,
            in Unix format and Coordinated Universal Time (UTC). The value of `CreationTime`
            is accurate to milliseconds. For example, the value 1516925490.087 represents
            Friday, January 26,2018 12:11:30.087 AM.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) of the IAM role that Backup
            uses to create the target resource; for example: `arn:aws:iam::123456789012:role/S3Access`.'
        ProtectedResourceType:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The type of Amazon Web Services resource included in a restore
            testing selection; for example, an Amazon EBS volume or an Amazon RDS
            database.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'Unique string that is the name of the restore testing plan.


            The name cannot be changed after creation. The name must consist of only
            alphanumeric characters and underscores. Maximum length is 50.'
        RestoreTestingSelectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Unique name of a restore testing selection.
        ValidationWindowHours:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: 'This value represents the time, in hours, data is retained
            after a restore test so that optional validation can be completed.


            Accepted value is an integer between 0 and 168 (the hourly equivalent
            of seven days).'
      required:
      - CreationTime
      - IamRoleArn
      - ProtectedResourceType
      - RestoreTestingPlanName
      - RestoreTestingSelectionName
      description: This contains metadata about a restore testing selection.
    RestoreTestingSelectionForUpdate:
      type: object
      properties:
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: 'The Amazon Resource Name (ARN) of the IAM role that Backup
            uses to create the target resource; for example: `arn:aws:iam::123456789012:role/S3Access`.'
        ProtectedResourceArns:
          allOf:
          - $ref: '#/components/schemas/stringList'
          description: 'You can include a list of specific ARNs, such as `ProtectedResourceArns:
            ["arn:aws:...", "arn:aws:..."]` or you can include a wildcard: `ProtectedResourceArns:
            ["*"]`, but not both.'
        ProtectedResourceConditions:
          allOf:
          - $ref: '#/components/schemas/ProtectedResourceConditions'
          description: The conditions that you define for resources in your restore
            testing plan using tags.
        RestoreMetadataOverrides:
          allOf:
          - $ref: '#/components/schemas/SensitiveStringMap'
          description: 'You can override certain restore metadata keys by including
            the parameter `RestoreMetadataOverrides` in the body of `RestoreTestingSelection`.
            Key values are not case sensitive.


            See the complete list of [restore testing inferred metadata](https://docs.aws.amazon.com/aws-backup/latest/devguide/restore-testing-inferred-metadata.html).'
        ValidationWindowHours:
          allOf:
          - $ref: '#/components/schemas/integer'
          description: 'This value represents the time, in hours, data is retained
            after a restore test so that optional validation can be completed.


            Accepted value is an integer between 0 and 168 (the hourly equivalent
            of seven days).'
      description: This contains metadata about a restore testing selection.
    RestoreTestingSelections:
      type: array
      items:
        $ref: '#/components/schemas/RestoreTestingSelectionForList'
    RestoreValidationStatus:
      type: string
      enum:
      - FAILED
      - SUCCESSFUL
      - TIMED_OUT
      - VALIDATING
    SensitiveStringMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/String'
    ServiceUnavailableException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/string'
        Message:
          $ref: '#/components/schemas/string'
        Type:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
        Context:
          allOf:
          - $ref: '#/components/schemas/string'
          description: ''
      description: The request failed due to a temporary failure of the server.
    StartBackupJobInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role ARN used to create the target recovery
            point; for example, `arn:aws:iam::123456789012:role/S3Access`.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `StartBackupJob`. Retrying a successful request
            with the same idempotency token results in a success message with no action
            taken.
        StartWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          description: 'A value in minutes after a backup is scheduled before a job
            will be canceled if it doesn''t start successfully. This value is optional,
            and the default is 8 hours. If this value is included, it must be at least
            60 minutes to avoid errors.


            This parameter has a maximum value of 100 years (52,560,000 minutes).


            During the start window, the backup job status remains in `CREATED` status
            until it has successfully begun or until the start window time has run
            out. If within the start window time Backup receives an error that allows
            the job to be retried, Backup will automatically retry to begin the job
            at least every 10 minutes until the backup successfully begins (the job
            status changes to `RUNNING`) or until the job status changes to `EXPIRED`
            (which is expected to occur when the start window time is over).'
        CompleteWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          description: 'A value in minutes during which a successfully started backup
            must complete, or else Backup will cancel the job. This value is optional.
            This value begins counting down from when the backup was scheduled. It
            does not add additional time for `StartWindowMinutes`, or if the backup
            started later than scheduled.


            Like `StartWindowMinutes`, this parameter has a maximum value of 100 years
            (52,560,000 minutes).'
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/Lifecycle'
          description: 'The lifecycle defines when a protected resource is transitioned
            to cold storage and when it expires. Backup will transition and expire
            backups automatically according to the lifecycle that you define.


            Backups transitioned to cold storage must be stored in cold storage for
            a minimum of 90 days. Therefore, the “retention” setting must be 90 days
            greater than the “transition to cold after days” setting. The “transition
            to cold after days” setting cannot be changed after a backup has been
            transitioned to cold.


            Resource types that can transition to cold storage are listed in the [Feature
            availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
            table. Backup ignores this expression for other resource types.


            This parameter has a maximum value of 100 years (36,500 days).'
        RecoveryPointTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: The tags to assign to the resources.
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/BackupOptions'
          description: 'The backup option for a selected resource. This option is
            only available for Windows Volume Shadow Copy Service (VSS) backup jobs.


            Valid values: Set to `"WindowsVSS":"enabled"` to enable the `WindowsVSS`
            backup option and create a Windows VSS backup. Set to `"WindowsVSS""disabled"`
            to create a regular backup. The `WindowsVSS` option is not enabled by
            default.'
        Index:
          allOf:
          - $ref: '#/components/schemas/Index'
          description: "Include this parameter to enable index creation if your backup\
            \ job has a resource type that supports backup indexes.\n\nResource types\
            \ that support backup indexes include:\n\n  * `EBS` for Amazon Elastic\
            \ Block Store\n\n  * `S3` for Amazon Simple Storage Service (Amazon S3)\n\
            \nIndex can have 1 of 2 possible values, either `ENABLED` or `DISABLED`.\n\
            \nTo create a backup index for an eligible `ACTIVE` recovery point that\
            \ does not yet have a backup index, set value to `ENABLED`.\n\nTo delete\
            \ a backup index, set value to `DISABLED`."
      required:
      - BackupVaultName
      - ResourceArn
      - IamRoleArn
    StartBackupJobOutput:
      type: object
      properties:
        BackupJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to Backup to back up a resource.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: '_Note: This field is only returned for Amazon EFS and Advanced
            DynamoDB resources._


            An ARN that uniquely identifies a recovery point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.'
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a backup job is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This is a returned boolean value indicating this is a parent
            (composite) backup job.
    StartCopyJobInput:
      type: object
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point to use for
            the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45.
        SourceBackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical source container where backups are stored.
            Backup vaults are identified by names that are unique to the account used
            to create them and the Amazon Web Services Region where they are created.
        DestinationBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a destination
            backup vault to copy to; for example, `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: Specifies the IAM role ARN used to copy the target recovery
            point; for example, `arn:aws:iam::123456789012:role/S3Access`.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `StartCopyJob`. Retrying a successful request
            with the same idempotency token results in a success message with no action
            taken.
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
      required:
      - RecoveryPointArn
      - SourceBackupVaultName
      - DestinationBackupVaultArn
      - IamRoleArn
    StartCopyJobOutput:
      type: object
      properties:
        CopyJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a copy job.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a copy job is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: This is a returned boolean value indicating this is a parent
            (composite) copy job.
    StartReportJobInput:
      type: object
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: The unique name of a report plan.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `StartReportJobInput`. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
      required:
      - ReportPlanName
    StartReportJobOutput:
      type: object
      properties:
        ReportJobId:
          allOf:
          - $ref: '#/components/schemas/ReportJobId'
          description: The identifier of the report job. A unique, randomly generated,
            Unicode, UTF-8 encoded string that is at most 1,024 bytes long. The report
            job ID cannot be edited.
    StartRestoreJobInput:
      type: object
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: "A set of metadata key-value pairs.\n\nYou can get configuration\
            \ metadata about a resource at the time it was backed up by calling `GetRecoveryPointRestoreMetadata`.\
            \ However, values in addition to those provided by `GetRecoveryPointRestoreMetadata`\
            \ might be required to restore a resource. For example, you might need\
            \ to provide a new resource name if the original already exists.\n\nFor\
            \ more information about the metadata for each resource, see the following:\n\
            \n  * [Metadata for Amazon Aurora](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-aur.html#aur-restore-cli)\n\
            \n  * [Metadata for Amazon DocumentDB](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-docdb.html#docdb-restore-cli)\n\
            \n  * [Metadata for CloudFormation](https://docs.aws.amazon.com/aws-backup/latest/devguide/restore-application-stacks.html#restoring-cfn-cli)\n\
            \n  * [Metadata for Amazon DynamoDB](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-dynamodb.html#ddb-restore-cli)\n\
            \n  * [ Metadata for Amazon EBS](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-ebs.html#ebs-restore-cli)\n\
            \n  * [Metadata for Amazon EC2](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-ec2.html#restoring-ec2-cli)\n\
            \n  * [Metadata for Amazon EFS](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-efs.html#efs-restore-cli)\n\
            \n  * [Metadata for Amazon FSx](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-fsx.html#fsx-restore-cli)\n\
            \n  * [Metadata for Amazon Neptune](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-nep.html#nep-restore-cli)\n\
            \n  * [Metadata for Amazon RDS](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-rds.html#rds-restore-cli)\n\
            \n  * [Metadata for Amazon Redshift](https://docs.aws.amazon.com/aws-backup/latest/devguide/redshift-restores.html#redshift-restore-api)\n\
            \n  * [Metadata for Storage Gateway](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-storage-gateway.html#restoring-sgw-cli)\n\
            \n  * [Metadata for Amazon S3](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-s3.html#s3-restore-cli)\n\
            \n  * [Metadata for Amazon Timestream](https://docs.aws.amazon.com/aws-backup/latest/devguide/timestream-restore.html#timestream-restore-api)\n\
            \n  * [Metadata for virtual machines](https://docs.aws.amazon.com/aws-backup/latest/devguide/restoring-vm.html#vm-restore-cli)"
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: 'The Amazon Resource Name (ARN) of the IAM role that Backup
            uses to create the target resource; for example: `arn:aws:iam::123456789012:role/S3Access`.'
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `StartRestoreJob`. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          description: "Starts a job to restore a recovery point for one of the following\
            \ resources:\n\n  * `Aurora` \\- Amazon Aurora\n\n  * `DocumentDB` \\\
            - Amazon DocumentDB\n\n  * `CloudFormation` \\- CloudFormation\n\n  *\
            \ `DynamoDB` \\- Amazon DynamoDB\n\n  * `EBS` \\- Amazon Elastic Block\
            \ Store\n\n  * `EC2` \\- Amazon Elastic Compute Cloud\n\n  * `EFS` \\\
            - Amazon Elastic File System\n\n  * `FSx` \\- Amazon FSx\n\n  * `Neptune`\
            \ \\- Amazon Neptune\n\n  * `RDS` \\- Amazon Relational Database Service\n\
            \n  * `Redshift` \\- Amazon Redshift\n\n  * `Storage Gateway` \\- Storage\
            \ Gateway\n\n  * `S3` \\- Amazon Simple Storage Service\n\n  * `Timestream`\
            \ \\- Amazon Timestream\n\n  * `VirtualMachine` \\- Virtual machines"
        CopySourceTagsToRestoredResource:
          allOf:
          - $ref: '#/components/schemas/Boolean2'
          description: 'This is an optional parameter. If this equals `True`, tags
            included in the backup will be copied to the restored resource.


            This can only be applied to backups created through Backup.'
      required:
      - RecoveryPointArn
      - Metadata
    StartRestoreJobOutput:
      type: object
      properties:
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/RestoreJobId'
          description: Uniquely identifies the job that restores a recovery point.
    StopBackupJobInput:
      type: object
      properties:
        BackupJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a request to Backup to back up a resource.
      required:
      - BackupJobId
    StorageClass:
      type: string
      enum:
      - WARM
      - COLD
      - DELETED
    TagKey:
      type: string
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/string'
      x-sensitive: true
    TagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a resource. The format of
            the ARN depends on the type of the tagged resource.


            ARNs that do not include `backup` are incompatible with tagging. `TagResource`
            and `UntagResource` with invalid ARNs will result in an error. Acceptable
            ARN content can include `arn:aws:backup:us-east`. Invalid ARN content
            may look like `arn:aws:ec2:us-east`.'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          description: 'Key-value pairs that are used to help organize your resources.
            You can assign your own metadata to the resources you create. For clarity,
            this is the structure to assign tags: `[{"Key":"string","Value":"string"}]`.'
      required:
      - ResourceArn
      - Tags
    TagValue:
      type: string
    Tags:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    Timezone:
      type: string
    UntagResourceInput:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: 'An ARN that uniquely identifies a resource. The format of
            the ARN depends on the type of the tagged resource.


            ARNs that do not include `backup` are incompatible with tagging. `TagResource`
            and `UntagResource` with invalid ARNs will result in an error. Acceptable
            ARN content can include `arn:aws:backup:us-east`. Invalid ARN content
            may look like `arn:aws:ec2:us-east`.'
        TagKeyList:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The keys to identify which key-value tags to remove from a
            resource.
      required:
      - ResourceArn
      - TagKeyList
    UpdateBackupPlanInput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: The ID of the backup plan.
        BackupPlan:
          allOf:
          - $ref: '#/components/schemas/BackupPlanInput'
          description: The body of a backup plan. Includes a `BackupPlanName` and
            one or more sets of `Rules`.
      required:
      - BackupPlanId
      - BackupPlan
    UpdateBackupPlanOutput:
      type: object
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a backup
            plan; for example, `arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50`.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time a backup plan is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationDate` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          description: Unique, randomly generated, Unicode, UTF-8 encoded strings
            that are at most 1,024 bytes long. Version Ids cannot be edited.
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          description: Contains a list of `BackupOptions` for each resource type.
    UpdateFrameworkInput:
      type: object
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The unique name of a framework. This name is between 1 and
            256 characters, starting with a letter, and consisting of letters (a-z,
            A-Z), numbers (0-9), and underscores (_).
        FrameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          description: An optional description of the framework with a maximum 1,024
            characters.
        FrameworkControls:
          allOf:
          - $ref: '#/components/schemas/FrameworkControls'
          description: The controls that make up the framework. Each control in the
            list has a name, input parameters, and scope.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `UpdateFrameworkInput`. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
      required:
      - FrameworkName
    UpdateFrameworkOutput:
      type: object
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          description: The unique name of a framework. This name is between 1 and
            256 characters, starting with a letter, and consisting of letters (a-z,
            A-Z), numbers (0-9), and underscores (_).
        FrameworkArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a framework is created, in ISO 8601
            representation. The value of `CreationTime` is accurate to milliseconds.
            For example, 2020-07-10T15:00:00.000-08:00 represents the 10th of July
            2020 at 3:00 PM 8 hours behind UTC.
    UpdateGlobalSettingsInput:
      type: object
      properties:
        GlobalSettings:
          allOf:
          - $ref: '#/components/schemas/GlobalSettings'
          description: 'A value for `isCrossAccountBackupEnabled` and a Region. Example:
            `update-global-settings --global-settings isCrossAccountBackupEnabled=false
            --region us-west-2`.'
    UpdateRecoveryPointIndexSettingsInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: 'The name of a logical container where backups are stored.
            Backup vaults are identified by names that are unique to the account used
            to create them and the Region where they are created.


            Accepted characters include lowercase letters, numbers, and hyphens.'
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: 'This specifies the IAM role ARN used for this operation.


            For example, arn:aws:iam::123456789012:role/S3Access'
        Index:
          allOf:
          - $ref: '#/components/schemas/Index'
          description: 'Index can have 1 of 2 possible values, either `ENABLED` or
            `DISABLED`.


            To create a backup index for an eligible `ACTIVE` recovery point that
            does not yet have a backup index, set value to `ENABLED`.


            To delete a backup index, set value to `DISABLED`.'
      required:
      - BackupVaultName
      - RecoveryPointArn
      - Index
    UpdateRecoveryPointIndexSettingsOutput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Region where they are created.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a recovery point; for example,
            `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        IndexStatus:
          allOf:
          - $ref: '#/components/schemas/IndexStatus'
          description: 'This is the current status for the backup index associated
            with the specified recovery point.


            Statuses are: `PENDING` | `ACTIVE` | `FAILED` | `DELETING`


            A recovery point with an index that has the status of `ACTIVE` can be
            included in a search.'
        Index:
          allOf:
          - $ref: '#/components/schemas/Index'
          description: 'Index can have 1 of 2 possible values, either `ENABLED` or
            `DISABLED`.


            A value of `ENABLED` means a backup index for an eligible `ACTIVE` recovery
            point has been created.


            A value of `DISABLED` means a backup index was deleted.'
    UpdateRecoveryPointLifecycleInput:
      type: object
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          description: The name of a logical container where backups are stored. Backup
            vaults are identified by names that are unique to the account used to
            create them and the Amazon Web Services Region where they are created.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/Lifecycle'
          description: 'The lifecycle defines when a protected resource is transitioned
            to cold storage and when it expires. Backup transitions and expires backups
            automatically according to the lifecycle that you define.


            Backups transitioned to cold storage must be stored in cold storage for
            a minimum of 90 days. Therefore, the “retention” setting must be 90 days
            greater than the “transition to cold after days” setting. The “transition
            to cold after days” setting cannot be changed after a backup has been
            transitioned to cold.'
      required:
      - BackupVaultName
      - RecoveryPointArn
    UpdateRecoveryPointLifecycleOutput:
      type: object
      properties:
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An ARN that uniquely identifies a backup vault; for example,
            `arn:aws:backup:us-east-1:123456789012:backup-vault:aBackupVault`.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a recovery
            point; for example, `arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45`.
        Lifecycle:
          allOf:
          - $ref: '#/components/schemas/Lifecycle'
          description: 'The lifecycle defines when a protected resource is transitioned
            to cold storage and when it expires. Backup transitions and expires backups
            automatically according to the lifecycle that you define.


            Backups transitioned to cold storage must be stored in cold storage for
            a minimum of 90 days. Therefore, the “retention” setting must be 90 days
            greater than the “transition to cold after days” setting. The “transition
            to cold after days” setting cannot be changed after a backup has been
            transitioned to cold.


            Resource types that can transition to cold storage are listed in the [Feature
            availability by resource](https://docs.aws.amazon.com/aws-backup/latest/devguide/backup-feature-availability.html#features-by-resource)
            table. Backup ignores this expression for other resource types.'
        CalculatedLifecycle:
          allOf:
          - $ref: '#/components/schemas/CalculatedLifecycle'
          description: A `CalculatedLifecycle` object containing `DeleteAt` and `MoveToColdStorageAt`
            timestamps.
    UpdateRegionSettingsInput:
      type: object
      properties:
        ResourceTypeOptInPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeOptInPreference'
          description: 'Updates the list of services along with the opt-in preferences
            for the Region.


            If resource assignments are only based on tags, then service opt-in settings
            are applied. If a resource type is explicitly assigned to a backup plan,
            such as Amazon S3, Amazon EC2, or Amazon RDS, it will be included in the
            backup even if the opt-in is not enabled for that particular service.
            If both a resource type and tags are specified in a resource assignment,
            the resource type specified in the backup plan takes priority over the
            tag condition. Service opt-in settings are disregarded in this situation.'
        ResourceTypeManagementPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeManagementPreference'
          description: Enables or disables full Backup management of backups for a
            resource type. To enable full Backup management for DynamoDB along with
            [ Backup's advanced DynamoDB backup features](https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html),
            follow the procedure to [ enable advanced DynamoDB backup programmatically](https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html#advanced-ddb-backup-enable-cli).
    UpdateReportPlanInput:
      type: object
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: The unique name of the report plan. This name is between 1
            and 256 characters, starting with a letter, and consisting of letters
            (a-z, A-Z), numbers (0-9), and underscores (_).
        ReportPlanDescription:
          allOf:
          - $ref: '#/components/schemas/ReportPlanDescription'
          description: An optional description of the report plan with a maximum 1,024
            characters.
        ReportDeliveryChannel:
          allOf:
          - $ref: '#/components/schemas/ReportDeliveryChannel'
          description: The information about where to deliver your reports, specifically
            your Amazon S3 bucket name, S3 key prefix, and the formats of your reports.
        ReportSetting:
          allOf:
          - $ref: '#/components/schemas/ReportSetting'
          description: 'The report template for the report. Reports are built using
            a report template. The report templates are:


            `RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT
            | COPY_JOB_REPORT | RESTORE_JOB_REPORT`


            If the report template is `RESOURCE_COMPLIANCE_REPORT` or `CONTROL_COMPLIANCE_REPORT`,
            this API resource also describes the report coverage by Amazon Web Services
            Regions and frameworks.'
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to `UpdateReportPlanInput`. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
      required:
      - ReportPlanName
    UpdateReportPlanOutput:
      type: object
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          description: The unique name of the report plan.
        ReportPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          description: The date and time that a report plan is created, in Unix format
            and Coordinated Universal Time (UTC). The value of `CreationTime` is accurate
            to milliseconds. For example, the value 1516925490.087 represents Friday,
            January 26, 2018 12:11:30.087 AM.
    UpdateRestoreTestingPlanInput:
      type: object
      properties:
        RestoreTestingPlan:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingPlanForUpdate'
          description: Specifies the body of a restore testing plan.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the restore testing plan name.
      required:
      - RestoreTestingPlan
      - RestoreTestingPlanName
    UpdateRestoreTestingPlanOutput:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the resource testing plan was created.
        RestoreTestingPlanArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Unique ARN (Amazon Resource Name) of the restore testing plan.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name cannot be changed after creation. The name consists
            of only alphanumeric characters and underscores. Maximum length is 50.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the update completed for the restore testing plan.
      required:
      - CreationTime
      - RestoreTestingPlanArn
      - RestoreTestingPlanName
      - UpdateTime
    UpdateRestoreTestingSelectionInput:
      type: object
      properties:
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The restore testing plan name is required to update the indicated
            testing plan.
        RestoreTestingSelection:
          allOf:
          - $ref: '#/components/schemas/RestoreTestingSelectionForUpdate'
          description: To update your restore testing selection, you can use either
            protected resource ARNs or conditions, but not both. That is, if your
            selection has `ProtectedResourceArns`, requesting an update with the parameter
            `ProtectedResourceConditions` will be unsuccessful.
        RestoreTestingSelectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The required restore testing selection name of the restore
            testing selection you wish to update.
      required:
      - RestoreTestingPlanName
      - RestoreTestingSelection
      - RestoreTestingSelectionName
    UpdateRestoreTestingSelectionOutput:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the resource testing selection was updated successfully.
        RestoreTestingPlanArn:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Unique string that is the name of the restore testing plan.
        RestoreTestingPlanName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The restore testing plan with which the updated restore testing
            selection is associated.
        RestoreTestingSelectionName:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The returned restore testing selection name.
        UpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time the update completed for the restore testing selection.
      required:
      - CreationTime
      - RestoreTestingPlanArn
      - RestoreTestingPlanName
      - RestoreTestingSelectionName
      - UpdateTime
    VaultNames:
      type: array
      items:
        $ref: '#/components/schemas/string'
    VaultState:
      type: string
      enum:
      - CREATING
      - AVAILABLE
      - FAILED
    VaultType:
      type: string
      enum:
      - BACKUP_VAULT
      - LOGICALLY_AIR_GAPPED_BACKUP_VAULT
    WindowMinutes:
      type: integer
      format: int64
    integer:
      type: integer
      default: 0
    string:
      type: string
    stringList:
      type: array
      items:
        $ref: '#/components/schemas/string'
    stringMap:
      type: object
      additionalProperties:
        type: string
    timestamp:
      type: string
      format: date-time
