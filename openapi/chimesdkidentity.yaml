openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: chime_sdk_identity
  x-aws-serviceName: chimesdkidentity
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-04-20'
  title: Amazon Chime SDK Identity
  description: |-
    The Amazon Chime SDK Identity APIs in this section allow software developers to create and manage unique instances of their messaging applications. These APIs provide the overarching framework for creating and sending messages. For more information about the identity APIs, refer to [Amazon Chime SDK identity](https://docs.aws.amazon.com/chime/latest/APIReference/API_Operations_Amazon_Chime_SDK_Identity.html).
servers:
- description: The Amazon Chime SDK Identity regional endpoint
  url: https://identity-chime.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /app-instances:
    post:
      operationId: CreateAppInstance
      description: |-
        Creates an Amazon Chime SDK messaging `AppInstance` under an AWS account. Only SDK messaging customers use this API. `CreateAppInstance` supports idempotency behavior as described in the AWS API Standard.

        identity
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyResourceName'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListAppInstances
      description: |-
        Lists all Amazon Chime `AppInstance`s created under a single AWS account.
      parameters:
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instances/{AppInstanceArn}/admins:
    post:
      operationId: CreateAppInstanceAdmin
      description: |-
        Promotes an `AppInstanceUser` or `AppInstanceBot` to an `AppInstanceAdmin`. The promoted entity can perform the following actions.

          * `ChannelModerator` actions across all channels in the `AppInstance`.

          * `DeleteChannelMessage` actions.

        Only an `AppInstanceUser` and `AppInstanceBot` can be promoted to an `AppInstanceAdmin` role.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AppInstanceAdminArn:
                  $ref: '#/components/schemas/ChimeArn'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListAppInstanceAdmins
      description: |-
        Returns a list of the administrators in the `AppInstance`.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instance-bots:
    post:
      operationId: CreateAppInstanceBot
      description: |-
        Creates a bot under an Amazon Chime `AppInstance`. The request consists of a unique `Configuration` and `Name` for that bot.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AppInstanceArn:
                  $ref: '#/components/schemas/ChimeArn'
                Name:
                  $ref: '#/components/schemas/ResourceName'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
                Configuration:
                  $ref: '#/components/schemas/Configuration'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListAppInstanceBots
      description: |-
        Lists all `AppInstanceBots` created under a single `AppInstance`.
      parameters:
      - name: app-instance-arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instance-users:
    post:
      operationId: CreateAppInstanceUser
      description: |-
        Creates a user under an Amazon Chime `AppInstance`. The request consists of a unique `appInstanceUserId` and `Name` for that user.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AppInstanceArn:
                  $ref: '#/components/schemas/ChimeArn'
                AppInstanceUserId:
                  $ref: '#/components/schemas/UserId'
                Name:
                  $ref: '#/components/schemas/UserName'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                Tags:
                  $ref: '#/components/schemas/TagList'
                ExpirationSettings:
                  $ref: '#/components/schemas/ExpirationSettings'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: ListAppInstanceUsers
      description: |-
        List all `AppInstanceUsers` created under a single `AppInstance`.
      parameters:
      - name: app-instance-arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instances/{AppInstanceArn}:
    delete:
      operationId: DeleteAppInstance
      description: |-
        Deletes an `AppInstance` and all associated data asynchronously.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeAppInstance
      description: |-
        Returns the full details of an `AppInstance`.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateAppInstance
      description: |-
        Updates `AppInstance` metadata.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/NonEmptyResourceName'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instances/{AppInstanceArn}/admins/{AppInstanceAdminArn}:
    delete:
      operationId: DeleteAppInstanceAdmin
      description: |-
        Demotes an `AppInstanceAdmin` to an `AppInstanceUser` or `AppInstanceBot`. This action does not delete the user.
      parameters:
      - name: AppInstanceAdminArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeAppInstanceAdmin
      description: |-
        Returns the full details of an `AppInstanceAdmin`.
      parameters:
      - name: AppInstanceAdminArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instance-bots/{AppInstanceBotArn}:
    delete:
      operationId: DeleteAppInstanceBot
      description: |-
        Deletes an `AppInstanceBot`.
      parameters:
      - name: AppInstanceBotArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeAppInstanceBot
      description: |-
        The `AppInstanceBot's` information.
      parameters:
      - name: AppInstanceBotArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '404':
          description: |-
            One or more of the resources in the request does not exist in the system.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateAppInstanceBot
      description: |-
        Updates the name and metadata of an `AppInstanceBot`.
      parameters:
      - name: AppInstanceBotArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/ResourceName'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
                Configuration:
                  $ref: '#/components/schemas/Configuration'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instance-users/{AppInstanceUserArn}:
    delete:
      operationId: DeleteAppInstanceUser
      description: |-
        Deletes an `AppInstanceUser`.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '204': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeAppInstanceUser
      description: |-
        Returns the full details of an `AppInstanceUser`.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateAppInstanceUser
      description: |-
        Updates the details of an `AppInstanceUser`. You can update names and metadata.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/UserName'
                Metadata:
                  $ref: '#/components/schemas/Metadata'
      responses:
        '200': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instance-users/{AppInstanceUserArn}/endpoints/{EndpointId}:
    delete:
      operationId: DeregisterAppInstanceUserEndpoint
      description: |-
        Deregisters an `AppInstanceUserEndpoint`.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: EndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String64'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    get:
      operationId: DescribeAppInstanceUserEndpoint
      description: |-
        Returns the full details of an `AppInstanceUserEndpoint`.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String1600'
      - name: EndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String64'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: UpdateAppInstanceUserEndpoint
      description: |-
        Updates the details of an `AppInstanceUserEndpoint`. You can update the name and `AllowMessage` values.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      - name: EndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/String64'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/SensitiveString1600'
                AllowMessages:
                  $ref: '#/components/schemas/AllowMessages'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instances/{AppInstanceArn}/retention-settings:
    get:
      operationId: GetAppInstanceRetentionSettings
      description: |-
        Gets the retention settings for an `AppInstance`.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    put:
      operationId: PutAppInstanceRetentionSettings
      description: |-
        Sets the amount of time in days that a given `AppInstance` retains data.
      parameters:
      - name: AppInstanceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                AppInstanceRetentionSettings:
                  $ref: '#/components/schemas/AppInstanceRetentionSettings'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instance-users/{AppInstanceUserArn}/endpoints:
    get:
      operationId: ListAppInstanceUserEndpoints
      description: |-
        Lists all the `AppInstanceUserEndpoints` created under a single `AppInstanceUser`.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SensitiveChimeArn'
      - name: max-results
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
    post:
      operationId: RegisterAppInstanceUserEndpoint
      description: |-
        Registers an endpoint under an Amazon Chime `AppInstanceUser`. The endpoint receives messages for a user. For push notifications, the endpoint is a mobile device used to receive mobile push notifications for a user.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/SensitiveChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                Name:
                  $ref: '#/components/schemas/SensitiveString1600'
                Type:
                  $ref: '#/components/schemas/AppInstanceUserEndpointType'
                ResourceArn:
                  $ref: '#/components/schemas/ChimeArn'
                EndpointAttributes:
                  $ref: '#/components/schemas/EndpointAttributes'
                ClientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                AllowMessages:
                  $ref: '#/components/schemas/AllowMessages'
      responses:
        '201': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags applied to an Amazon Chime SDK identity resource.
      parameters:
      - name: arn
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /app-instance-users/{AppInstanceUserArn}/expiration-settings:
    put:
      operationId: PutAppInstanceUserExpirationSettings
      description: |-
        Sets the number of days before the `AppInstanceUser` is automatically deleted.

        A background process deletes expired `AppInstanceUsers` within 6 hours of expiration. Actual deletion times may vary.

        Expired `AppInstanceUsers` that have not yet been deleted appear as active, and you can update their expiration settings. The system honors the new settings.
      parameters:
      - name: AppInstanceUserArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ChimeArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExpirationSettings:
                  $ref: '#/components/schemas/ExpirationSettings'
      responses:
        '200': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags?operation=tag-resource:
    post:
      operationId: TagResource
      description: |-
        Applies the specified tags to the specified Amazon Chime SDK identity resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/ChimeArn'
                Tags:
                  $ref: '#/components/schemas/TagList'
      responses:
        '204': {}
        '400':
          description: |-
            The request exceeds the resource limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceLimitExceededException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
  /tags?operation=untag-resource:
    post:
      operationId: UntagResource
      description: |-
        Removes the specified tags from the specified Amazon Chime SDK identity resource.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ResourceARN:
                  $ref: '#/components/schemas/ChimeArn'
                TagKeys:
                  $ref: '#/components/schemas/TagKeyList'
      responses:
        '204': {}
        '400':
          description: |-
            The input parameters don't match the service's restrictions.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            The client is permanently forbidden from making the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            The service encountered an unexpected error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceFailureException'
        '503':
          description: |-
            The service is currently unavailable.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
        '429':
          description: |-
            The client exceeded its request rate limit.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledClientException'
        '401':
          description: |-
            The client is not currently authorized to make the request.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedClientException'
components:
  schemas:
    AllowMessages:
      type: string
      enum:
      - ALL
      - NONE
    AppInstance:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the messaging instance.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of an `AppInstance`.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which an `AppInstance` was created. In epoch milliseconds.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time an `AppInstance` was last updated. In epoch milliseconds.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of an `AppInstance`.
      description: The details of an `AppInstance`, an instance of an Amazon Chime
        SDK messaging application.
    AppInstanceAdmin:
      type: object
      properties:
        Admin:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The `AppInstanceAdmin` data.
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance` for which the user is an administrator.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which an administrator was created.
      description: The name and ARN of the admin for the `AppInstance`.
    AppInstanceAdminList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceAdminSummary'
    AppInstanceAdminSummary:
      type: object
      properties:
        Admin:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The details of the `AppInstanceAdmin`.
      description: Summary of the details of an `AppInstanceAdmin`.
    AppInstanceBot:
      type: object
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the AppInstanceBot.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the AppInstanceBot.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/Configuration'
          description: The data processing instructions for an AppInstanceBot.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the `AppInstanceBot` was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the `AppInstanceBot` was last updated.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata for an AppInstanceBot.
      description: An Amazon Lex V2 chat bot created under an `AppInstance`.
    AppInstanceBotList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceBotSummary'
    AppInstanceBotSummary:
      type: object
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the AppInstanceBot.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the AppInstanceBox.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the AppInstanceBot.
      description: High-level information about an AppInstanceBot.
    AppInstanceList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceSummary'
    AppInstanceRetentionSettings:
      type: object
      properties:
        ChannelRetentionSettings:
          allOf:
          - $ref: '#/components/schemas/ChannelRetentionSettings'
          description: The length of time in days to retain the messages in a channel.
      description: The details of the data-retention settings for an `AppInstance`.
    AppInstanceSummary:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The `AppInstance` ARN.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the `AppInstance`.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the `AppInstance`.
      description: Summary of the data for an `AppInstance`.
    AppInstanceUser:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          description: The name of the `AppInstanceUser`.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the `AppInstanceUser`.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the `AppInstanceUser` was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the `AppInstanceUser` was last updated.
        ExpirationSettings:
          allOf:
          - $ref: '#/components/schemas/ExpirationSettings'
          description: The interval after which an `AppInstanceUser` is automatically
            deleted.
      description: The details of an `AppInstanceUser`.
    AppInstanceUserEndpoint:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          description: The unique identifier of the `AppInstanceUserEndpoint`.
        Name:
          allOf:
          - $ref: '#/components/schemas/SensitiveString1600'
          description: The name of the `AppInstanceUserEndpoint`.
        Type:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpointType'
          description: The type of the `AppInstanceUserEndpoint`.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the resource to which the endpoint belongs.
        EndpointAttributes:
          allOf:
          - $ref: '#/components/schemas/EndpointAttributes'
          description: The attributes of an `Endpoint`.
        CreatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which an `AppInstanceUserEndpoint` was created.
        LastUpdatedTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which an `AppInstanceUserEndpoint` was last updated.
        AllowMessages:
          allOf:
          - $ref: '#/components/schemas/AllowMessages'
          description: Boolean that controls whether the `AppInstanceUserEndpoint`
            is opted in to receive messages. `ALL` indicates the endpoint will receive
            all messages. `NONE` indicates the endpoint will receive no messages.
        EndpointState:
          allOf:
          - $ref: '#/components/schemas/EndpointState'
          description: "A read-only field that represents the state of an `AppInstanceUserEndpoint`.\
            \ Supported values:\n\n  * `ACTIVE`: The `AppInstanceUserEndpoint` is\
            \ active and able to receive messages. When `ACTIVE`, the `EndpointStatusReason`\
            \ remains empty.\n\n  * `INACTIVE`: The `AppInstanceUserEndpoint` is inactive\
            \ and can't receive message. When `INACTIVE`, the corresponding reason\
            \ will be conveyed through `EndpointStatusReason`.\n\n  * `INVALID_DEVICE_TOKEN`\
            \ indicates that an `AppInstanceUserEndpoint` is `INACTIVE` due to invalid\
            \ device token\n\n  * `INVALID_PINPOINT_ARN` indicates that an `AppInstanceUserEndpoint`\
            \ is `INACTIVE` due to an invalid pinpoint ARN that was input through\
            \ the `ResourceArn` field."
      description: An endpoint under an Amazon Chime `AppInstanceUser` that receives
        messages for a user. For push notifications, the endpoint is a mobile device
        used to receive mobile push notifications for a user.
    AppInstanceUserEndpointSummary:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          description: The unique identifier of the `AppInstanceUserEndpoint`.
        Name:
          allOf:
          - $ref: '#/components/schemas/SensitiveString1600'
          description: The name of the `AppInstanceUserEndpoint`.
        Type:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpointType'
          description: The type of the `AppInstanceUserEndpoint`.
        AllowMessages:
          allOf:
          - $ref: '#/components/schemas/AllowMessages'
          description: BBoolean that controls whether the `AppInstanceUserEndpoint`
            is opted in to receive messages. `ALL` indicates the endpoint will receive
            all messages. `NONE` indicates the endpoint will receive no messages.
        EndpointState:
          allOf:
          - $ref: '#/components/schemas/EndpointState'
          description: A read-only field that represent the state of an `AppInstanceUserEndpoint`.
      description: Summary of the details of an `AppInstanceUserEndpoint`.
    AppInstanceUserEndpointSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceUserEndpointSummary'
    AppInstanceUserEndpointType:
      type: string
      enum:
      - APNS
      - APNS_SANDBOX
      - GCM
    AppInstanceUserList:
      type: array
      items:
        $ref: '#/components/schemas/AppInstanceUserSummary'
    AppInstanceUserSummary:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          description: The name of an `AppInstanceUser`.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the `AppInstanceUser`.
      description: Summary of the details of an `AppInstanceUser`.
    BadRequestException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The input parameters don't match the service's restrictions.
    ChannelRetentionSettings:
      type: object
      properties:
        RetentionDays:
          allOf:
          - $ref: '#/components/schemas/RetentionDays'
          description: The time in days to retain the messages in a channel.
      description: The details of the retention settings for a channel.
    ChimeArn:
      type: string
      pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
      minLength: 5
      maxLength: 1600
    ClientRequestToken:
      type: string
      pattern: ^[-_a-zA-Z0-9]*$
      minLength: 2
      maxLength: 64
    Configuration:
      type: object
      properties:
        Lex:
          allOf:
          - $ref: '#/components/schemas/LexConfiguration'
          description: The configuration for an Amazon Lex V2 bot.
      required:
      - Lex
      description: A structure that contains configuration data.
    ConflictException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The request could not be processed because of conflict in the current
        state of the resource.
    CreateAppInstanceAdminRequest:
      type: object
      properties:
        AppInstanceAdminArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the administrator of the current `AppInstance`.
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
      required:
      - AppInstanceAdminArn
      - AppInstanceArn
    CreateAppInstanceAdminResponse:
      type: object
      properties:
        AppInstanceAdmin:
          allOf:
          - $ref: '#/components/schemas/Identity'
          description: The ARN and name of the administrator, the ARN of the `AppInstance`,
            and the created and last-updated timestamps. All timestamps use epoch
            milliseconds.
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the of the admin for the `AppInstance`.
    CreateAppInstanceBotRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance` request.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The user's name.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The request metadata. Limited to a 1KB string in UTF-8.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique ID for the client making the request. Use different
            tokens for different `AppInstanceBots`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tags assigned to the `AppInstanceBot`.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/Configuration'
          description: Configuration information about the Amazon Lex V2 V2 bot.
      required:
      - AppInstanceArn
      - ClientRequestToken
      - Configuration
    CreateAppInstanceBotResponse:
      type: object
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppinstanceBot`.
    CreateAppInstanceRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name of the `AppInstance`.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the `AppInstance`. Limited to a 1KB string
            in UTF-8.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique ID of the request. Use different tokens to create
            different `AppInstances`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags assigned to the `AppInstance`.
      required:
      - Name
      - ClientRequestToken
    CreateAppInstanceResponse:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The Amazon Resource Number (ARN) of the `AppInstance`.
    CreateAppInstanceUserRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance` request.
        AppInstanceUserId:
          allOf:
          - $ref: '#/components/schemas/UserId'
          description: The user ID of the `AppInstance`.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          description: The user's name.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The request's metadata. Limited to a 1KB string in UTF-8.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique ID of the request. Use different tokens to request
            additional `AppInstances`.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: Tags assigned to the `AppInstanceUser`.
        ExpirationSettings:
          allOf:
          - $ref: '#/components/schemas/ExpirationSettings'
          description: Settings that control the interval after which the `AppInstanceUser`
            is automatically deleted.
      required:
      - AppInstanceArn
      - AppInstanceUserId
      - Name
      - ClientRequestToken
    CreateAppInstanceUserResponse:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The user's ARN.
    DeleteAppInstanceAdminRequest:
      type: object
      properties:
        AppInstanceAdminArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`'s administrator.
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
      required:
      - AppInstanceAdminArn
      - AppInstanceArn
    DeleteAppInstanceBotRequest:
      type: object
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceBot` being deleted.
      required:
      - AppInstanceBotArn
    DeleteAppInstanceRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
      required:
      - AppInstanceArn
    DeleteAppInstanceUserRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the user request being deleted.
      required:
      - AppInstanceUserArn
    DeregisterAppInstanceUserEndpointRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          description: The unique identifier of the `AppInstanceUserEndpoint`.
      required:
      - AppInstanceUserArn
      - EndpointId
    DescribeAppInstanceAdminRequest:
      type: object
      properties:
        AppInstanceAdminArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceAdmin`.
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
      required:
      - AppInstanceAdminArn
      - AppInstanceArn
    DescribeAppInstanceAdminResponse:
      type: object
      properties:
        AppInstanceAdmin:
          allOf:
          - $ref: '#/components/schemas/AppInstanceAdmin'
          description: The ARN and name of the `AppInstanceUser`, the ARN of the `AppInstance`,
            and the created and last-updated timestamps. All timestamps use epoch
            milliseconds.
    DescribeAppInstanceBotRequest:
      type: object
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceBot`.
      required:
      - AppInstanceBotArn
    DescribeAppInstanceBotResponse:
      type: object
      properties:
        AppInstanceBot:
          allOf:
          - $ref: '#/components/schemas/AppInstanceBot'
          description: The detials of the `AppInstanceBot`.
    DescribeAppInstanceRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
      required:
      - AppInstanceArn
    DescribeAppInstanceResponse:
      type: object
      properties:
        AppInstance:
          allOf:
          - $ref: '#/components/schemas/AppInstance'
          description: The ARN, metadata, created and last-updated timestamps, and
            the name of the `AppInstance`. All timestamps use epoch milliseconds.
    DescribeAppInstanceUserEndpointRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/String1600'
          description: The ARN of the `AppInstanceUser`.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          description: The unique identifier of the `AppInstanceUserEndpoint`.
      required:
      - AppInstanceUserArn
      - EndpointId
    DescribeAppInstanceUserEndpointResponse:
      type: object
      properties:
        AppInstanceUserEndpoint:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpoint'
          description: 'The full details of an `AppInstanceUserEndpoint`: the `AppInstanceUserArn`,
            ID, name, type, resource ARN, attributes, allow messages, state, and created
            and last updated timestamps. All timestamps use epoch milliseconds.'
    DescribeAppInstanceUserRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
      required:
      - AppInstanceUserArn
    DescribeAppInstanceUserResponse:
      type: object
      properties:
        AppInstanceUser:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUser'
          description: The name of the `AppInstanceUser`.
    EndpointAttributes:
      type: object
      properties:
        DeviceToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptySensitiveString1600'
          description: The device token for the GCM, APNS, and APNS_SANDBOX endpoint
            types.
        VoipDeviceToken:
          allOf:
          - $ref: '#/components/schemas/NonEmptySensitiveString1600'
          description: The VOIP device token for the APNS and APNS_SANDBOX endpoint
            types.
      required:
      - DeviceToken
      description: The attributes of an `Endpoint`.
    EndpointState:
      type: object
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/EndpointStatus'
          description: Enum that indicates the Status of an `AppInstanceUserEndpoint`.
        StatusReason:
          allOf:
          - $ref: '#/components/schemas/EndpointStatusReason'
          description: The reason for the `EndpointStatus`.
      required:
      - Status
      description: "A read-only field that represents the state of an `AppInstanceUserEndpoint`.\
        \ Supported values:\n\n  * `ACTIVE`: The `AppInstanceUserEndpoint` is active\
        \ and able to receive messages. When `ACTIVE`, the `EndpointStatusReason`\
        \ remains empty.\n\n  * `INACTIVE`: The `AppInstanceUserEndpoint` is inactive\
        \ and can't receive message. When INACTIVE, the corresponding reason will\
        \ be conveyed through EndpointStatusReason.\n\n  * `INVALID_DEVICE_TOKEN`\
        \ indicates that an `AppInstanceUserEndpoint` is `INACTIVE` due to invalid\
        \ device token\n\n  * `INVALID_PINPOINT_ARN` indicates that an `AppInstanceUserEndpoint`\
        \ is `INACTIVE` due to an invalid pinpoint ARN that was input through the\
        \ `ResourceArn` field."
    EndpointStatus:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    EndpointStatusReason:
      type: string
      enum:
      - INVALID_DEVICE_TOKEN
      - INVALID_PINPOINT_ARN
    ErrorCode:
      type: string
      enum:
      - BadRequest
      - Conflict
      - Forbidden
      - NotFound
      - PreconditionFailed
      - ResourceLimitExceeded
      - ServiceFailure
      - AccessDenied
      - ServiceUnavailable
      - Throttled
      - Throttling
      - Unauthorized
      - Unprocessable
      - VoiceConnectorGroupAssociationsExist
      - PhoneNumberAssociationsExist
    ExpirationCriterion:
      type: string
      enum:
      - CREATED_TIMESTAMP
    ExpirationDays:
      type: integer
      minimum: 1
      maximum: 5475
    ExpirationSettings:
      type: object
      properties:
        ExpirationDays:
          allOf:
          - $ref: '#/components/schemas/ExpirationDays'
          description: The period in days after which an `AppInstanceUser` will be
            automatically deleted.
        ExpirationCriterion:
          allOf:
          - $ref: '#/components/schemas/ExpirationCriterion'
          description: Specifies the conditions under which an `AppInstanceUser` will
            expire.
      required:
      - ExpirationDays
      - ExpirationCriterion
      description: Determines the interval after which an `AppInstanceUser` is automatically
        deleted.
    ForbiddenException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The client is permanently forbidden from making the request.
    GetAppInstanceRetentionSettingsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
      required:
      - AppInstanceArn
    GetAppInstanceRetentionSettingsResponse:
      type: object
      properties:
        AppInstanceRetentionSettings:
          allOf:
          - $ref: '#/components/schemas/AppInstanceRetentionSettings'
          description: The retention settings for the `AppInstance`.
        InitiateDeletionTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The timestamp representing the time at which the specified
            items are retained, in Epoch Seconds.
    Identity:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN in an Identity.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name in an Identity.
      description: The details of a user or bot.
    InvokedBy:
      type: object
      properties:
        StandardMessages:
          allOf:
          - $ref: '#/components/schemas/StandardMessages'
          description: "Sets standard messages as the bot trigger. For standard messages:\n\
            \n  * `ALL`: The bot processes all standard messages.\n\n  * `AUTO`: The\
            \ bot responds to ALL messages when the channel has one other non-hidden\
            \ member, and responds to MENTIONS when the channel has more than one\
            \ other non-hidden member.\n\n  * `MENTIONS`: The bot processes all standard\
            \ messages that have a message attribute with `CHIME.mentions` and a value\
            \ of the bot ARN.\n\n  * `NONE`: The bot processes no standard messages."
        TargetedMessages:
          allOf:
          - $ref: '#/components/schemas/TargetedMessages'
          description: "Sets targeted messages as the bot trigger. For targeted messages:\n\
            \n  * `ALL`: The bot processes all `TargetedMessages` sent to it. The\
            \ bot then responds with a targeted message back to the sender. \n\n \
            \ * `NONE`: The bot processes no targeted messages."
      required:
      - StandardMessages
      - TargetedMessages
      description: Specifies the type of message that triggers a bot.
    LexBotAliasArn:
      type: string
      pattern: ^arn:aws:lex:[a-z]{2}-[a-z]+-\d{1}:\d{12}:bot-alias/[A-Z0-9]{10}/[A-Z0-9]{10}$
      minLength: 15
      maxLength: 2048
    LexConfiguration:
      type: object
      properties:
        RespondsTo:
          allOf:
          - $ref: '#/components/schemas/RespondsTo'
          description: '**Deprecated**. Use `InvokedBy` instead.


            Determines whether the Amazon Lex V2 bot responds to all standard messages.
            Control messages are not supported.'
        InvokedBy:
          allOf:
          - $ref: '#/components/schemas/InvokedBy'
          description: Specifies the type of message that triggers a bot.
        LexBotAliasArn:
          allOf:
          - $ref: '#/components/schemas/LexBotAliasArn'
          description: 'The ARN of the Amazon Lex V2 bot''s alias. The ARN uses this
            format: `arn:aws:lex:REGION:ACCOUNT:bot-alias/MYBOTID/MYBOTALIAS`'
        LocaleId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Identifies the Amazon Lex V2 bot's language and locale. The
            string must match one of the supported locales in Amazon Lex V2. All of
            the intents, slot types, and slots used in the bot must have the same
            locale. For more information, see [Supported languages](https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)
            in the _Amazon Lex V2 Developer Guide_.
        WelcomeIntent:
          allOf:
          - $ref: '#/components/schemas/LexIntentName'
          description: The name of the welcome intent configured in the Amazon Lex
            V2 bot.
      required:
      - LexBotAliasArn
      - LocaleId
      description: The configuration for an Amazon Lex V2 bot.
    LexIntentName:
      type: string
      pattern: ^([A-Za-z]_?)+$
      minLength: 1
      maxLength: 100
    ListAppInstanceAdminsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of administrators that you want to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number
            of administrators is reached.
      required:
      - AppInstanceArn
    ListAppInstanceAdminsResponse:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
        AppInstanceAdmins:
          allOf:
          - $ref: '#/components/schemas/AppInstanceAdminList'
          description: The information for each administrator.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token returned from previous API requests until the number
            of administrators is reached.
    ListAppInstanceBotsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of requests to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            bots are returned.
      required:
      - AppInstanceArn
    ListAppInstanceBotsResponse:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the AppInstance.
        AppInstanceBots:
          allOf:
          - $ref: '#/components/schemas/AppInstanceBotList'
          description: The information for each requested `AppInstanceBot`.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            bots are returned.
    ListAppInstanceUserEndpointsRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/SensitiveChimeArn'
          description: The ARN of the `AppInstanceUser`.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of endpoints that you want to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            endpoints are returned.
      required:
      - AppInstanceUserArn
    ListAppInstanceUserEndpointsResponse:
      type: object
      properties:
        AppInstanceUserEndpoints:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpointSummaryList'
          description: The information for each requested `AppInstanceUserEndpoint`.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            endpoints are returned.
    ListAppInstanceUsersRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of requests that you want returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            users are returned.
      required:
      - AppInstanceArn
    ListAppInstanceUsersResponse:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
        AppInstanceUsers:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserList'
          description: The information for each requested `AppInstanceUser`.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API calls until all requested
            users are returned.
    ListAppInstancesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The maximum number of `AppInstance`s that you want to return.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API requests until you reach the
            maximum number of `AppInstances`.
    ListAppInstancesResponse:
      type: object
      properties:
        AppInstances:
          allOf:
          - $ref: '#/components/schemas/AppInstanceList'
          description: The information for each `AppInstance`.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token passed by previous API requests until the maximum
            number of `AppInstance`s is reached.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the resource.
      required:
      - ResourceARN
    ListTagsForResourceResponse:
      type: object
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tag key-value pairs.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 50
    Metadata:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    NextToken:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 2048
    NonEmptyResourceName:
      type: string
      pattern: ^[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*$
      minLength: 1
      maxLength: 256
    NonEmptySensitiveString1600:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1600
    NotFoundException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: One or more of the resources in the request does not exist in the
        system.
    PutAppInstanceRetentionSettingsRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
        AppInstanceRetentionSettings:
          allOf:
          - $ref: '#/components/schemas/AppInstanceRetentionSettings'
          description: 'The time in days to retain data. Data type: number.'
      required:
      - AppInstanceArn
      - AppInstanceRetentionSettings
    PutAppInstanceRetentionSettingsResponse:
      type: object
      properties:
        AppInstanceRetentionSettings:
          allOf:
          - $ref: '#/components/schemas/AppInstanceRetentionSettings'
          description: 'The time in days to retain data. Data type: number.'
        InitiateDeletionTimestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time at which the API deletes data.
    PutAppInstanceUserExpirationSettingsRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        ExpirationSettings:
          allOf:
          - $ref: '#/components/schemas/ExpirationSettings'
          description: Settings that control the interval after which an `AppInstanceUser`
            is automatically deleted.
      required:
      - AppInstanceUserArn
    PutAppInstanceUserExpirationSettingsResponse:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        ExpirationSettings:
          allOf:
          - $ref: '#/components/schemas/ExpirationSettings'
          description: Settings that control the interval after which an `AppInstanceUser`
            is automatically deleted.
    RegisterAppInstanceUserEndpointRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/SensitiveChimeArn'
          description: The ARN of the `AppInstanceUser`.
        Name:
          allOf:
          - $ref: '#/components/schemas/SensitiveString1600'
          description: The name of the `AppInstanceUserEndpoint`.
        Type:
          allOf:
          - $ref: '#/components/schemas/AppInstanceUserEndpointType'
          description: "The type of the `AppInstanceUserEndpoint`. Supported types:\n\
            \n  * `APNS`: The mobile notification service for an Apple device.\n\n\
            \  * `APNS_SANDBOX`: The sandbox environment of the mobile notification\
            \ service for an Apple device.\n\n  * `GCM`: The mobile notification service\
            \ for an Android device.\n\nPopulate the `ResourceArn` value of each type\
            \ as `PinpointAppArn`."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the resource to which the endpoint belongs.
        EndpointAttributes:
          allOf:
          - $ref: '#/components/schemas/EndpointAttributes'
          description: The attributes of an `Endpoint`.
        ClientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: The unique ID assigned to the request. Use different tokens
            to register other endpoints.
        AllowMessages:
          allOf:
          - $ref: '#/components/schemas/AllowMessages'
          description: Boolean that controls whether the AppInstanceUserEndpoint is
            opted in to receive messages. `ALL` indicates the endpoint receives all
            messages. `NONE` indicates the endpoint receives no messages.
      required:
      - AppInstanceUserArn
      - Type
      - ResourceArn
      - EndpointAttributes
      - ClientRequestToken
    RegisterAppInstanceUserEndpointResponse:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          description: The unique identifier of the `AppInstanceUserEndpoint`.
    ResourceLimitExceededException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The request exceeds the resource limit.
    ResourceName:
      type: string
      pattern: ^[\u0009\u000A\u000D\u0020-\u007E\u0085\u00A0-\uD7FF\uE000-\uFFFD\u10000-\u10FFFF]*$
      minLength: 0
      maxLength: 256
    RespondsTo:
      type: string
      enum:
      - STANDARD_MESSAGES
    RetentionDays:
      type: integer
      minimum: 1
      maximum: 5475
    SensitiveChimeArn:
      type: string
      pattern: ^arn:[a-z0-9-\.]{1,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[a-z0-9-\.]{0,63}:[^/].{0,1023}$
      minLength: 5
      maxLength: 1600
    SensitiveString1600:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1600
    ServiceFailureException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The service encountered an unexpected error.
    ServiceUnavailableException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The service is currently unavailable.
    StandardMessages:
      type: string
      enum:
      - AUTO
      - ALL
      - MENTIONS
      - NONE
    String:
      type: string
    String1600:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1600
    String64:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 64
    Tag:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          description: The key in a tag.
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          description: The value in a tag.
      required:
      - Key
      - Value
      description: A tag object containing a key-value pair.
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagList:
      type: array
      items:
        $ref: '#/components/schemas/Tag'
    TagResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The resource ARN.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          description: The tag key-value pairs.
      required:
      - ResourceARN
      - Tags
    TagValue:
      type: string
      minLength: 1
      maxLength: 256
    TargetedMessages:
      type: string
      enum:
      - ALL
      - NONE
    ThrottledClientException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The client exceeded its request rate limit.
    Timestamp:
      type: string
      format: date-time
    UnauthorizedClientException:
      type: object
      properties:
        Code:
          $ref: '#/components/schemas/ErrorCode'
        Message:
          $ref: '#/components/schemas/String'
      description: The client is not currently authorized to make the request.
    UntagResourceRequest:
      type: object
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The resource ARN.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The tag keys.
      required:
      - ResourceARN
      - TagKeys
    UpdateAppInstanceBotRequest:
      type: object
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceBot`.
        Name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the `AppInstanceBot`.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the `AppInstanceBot`.
        Configuration:
          allOf:
          - $ref: '#/components/schemas/Configuration'
          description: The configuration for the bot update.
      required:
      - AppInstanceBotArn
      - Name
      - Metadata
    UpdateAppInstanceBotResponse:
      type: object
      properties:
        AppInstanceBotArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceBot`.
    UpdateAppInstanceRequest:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
        Name:
          allOf:
          - $ref: '#/components/schemas/NonEmptyResourceName'
          description: The name that you want to change.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata that you want to change.
      required:
      - AppInstanceArn
      - Name
      - Metadata
    UpdateAppInstanceResponse:
      type: object
      properties:
        AppInstanceArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstance`.
    UpdateAppInstanceUserEndpointRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          description: The unique identifier of the `AppInstanceUserEndpoint`.
        Name:
          allOf:
          - $ref: '#/components/schemas/SensitiveString1600'
          description: The name of the `AppInstanceUserEndpoint`.
        AllowMessages:
          allOf:
          - $ref: '#/components/schemas/AllowMessages'
          description: Boolean that controls whether the `AppInstanceUserEndpoint`
            is opted in to receive messages. `ALL` indicates the endpoint will receive
            all messages. `NONE` indicates the endpoint will receive no messages.
      required:
      - AppInstanceUserArn
      - EndpointId
    UpdateAppInstanceUserEndpointResponse:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/String64'
          description: The unique identifier of the `AppInstanceUserEndpoint`.
    UpdateAppInstanceUserRequest:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
        Name:
          allOf:
          - $ref: '#/components/schemas/UserName'
          description: The name of the `AppInstanceUser`.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          description: The metadata of the `AppInstanceUser`.
      required:
      - AppInstanceUserArn
      - Name
      - Metadata
    UpdateAppInstanceUserResponse:
      type: object
      properties:
        AppInstanceUserArn:
          allOf:
          - $ref: '#/components/schemas/ChimeArn'
          description: The ARN of the `AppInstanceUser`.
    UserId:
      type: string
      pattern: ^[A-Za-z0-9]([A-Za-z0-9\:\-\_\.\@]{0,62}[A-Za-z0-9])?$
      minLength: 1
      maxLength: 64
    UserName:
      type: string
      pattern: \S
      minLength: 1
      maxLength: 100
