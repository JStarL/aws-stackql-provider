openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: robomaker
  x-aws-serviceName: robomaker
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-06-29'
  title: AWS RoboMaker
  description: |-
    This section provides documentation for the AWS RoboMaker API operations.
servers:
- description: The AWS RoboMaker regional endpoint
  url: https://robomaker.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /batchDeleteWorlds:
    post:
      operationId: BatchDeleteWorlds
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Deletes one or more worlds in a batch operation.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                worlds:
                  $ref: '#/components/schemas/Arns'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /batchDescribeSimulationJob:
    post:
      operationId: BatchDescribeSimulationJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes one or more simulation jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                jobs:
                  $ref: '#/components/schemas/Arns'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /cancelDeploymentJob:
    post:
      operationId: CancelDeploymentJob
      description: |-
        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Cancels the specified deployment job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /cancelSimulationJob:
    post:
      operationId: CancelSimulationJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Cancels the specified simulation job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /cancelSimulationJobBatch:
    post:
      operationId: CancelSimulationJobBatch
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Cancels a simulation job batch. When you cancel a simulation job batch, you are also cancelling all of the active simulation jobs created as part of the batch.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                batch:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /cancelWorldExportJob:
    post:
      operationId: CancelWorldExportJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Cancels the specified export job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /cancelWorldGenerationJob:
    post:
      operationId: CancelWorldGenerationJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Cancels the specified world generator job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /createDeploymentJob:
    post:
      operationId: CreateDeploymentJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported and will throw an error if used. For more information, see the January 31, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-january2022) page.

        Deploys a specific version of a robot application to robots in a fleet.

        The robot application must have a numbered `applicationVersion` for consistency reasons. To create a new version, use `CreateRobotApplicationVersion` or see [Creating a Robot Application Version](https://docs.aws.amazon.com/robomaker/latest/dg/create-robot-application-version.html).

        After 90 days, deployment jobs expire and will be deleted. They will no longer be accessible.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deploymentConfig:
                  $ref: '#/components/schemas/DeploymentConfig'
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                fleet:
                  $ref: '#/components/schemas/Arn'
                deploymentApplicationConfigs:
                  $ref: '#/components/schemas/DeploymentApplicationConfigs'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /createFleet:
    post:
      operationId: CreateFleet
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported and will throw an error if used. For more information, see the January 31, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-january2022) page.

        Creates a fleet, a logical group of robots running the same robot application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /createRobot:
    post:
      operationId: CreateRobot
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported and will throw an error if used. For more information, see the January 31, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-january2022) page.

        Creates a robot.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                architecture:
                  $ref: '#/components/schemas/Architecture'
                greengrassGroupId:
                  $ref: '#/components/schemas/Id'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /createRobotApplication:
    post:
      operationId: CreateRobotApplication
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Creates a robot application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                sources:
                  $ref: '#/components/schemas/SourceConfigs'
                robotSoftwareSuite:
                  $ref: '#/components/schemas/RobotSoftwareSuite'
                tags:
                  $ref: '#/components/schemas/TagMap'
                environment:
                  $ref: '#/components/schemas/Environment'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /createRobotApplicationVersion:
    post:
      operationId: CreateRobotApplicationVersion
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Creates a version of a robot application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/Arn'
                currentRevisionId:
                  $ref: '#/components/schemas/RevisionId'
                s3Etags:
                  $ref: '#/components/schemas/S3Etags'
                imageDigest:
                  $ref: '#/components/schemas/ImageDigest'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /createSimulationApplication:
    post:
      operationId: CreateSimulationApplication
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Creates a simulation application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/Name'
                sources:
                  $ref: '#/components/schemas/SourceConfigs'
                simulationSoftwareSuite:
                  $ref: '#/components/schemas/SimulationSoftwareSuite'
                robotSoftwareSuite:
                  $ref: '#/components/schemas/RobotSoftwareSuite'
                renderingEngine:
                  $ref: '#/components/schemas/RenderingEngine'
                tags:
                  $ref: '#/components/schemas/TagMap'
                environment:
                  $ref: '#/components/schemas/Environment'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /createSimulationApplicationVersion:
    post:
      operationId: CreateSimulationApplicationVersion
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Creates a simulation application with a specific revision id.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/Arn'
                currentRevisionId:
                  $ref: '#/components/schemas/RevisionId'
                s3Etags:
                  $ref: '#/components/schemas/S3Etags'
                imageDigest:
                  $ref: '#/components/schemas/ImageDigest'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /createSimulationJob:
    post:
      operationId: CreateSimulationJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Creates a simulation job.

        After 90 days, simulation jobs expire and will be deleted. They will no longer be accessible.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                outputLocation:
                  $ref: '#/components/schemas/OutputLocation'
                loggingConfig:
                  $ref: '#/components/schemas/LoggingConfig'
                maxJobDurationInSeconds:
                  $ref: '#/components/schemas/JobDuration'
                iamRole:
                  $ref: '#/components/schemas/IamRole'
                failureBehavior:
                  $ref: '#/components/schemas/FailureBehavior'
                robotApplications:
                  $ref: '#/components/schemas/RobotApplicationConfigs'
                simulationApplications:
                  $ref: '#/components/schemas/SimulationApplicationConfigs'
                dataSources:
                  $ref: '#/components/schemas/DataSourceConfigs'
                tags:
                  $ref: '#/components/schemas/TagMap'
                vpcConfig:
                  $ref: '#/components/schemas/VPCConfig'
                compute:
                  $ref: '#/components/schemas/Compute'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '503':
          description: |-
            The request has failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /createWorldExportJob:
    post:
      operationId: CreateWorldExportJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Creates a world export job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                worlds:
                  $ref: '#/components/schemas/Arns'
                outputLocation:
                  $ref: '#/components/schemas/OutputLocation'
                iamRole:
                  $ref: '#/components/schemas/IamRole'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '503':
          description: |-
            The request has failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /createWorldGenerationJob:
    post:
      operationId: CreateWorldGenerationJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Creates worlds using the specified template.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                template:
                  $ref: '#/components/schemas/Arn'
                worldCount:
                  $ref: '#/components/schemas/WorldCount'
                tags:
                  $ref: '#/components/schemas/TagMap'
                worldTags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '503':
          description: |-
            The request has failed due to a temporary failure of the server.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
  /createWorldTemplate:
    post:
      operationId: CreateWorldTemplate
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Creates a world template.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                name:
                  $ref: '#/components/schemas/TemplateName'
                templateBody:
                  $ref: '#/components/schemas/Json'
                templateLocation:
                  $ref: '#/components/schemas/TemplateLocation'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /deleteFleet:
    post:
      operationId: DeleteFleet
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Deletes a fleet.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fleet:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /deleteRobot:
    post:
      operationId: DeleteRobot
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Deletes a robot.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                robot:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /deleteRobotApplication:
    post:
      operationId: DeleteRobotApplication
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Deletes a robot application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/Arn'
                applicationVersion:
                  $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /deleteSimulationApplication:
    post:
      operationId: DeleteSimulationApplication
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Deletes a simulation application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/Arn'
                applicationVersion:
                  $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /deleteWorldTemplate:
    post:
      operationId: DeleteWorldTemplate
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Deletes a world template.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /deregisterRobot:
    post:
      operationId: DeregisterRobot
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Deregisters a robot.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fleet:
                  $ref: '#/components/schemas/Arn'
                robot:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeDeploymentJob:
    post:
      operationId: DescribeDeploymentJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Describes a deployment job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeFleet:
    post:
      operationId: DescribeFleet
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Describes a fleet.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fleet:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeRobot:
    post:
      operationId: DescribeRobot
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Describes a robot.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                robot:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeRobotApplication:
    post:
      operationId: DescribeRobotApplication
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes a robot application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/Arn'
                applicationVersion:
                  $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeSimulationApplication:
    post:
      operationId: DescribeSimulationApplication
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes a simulation application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/Arn'
                applicationVersion:
                  $ref: '#/components/schemas/Version'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeSimulationJob:
    post:
      operationId: DescribeSimulationJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes a simulation job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeSimulationJobBatch:
    post:
      operationId: DescribeSimulationJobBatch
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes a simulation job batch.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                batch:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The specified resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
  /describeWorld:
    post:
      operationId: DescribeWorld
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes a world.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                world:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeWorldExportJob:
    post:
      operationId: DescribeWorldExportJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes a world export job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeWorldGenerationJob:
    post:
      operationId: DescribeWorldGenerationJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes a world generation job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /describeWorldTemplate:
    post:
      operationId: DescribeWorldTemplate
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Describes a world template.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /getWorldTemplateBody:
    post:
      operationId: GetWorldTemplateBody
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Gets the world template body.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  $ref: '#/components/schemas/Arn'
                generationJob:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listDeploymentJobs:
    post:
      operationId: ListDeploymentJobs
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Returns a list of deployment jobs for a fleet. You can optionally provide filters to retrieve specific deployment jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                filters:
                  $ref: '#/components/schemas/Filters'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listFleets:
    post:
      operationId: ListFleets
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Returns a list of fleets. You can optionally provide filters to retrieve specific fleets.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listRobotApplications:
    post:
      operationId: ListRobotApplications
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Returns a list of robot application. You can optionally provide filters to retrieve specific robot applications.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                versionQualifier:
                  $ref: '#/components/schemas/VersionQualifier'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listRobots:
    post:
      operationId: ListRobots
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Returns a list of robots. You can optionally provide filters to retrieve specific robots.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listSimulationApplications:
    post:
      operationId: ListSimulationApplications
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Returns a list of simulation applications. You can optionally provide filters to retrieve specific simulation applications.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                versionQualifier:
                  $ref: '#/components/schemas/VersionQualifier'
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listSimulationJobBatches:
    post:
      operationId: ListSimulationJobBatches
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Returns a list simulation job batches. You can optionally provide filters to retrieve specific simulation batch jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            A parameter specified in a request is not valid, is unsupported, or cannot be used. The returned message provides an explanation of the error value.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterException'
  /listSimulationJobs:
    post:
      operationId: ListSimulationJobs
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Returns a list of simulation jobs. You can optionally provide filters to retrieve specific simulation jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Lists all tags on a AWS RoboMaker resource.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    post:
      operationId: TagResource
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Adds or edits tags for a AWS RoboMaker resource.

        Each tag consists of a tag key and a tag value. Tag keys and tag values are both required, but tag values can be empty strings.

        For information about the rules that apply to tag keys and tag values, see [User-Defined Tag Restrictions](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html) in the _AWS Billing and Cost Management User Guide_.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    delete:
      operationId: UntagResource
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Removes the specified tags from the specified AWS RoboMaker resource.

        To remove a tag, specify the tag key. To change the tag value of an existing tag key, use [ `TagResource` ](https://docs.aws.amazon.com/robomaker/latest/dg/API_TagResource.html).
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Arn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listWorldExportJobs:
    post:
      operationId: ListWorldExportJobs
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Lists world export jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listWorldGenerationJobs:
    post:
      operationId: ListWorldGenerationJobs
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Lists world generator jobs.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listWorldTemplates:
    post:
      operationId: ListWorldTemplates
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Lists world templates.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /listWorlds:
    post:
      operationId: ListWorlds
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Lists worlds.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nextToken:
                  $ref: '#/components/schemas/PaginationToken'
                maxResults:
                  $ref: '#/components/schemas/MaxResults'
                filters:
                  $ref: '#/components/schemas/Filters'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /registerRobot:
    post:
      operationId: RegisterRobot
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Registers a robot with a fleet.

        This API is no longer supported and will throw an error if used. For more information, see the January 31, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-january2022) page.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fleet:
                  $ref: '#/components/schemas/Arn'
                robot:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /restartSimulationJob:
    post:
      operationId: RestartSimulationJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Restarts a running simulation job.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                job:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /startSimulationJobBatch:
    post:
      operationId: StartSimulationJobBatch
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Starts a new simulation job batch. The batch is defined using one or more `SimulationJobRequest` objects.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                batchPolicy:
                  $ref: '#/components/schemas/BatchPolicy'
                createSimulationJobRequests:
                  $ref: '#/components/schemas/CreateSimulationJobRequests'
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /syncDeploymentJob:
    post:
      operationId: SyncDeploymentJob
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        This API is no longer supported. For more information, see the May 2, 2022 update in the [Support policy](https://docs.aws.amazon.com/robomaker/latest/dg/chapter-support-policy.html#software-support-policy-may2022) page.

        Syncrhonizes robots in a fleet to the latest deployment. This is helpful if robots were added after a deployment.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientRequestToken:
                  $ref: '#/components/schemas/ClientRequestToken'
                fleet:
                  $ref: '#/components/schemas/Arn'
      responses:
        '200': {}
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
  /updateRobotApplication:
    post:
      operationId: UpdateRobotApplication
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Updates a robot application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/Arn'
                sources:
                  $ref: '#/components/schemas/SourceConfigs'
                robotSoftwareSuite:
                  $ref: '#/components/schemas/RobotSoftwareSuite'
                currentRevisionId:
                  $ref: '#/components/schemas/RevisionId'
                environment:
                  $ref: '#/components/schemas/Environment'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /updateSimulationApplication:
    post:
      operationId: UpdateSimulationApplication
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Updates a simulation application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                application:
                  $ref: '#/components/schemas/Arn'
                sources:
                  $ref: '#/components/schemas/SourceConfigs'
                simulationSoftwareSuite:
                  $ref: '#/components/schemas/SimulationSoftwareSuite'
                robotSoftwareSuite:
                  $ref: '#/components/schemas/RobotSoftwareSuite'
                renderingEngine:
                  $ref: '#/components/schemas/RenderingEngine'
                currentRevisionId:
                  $ref: '#/components/schemas/RevisionId'
                environment:
                  $ref: '#/components/schemas/Environment'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
  /updateWorldTemplate:
    post:
      operationId: UpdateWorldTemplate
      description: |-
        End of support notice: On September 10, 2025, Amazon Web Services will discontinue support for Amazon Web Services RoboMaker. After September 10, 2025, you will no longer be able to access the Amazon Web Services RoboMaker console or Amazon Web Services RoboMaker resources. For more information on transitioning to Batch to help run containerized simulations, visit <https://aws.amazon.com/blogs/hpc/run-simulations-using-multiple-containers-in-a-single-aws-batch-job/>.

        Updates a world template.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                template:
                  $ref: '#/components/schemas/Arn'
                name:
                  $ref: '#/components/schemas/TemplateName'
                templateBody:
                  $ref: '#/components/schemas/Json'
                templateLocation:
                  $ref: '#/components/schemas/TemplateLocation'
      responses:
        '200': {}
        '500':
          description: |-
            AWS RoboMaker experienced a service issue. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            AWS RoboMaker is temporarily unable to process the request. Try your call again.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
components:
  schemas:
    Architecture:
      type: string
      enum:
      - X86_64
      - ARM64
      - ARMHF
    Arn:
      type: string
      pattern: '^arn:'
      minLength: 1
      maxLength: 1224
    Arns:
      type: array
      items:
        $ref: '#/components/schemas/Arn'
    BatchDeleteWorldsRequest:
      type: object
      properties:
        worlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: A list of Amazon Resource Names (arns) that correspond to worlds
            to delete.
      required:
      - worlds
    BatchDeleteWorldsResponse:
      type: object
      properties:
        unprocessedWorlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: A list of unprocessed worlds associated with the call. These
            worlds were not deleted.
    BatchDescribeSimulationJobRequest:
      type: object
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: A list of Amazon Resource Names (ARNs) of simulation jobs to
            describe.
      required:
      - jobs
    BatchDescribeSimulationJobResponse:
      type: object
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/SimulationJobs'
          description: A list of simulation jobs.
        unprocessedJobs:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: A list of unprocessed simulation job Amazon Resource Names
            (ARNs).
    BatchPolicy:
      type: object
      properties:
        timeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/BatchTimeoutInSeconds'
          description: 'The amount of time, in seconds, to wait for the batch to complete.


            If a batch times out, and there are pending requests that were failing
            due to an internal failure (like `InternalServiceError`), they will be
            moved to the failed list and the batch status will be `Failed`. If the
            pending requests were failing for any other reason, the failed pending
            requests will be moved to the failed list and the batch status will be
            `TimedOut`.'
        maxConcurrency:
          allOf:
          - $ref: '#/components/schemas/MaxConcurrency'
          description: 'The number of active simulation jobs create as part of the
            batch that can be in an active state at the same time.


            Active states include: `Pending`,`Preparing`, `Running`, `Restarting`,
            `RunningFailed` and `Terminating`. All other states are terminal states.'
      description: Information about the batch policy.
    BatchTimeoutInSeconds:
      type: integer
      format: int64
    Boolean:
      type: boolean
      default: false
    BoxedBoolean:
      type: boolean
    CancelDeploymentJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The deployment job ARN to cancel.
      required:
      - job
    CancelDeploymentJobResponse:
      type: object
      properties: {}
    CancelSimulationJobBatchRequest:
      type: object
      properties:
        batch:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The id of the batch to cancel.
      required:
      - batch
    CancelSimulationJobBatchResponse:
      type: object
      properties: {}
    CancelSimulationJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The simulation job ARN to cancel.
      required:
      - job
    CancelSimulationJobResponse:
      type: object
      properties: {}
    CancelWorldExportJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world export job to cancel.
      required:
      - job
    CancelWorldExportJobResponse:
      type: object
      properties: {}
    CancelWorldGenerationJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world generator job to
            cancel.
      required:
      - job
    CancelWorldGenerationJobResponse:
      type: object
      properties: {}
    ClientRequestToken:
      type: string
      pattern: ^[a-zA-Z0-9_\-=]*$
      minLength: 1
      maxLength: 64
    Command:
      type: string
      pattern: ^[a-zA-Z0-9_.\-]*$
      minLength: 1
      maxLength: 1024
    CommandList:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    Compute:
      type: object
      properties:
        simulationUnitLimit:
          allOf:
          - $ref: '#/components/schemas/SimulationUnit'
          description: The simulation unit limit. Your simulation is allocated CPU
            and memory proportional to the supplied simulation unit limit. A simulation
            unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization
            you consume up to the maximum value provided. The default is 15.
        computeType:
          allOf:
          - $ref: '#/components/schemas/ComputeType'
          description: Compute type information for the simulation job.
        gpuUnitLimit:
          allOf:
          - $ref: '#/components/schemas/GPUUnit'
          description: Compute GPU unit limit for the simulation job. It is the same
            as the number of GPUs allocated to the SimulationJob.
      description: Compute information for the simulation job.
    ComputeResponse:
      type: object
      properties:
        simulationUnitLimit:
          allOf:
          - $ref: '#/components/schemas/SimulationUnit'
          description: The simulation unit limit. Your simulation is allocated CPU
            and memory proportional to the supplied simulation unit limit. A simulation
            unit is 1 vcpu and 2GB of memory. You are only billed for the SU utilization
            you consume up to the maximum value provided. The default is 15.
        computeType:
          allOf:
          - $ref: '#/components/schemas/ComputeType'
          description: Compute type response information for the simulation job.
        gpuUnitLimit:
          allOf:
          - $ref: '#/components/schemas/GPUUnit'
          description: Compute GPU unit limit for the simulation job. It is the same
            as the number of GPUs allocated to the SimulationJob.
      description: Compute information for the simulation job
    ComputeType:
      type: string
      enum:
      - CPU
      - GPU_AND_CPU
    ConcurrentDeploymentException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The failure percentage threshold percentage was met.
    CreateDeploymentJobRequest:
      type: object
      properties:
        deploymentConfig:
          allOf:
          - $ref: '#/components/schemas/DeploymentConfig'
          description: The requested deployment configuration.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet to deploy.
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: The deployment application configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the deployment job.
      required:
      - clientRequestToken
      - fleet
      - deploymentApplicationConfigs
    CreateDeploymentJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployment job.
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The target fleet for the deployment job.
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the deployment job.
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: The deployment application configuration.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The failure reason of the deployment job if it failed.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: "The failure code of the simulation job if it failed:\n\nBadPermissionError\n\
            \n    \n\nAWS Greengrass requires a service-level role permission to access\
            \ other services. The role must include the [ `AWSGreengrassResourceAccessRolePolicy`\
            \ managed policy](https://console.aws.amazon.com/iam/home?#/policies/arn:aws:iam::aws:policy/service-role/AWSGreengrassResourceAccessRolePolicy$jsonEditor).\n\
            \nExtractingBundleFailure\n\n    \n\nThe robot application could not be\
            \ extracted from the bundle.\n\nFailureThresholdBreached\n\n    \n\nThe\
            \ percentage of robots that could not be updated exceeded the percentage\
            \ set for the deployment.\n\nGreengrassDeploymentFailed\n\n    \n\nThe\
            \ robot application could not be deployed to the robot.\n\nGreengrassGroupVersionDoesNotExist\n\
            \n    \n\nThe AWS Greengrass group or version associated with a robot\
            \ is missing.\n\nInternalServerError\n\n    \n\nAn internal error has\
            \ occurred. Retry your request, but if the problem persists, contact us\
            \ with details.\n\nMissingRobotApplicationArchitecture\n\n    \n\nThe\
            \ robot application does not have a source that matches the architecture\
            \ of the robot.\n\nMissingRobotDeploymentResource\n\n    \n\nOne or more\
            \ of the resources specified for the robot application are missing. For\
            \ example, does the robot application have the correct launch package\
            \ and launch file?\n\nPostLaunchFileFailure\n\n    \n\nThe post-launch\
            \ script failed.\n\nPreLaunchFileFailure\n\n    \n\nThe pre-launch script\
            \ failed.\n\nResourceNotFound\n\n    \n\nOne or more deployment resources\
            \ are missing. For example, do robot application source bundles still\
            \ exist?\n\nRobotDeploymentNoResponse\n\n    \n\nThere is no response\
            \ from the robot. It might not be powered on or connected to the internet."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the fleet was
            created.
        deploymentConfig:
          allOf:
          - $ref: '#/components/schemas/DeploymentConfig'
          description: The deployment configuration.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the deployment job.
    CreateFleetRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the fleet.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the fleet.
      required:
      - name
    CreateFleetResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the fleet.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the fleet was
            created.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the fleet.
    CreateRobotApplicationRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceConfigs'
          description: The sources of the robot application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite used by the robot application.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the robot application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains that URI of the Docker image that
            you use for your robot application.
      required:
      - name
      - robotSoftwareSuite
    CreateRobotApplicationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: The sources of the robot application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite used by the robot application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the robot application
            was last updated.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id of the robot application.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the robot application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: An object that contains the Docker image URI used to a create
            your robot application.
    CreateRobotApplicationVersionRequest:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The application information for the robot application.
        currentRevisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The current revision id for the robot application. If you provide
            a value and it matches the latest revision ID, a new version will be created.
        s3Etags:
          allOf:
          - $ref: '#/components/schemas/S3Etags'
          description: The Amazon S3 identifier for the zip file bundle that you use
            for your robot application.
        imageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          description: A SHA256 identifier for the Docker image that you use for your
            robot application.
      required:
      - application
    CreateRobotApplicationVersionResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: The sources of the robot application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite used by the robot application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the robot application
            was last updated.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id of the robot application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI used to create
            your robot application.
    CreateRobotRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name for the robot.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The target architecture of the robot.
        greengrassGroupId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The Greengrass group id.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the robot.
      required:
      - name
      - architecture
      - greengrassGroupId
    CreateRobotResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the robot was
            created.
        greengrassGroupId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The Amazon Resource Name (ARN) of the Greengrass group associated
            with the robot.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The target architecture of the robot.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the robot.
    CreateSimulationApplicationRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceConfigs'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite used by the simulation application.
        renderingEngine:
          allOf:
          - $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the simulation application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI used to create
            your simulation application.
      required:
      - name
      - simulationSoftwareSuite
      - robotSoftwareSuite
    CreateSimulationApplicationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation application.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite.
        renderingEngine:
          allOf:
          - $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            application was last updated.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id of the simulation application.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the simulation application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI that you used
            to create your simulation application.
    CreateSimulationApplicationVersionRequest:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application.
        currentRevisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The current revision id for the simulation application. If
            you provide a value and it matches the latest revision ID, a new version
            will be created.
        s3Etags:
          allOf:
          - $ref: '#/components/schemas/S3Etags'
          description: The Amazon S3 eTag identifier for the zip file bundle that
            you use to create the simulation application.
        imageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          description: The SHA256 digest used to identify the Docker image URI used
            to created the simulation application.
      required:
      - application
    CreateSimulationApplicationVersionResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation application.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite.
        renderingEngine:
          allOf:
          - $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            application was last updated.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision ID of the simulation application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI used to create
            the simulation application.
    CreateSimulationJobRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        outputLocation:
          allOf:
          - $ref: '#/components/schemas/OutputLocation'
          description: Location for output files generated by the simulation job.
        loggingConfig:
          allOf:
          - $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration.
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          description: The maximum simulation job duration in seconds (up to 14 days
            or 1,209,600 seconds. When `maxJobDurationInSeconds` is reached, the simulation
            job will status will transition to `Completed`.
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          description: The IAM role name that allows the simulation instance to call
            the AWS APIs that are specified in its associated policies on your behalf.
            This is how credentials are passed in to your simulation job.
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          description: "The failure behavior the simulation job.\n\nContinue\n\n \
            \   \n\nLeaves the instance running for its maximum timeout duration after\
            \ a `4XX` error code.\n\nFail\n\n    \n\nStop the simulation job and terminate\
            \ the instance."
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          description: The robot application to use in the simulation job.
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: The simulation application to use in the simulation job.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigs'
          description: 'Specify data sources to mount read-only files from S3 into
            your simulation. These files are available under `/opt/robomaker/datasources/data_source_name`.


            There is a limit of 100 files and a combined size of 25GB for all `DataSourceConfig`
            objects.'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the simulation job.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VPCConfig'
          description: If your simulation job accesses resources in a VPC, you provide
            this parameter identifying the list of security group IDs and subnet IDs.
            These must belong to the same VPC. You must provide at least one security
            group and one subnet ID.
        compute:
          allOf:
          - $ref: '#/components/schemas/Compute'
          description: Compute information for the simulation job.
      required:
      - maxJobDurationInSeconds
      - iamRole
    CreateSimulationJobRequests:
      type: array
      items:
        $ref: '#/components/schemas/SimulationJobRequest'
    CreateSimulationJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobStatus'
          description: The status of the simulation job.
        lastStartedAt:
          allOf:
          - $ref: '#/components/schemas/LastStartedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job was last started.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job was last updated.
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          description: the failure behavior for the simulation job.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobErrorCode'
          description: "The failure code of the simulation job if it failed:\n\nInternalServiceError\n\
            \n    \n\nInternal service error.\n\nRobotApplicationCrash\n\n    \n\n\
            Robot application exited abnormally.\n\nSimulationApplicationCrash\n\n\
            \    \n\nSimulation application exited abnormally.\n\nBadPermissionsRobotApplication\n\
            \n    \n\nRobot application bundle could not be downloaded.\n\nBadPermissionsSimulationApplication\n\
            \n    \n\nSimulation application bundle could not be downloaded.\n\nBadPermissionsS3Output\n\
            \n    \n\nUnable to publish outputs to customer-provided S3 bucket.\n\n\
            BadPermissionsCloudwatchLogs\n\n    \n\nUnable to publish logs to customer-provided\
            \ CloudWatch Logs resource.\n\nSubnetIpLimitExceeded\n\n    \n\nSubnet\
            \ IP limit exceeded.\n\nENILimitExceeded\n\n    \n\nENI limit exceeded.\n\
            \nBadPermissionsUserCredentials\n\n    \n\nUnable to use the Role provided.\n\
            \nInvalidBundleRobotApplication\n\n    \n\nRobot bundle cannot be extracted\
            \ (invalid format, bundling error, or other issue).\n\nInvalidBundleSimulationApplication\n\
            \n    \n\nSimulation bundle cannot be extracted (invalid format, bundling\
            \ error, or other issue).\n\nRobotApplicationVersionMismatchedEtag\n\n\
            \    \n\nEtag for RobotApplication does not match value during version\
            \ creation.\n\nSimulationApplicationVersionMismatchedEtag\n\n    \n\n\
            Etag for SimulationApplication does not match value during version creation."
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        outputLocation:
          allOf:
          - $ref: '#/components/schemas/OutputLocation'
          description: Simulation job output files location.
        loggingConfig:
          allOf:
          - $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration.
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          description: The maximum simulation job duration in seconds.
        simulationTimeMillis:
          allOf:
          - $ref: '#/components/schemas/SimulationTimeMillis'
          description: The simulation job execution duration in milliseconds.
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          description: The IAM role that allows the simulation job to call the AWS
            APIs that are specified in its associated policies on your behalf.
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          description: The robot application used by the simulation job.
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: The simulation application used by the simulation job.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          description: The data sources for the simulation job.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the simulation job.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VPCConfigResponse'
          description: Information about the vpc configuration.
        compute:
          allOf:
          - $ref: '#/components/schemas/ComputeResponse'
          description: Compute information for the simulation job.
    CreateWorldExportJobRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        worlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: A list of Amazon Resource Names (arns) that correspond to worlds
            to export.
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          description: The IAM role that the world export process uses to access the
            Amazon S3 bucket and put the export.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world export job.
      required:
      - worlds
      - outputLocation
      - iamRole
    CreateWorldExportJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world export job.
        status:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobStatus'
          description: "The status of the world export job.\n\nPending\n\n    \n\n\
            The world export job request is pending.\n\nRunning\n\n    \n\nThe world\
            \ export job is running.\n\nCompleted\n\n    \n\nThe world export job\
            \ completed.\n\nFailed\n\n    \n\nThe world export job failed. See `failureCode`\
            \ for more information.\n\nCanceled\n\n    \n\nThe world export job was\
            \ cancelled.\n\nCanceling\n\n    \n\nThe world export job is being cancelled."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world export
            job was created.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobErrorCode'
          description: "The failure code of the world export job if it failed:\n\n\
            InternalServiceError\n\n    \n\nInternal service error.\n\nLimitExceeded\n\
            \n    \n\nThe requested resource exceeds the maximum number allowed, or\
            \ the number of concurrent stream requests exceeds the maximum number\
            \ allowed.\n\nResourceNotFound\n\n    \n\nThe specified resource could\
            \ not be found.\n\nRequestThrottled\n\n    \n\nThe request was throttled.\n\
            \nInvalidInput\n\n    \n\nAn input parameter in the request is not valid.\n\
            \nAllWorldGenerationFailed\n\n    \n\nAll of the worlds in the world generation\
            \ job failed. This can happen if your `worldCount` is greater than 50\
            \ or less than 1.\n\nFor more information about troubleshooting WorldForge,\
            \ see [Troubleshooting Simulation WorldForge](https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting-worldforge.html)."
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          description: The IAM role that the world export process uses to access the
            Amazon S3 bucket and put the export.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world export job.
    CreateWorldGenerationJobRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template describing
            the worlds you want to create.
        worldCount:
          allOf:
          - $ref: '#/components/schemas/WorldCount'
          description: Information about the world count.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world generator job.
        worldTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the generated worlds.
      required:
      - template
      - worldCount
    CreateWorldGenerationJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world generator job.
        status:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobStatus'
          description: "The status of the world generator job.\n\nPending\n\n    \n\
            \nThe world generator job request is pending.\n\nRunning\n\n    \n\nThe\
            \ world generator job is running.\n\nCompleted\n\n    \n\nThe world generator\
            \ job completed.\n\nFailed\n\n    \n\nThe world generator job failed.\
            \ See `failureCode` for more information.\n\nPartialFailed\n\n    \n\n\
            Some worlds did not generate.\n\nCanceled\n\n    \n\nThe world generator\
            \ job was cancelled.\n\nCanceling\n\n    \n\nThe world generator job is\
            \ being cancelled."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world generator
            job was created.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobErrorCode'
          description: "The failure code of the world generator job if it failed:\n\
            \nInternalServiceError\n\n    \n\nInternal service error.\n\nLimitExceeded\n\
            \n    \n\nThe requested resource exceeds the maximum number allowed, or\
            \ the number of concurrent stream requests exceeds the maximum number\
            \ allowed.\n\nResourceNotFound\n\n    \n\nThe specified resource could\
            \ not be found.\n\nRequestThrottled\n\n    \n\nThe request was throttled.\n\
            \nInvalidInput\n\n    \n\nAn input parameter in the request is not valid."
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template.
        worldCount:
          allOf:
          - $ref: '#/components/schemas/WorldCount'
          description: Information about the world count.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world generator job.
        worldTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the generated worlds.
    CreateWorldTemplateRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the world template.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/Json'
          description: The world template body.
        templateLocation:
          allOf:
          - $ref: '#/components/schemas/TemplateLocation'
          description: The location of the world template.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world template.
    CreateWorldTemplateResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world template.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world template
            was created.
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the world template.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world template.
    CreatedAt:
      type: string
      format: date-time
    DataSource:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the data source.
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket where the data files are located.
        s3Keys:
          allOf:
          - $ref: '#/components/schemas/S3KeyOutputs'
          description: The list of S3 keys identifying the data source files.
        type:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          description: 'The data type for the data source that you''re using for your
            container image or simulation job. You can use this field to specify whether
            your data source is an Archive, an Amazon S3 prefix, or a file.


            If you don''t specify a field, the default value is `File`.'
        destination:
          allOf:
          - $ref: '#/components/schemas/Path'
          description: 'The location where your files are mounted in the container
            image.


            If you''ve specified the `type` of the data source as an `Archive`, you
            must provide an Amazon S3 object key to your archive. The object key must
            point to either a `.zip` or `.tar.gz` file.


            If you''ve specified the `type` of the data source as a `Prefix`, you
            provide the Amazon S3 prefix that points to the files that you are using
            for your data source.


            If you''ve specified the `type` of the data source as a `File`, you provide
            the Amazon S3 path to the file that you''re using as your data source.'
      description: Information about a data source.
    DataSourceConfig:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the data source.
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket where the data files are located.
        s3Keys:
          allOf:
          - $ref: '#/components/schemas/S3KeysOrPrefixes'
          description: The list of S3 keys identifying the data source files.
        type:
          allOf:
          - $ref: '#/components/schemas/DataSourceType'
          description: 'The data type for the data source that you''re using for your
            container image or simulation job. You can use this field to specify whether
            your data source is an Archive, an Amazon S3 prefix, or a file.


            If you don''t specify a field, the default value is `File`.'
        destination:
          allOf:
          - $ref: '#/components/schemas/Path'
          description: 'The location where your files are mounted in the container
            image.


            If you''ve specified the `type` of the data source as an `Archive`, you
            must provide an Amazon S3 object key to your archive. The object key must
            point to either a `.zip` or `.tar.gz` file.


            If you''ve specified the `type` of the data source as a `Prefix`, you
            provide the Amazon S3 prefix that points to the files that you are using
            for your data source.


            If you''ve specified the `type` of the data source as a `File`, you provide
            the Amazon S3 path to the file that you''re using as your data source.'
      required:
      - name
      - s3Bucket
      - s3Keys
      description: Information about a data source.
    DataSourceConfigs:
      type: array
      items:
        $ref: '#/components/schemas/DataSourceConfig'
    DataSourceNames:
      type: array
      items:
        $ref: '#/components/schemas/Name'
    DataSourceType:
      type: string
      enum:
      - Prefix
      - Archive
      - File
    DataSources:
      type: array
      items:
        $ref: '#/components/schemas/DataSource'
    DeleteFleetRequest:
      type: object
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
      required:
      - fleet
    DeleteFleetResponse:
      type: object
      properties: {}
    DeleteRobotApplicationRequest:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the the robot application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application to delete.
      required:
      - application
    DeleteRobotApplicationResponse:
      type: object
      properties: {}
    DeleteRobotRequest:
      type: object
      properties:
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
      required:
      - robot
    DeleteRobotResponse:
      type: object
      properties: {}
    DeleteSimulationApplicationRequest:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application
            to delete.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the simulation application to delete.
      required:
      - application
    DeleteSimulationApplicationResponse:
      type: object
      properties: {}
    DeleteWorldTemplateRequest:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template you want
            to delete.
      required:
      - template
    DeleteWorldTemplateResponse:
      type: object
      properties: {}
    DeploymentApplicationConfig:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/DeploymentVersion'
          description: The version of the application.
        launchConfig:
          allOf:
          - $ref: '#/components/schemas/DeploymentLaunchConfig'
          description: The launch configuration.
      required:
      - application
      - applicationVersion
      - launchConfig
      description: Information about a deployment application configuration.
    DeploymentApplicationConfigs:
      type: array
      items:
        $ref: '#/components/schemas/DeploymentApplicationConfig'
    DeploymentConfig:
      type: object
      properties:
        concurrentDeploymentPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of robots receiving the deployment at the same
            time.
        failureThresholdPercentage:
          allOf:
          - $ref: '#/components/schemas/Percentage'
          description: The percentage of deployments that need to fail before stopping
            deployment.
        robotDeploymentTimeoutInSeconds:
          allOf:
          - $ref: '#/components/schemas/DeploymentTimeout'
          description: The amount of time, in seconds, to wait for deployment to a
            single robot to complete. Choose a time between 1 minute and 7 days. The
            default is 5 hours.
        downloadConditionFile:
          allOf:
          - $ref: '#/components/schemas/S3Object'
          description: The download condition file.
      description: Information about a deployment configuration.
    DeploymentJob:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployment job.
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the deployment job.
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: The deployment application configuration.
        deploymentConfig:
          allOf:
          - $ref: '#/components/schemas/DeploymentConfig'
          description: The deployment configuration.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: A short description of the reason why the deployment job failed.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: The deployment job failure code.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the deployment
            job was created.
      description: Information about a deployment job.
    DeploymentJobErrorCode:
      type: string
      enum:
      - ResourceNotFound
      - EnvironmentSetupError
      - EtagMismatch
      - FailureThresholdBreached
      - RobotDeploymentAborted
      - RobotDeploymentNoResponse
      - RobotAgentConnectionTimeout
      - GreengrassDeploymentFailed
      - InvalidGreengrassGroup
      - MissingRobotArchitecture
      - MissingRobotApplicationArchitecture
      - MissingRobotDeploymentResource
      - GreengrassGroupVersionDoesNotExist
      - LambdaDeleted
      - ExtractingBundleFailure
      - PreLaunchFileFailure
      - PostLaunchFileFailure
      - BadPermissionError
      - DownloadConditionFailed
      - BadLambdaAssociated
      - InternalServerError
      - RobotApplicationDoesNotExist
      - DeploymentFleetDoesNotExist
      - FleetDeploymentTimeout
    DeploymentJobs:
      type: array
      items:
        $ref: '#/components/schemas/DeploymentJob'
    DeploymentLaunchConfig:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/Command'
          description: The package name.
        preLaunchFile:
          allOf:
          - $ref: '#/components/schemas/Path'
          description: The deployment pre-launch file. This file will be executed
            prior to the launch file.
        launchFile:
          allOf:
          - $ref: '#/components/schemas/Command'
          description: The launch file name.
        postLaunchFile:
          allOf:
          - $ref: '#/components/schemas/Path'
          description: The deployment post-launch file. This file will be executed
            after the launch file.
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariableMap'
          description: An array of key/value pairs specifying environment variables
            for the robot application
      required:
      - packageName
      - launchFile
      description: Configuration information for a deployment launch.
    DeploymentStatus:
      type: string
      enum:
      - Pending
      - Preparing
      - InProgress
      - Failed
      - Succeeded
      - Canceled
    DeploymentTimeout:
      type: integer
      format: int64
    DeploymentVersion:
      type: string
      pattern: ^[0-9]*$
      minLength: 1
      maxLength: 255
    DeregisterRobotRequest:
      type: object
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
      required:
      - fleet
      - robot
    DeregisterRobotResponse:
      type: object
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
    DescribeDeploymentJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployment job.
      required:
      - job
    DescribeDeploymentJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the deployment job.
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the deployment job.
        deploymentConfig:
          allOf:
          - $ref: '#/components/schemas/DeploymentConfig'
          description: The deployment configuration.
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: The deployment application configuration.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: A short description of the reason why the deployment job failed.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: The deployment job failure code.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the deployment
            job was created.
        robotDeploymentSummary:
          allOf:
          - $ref: '#/components/schemas/RobotDeploymentSummary'
          description: A list of robot deployment summaries.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified deployment job.
    DescribeFleetRequest:
      type: object
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
      required:
      - fleet
    DescribeFleetResponse:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the fleet.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        robots:
          allOf:
          - $ref: '#/components/schemas/Robots'
          description: A list of robots.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the fleet was
            created.
        lastDeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the last deployment.
        lastDeploymentJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the last deployment job.
        lastDeploymentTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time of the last deployment.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified fleet.
    DescribeRobotApplicationRequest:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application to describe.
      required:
      - application
    DescribeRobotApplicationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot application.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: The sources of the robot application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite used by the robot application.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id of the robot application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the robot application
            was last updated.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified robot application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI used to create
            the robot application.
        imageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          description: A SHA256 identifier for the Docker image that you use for your
            robot application.
    DescribeRobotRequest:
      type: object
      properties:
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot to be described.
      required:
      - robot
    DescribeRobotResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot.
        fleetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          allOf:
          - $ref: '#/components/schemas/RobotStatus'
          description: The status of the fleet.
        greengrassGroupId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The Greengrass group id.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the robot was
            created.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The target architecture of the robot application.
        lastDeploymentJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the last deployment job.
        lastDeploymentTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time of the last deployment job.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified robot.
    DescribeSimulationApplicationRequest:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the simulation application to describe.
      required:
      - application
    DescribeSimulationApplicationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot simulation application.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite.
        renderingEngine:
          allOf:
          - $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id of the simulation application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            application was last updated.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified simulation application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI used to create
            the simulation application.
        imageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          description: A SHA256 identifier for the Docker image that you use for your
            simulation application.
    DescribeSimulationJobBatchRequest:
      type: object
      properties:
        batch:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The id of the batch to describe.
      required:
      - batch
    DescribeSimulationJobBatchResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the batch.
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchStatus'
          description: "The status of the batch.\n\nPending\n\n    \n\nThe simulation\
            \ job batch request is pending.\n\nInProgress\n\n    \n\nThe simulation\
            \ job batch is in progress.\n\nFailed\n\n    \n\nThe simulation job batch\
            \ failed. One or more simulation job requests could not be completed due\
            \ to an internal failure (like `InternalServiceError`). See `failureCode`\
            \ and `failureReason` for more information.\n\nCompleted\n\n    \n\nThe\
            \ simulation batch job completed. A batch is complete when (1) there are\
            \ no pending simulation job requests in the batch and none of the failed\
            \ simulation job requests are due to `InternalServiceError` and (2) when\
            \ all created simulation jobs have reached a terminal state (for example,\
            \ `Completed` or `Failed`).\n\nCanceled\n\n    \n\nThe simulation batch\
            \ job was cancelled.\n\nCanceling\n\n    \n\nThe simulation batch job\
            \ is being cancelled.\n\nCompleting\n\n    \n\nThe simulation batch job\
            \ is completing.\n\nTimingOut\n\n    \n\nThe simulation job batch is timing\
            \ out.\n\nIf a batch timing out, and there are pending requests that were\
            \ failing due to an internal failure (like `InternalServiceError`), the\
            \ batch status will be `Failed`. If there are no such failing request,\
            \ the batch status will be `TimedOut`.\n\nTimedOut\n\n    \n\nThe simulation\
            \ batch job timed out."
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job batch was last updated.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job batch was created.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        batchPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchPolicy'
          description: The batch policy.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchErrorCode'
          description: The failure code of the simulation job batch.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The reason the simulation job batch failed.
        failedRequests:
          allOf:
          - $ref: '#/components/schemas/FailedCreateSimulationJobRequests'
          description: A list of failed create simulation job requests. The request
            failed to be created into a simulation job. Failed requests do not have
            a simulation job ID.
        pendingRequests:
          allOf:
          - $ref: '#/components/schemas/CreateSimulationJobRequests'
          description: A list of pending simulation job requests. These requests have
            not yet been created into simulation jobs.
        createdRequests:
          allOf:
          - $ref: '#/components/schemas/SimulationJobSummaries'
          description: A list of created simulation job summaries.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the simulation job batch.
    DescribeSimulationJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job to be
            described.
      required:
      - job
    DescribeSimulationJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation job.
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobStatus'
          description: The status of the simulation job.
        lastStartedAt:
          allOf:
          - $ref: '#/components/schemas/LastStartedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job was last started.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job was last updated.
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          description: The failure behavior for the simulation job.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobErrorCode'
          description: "The failure code of the simulation job if it failed:\n\nInternalServiceError\n\
            \n    \n\nInternal service error.\n\nRobotApplicationCrash\n\n    \n\n\
            Robot application exited abnormally.\n\nSimulationApplicationCrash\n\n\
            \    \n\nSimulation application exited abnormally.\n\nBadPermissionsRobotApplication\n\
            \n    \n\nRobot application bundle could not be downloaded.\n\nBadPermissionsSimulationApplication\n\
            \n    \n\nSimulation application bundle could not be downloaded.\n\nBadPermissionsS3Output\n\
            \n    \n\nUnable to publish outputs to customer-provided S3 bucket.\n\n\
            BadPermissionsCloudwatchLogs\n\n    \n\nUnable to publish logs to customer-provided\
            \ CloudWatch Logs resource.\n\nSubnetIpLimitExceeded\n\n    \n\nSubnet\
            \ IP limit exceeded.\n\nENILimitExceeded\n\n    \n\nENI limit exceeded.\n\
            \nBadPermissionsUserCredentials\n\n    \n\nUnable to use the Role provided.\n\
            \nInvalidBundleRobotApplication\n\n    \n\nRobot bundle cannot be extracted\
            \ (invalid format, bundling error, or other issue).\n\nInvalidBundleSimulationApplication\n\
            \n    \n\nSimulation bundle cannot be extracted (invalid format, bundling\
            \ error, or other issue).\n\nRobotApplicationVersionMismatchedEtag\n\n\
            \    \n\nEtag for RobotApplication does not match value during version\
            \ creation.\n\nSimulationApplicationVersionMismatchedEtag\n\n    \n\n\
            Etag for SimulationApplication does not match value during version creation."
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: Details about why the simulation job failed. For more information
            about troubleshooting, see [Troubleshooting](https://docs.aws.amazon.com/robomaker/latest/dg/troubleshooting.html).
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        outputLocation:
          allOf:
          - $ref: '#/components/schemas/OutputLocation'
          description: Location for output files generated by the simulation job.
        loggingConfig:
          allOf:
          - $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration.
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          description: The maximum job duration in seconds. The value must be 8 days
            (691,200 seconds) or less.
        simulationTimeMillis:
          allOf:
          - $ref: '#/components/schemas/SimulationTimeMillis'
          description: The simulation job execution duration in milliseconds.
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          description: The IAM role that allows the simulation instance to call the
            AWS APIs that are specified in its associated policies on your behalf.
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          description: A list of robot applications.
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: A list of simulation applications.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          description: The data sources for the simulation job.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified simulation job.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VPCConfigResponse'
          description: The VPC configuration.
        networkInterface:
          allOf:
          - $ref: '#/components/schemas/NetworkInterface'
          description: The network interface information for the simulation job.
        compute:
          allOf:
          - $ref: '#/components/schemas/ComputeResponse'
          description: Compute information for the simulation job.
    DescribeWorldExportJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world export job to describe.
      required:
      - job
    DescribeWorldExportJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world export job.
        status:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobStatus'
          description: "The status of the world export job.\n\nPending\n\n    \n\n\
            The world export job request is pending.\n\nRunning\n\n    \n\nThe world\
            \ export job is running.\n\nCompleted\n\n    \n\nThe world export job\
            \ completed.\n\nFailed\n\n    \n\nThe world export job failed. See `failureCode`\
            \ and `failureReason` for more information.\n\nCanceled\n\n    \n\nThe\
            \ world export job was cancelled.\n\nCanceling\n\n    \n\nThe world export\
            \ job is being cancelled."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world export
            job was created.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobErrorCode'
          description: "The failure code of the world export job if it failed:\n\n\
            InternalServiceError\n\n    \n\nInternal service error.\n\nLimitExceeded\n\
            \n    \n\nThe requested resource exceeds the maximum number allowed, or\
            \ the number of concurrent stream requests exceeds the maximum number\
            \ allowed.\n\nResourceNotFound\n\n    \n\nThe specified resource could\
            \ not be found.\n\nRequestThrottled\n\n    \n\nThe request was throttled.\n\
            \nInvalidInput\n\n    \n\nAn input parameter in the request is not valid."
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The reason why the world export job failed.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        worlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: A list of Amazon Resource Names (arns) that correspond to worlds
            to be exported.
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          description: The IAM role that the world export process uses to access the
            Amazon S3 bucket and put the export.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world export job.
    DescribeWorldGenerationJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world generation job
            to describe.
      required:
      - job
    DescribeWorldGenerationJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world generation job.
        status:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobStatus'
          description: "The status of the world generation job:\n\nPending\n\n   \
            \ \n\nThe world generation job request is pending.\n\nRunning\n\n    \n\
            \nThe world generation job is running.\n\nCompleted\n\n    \n\nThe world\
            \ generation job completed.\n\nFailed\n\n    \n\nThe world generation\
            \ job failed. See `failureCode` for more information.\n\nPartialFailed\n\
            \n    \n\nSome worlds did not generate.\n\nCanceled\n\n    \n\nThe world\
            \ generation job was cancelled.\n\nCanceling\n\n    \n\nThe world generation\
            \ job is being cancelled."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world generation
            job was created.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobErrorCode'
          description: "The failure code of the world generation job if it failed:\n\
            \nInternalServiceError\n\n    \n\nInternal service error.\n\nLimitExceeded\n\
            \n    \n\nThe requested resource exceeds the maximum number allowed, or\
            \ the number of concurrent stream requests exceeds the maximum number\
            \ allowed.\n\nResourceNotFound\n\n    \n\nThe specified resource could\
            \ not be found.\n\nRequestThrottled\n\n    \n\nThe request was throttled.\n\
            \nInvalidInput\n\n    \n\nAn input parameter in the request is not valid."
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The reason why the world generation job failed.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template.
        worldCount:
          allOf:
          - $ref: '#/components/schemas/WorldCount'
          description: Information about the world count.
        finishedWorldsSummary:
          allOf:
          - $ref: '#/components/schemas/FinishedWorldsSummary'
          description: Summary information about finished worlds.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world generation job.
        worldTags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the generated worlds.
    DescribeWorldRequest:
      type: object
      properties:
        world:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world you want to describe.
      required:
      - world
    DescribeWorldResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world.
        generationJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world generation job
            that generated the world.
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The world template.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world was
            created.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world.
        worldDescriptionBody:
          allOf:
          - $ref: '#/components/schemas/Json'
          description: Returns the JSON formatted string that describes the contents
            of your world.
    DescribeWorldTemplateRequest:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template you want
            to describe.
      required:
      - template
    DescribeWorldTemplateResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world template.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the world template.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world template
            was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the world template
            was last updated.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the world template.
        version:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The version of the world template that you're using.
    Environment:
      type: object
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/RepositoryUrl'
          description: The Docker image URI for either your robot or simulation applications.
      description: The object that contains the Docker image URI for either your robot
        or simulation applications.
    EnvironmentVariableKey:
      type: string
      pattern: ^[A-Z_][A-Z0-9_]*$
      minLength: 1
      maxLength: 1024
    EnvironmentVariableMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EnvironmentVariableValue'
    EnvironmentVariableValue:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    ExitBehavior:
      type: string
      enum:
      - FAIL
      - RESTART
    FailedAt:
      type: string
      format: date-time
    FailedCreateSimulationJobRequest:
      type: object
      properties:
        request:
          allOf:
          - $ref: '#/components/schemas/SimulationJobRequest'
          description: The simulation job request.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The failure reason of the simulation job request.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobErrorCode'
          description: The failure code.
        failedAt:
          allOf:
          - $ref: '#/components/schemas/FailedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job batch failed.
      description: Information about a failed create simulation job request.
    FailedCreateSimulationJobRequests:
      type: array
      items:
        $ref: '#/components/schemas/FailedCreateSimulationJobRequest'
    FailureBehavior:
      type: string
      enum:
      - Fail
      - Continue
    FailureSummary:
      type: object
      properties:
        totalFailureCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of failures.
        failures:
          allOf:
          - $ref: '#/components/schemas/WorldFailures'
          description: The worlds that failed.
      description: Information about worlds that failed.
    Filter:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the filter.
        values:
          allOf:
          - $ref: '#/components/schemas/FilterValues'
          description: A list of values.
      description: Information about a filter.
    FilterValues:
      type: array
      items:
        $ref: '#/components/schemas/Name'
    Filters:
      type: array
      items:
        $ref: '#/components/schemas/Filter'
    FinishedWorldsSummary:
      type: object
      properties:
        finishedCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The total number of finished worlds.
        succeededWorlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: A list of worlds that succeeded.
        failureSummary:
          allOf:
          - $ref: '#/components/schemas/FailureSummary'
          description: Information about worlds that failed.
      description: Information about worlds that finished.
    Fleet:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the fleet.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the fleet was
            created.
        lastDeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the last fleet deployment.
        lastDeploymentJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the last deployment job.
        lastDeploymentTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time of the last deployment.
      description: Information about a fleet.
    Fleets:
      type: array
      items:
        $ref: '#/components/schemas/Fleet'
    FloorplanCount:
      type: integer
    GPUUnit:
      type: integer
      minimum: 0
      maximum: 1
    GenericInteger:
      type: integer
    GenericString:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    GetWorldTemplateBodyRequest:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template.
        generationJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world generator job.
    GetWorldTemplateBodyResponse:
      type: object
      properties:
        templateBody:
          allOf:
          - $ref: '#/components/schemas/Json'
          description: The world template body.
    IamRole:
      type: string
      pattern: ^arn:aws:iam::\w+:role/
      minLength: 1
      maxLength: 255
    Id:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1224
    IdempotentParameterMismatchException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The request uses the same client token as a previous, but non-identical
        request. Do not reuse a client token with different requests, unless the requests
        are identical.
    ImageDigest:
      type: string
      pattern: ^[Ss][Hh][Aa]256:[0-9a-fA-F]{64}$
      minLength: 0
      maxLength: 72
    Integer:
      type: integer
      default: 0
    InteriorCountPerFloorplan:
      type: integer
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: AWS RoboMaker experienced a service issue. Try your call again.
    InvalidParameterException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: A parameter specified in a request is not valid, is unsupported,
        or cannot be used. The returned message provides an explanation of the error
        value.
    JobDuration:
      type: integer
      format: int64
      default: 0
    Json:
      type: string
      pattern: ^[\S\s]+$
      minLength: 1
      maxLength: 262144
    LastStartedAt:
      type: string
      format: date-time
    LastUpdatedAt:
      type: string
      format: date-time
    LaunchConfig:
      type: object
      properties:
        packageName:
          allOf:
          - $ref: '#/components/schemas/Command'
          description: The package name.
        launchFile:
          allOf:
          - $ref: '#/components/schemas/Command'
          description: The launch file name.
        environmentVariables:
          allOf:
          - $ref: '#/components/schemas/EnvironmentVariableMap'
          description: The environment variables for the application launch.
        portForwardingConfig:
          allOf:
          - $ref: '#/components/schemas/PortForwardingConfig'
          description: The port forwarding configuration.
        streamUI:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Boolean indicating whether a streaming session will be configured
            for the application. If `True`, AWS RoboMaker will configure a connection
            so you can interact with your application as it is running in the simulation.
            You must configure and launch the component. It must have a graphical
            user interface.
        command:
          allOf:
          - $ref: '#/components/schemas/CommandList'
          description: 'If you''ve specified `General` as the value for your `RobotSoftwareSuite`,
            you can use this field to specify a list of commands for your container
            image.


            If you''ve specified `SimulationRuntime` as the value for your `SimulationSoftwareSuite`,
            you can use this field to specify a list of commands for your container
            image.'
      description: Information about a launch configuration.
    LimitExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The requested resource exceeds the maximum number allowed, or the
        number of concurrent stream requests exceeds the maximum number allowed.
    ListDeploymentJobsRequest:
      type: object
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: 'Optional filters to limit results.


            The filter names `status` and `fleetName` are supported. When filtering,
            you must use the complete value of the filtered item. You can use up to
            three filters, but they must be for the same named item. For example,
            if you are looking for items with the status `InProgress` or the status
            `Pending`.'
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListDeploymentJobs`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListDeploymentJobs` only returns
            `maxResults` results in a single page along with a `nextToken` response
            element. The remaining results of the initial request can be seen by sending
            another `ListDeploymentJobs` request with the returned `nextToken` value.
            This value can be between 1 and 200. If this parameter is not used, then
            `ListDeploymentJobs` returns up to 200 results and a `nextToken` value
            if applicable.
    ListDeploymentJobsResponse:
      type: object
      properties:
        deploymentJobs:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobs'
          description: A list of deployment jobs that meet the criteria of the request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListDeploymentJobs`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
    ListFleetsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: 'If the previous paginated request did not return all of the
            remaining results, the response object''s `nextToken` parameter value
            is set to a token. To retrieve the next set of results, call `ListFleets`
            again and assign that token to the request object''s `nextToken` parameter.
            If there are no remaining results, the previous response object''s NextToken
            parameter is set to null.


            This token should be treated as an opaque identifier that is only used
            to retrieve the next items in a list and not for other programmatic purposes.'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListFleets` only returns `maxResults`
            results in a single page along with a `nextToken` response element. The
            remaining results of the initial request can be seen by sending another
            `ListFleets` request with the returned `nextToken` value. This value can
            be between 1 and 200. If this parameter is not used, then `ListFleets`
            returns up to 200 results and a `nextToken` value if applicable.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: 'Optional filters to limit results.


            The filter name `name` is supported. When filtering, you must use the
            complete value of the filtered item. You can use up to three filters.'
    ListFleetsResponse:
      type: object
      properties:
        fleetDetails:
          allOf:
          - $ref: '#/components/schemas/Fleets'
          description: A list of fleet details meeting the request criteria.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListFleets`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
    ListRobotApplicationsRequest:
      type: object
      properties:
        versionQualifier:
          allOf:
          - $ref: '#/components/schemas/VersionQualifier'
          description: The version qualifier of the robot application.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListRobotApplications`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListRobotApplications` only returns
            `maxResults` results in a single page along with a `nextToken` response
            element. The remaining results of the initial request can be seen by sending
            another `ListRobotApplications` request with the returned `nextToken`
            value. This value can be between 1 and 100. If this parameter is not used,
            then `ListRobotApplications` returns up to 100 results and a `nextToken`
            value if applicable.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: 'Optional filters to limit results.


            The filter name `name` is supported. When filtering, you must use the
            complete value of the filtered item. You can use up to three filters.'
    ListRobotApplicationsResponse:
      type: object
      properties:
        robotApplicationSummaries:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationSummaries'
          description: A list of robot application summaries that meet the criteria
            of the request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListRobotApplications`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
    ListRobotsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListRobots`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListRobots` only returns `maxResults`
            results in a single page along with a `nextToken` response element. The
            remaining results of the initial request can be seen by sending another
            `ListRobots` request with the returned `nextToken` value. This value can
            be between 1 and 200. If this parameter is not used, then `ListRobots`
            returns up to 200 results and a `nextToken` value if applicable.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: 'Optional filters to limit results.


            The filter names `status` and `fleetName` are supported. When filtering,
            you must use the complete value of the filtered item. You can use up to
            three filters, but they must be for the same named item. For example,
            if you are looking for items with the status `Registered` or the status
            `Available`.'
    ListRobotsResponse:
      type: object
      properties:
        robots:
          allOf:
          - $ref: '#/components/schemas/Robots'
          description: A list of robots that meet the criteria of the request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListRobots`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
    ListSimulationApplicationsRequest:
      type: object
      properties:
        versionQualifier:
          allOf:
          - $ref: '#/components/schemas/VersionQualifier'
          description: The version qualifier of the simulation application.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListSimulationApplications`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListSimulationApplications` only
            returns `maxResults` results in a single page along with a `nextToken`
            response element. The remaining results of the initial request can be
            seen by sending another `ListSimulationApplications` request with the
            returned `nextToken` value. This value can be between 1 and 100. If this
            parameter is not used, then `ListSimulationApplications` returns up to
            100 results and a `nextToken` value if applicable.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: 'Optional list of filters to limit results.


            The filter name `name` is supported. When filtering, you must use the
            complete value of the filtered item. You can use up to three filters.'
    ListSimulationApplicationsResponse:
      type: object
      properties:
        simulationApplicationSummaries:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationSummaries'
          description: A list of simulation application summaries that meet the criteria
            of the request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListSimulationApplications`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
    ListSimulationJobBatchesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListSimulationJobBatches`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListSimulationJobBatches` only
            returns `maxResults` results in a single page along with a `nextToken`
            response element. The remaining results of the initial request can be
            seen by sending another `ListSimulationJobBatches` request with the returned
            `nextToken` value.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: Optional filters to limit results.
    ListSimulationJobBatchesResponse:
      type: object
      properties:
        simulationJobBatchSummaries:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchSummaries'
          description: A list of simulation job batch summaries.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListSimulationJobBatches`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
    ListSimulationJobsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListSimulationJobs`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListSimulationJobs` only returns
            `maxResults` results in a single page along with a `nextToken` response
            element. The remaining results of the initial request can be seen by sending
            another `ListSimulationJobs` request with the returned `nextToken` value.
            This value can be between 1 and 1000. If this parameter is not used, then
            `ListSimulationJobs` returns up to 1000 results and a `nextToken` value
            if applicable.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: 'Optional filters to limit results.


            The filter names `status` and `simulationApplicationName` and `robotApplicationName`
            are supported. When filtering, you must use the complete value of the
            filtered item. You can use up to three filters, but they must be for the
            same named item. For example, if you are looking for items with the status
            `Preparing` or the status `Running`.'
    ListSimulationJobsResponse:
      type: object
      properties:
        simulationJobSummaries:
          allOf:
          - $ref: '#/components/schemas/SimulationJobSummaries'
          description: A list of simulation job summaries that meet the criteria of
            the request.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListSimulationJobs`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
      required:
      - simulationJobSummaries
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The AWS RoboMaker Amazon Resource Name (ARN) with tags to be
            listed.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The list of all tags added to the specified resource.
    ListWorldExportJobsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListWorldExportJobs`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListWorldExportJobs` only returns
            `maxResults` results in a single page along with a `nextToken` response
            element. The remaining results of the initial request can be seen by sending
            another `ListWorldExportJobs` request with the returned `nextToken` value.
            This value can be between 1 and 100. If this parameter is not used, then
            `ListWorldExportJobs` returns up to 100 results and a `nextToken` value
            if applicable.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: Optional filters to limit results. You can use `generationJobId`
            and `templateId`.
    ListWorldExportJobsResponse:
      type: object
      properties:
        worldExportJobSummaries:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobSummaries'
          description: Summary information for world export jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListWorldExportJobsRequest`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
      required:
      - worldExportJobSummaries
    ListWorldGenerationJobsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListWorldGenerationJobsRequest`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListWorldGeneratorJobs` only
            returns `maxResults` results in a single page along with a `nextToken`
            response element. The remaining results of the initial request can be
            seen by sending another `ListWorldGeneratorJobs` request with the returned
            `nextToken` value. This value can be between 1 and 100. If this parameter
            is not used, then `ListWorldGeneratorJobs` returns up to 100 results and
            a `nextToken` value if applicable.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: Optional filters to limit results. You can use `status` and
            `templateId`.
    ListWorldGenerationJobsResponse:
      type: object
      properties:
        worldGenerationJobSummaries:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobSummaries'
          description: Summary information for world generator jobs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListWorldGeneratorJobsRequest`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
      required:
      - worldGenerationJobSummaries
    ListWorldTemplatesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListWorldTemplates`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListWorldTemplates` only returns
            `maxResults` results in a single page along with a `nextToken` response
            element. The remaining results of the initial request can be seen by sending
            another `ListWorldTemplates` request with the returned `nextToken` value.
            This value can be between 1 and 100. If this parameter is not used, then
            `ListWorldTemplates` returns up to 100 results and a `nextToken` value
            if applicable.
    ListWorldTemplatesResponse:
      type: object
      properties:
        templateSummaries:
          allOf:
          - $ref: '#/components/schemas/TemplateSummaries'
          description: Summary information for templates.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListWorldTemplates`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
    ListWorldsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListWorlds`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: When this parameter is used, `ListWorlds` only returns `maxResults`
            results in a single page along with a `nextToken` response element. The
            remaining results of the initial request can be seen by sending another
            `ListWorlds` request with the returned `nextToken` value. This value can
            be between 1 and 100. If this parameter is not used, then `ListWorlds`
            returns up to 100 results and a `nextToken` value if applicable.
        filters:
          allOf:
          - $ref: '#/components/schemas/Filters'
          description: Optional filters to limit results. You can use `status`.
    ListWorldsResponse:
      type: object
      properties:
        worldSummaries:
          allOf:
          - $ref: '#/components/schemas/WorldSummaries'
          description: Summary information for worlds.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: If the previous paginated request did not return all of the
            remaining results, the response object's `nextToken` parameter value is
            set to a token. To retrieve the next set of results, call `ListWorlds`
            again and assign that token to the request object's `nextToken` parameter.
            If there are no remaining results, the previous response object's NextToken
            parameter is set to null.
    LoggingConfig:
      type: object
      properties:
        recordAllRosTopics:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: 'A boolean indicating whether to record all ROS topics.


            This API is no longer supported and will throw an error if used.'
      description: The logging configuration.
    MaxConcurrency:
      type: integer
    MaxResults:
      type: integer
    Name:
      type: string
      pattern: ^[a-zA-Z0-9_\-]*$
      minLength: 1
      maxLength: 255
    NetworkInterface:
      type: object
      properties:
        networkInterfaceId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The ID of the network interface.
        privateIpAddress:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The IPv4 address of the network interface within the subnet.
        publicIpAddress:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The IPv4 public address of the network interface.
      description: Describes a network interface.
    NonEmptyString:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 255
    NonSystemPort:
      type: integer
      minimum: 1024
      maximum: 65535
    OutputLocation:
      type: object
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The S3 bucket for output.
        s3Prefix:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The S3 folder in the `s3Bucket` where output files will be
            placed.
      description: The output location.
    PaginationToken:
      type: string
      pattern: ^[a-zA-Z0-9_.\-\/+=]*$
      minLength: 1
      maxLength: 2048
    Path:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    PercentDone:
      type: number
      format: float
      minimum: 0.0
      maximum: 100.0
    Percentage:
      type: integer
      minimum: 1
      maximum: 100
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    PortForwardingConfig:
      type: object
      properties:
        portMappings:
          allOf:
          - $ref: '#/components/schemas/PortMappingList'
          description: The port mappings for the configuration.
      description: Configuration information for port forwarding.
    PortMapping:
      type: object
      properties:
        jobPort:
          allOf:
          - $ref: '#/components/schemas/Port'
          description: The port number on the simulation job instance to use as a
            remote connection point.
        applicationPort:
          allOf:
          - $ref: '#/components/schemas/NonSystemPort'
          description: The port number on the application.
        enableOnPublicIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A Boolean indicating whether to enable this port mapping on
            public IP.
      required:
      - jobPort
      - applicationPort
      description: An object representing a port mapping.
    PortMappingList:
      type: array
      items:
        $ref: '#/components/schemas/PortMapping'
    ProgressDetail:
      type: object
      properties:
        currentProgress:
          allOf:
          - $ref: '#/components/schemas/RobotDeploymentStep'
          description: "The current progress status.\n\nValidating\n\n    \n\nValidating\
            \ the deployment.\n\nDownloadingExtracting\n\n    \n\nDownloading and\
            \ extracting the bundle on the robot.\n\nExecutingPreLaunch\n\n    \n\n\
            Executing pre-launch script(s) if provided.\n\nLaunching\n\n    \n\nLaunching\
            \ the robot application.\n\nExecutingPostLaunch\n\n    \n\nExecuting post-launch\
            \ script(s) if provided.\n\nFinished\n\n    \n\nDeployment is complete."
        percentDone:
          allOf:
          - $ref: '#/components/schemas/PercentDone'
          description: Precentage of the step that is done. This currently only applies
            to the `Downloading/Extracting` step of the deployment. It is empty for
            other steps.
        estimatedTimeRemainingSeconds:
          allOf:
          - $ref: '#/components/schemas/GenericInteger'
          description: Estimated amount of time in seconds remaining in the step.
            This currently only applies to the `Downloading/Extracting` step of the
            deployment. It is empty for other steps.
        targetResource:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The Amazon Resource Name (ARN) of the deployment job.
      description: Information about the progress of a deployment job.
    RegisterRobotRequest:
      type: object
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
      required:
      - fleet
      - robot
    RegisterRobotResponse:
      type: object
      properties:
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet that the robot
            will join.
        robot:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: Information about the robot registration.
    RenderingEngine:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RenderingEngineType'
          description: The name of the rendering engine.
        version:
          allOf:
          - $ref: '#/components/schemas/RenderingEngineVersionType'
          description: The version of the rendering engine.
      description: Information about a rendering engine.
    RenderingEngineType:
      type: string
      enum:
      - OGRE
    RenderingEngineVersionType:
      type: string
      pattern: ^1.x$
      minLength: 1
      maxLength: 4
    RepositoryUrl:
      type: string
      pattern: ^.+$
      minLength: 1
      maxLength: 1024
    ResourceAlreadyExistsException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The specified resource already exists.
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The specified resource does not exist.
    RestartSimulationJobRequest:
      type: object
      properties:
        job:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
      required:
      - job
    RestartSimulationJobResponse:
      type: object
      properties: {}
    RevisionId:
      type: string
      pattern: ^[a-zA-Z0-9_.\-]*$
      minLength: 1
      maxLength: 40
    Robot:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot.
        fleetArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          allOf:
          - $ref: '#/components/schemas/RobotStatus'
          description: The status of the robot.
        greenGrassGroupId:
          allOf:
          - $ref: '#/components/schemas/Id'
          description: The Greengrass group associated with the robot.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the robot was
            created.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The architecture of the robot.
        lastDeploymentJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the last deployment job.
        lastDeploymentTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time of the last deployment.
      description: Information about a robot.
    RobotApplicationConfig:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The application information for the robot application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        launchConfig:
          allOf:
          - $ref: '#/components/schemas/LaunchConfig'
          description: The launch configuration for the robot application.
        uploadConfigurations:
          allOf:
          - $ref: '#/components/schemas/UploadConfigurations'
          description: The upload configurations for the robot application.
        useDefaultUploadConfigurations:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: 'A Boolean indicating whether to use default upload configurations.
            By default, `.ros` and `.gazebo` files are uploaded when the application
            terminates and all ROS topics will be recorded.


            If you set this value, you must specify an `outputLocation`.


            This API is no longer supported and will throw an error if used.'
        tools:
          allOf:
          - $ref: '#/components/schemas/Tools'
          description: Information about tools configured for the robot application.
        useDefaultTools:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: 'A Boolean indicating whether to use default robot application
            tools. The default tools are rviz, rqt, terminal and rosbag record. The
            default is `False`.


            This API is no longer supported and will throw an error if used.'
      required:
      - application
      - launchConfig
      description: Application configuration information for a robot.
    RobotApplicationConfigs:
      type: array
      items:
        $ref: '#/components/schemas/RobotApplicationConfig'
    RobotApplicationNames:
      type: array
      items:
        $ref: '#/components/schemas/Name'
    RobotApplicationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/RobotApplicationSummary'
    RobotApplicationSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the robot.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the robot application
            was last updated.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about a robot software suite.
      description: Summary information for a robot application.
    RobotDeployment:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The robot deployment Amazon Resource Name (ARN).
        deploymentStartTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the deployment
            was started.
        deploymentFinishTime:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the deployment
            finished.
        status:
          allOf:
          - $ref: '#/components/schemas/RobotStatus'
          description: The status of the robot deployment.
        progressDetail:
          allOf:
          - $ref: '#/components/schemas/ProgressDetail'
          description: Information about how the deployment is progressing.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: A short description of the reason why the robot deployment
            failed.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: The robot deployment failure code.
      description: Information about a robot deployment.
    RobotDeploymentStep:
      type: string
      enum:
      - Validating
      - DownloadingExtracting
      - ExecutingDownloadCondition
      - ExecutingPreLaunch
      - Launching
      - ExecutingPostLaunch
      - Finished
    RobotDeploymentSummary:
      type: array
      items:
        $ref: '#/components/schemas/RobotDeployment'
    RobotSoftwareSuite:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuiteType'
          description: The name of the robot software suite. `General` is the only
            supported value.
        version:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuiteVersionType'
          description: The version of the robot software suite. Not applicable for
            General software suite.
      description: Information about a robot software suite.
    RobotSoftwareSuiteType:
      type: string
      enum:
      - ROS
      - ROS2
      - General
    RobotSoftwareSuiteVersionType:
      type: string
      enum:
      - Kinetic
      - Melodic
      - Dashing
      - Foxy
    RobotStatus:
      type: string
      enum:
      - Available
      - Registered
      - PendingNewDeployment
      - Deploying
      - Failed
      - InSync
      - NoResponse
    Robots:
      type: array
      items:
        $ref: '#/components/schemas/Robot'
    S3Bucket:
      type: string
      pattern: ^[a-z0-9][a-z0-9.\-]*[a-z0-9]$
      minLength: 3
      maxLength: 63
    S3Etag:
      type: string
    S3Etags:
      type: array
      items:
        $ref: '#/components/schemas/S3Etag'
    S3Key:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    S3KeyOrPrefix:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 1024
    S3KeyOutput:
      type: object
      properties:
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3KeyOrPrefix'
          description: The S3 key.
        etag:
          allOf:
          - $ref: '#/components/schemas/S3Etag'
          description: The etag for the object.
      description: Information about S3 keys.
    S3KeyOutputs:
      type: array
      items:
        $ref: '#/components/schemas/S3KeyOutput'
    S3KeysOrPrefixes:
      type: array
      items:
        $ref: '#/components/schemas/S3KeyOrPrefix'
    S3Object:
      type: object
      properties:
        bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The bucket containing the object.
        key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The key of the object.
        etag:
          allOf:
          - $ref: '#/components/schemas/S3Etag'
          description: The etag of the object.
      required:
      - bucket
      - key
      description: Information about an S3 object.
    SecurityGroups:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    ServiceUnavailableException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: The request has failed due to a temporary failure of the server.
    SimulationApplicationConfig:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application.
        applicationVersion:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        launchConfig:
          allOf:
          - $ref: '#/components/schemas/LaunchConfig'
          description: The launch configuration for the simulation application.
        uploadConfigurations:
          allOf:
          - $ref: '#/components/schemas/UploadConfigurations'
          description: Information about upload configurations for the simulation
            application.
        worldConfigs:
          allOf:
          - $ref: '#/components/schemas/WorldConfigs'
          description: 'A list of world configurations.


            This API is no longer supported and will throw an error if used.'
        useDefaultUploadConfigurations:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: 'A Boolean indicating whether to use default upload configurations.
            By default, `.ros` and `.gazebo` files are uploaded when the application
            terminates and all ROS topics will be recorded.


            If you set this value, you must specify an `outputLocation`.


            This API is no longer supported and will throw an error if used.'
        tools:
          allOf:
          - $ref: '#/components/schemas/Tools'
          description: Information about tools configured for the simulation application.
        useDefaultTools:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: 'A Boolean indicating whether to use default simulation application
            tools. The default tools are rviz, rqt, terminal and rosbag record. The
            default is `False`.


            This API is no longer supported and will throw an error if used.'
      required:
      - application
      - launchConfig
      description: Information about a simulation application configuration.
    SimulationApplicationConfigs:
      type: array
      items:
        $ref: '#/components/schemas/SimulationApplicationConfig'
    SimulationApplicationNames:
      type: array
      items:
        $ref: '#/components/schemas/Name'
    SimulationApplicationSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SimulationApplicationSummary'
    SimulationApplicationSummary:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the simulation application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            application was last updated.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about a robot software suite.
        simulationSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: Information about a simulation software suite.
      description: Summary information for a simulation application.
    SimulationJob:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation job.
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobStatus'
          description: Status of the simulation job.
        lastStartedAt:
          allOf:
          - $ref: '#/components/schemas/LastStartedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job was last started.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job was last updated.
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          description: "The failure behavior the simulation job.\n\nContinue\n\n \
            \   \n\nLeaves the host running for its maximum timeout duration after\
            \ a `4XX` error code.\n\nFail\n\n    \n\nStop the simulation job and terminate\
            \ the instance."
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobErrorCode'
          description: The failure code of the simulation job if it failed.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The reason why the simulation job failed.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: A unique identifier for this `SimulationJob` request.
        outputLocation:
          allOf:
          - $ref: '#/components/schemas/OutputLocation'
          description: Location for output files generated by the simulation job.
        loggingConfig:
          allOf:
          - $ref: '#/components/schemas/LoggingConfig'
          description: The logging configuration.
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          description: The maximum simulation job duration in seconds. The value must
            be 8 days (691,200 seconds) or less.
        simulationTimeMillis:
          allOf:
          - $ref: '#/components/schemas/SimulationTimeMillis'
          description: The simulation job execution duration in milliseconds.
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          description: The IAM role that allows the simulation instance to call the
            AWS APIs that are specified in its associated policies on your behalf.
            This is how credentials are passed in to your simulation job.
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          description: A list of robot applications.
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: A list of simulation applications.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSources'
          description: The data sources for the simulation job.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the simulation job.
        vpcConfig:
          allOf:
          - $ref: '#/components/schemas/VPCConfigResponse'
          description: VPC configuration information.
        networkInterface:
          allOf:
          - $ref: '#/components/schemas/NetworkInterface'
          description: Information about a network interface.
        compute:
          allOf:
          - $ref: '#/components/schemas/ComputeResponse'
          description: Compute information for the simulation job
      description: Information about a simulation job.
    SimulationJobBatchErrorCode:
      type: string
      enum:
      - InternalServiceError
    SimulationJobBatchStatus:
      type: string
      enum:
      - Pending
      - InProgress
      - Failed
      - Completed
      - Canceled
      - Canceling
      - Completing
      - TimingOut
      - TimedOut
    SimulationJobBatchSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SimulationJobBatchSummary'
    SimulationJobBatchSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the batch.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job batch was last updated.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job batch was created.
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchStatus'
          description: "The status of the simulation job batch.\n\nPending\n\n   \
            \ \n\nThe simulation job batch request is pending.\n\nInProgress\n\n \
            \   \n\nThe simulation job batch is in progress.\n\nFailed\n\n    \n\n\
            The simulation job batch failed. One or more simulation job requests could\
            \ not be completed due to an internal failure (like `InternalServiceError`).\
            \ See `failureCode` and `failureReason` for more information.\n\nCompleted\n\
            \n    \n\nThe simulation batch job completed. A batch is complete when\
            \ (1) there are no pending simulation job requests in the batch and none\
            \ of the failed simulation job requests are due to `InternalServiceError`\
            \ and (2) when all created simulation jobs have reached a terminal state\
            \ (for example, `Completed` or `Failed`).\n\nCanceled\n\n    \n\nThe simulation\
            \ batch job was cancelled.\n\nCanceling\n\n    \n\nThe simulation batch\
            \ job is being cancelled.\n\nCompleting\n\n    \n\nThe simulation batch\
            \ job is completing.\n\nTimingOut\n\n    \n\nThe simulation job batch\
            \ is timing out.\n\nIf a batch timing out, and there are pending requests\
            \ that were failing due to an internal failure (like `InternalServiceError`),\
            \ the batch status will be `Failed`. If there are no such failing request,\
            \ the batch status will be `TimedOut`.\n\nTimedOut\n\n    \n\nThe simulation\
            \ batch job timed out."
        failedRequestCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of failed simulation job requests.
        pendingRequestCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of pending simulation job requests.
        createdRequestCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of created simulation job requests.
      description: Information about a simulation job batch.
    SimulationJobErrorCode:
      type: string
      enum:
      - InternalServiceError
      - RobotApplicationCrash
      - SimulationApplicationCrash
      - RobotApplicationHealthCheckFailure
      - SimulationApplicationHealthCheckFailure
      - BadPermissionsRobotApplication
      - BadPermissionsSimulationApplication
      - BadPermissionsS3Object
      - BadPermissionsS3Output
      - BadPermissionsCloudwatchLogs
      - SubnetIpLimitExceeded
      - ENILimitExceeded
      - BadPermissionsUserCredentials
      - InvalidBundleRobotApplication
      - InvalidBundleSimulationApplication
      - InvalidS3Resource
      - ThrottlingError
      - LimitExceeded
      - MismatchedEtag
      - RobotApplicationVersionMismatchedEtag
      - SimulationApplicationVersionMismatchedEtag
      - ResourceNotFound
      - RequestThrottled
      - BatchTimedOut
      - BatchCanceled
      - InvalidInput
      - WrongRegionS3Bucket
      - WrongRegionS3Output
      - WrongRegionRobotApplication
      - WrongRegionSimulationApplication
      - UploadContentMismatchError
    SimulationJobRequest:
      type: object
      properties:
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
        loggingConfig:
          $ref: '#/components/schemas/LoggingConfig'
        maxJobDurationInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobDuration'
          description: The maximum simulation job duration in seconds. The value must
            be 8 days (691,200 seconds) or less.
        iamRole:
          allOf:
          - $ref: '#/components/schemas/IamRole'
          description: The IAM role name that allows the simulation instance to call
            the AWS APIs that are specified in its associated policies on your behalf.
            This is how credentials are passed in to your simulation job.
        failureBehavior:
          allOf:
          - $ref: '#/components/schemas/FailureBehavior'
          description: "The failure behavior the simulation job.\n\nContinue\n\n \
            \   \n\nLeaves the host running for its maximum timeout duration after\
            \ a `4XX` error code.\n\nFail\n\n    \n\nStop the simulation job and terminate\
            \ the instance."
        useDefaultApplications:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: A Boolean indicating whether to use default applications in
            the simulation job. Default applications include Gazebo, rqt, rviz and
            terminal access.
        robotApplications:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationConfigs'
          description: The robot applications to use in the simulation job.
        simulationApplications:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationConfigs'
          description: The simulation applications to use in the simulation job.
        dataSources:
          allOf:
          - $ref: '#/components/schemas/DataSourceConfigs'
          description: 'Specify data sources to mount read-only files from S3 into
            your simulation. These files are available under `/opt/robomaker/datasources/data_source_name`.


            There is a limit of 100 files and a combined size of 25GB for all `DataSourceConfig`
            objects.'
        vpcConfig:
          $ref: '#/components/schemas/VPCConfig'
        compute:
          allOf:
          - $ref: '#/components/schemas/Compute'
          description: Compute information for the simulation job
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the simulation job request.
      required:
      - maxJobDurationInSeconds
      description: Information about a simulation job request.
    SimulationJobStatus:
      type: string
      enum:
      - Pending
      - Preparing
      - Running
      - Restarting
      - Completed
      - Failed
      - RunningFailed
      - Terminating
      - Terminated
      - Canceled
    SimulationJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/SimulationJobSummary'
    SimulationJobSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the simulation job.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job was last updated.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation job.
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobStatus'
          description: The status of the simulation job.
        simulationApplicationNames:
          allOf:
          - $ref: '#/components/schemas/SimulationApplicationNames'
          description: A list of simulation job simulation application names.
        robotApplicationNames:
          allOf:
          - $ref: '#/components/schemas/RobotApplicationNames'
          description: A list of simulation job robot application names.
        dataSourceNames:
          allOf:
          - $ref: '#/components/schemas/DataSourceNames'
          description: The names of the data sources.
        computeType:
          allOf:
          - $ref: '#/components/schemas/ComputeType'
          description: The compute type for the simulation job summary.
      description: Summary information for a simulation job.
    SimulationJobs:
      type: array
      items:
        $ref: '#/components/schemas/SimulationJob'
    SimulationSoftwareSuite:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuiteType'
          description: The name of the simulation software suite. `SimulationRuntime`
            is the only supported value.
        version:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuiteVersionType'
          description: The version of the simulation software suite. Not applicable
            for `SimulationRuntime`.
      description: Information about a simulation software suite.
    SimulationSoftwareSuiteType:
      type: string
      enum:
      - Gazebo
      - RosbagPlay
      - SimulationRuntime
    SimulationSoftwareSuiteVersionType:
      type: string
      pattern: ^7|9|11|Kinetic|Melodic|Dashing|Foxy$
      minLength: 0
      maxLength: 1024
    SimulationTimeMillis:
      type: integer
      format: int64
      default: 0
    SimulationUnit:
      type: integer
      minimum: 1
      maximum: 15
    Source:
      type: object
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The s3 bucket name.
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The s3 object key.
        etag:
          allOf:
          - $ref: '#/components/schemas/S3Etag'
          description: A hash of the object specified by `s3Bucket` and `s3Key`.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The taget processor architecture for the application.
      description: Information about a source.
    SourceConfig:
      type: object
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The Amazon S3 bucket name.
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The s3 object key.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The target processor architecture for the application.
      description: Information about a source configuration.
    SourceConfigs:
      type: array
      items:
        $ref: '#/components/schemas/SourceConfig'
    Sources:
      type: array
      items:
        $ref: '#/components/schemas/Source'
    StartSimulationJobBatchRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        batchPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchPolicy'
          description: The batch policy.
        createSimulationJobRequests:
          allOf:
          - $ref: '#/components/schemas/CreateSimulationJobRequests'
          description: A list of simulation job requests to create in the batch.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the deployment job batch.
      required:
      - createSimulationJobRequests
    StartSimulationJobBatchResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the batch.
        status:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchStatus'
          description: "The status of the simulation job batch.\n\nPending\n\n   \
            \ \n\nThe simulation job batch request is pending.\n\nInProgress\n\n \
            \   \n\nThe simulation job batch is in progress.\n\nFailed\n\n    \n\n\
            The simulation job batch failed. One or more simulation job requests could\
            \ not be completed due to an internal failure (like `InternalServiceError`).\
            \ See `failureCode` and `failureReason` for more information.\n\nCompleted\n\
            \n    \n\nThe simulation batch job completed. A batch is complete when\
            \ (1) there are no pending simulation job requests in the batch and none\
            \ of the failed simulation job requests are due to `InternalServiceError`\
            \ and (2) when all created simulation jobs have reached a terminal state\
            \ (for example, `Completed` or `Failed`).\n\nCanceled\n\n    \n\nThe simulation\
            \ batch job was cancelled.\n\nCanceling\n\n    \n\nThe simulation batch\
            \ job is being cancelled.\n\nCompleting\n\n    \n\nThe simulation batch\
            \ job is completing.\n\nTimingOut\n\n    \n\nThe simulation job batch\
            \ is timing out.\n\nIf a batch timing out, and there are pending requests\
            \ that were failing due to an internal failure (like `InternalServiceError`),\
            \ the batch status will be `Failed`. If there are no such failing request,\
            \ the batch status will be `TimedOut`.\n\nTimedOut\n\n    \n\nThe simulation\
            \ batch job timed out."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            job batch was created.
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        batchPolicy:
          allOf:
          - $ref: '#/components/schemas/BatchPolicy'
          description: The batch policy.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/SimulationJobBatchErrorCode'
          description: The failure code if the simulation job batch failed.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The reason the simulation job batch failed.
        failedRequests:
          allOf:
          - $ref: '#/components/schemas/FailedCreateSimulationJobRequests'
          description: A list of failed simulation job requests. The request failed
            to be created into a simulation job. Failed requests do not have a simulation
            job ID.
        pendingRequests:
          allOf:
          - $ref: '#/components/schemas/CreateSimulationJobRequests'
          description: A list of pending simulation job requests. These requests have
            not yet been created into simulation jobs.
        createdRequests:
          allOf:
          - $ref: '#/components/schemas/SimulationJobSummaries'
          description: A list of created simulation job request summaries.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the deployment job batch.
    Subnets:
      type: array
      items:
        $ref: '#/components/schemas/NonEmptyString'
    SyncDeploymentJobRequest:
      type: object
      properties:
        clientRequestToken:
          allOf:
          - $ref: '#/components/schemas/ClientRequestToken'
          description: Unique, case-sensitive identifier that you provide to ensure
            the idempotency of the request.
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The target fleet for the synchronization.
      required:
      - clientRequestToken
      - fleet
    SyncDeploymentJobResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the synchronization request.
        fleet:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the fleet.
        status:
          allOf:
          - $ref: '#/components/schemas/DeploymentStatus'
          description: The status of the synchronization job.
        deploymentConfig:
          allOf:
          - $ref: '#/components/schemas/DeploymentConfig'
          description: Information about the deployment configuration.
        deploymentApplicationConfigs:
          allOf:
          - $ref: '#/components/schemas/DeploymentApplicationConfigs'
          description: Information about the deployment application configurations.
        failureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The failure reason if the job fails.
        failureCode:
          allOf:
          - $ref: '#/components/schemas/DeploymentJobErrorCode'
          description: "The failure code if the job fails:\n\nInternalServiceError\n\
            \n    \n\nInternal service error.\n\nRobotApplicationCrash\n\n    \n\n\
            Robot application exited abnormally.\n\nSimulationApplicationCrash\n\n\
            \    \n\nSimulation application exited abnormally.\n\nBadPermissionsRobotApplication\n\
            \n    \n\nRobot application bundle could not be downloaded.\n\nBadPermissionsSimulationApplication\n\
            \n    \n\nSimulation application bundle could not be downloaded.\n\nBadPermissionsS3Output\n\
            \n    \n\nUnable to publish outputs to customer-provided S3 bucket.\n\n\
            BadPermissionsCloudwatchLogs\n\n    \n\nUnable to publish logs to customer-provided\
            \ CloudWatch Logs resource.\n\nSubnetIpLimitExceeded\n\n    \n\nSubnet\
            \ IP limit exceeded.\n\nENILimitExceeded\n\n    \n\nENI limit exceeded.\n\
            \nBadPermissionsUserCredentials\n\n    \n\nUnable to use the Role provided.\n\
            \nInvalidBundleRobotApplication\n\n    \n\nRobot bundle cannot be extracted\
            \ (invalid format, bundling error, or other issue).\n\nInvalidBundleSimulationApplication\n\
            \n    \n\nSimulation bundle cannot be extracted (invalid format, bundling\
            \ error, or other issue).\n\nRobotApplicationVersionMismatchedEtag\n\n\
            \    \n\nEtag for RobotApplication does not match value during version\
            \ creation.\n\nSimulationApplicationVersionMismatchedEtag\n\n    \n\n\
            Etag for SimulationApplication does not match value during version creation."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the fleet was
            created.
    TagKey:
      type: string
      pattern: ^[a-zA-Z0-9 _.\-\/+=:]*$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource
            you are tagging.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: A map that contains tag keys and tag values that are attached
            to the resource.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[a-zA-Z0-9 _.\-\/+=:]*$
      minLength: 0
      maxLength: 256
    TemplateLocation:
      type: object
      properties:
        s3Bucket:
          allOf:
          - $ref: '#/components/schemas/S3Bucket'
          description: The Amazon S3 bucket name.
        s3Key:
          allOf:
          - $ref: '#/components/schemas/S3Key'
          description: The list of S3 keys identifying the data source files.
      required:
      - s3Bucket
      - s3Key
      description: Information about a template location.
    TemplateName:
      type: string
      pattern: .*
      minLength: 0
      maxLength: 255
    TemplateSummaries:
      type: array
      items:
        $ref: '#/components/schemas/TemplateSummary'
    TemplateSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the template.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the template
            was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the template
            was last updated.
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the template.
        version:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The version of the template that you're using.
      description: Summary information for a template.
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/errorMessage'
      description: AWS RoboMaker is temporarily unable to process the request. Try
        your call again.
    Tool:
      type: object
      properties:
        streamUI:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Boolean indicating whether a streaming session will be configured
            for the tool. If `True`, AWS RoboMaker will configure a connection so
            you can interact with the tool as it is running in the simulation. It
            must have a graphical user interface. The default is `False`.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the tool.
        command:
          allOf:
          - $ref: '#/components/schemas/UnrestrictedCommand'
          description: Command-line arguments for the tool. It must include the tool
            executable name.
        streamOutputToCloudWatch:
          allOf:
          - $ref: '#/components/schemas/BoxedBoolean'
          description: Boolean indicating whether logs will be recorded in CloudWatch
            for the tool. The default is `False`.
        exitBehavior:
          allOf:
          - $ref: '#/components/schemas/ExitBehavior'
          description: Exit behavior determines what happens when your tool quits
            running. `RESTART` will cause your tool to be restarted. `FAIL` will cause
            your job to exit. The default is `RESTART`.
      required:
      - name
      - command
      description: Information about a tool. Tools are used in a simulation job.
    Tools:
      type: array
      items:
        $ref: '#/components/schemas/Tool'
    UnrestrictedCommand:
      type: string
      pattern: .*
      minLength: 1
      maxLength: 1024
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the AWS RoboMaker resource
            you are removing tags.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: A map that contains tag keys and tag values that will be unattached
            from the resource.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateRobotApplicationRequest:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The application information for the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceConfigs'
          description: The sources of the robot application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite used by the robot application.
        currentRevisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id for the robot application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI for your robot
            application.
      required:
      - application
      - robotSoftwareSuite
    UpdateRobotApplicationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the updated robot application.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the robot application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: The sources of the robot application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: The robot software suite used by the robot application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the robot application
            was last updated.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id of the robot application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI for your robot
            application.
    UpdateSimulationApplicationRequest:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The application information for the simulation application.
        sources:
          allOf:
          - $ref: '#/components/schemas/SourceConfigs'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite.
        renderingEngine:
          allOf:
          - $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        currentRevisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id for the robot application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI for your simulation
            application.
      required:
      - application
      - simulationSoftwareSuite
      - robotSoftwareSuite
    UpdateSimulationApplicationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the updated simulation application.
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: The name of the simulation application.
        version:
          allOf:
          - $ref: '#/components/schemas/Version'
          description: The version of the robot application.
        sources:
          allOf:
          - $ref: '#/components/schemas/Sources'
          description: The sources of the simulation application.
        simulationSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/SimulationSoftwareSuite'
          description: The simulation software suite used by the simulation application.
        robotSoftwareSuite:
          allOf:
          - $ref: '#/components/schemas/RobotSoftwareSuite'
          description: Information about the robot software suite.
        renderingEngine:
          allOf:
          - $ref: '#/components/schemas/RenderingEngine'
          description: The rendering engine for the simulation application.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the simulation
            application was last updated.
        revisionId:
          allOf:
          - $ref: '#/components/schemas/RevisionId'
          description: The revision id of the simulation application.
        environment:
          allOf:
          - $ref: '#/components/schemas/Environment'
          description: The object that contains the Docker image URI used for your
            simulation application.
    UpdateWorldTemplateRequest:
      type: object
      properties:
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template to update.
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the template.
        templateBody:
          allOf:
          - $ref: '#/components/schemas/Json'
          description: The world template body.
        templateLocation:
          allOf:
          - $ref: '#/components/schemas/TemplateLocation'
          description: The location of the world template.
      required:
      - template
    UpdateWorldTemplateResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template.
        name:
          allOf:
          - $ref: '#/components/schemas/TemplateName'
          description: The name of the world template.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world template
            was created.
        lastUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/LastUpdatedAt'
          description: The time, in milliseconds since the epoch, when the world template
            was last updated.
    UploadBehavior:
      type: string
      enum:
      - UPLOAD_ON_TERMINATE
      - UPLOAD_ROLLING_AUTO_REMOVE
    UploadConfiguration:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/Name'
          description: 'A prefix that specifies where files will be uploaded in Amazon
            S3. It is appended to the simulation output location to determine the
            final path.


            For example, if your simulation output location is `s3://amzn-s3-demo-bucket`
            and your upload configuration name is `robot-test`, your files will be
            uploaded to `s3://amzn-s3-demo-bucket///robot-test`.'
        path:
          allOf:
          - $ref: '#/components/schemas/Path'
          description: Specifies the path of the file(s) to upload. Standard Unix
            glob matching rules are accepted, with the addition of `**` as a _super
            asterisk_. For example, specifying `/var/log/**.log` causes all .log files
            in the `/var/log` directory tree to be collected. For more examples, see
            [Glob Library](https://github.com/gobwas/glob).
        uploadBehavior:
          allOf:
          - $ref: '#/components/schemas/UploadBehavior'
          description: "Specifies when to upload the files:\n\nUPLOAD_ON_TERMINATE\n\
            \n    \n\nMatching files are uploaded once the simulation enters the `TERMINATING`\
            \ state. Matching files are not uploaded until all of your code (including\
            \ tools) have stopped.\n\nIf there is a problem uploading a file, the\
            \ upload is retried. If problems persist, no further upload attempts will\
            \ be made.\n\nUPLOAD_ROLLING_AUTO_REMOVE\n\n    \n\nMatching files are\
            \ uploaded as they are created. They are deleted after they are uploaded.\
            \ The specified path is checked every 5 seconds. A final check is made\
            \ when all of your code (including tools) have stopped."
      required:
      - name
      - path
      - uploadBehavior
      description: Provides upload configuration information. Files are uploaded from
        the simulation job to a location you specify.
    UploadConfigurations:
      type: array
      items:
        $ref: '#/components/schemas/UploadConfiguration'
    VPCConfig:
      type: object
      properties:
        subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          description: A list of one or more subnet IDs in your VPC.
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: A list of one or more security groups IDs in your VPC.
        assignPublicIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean indicating whether to assign a public IP address.
      required:
      - subnets
      description: If your simulation job accesses resources in a VPC, you provide
        this parameter identifying the list of security group IDs and subnet IDs.
        These must belong to the same VPC. You must provide at least one security
        group and two subnet IDs.
    VPCConfigResponse:
      type: object
      properties:
        subnets:
          allOf:
          - $ref: '#/components/schemas/Subnets'
          description: A list of subnet IDs associated with the simulation job.
        securityGroups:
          allOf:
          - $ref: '#/components/schemas/SecurityGroups'
          description: A list of security group IDs associated with the simulation
            job.
        vpcId:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The VPC ID associated with your simulation job.
        assignPublicIp:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: A boolean indicating if a public IP was assigned.
      description: VPC configuration associated with your simulation job.
    Version:
      type: string
      pattern: ^(\$LATEST)|[0-9]*$
      minLength: 1
      maxLength: 255
    VersionQualifier:
      type: string
      pattern: ^ALL$
      minLength: 1
      maxLength: 255
    WorldConfig:
      type: object
      properties:
        world:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The world generated by Simulation WorldForge.
      description: Configuration information for a world.
    WorldConfigs:
      type: array
      items:
        $ref: '#/components/schemas/WorldConfig'
    WorldCount:
      type: object
      properties:
        floorplanCount:
          allOf:
          - $ref: '#/components/schemas/FloorplanCount'
          description: The number of unique floorplans.
        interiorCountPerFloorplan:
          allOf:
          - $ref: '#/components/schemas/InteriorCountPerFloorplan'
          description: The number of unique interiors per floorplan.
      description: 'The number of worlds that will be created. You can configure the
        number of unique floorplans and the number of unique interiors for each floor
        plan. For example, if you want 1 world with 20 unique interiors, you set `floorplanCount
        = 1` and `interiorCountPerFloorplan = 20`. This will result in 20 worlds (`floorplanCount`
        * `interiorCountPerFloorplan)`.


        If you set `floorplanCount = 4` and `interiorCountPerFloorplan = 5`, there
        will be 20 worlds with 5 unique floor plans.'
    WorldExportJobErrorCode:
      type: string
      enum:
      - InternalServiceError
      - LimitExceeded
      - ResourceNotFound
      - RequestThrottled
      - InvalidInput
      - AccessDenied
    WorldExportJobStatus:
      type: string
      enum:
      - Pending
      - Running
      - Completed
      - Failed
      - Canceling
      - Canceled
    WorldExportJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorldExportJobSummary'
    WorldExportJobSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world export job.
        status:
          allOf:
          - $ref: '#/components/schemas/WorldExportJobStatus'
          description: "The status of the world export job.\n\nPending\n\n    \n\n\
            The world export job request is pending.\n\nRunning\n\n    \n\nThe world\
            \ export job is running.\n\nCompleted\n\n    \n\nThe world export job\
            \ completed.\n\nFailed\n\n    \n\nThe world export job failed. See `failureCode`\
            \ for more information.\n\nCanceled\n\n    \n\nThe world export job was\
            \ cancelled.\n\nCanceling\n\n    \n\nThe world export job is being cancelled."
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world export
            job was created.
        worlds:
          allOf:
          - $ref: '#/components/schemas/Arns'
          description: A list of worlds.
        outputLocation:
          $ref: '#/components/schemas/OutputLocation'
      description: Information about a world export job.
    WorldFailure:
      type: object
      properties:
        failureCode:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobErrorCode'
          description: "The failure code of the world export job if it failed:\n\n\
            InternalServiceError\n\n    \n\nInternal service error.\n\nLimitExceeded\n\
            \n    \n\nThe requested resource exceeds the maximum number allowed, or\
            \ the number of concurrent stream requests exceeds the maximum number\
            \ allowed.\n\nResourceNotFound\n\n    \n\nThe specified resource could\
            \ not be found.\n\nRequestThrottled\n\n    \n\nThe request was throttled.\n\
            \nInvalidInput\n\n    \n\nAn input parameter in the request is not valid."
        sampleFailureReason:
          allOf:
          - $ref: '#/components/schemas/GenericString'
          description: The sample reason why the world failed. World errors are aggregated.
            A sample is used as the `sampleFailureReason`.
        failureCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of failed worlds.
      description: Information about a failed world.
    WorldFailures:
      type: array
      items:
        $ref: '#/components/schemas/WorldFailure'
    WorldGenerationJobErrorCode:
      type: string
      enum:
      - InternalServiceError
      - LimitExceeded
      - ResourceNotFound
      - RequestThrottled
      - InvalidInput
      - AllWorldGenerationFailed
    WorldGenerationJobStatus:
      type: string
      enum:
      - Pending
      - Running
      - Completed
      - Failed
      - PartialFailed
      - Canceling
      - Canceled
    WorldGenerationJobSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorldGenerationJobSummary'
    WorldGenerationJobSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world generator job.
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world generator
            job was created.
        status:
          allOf:
          - $ref: '#/components/schemas/WorldGenerationJobStatus'
          description: "The status of the world generator job:\n\nPending\n\n    \n\
            \nThe world generator job request is pending.\n\nRunning\n\n    \n\nThe\
            \ world generator job is running.\n\nCompleted\n\n    \n\nThe world generator\
            \ job completed.\n\nFailed\n\n    \n\nThe world generator job failed.\
            \ See `failureCode` for more information.\n\nPartialFailed\n\n    \n\n\
            Some worlds did not generate.\n\nCanceled\n\n    \n\nThe world generator\
            \ job was cancelled.\n\nCanceling\n\n    \n\nThe world generator job is\
            \ being cancelled."
        worldCount:
          allOf:
          - $ref: '#/components/schemas/WorldCount'
          description: Information about the world count.
        succeededWorldCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of worlds that were generated.
        failedWorldCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The number of worlds that failed.
      description: Information about a world generator job.
    WorldSummaries:
      type: array
      items:
        $ref: '#/components/schemas/WorldSummary'
    WorldSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (ARN) of the world.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/CreatedAt'
          description: The time, in milliseconds since the epoch, when the world was
            created.
        generationJob:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world generation job.
        template:
          allOf:
          - $ref: '#/components/schemas/Arn'
          description: The Amazon Resource Name (arn) of the world template.
      description: Information about a world.
    errorMessage:
      type: string
