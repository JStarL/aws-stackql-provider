openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: controlcatalog
  x-aws-serviceName: controlcatalog
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2018-05-10'
  title: AWS Control Catalog
  description: |-
    Welcome to the Amazon Web Services Control Catalog API reference. This guide is for developers who need detailed information about how to programmatically identify and filter the common controls and related metadata that are available to Amazon Web Services customers. This API reference provides descriptions, syntax, and usage examples for each of the actions and data types that are supported by Amazon Web Services Control Catalog.

    Use the following links to get started with the Amazon Web Services Control Catalog API:

      * [Actions](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_Operations.html): An alphabetical list of all Control Catalog API operations.

      * [Data types](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/API_Types.html): An alphabetical list of all Control Catalog data types.

      * [Common parameters](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/CommonParameters.html): Parameters that all operations can use.

      * [Common errors](https://docs.aws.amazon.com/controlcatalog/latest/APIReference/CommonErrors.html): Client and server errors that all operations can return.
servers:
- description: The AWS Control Catalog regional endpoint
  url: https://controlcatalog.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /get-control:
    post:
      operationId: GetControl
      description: |-
        Returns details about a specific control, most notably a list of Amazon Web Services Regions where this control is supported. Input a value for the _ControlArn_ parameter, in ARN form. `GetControl` accepts _controltower_ or _controlcatalog_ control ARNs as input. Returns a _controlcatalog_ ARN format.

        In the API response, controls that have the value `GLOBAL` in the `Scope` field do not show the `DeployableRegions` field, because it does not apply. Controls that have the value `REGIONAL` in the `Scope` field return a value for the `DeployableRegions` field, as shown in the example.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ControlArn:
                  $ref: '#/components/schemas/ControlArn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The requested resource does not exist.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /common-controls:
    post:
      operationId: ListCommonControls
      description: |-
        Returns a paginated list of common controls from the Amazon Web Services Control Catalog.

        You can apply an optional filter to see common controls that have a specific objective. If you don’t provide a filter, the operation returns all common controls.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxListCommonControlsResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CommonControlFilter:
                  $ref: '#/components/schemas/CommonControlFilter'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /list-controls:
    post:
      operationId: ListControls
      description: |-
        Returns a paginated list of all available controls in the Amazon Web Services Control Catalog library. Allows you to discover available controls. The list of controls is given as structures of type _controlSummary_. The ARN is returned in the global _controlcatalog_ format, as shown in the examples.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxListControlsResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /domains:
    post:
      operationId: ListDomains
      description: |-
        Returns a paginated list of domains from the Amazon Web Services Control Catalog.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxListDomainsResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /objectives:
    post:
      operationId: ListObjectives
      description: |-
        Returns a paginated list of objectives from the Amazon Web Services Control Catalog.

        You can apply an optional filter to see the objectives that belong to a specific domain. If you don’t provide a filter, the operation returns all objectives.
      parameters:
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxListObjectivesResults'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/PaginationToken'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ObjectiveFilter:
                  $ref: '#/components/schemas/ObjectiveFilter'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            An internal service error occurred during the processing of your request. Try again later.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The request has invalid or missing parameters.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: You do not have sufficient access to perform this action.
    AssociatedDomainSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) of the related domain.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the related domain.
      description: A summary of the domain that a common control or an objective belongs
        to.
    AssociatedObjectiveSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ObjectiveArn'
          description: The Amazon Resource Name (ARN) of the related objective.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the related objective.
      description: A summary of the objective that a common control supports.
    CommonControlArn:
      type: string
      pattern: ^arn:(aws(?:[-a-z]*)?):controlcatalog:::common-control/[0-9a-z]+$
      minLength: 41
      maxLength: 2048
    CommonControlFilter:
      type: object
      properties:
        Objectives:
          allOf:
          - $ref: '#/components/schemas/ObjectiveResourceFilterList'
          description: 'The objective that''s used as filter criteria.


            You can use this parameter to specify one objective ARN at a time. Passing
            multiple ARNs in the `CommonControlFilter` isn’t currently supported.'
      description: An optional filter that narrows the results to a specific objective.
    CommonControlSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/CommonControlArn'
          description: The Amazon Resource Name (ARN) that identifies the common control.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the common control.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the common control.
        Domain:
          allOf:
          - $ref: '#/components/schemas/AssociatedDomainSummary'
          description: The domain that the common control belongs to.
        Objective:
          allOf:
          - $ref: '#/components/schemas/AssociatedObjectiveSummary'
          description: The objective that the common control belongs to.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the common control was created.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the common control was most recently updated.
      required:
      - Arn
      - Name
      - Description
      - Domain
      - Objective
      - CreateTime
      - LastUpdateTime
      description: A summary of metadata for a common control.
    CommonControlSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/CommonControlSummary'
    ControlArn:
      type: string
      pattern: ^arn:(aws(?:[-a-z]*)?):(controlcatalog|controltower):[a-zA-Z0-9-]*::control/[0-9a-zA-Z_\-]+$
      minLength: 34
      maxLength: 2048
    ControlBehavior:
      type: string
      enum:
      - PREVENTIVE
      - PROACTIVE
      - DETECTIVE
    ControlParameter:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The parameter name. This name is the parameter `key` when you
            call [ `EnableControl` ](https://docs.aws.amazon.com/controltower/latest/APIReference/API_EnableControl.html)
            or [ `UpdateEnabledControl` ](https://docs.aws.amazon.com/controltower/latest/APIReference/API_UpdateEnabledControl.html).
      required:
      - Name
      description: "Five types of control parameters are supported.\n\n  * **AllowedRegions**\
        \ : List of Amazon Web Services Regions exempted from the control. Each string\
        \ is expected to be an Amazon Web Services Region code. This parameter is\
        \ mandatory for the **OU Region deny** control, **CT.MULTISERVICE.PV.1**.\n\
        \nExample: `[\"us-east-1\",\"us-west-2\"]`\n\n  * **ExemptedActions** : List\
        \ of Amazon Web Services IAM actions exempted from the control. Each string\
        \ is expected to be an IAM action.\n\nExample: `[\"logs:DescribeLogGroups\"\
        ,\"logs:StartQuery\",\"logs:GetQueryResults\"]`\n\n  * **ExemptedPrincipalArns**\
        \ : List of Amazon Web Services IAM principal ARNs exempted from the control.\
        \ Each string is expected to be an IAM principal that follows the pattern\
        \ `^arn:(aws|aws-us-gov):(iam|sts)::.+:.+$`\n\nExample: `[\"arn:aws:iam::*:role/ReadOnly\"\
        ,\"arn:aws:sts::*:assumed-role/ReadOnly/*\"]`\n\n  * **ExemptedResourceArns**\
        \ : List of resource ARNs exempted from the control. Each string is expected\
        \ to be a resource ARN.\n\nExample: `[\"arn:aws:s3:::my-bucket-name\"]`\n\n\
        \  * **ExemptAssumeRoot** : A parameter that lets you choose whether to exempt\
        \ requests made with `AssumeRoot` from this control, for this OU. For member\
        \ accounts, the `AssumeRoot` property is included in requests initiated by\
        \ IAM centralized root access. This parameter applies only to the `AWS-GR_RESTRICT_ROOT_USER`\
        \ control. If you add the parameter when enabling the control, the `AssumeRoot`\
        \ exemption is allowed. If you omit the parameter, the `AssumeRoot` exception\
        \ is not permitted. The parameter does not accept `False` as a value.\n\n\
        _Example: Enabling the control and allowing`AssumeRoot` _\n\n`{ \"controlIdentifier\"\
        : \"arn:aws:controlcatalog:::control/5kvme4m5d2b4d7if2fs5yg2ui\", \"parameters\"\
        : [ { \"key\": \"ExemptAssumeRoot\", \"value\": true } ], \"targetIdentifier\"\
        : \"arn:aws:organizations::8633900XXXXX:ou/o-6jmn81636m/ou-qsah-jtiihcla\"\
        \ }`"
    ControlParameters:
      type: array
      items:
        $ref: '#/components/schemas/ControlParameter'
    ControlScope:
      type: string
      enum:
      - GLOBAL
      - REGIONAL
    ControlSeverity:
      type: string
      enum:
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL
    ControlSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ControlArn'
          description: The Amazon Resource Name (ARN) of the control.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The display name of the control.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of the control, as it may appear in the console.
            Describes the functionality of the control.
        Behavior:
          allOf:
          - $ref: '#/components/schemas/ControlBehavior'
          description: 'An enumerated type, with the following possible values:'
        Severity:
          allOf:
          - $ref: '#/components/schemas/ControlSeverity'
          description: 'An enumerated type, with the following possible values:'
        Implementation:
          allOf:
          - $ref: '#/components/schemas/ImplementationSummary'
          description: An object of type `ImplementationSummary` that describes how
            the control is implemented.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp that notes the time when the control was released
            (start of its life) as a governance capability in Amazon Web Services.
      required:
      - Arn
      - Name
      - Description
      description: Overview of information about a control.
    Controls:
      type: array
      items:
        $ref: '#/components/schemas/ControlSummary'
    DeployableRegions:
      type: array
      items:
        $ref: '#/components/schemas/RegionCode'
    DomainArn:
      type: string
      pattern: ^arn:(aws(?:[-a-z]*)?):controlcatalog:::domain/[0-9a-z]+$
      minLength: 33
      maxLength: 2048
    DomainResourceFilter:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) of the domain.
      description: The domain resource that's being used as a filter.
    DomainResourceFilterList:
      type: array
      items:
        $ref: '#/components/schemas/DomainResourceFilter'
    DomainSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/DomainArn'
          description: The Amazon Resource Name (ARN) that identifies the domain.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the domain.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the domain.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the domain was created.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the domain was most recently updated.
      required:
      - Arn
      - Name
      - Description
      - CreateTime
      - LastUpdateTime
      description: A summary of metadata for a domain.
    DomainSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/DomainSummary'
    GetControlRequest:
      type: object
      properties:
        ControlArn:
          allOf:
          - $ref: '#/components/schemas/ControlArn'
          description: 'The Amazon Resource Name (ARN) of the control. It has one
            of the following formats:


            _Global format_


            `arn:{PARTITION}:controlcatalog:::control/{CONTROL_CATALOG_OPAQUE_ID}`


            _Or Regional format_


            `arn:{PARTITION}:controltower:{REGION}::control/{CONTROL_TOWER_OPAQUE_ID}`


            Here is a more general pattern that covers Amazon Web Services Control
            Tower and Control Catalog ARNs:


            `^arn:(aws(?:[-a-z]*)?):(controlcatalog|controltower):[a-zA-Z0-9-]*::control/[0-9a-zA-Z_\\-]+$`'
      required:
      - ControlArn
    GetControlResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ControlArn'
          description: The Amazon Resource Name (ARN) of the control.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The display name of the control.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: A description of what the control does.
        Behavior:
          allOf:
          - $ref: '#/components/schemas/ControlBehavior'
          description: A term that identifies the control's functional behavior. One
            of `Preventive`, `Detective`, `Proactive`
        Severity:
          allOf:
          - $ref: '#/components/schemas/ControlSeverity'
          description: 'An enumerated type, with the following possible values:'
        RegionConfiguration:
          $ref: '#/components/schemas/RegionConfiguration'
        Implementation:
          allOf:
          - $ref: '#/components/schemas/ImplementationDetails'
          description: Returns information about the control, as an `ImplementationDetails`
            object that shows the underlying implementation type for a control.
        Parameters:
          allOf:
          - $ref: '#/components/schemas/ControlParameters'
          description: Returns an array of `ControlParameter` objects that specify
            the parameters a control supports. An empty list is returned for controls
            that don’t support parameters.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: A timestamp that notes the time when the control was released
            (start of its life) as a governance capability in Amazon Web Services.
      required:
      - Arn
      - Name
      - Description
      - Behavior
      - RegionConfiguration
    ImplementationDetails:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ImplementationType'
          description: A string that describes a control's implementation type.
        Identifier:
          allOf:
          - $ref: '#/components/schemas/ImplementationIdentifier'
          description: A service-specific identifier for the control, assigned by
            the service that implemented the control. For example, this identifier
            could be an Amazon Web Services Config Rule ID or a Security Hub Control
            ID.
      required:
      - Type
      description: "An object that describes the implementation type for a control.\n\
        \nOur `ImplementationDetails` `Type` format has three required segments:\n\
        \n  * `SERVICE-PROVIDER::SERVICE-NAME::RESOURCE-NAME`\n\nFor example, `AWS::Config::ConfigRule`\
        \ **or** `AWS::SecurityHub::SecurityControl` resources have the format with\
        \ three required segments.\n\nOur `ImplementationDetails` `Type` format has\
        \ an optional fourth segment, which is present for applicable implementation\
        \ types. The format is as follows:\n\n  * `SERVICE-PROVIDER::SERVICE-NAME::RESOURCE-NAME::RESOURCE-TYPE-DESCRIPTION`\n\
        \nFor example, `AWS::Organizations::Policy::SERVICE_CONTROL_POLICY` **or**\
        \ `AWS::CloudFormation::Type::HOOK` have the format with four segments.\n\n\
        Although the format is similar, the values for the `Type` field do not match\
        \ any Amazon Web Services CloudFormation values."
    ImplementationIdentifier:
      type: string
      pattern: ^[a-z0-9-]+$
      minLength: 1
      maxLength: 256
    ImplementationSummary:
      type: object
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/ImplementationType'
          description: A string that represents the Amazon Web Services service that
            implements this control. For example, a value of `AWS::Config::ConfigRule`
            indicates that the control is implemented by Amazon Web Services Config,
            and `AWS::SecurityHub::SecurityControl` indicates implementation by Amazon
            Web Services Security Hub.
        Identifier:
          allOf:
          - $ref: '#/components/schemas/ImplementationIdentifier'
          description: The identifier originally assigned by the Amazon Web Services
            service that implements the control. For example, `CODEPIPELINE_DEPLOYMENT_COUNT_CHECK`.
      required:
      - Type
      description: A summary of how the control is implemented, including the Amazon
        Web Services service that enforces the control and its service-specific identifier.
        For example, the value of this field could indicate that the control is implemented
        as an Amazon Web Services Config Rule or an Amazon Web Services Security Hub
        control.
    ImplementationType:
      type: string
      pattern: ^[A-Za-z0-9]+(::[A-Za-z0-9_]+){2,3}$
      minLength: 7
      maxLength: 2048
    InternalServerException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: An internal service error occurred during the processing of your
        request. Try again later.
    ListCommonControlsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxListCommonControlsResults'
          description: The maximum number of results on a page or for an API request
            call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        CommonControlFilter:
          allOf:
          - $ref: '#/components/schemas/CommonControlFilter'
          description: 'An optional filter that narrows the results to a specific
            objective.


            This filter allows you to specify one objective ARN at a time. Passing
            multiple ARNs in the `CommonControlFilter` isn’t currently supported.'
    ListCommonControlsResponse:
      type: object
      properties:
        CommonControls:
          allOf:
          - $ref: '#/components/schemas/CommonControlSummaryList'
          description: The list of common controls that the `ListCommonControls` API
            returns.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - CommonControls
    ListControlsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxListControlsResults'
          description: The maximum number of results on a page or for an API request
            call.
    ListControlsResponse:
      type: object
      properties:
        Controls:
          allOf:
          - $ref: '#/components/schemas/Controls'
          description: Returns a list of controls, given as structures of type _controlSummary_.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - Controls
    ListDomainsRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxListDomainsResults'
          description: The maximum number of results on a page or for an API request
            call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
    ListDomainsResponse:
      type: object
      properties:
        Domains:
          allOf:
          - $ref: '#/components/schemas/DomainSummaryList'
          description: The list of domains that the `ListDomains` API returns.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - Domains
    ListObjectivesRequest:
      type: object
      properties:
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/MaxListObjectivesResults'
          description: The maximum number of results on a page or for an API request
            call.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
        ObjectiveFilter:
          allOf:
          - $ref: '#/components/schemas/ObjectiveFilter'
          description: 'An optional filter that narrows the results to a specific
            domain.


            This filter allows you to specify one domain ARN at a time. Passing multiple
            ARNs in the `ObjectiveFilter` isn’t currently supported.'
    ListObjectivesResponse:
      type: object
      properties:
        Objectives:
          allOf:
          - $ref: '#/components/schemas/ObjectiveSummaryList'
          description: The list of objectives that the `ListObjectives` API returns.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/PaginationToken'
          description: The pagination token that's used to fetch the next set of results.
      required:
      - Objectives
    MaxListCommonControlsResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxListControlsResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxListDomainsResults:
      type: integer
      minimum: 1
      maximum: 100
    MaxListObjectivesResults:
      type: integer
      minimum: 1
      maximum: 100
    ObjectiveArn:
      type: string
      pattern: ^arn:(aws(?:[-a-z]*)?):controlcatalog:::objective/[0-9a-z]+$
      minLength: 36
      maxLength: 2048
    ObjectiveFilter:
      type: object
      properties:
        Domains:
          allOf:
          - $ref: '#/components/schemas/DomainResourceFilterList'
          description: 'The domain that''s used as filter criteria.


            You can use this parameter to specify one domain ARN at a time. Passing
            multiple ARNs in the `ObjectiveFilter` isn’t currently supported.'
      description: An optional filter that narrows the list of objectives to a specific
        domain.
    ObjectiveResourceFilter:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ObjectiveArn'
          description: The Amazon Resource Name (ARN) of the objective.
      description: The objective resource that's being used as a filter.
    ObjectiveResourceFilterList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectiveResourceFilter'
    ObjectiveSummary:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/ObjectiveArn'
          description: The Amazon Resource Name (ARN) that identifies the objective.
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The name of the objective.
        Description:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The description of the objective.
        Domain:
          allOf:
          - $ref: '#/components/schemas/AssociatedDomainSummary'
          description: The domain that the objective belongs to.
        CreateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the objective was created.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          description: The time when the objective was most recently updated.
      required:
      - Arn
      - Name
      - Description
      - Domain
      - CreateTime
      - LastUpdateTime
      description: A summary of metadata for an objective.
    ObjectiveSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ObjectiveSummary'
    PaginationToken:
      type: string
      maxLength: 1024
    RegionCode:
      type: string
      pattern: ^[a-zA-Z0-9-]{1,128}$
    RegionConfiguration:
      type: object
      properties:
        Scope:
          allOf:
          - $ref: '#/components/schemas/ControlScope'
          description: The coverage of the control, if deployed. Scope is an enumerated
            type, with value `Regional`, or `Global`. A control with Global scope
            is effective in all Amazon Web Services Regions, regardless of the Region
            from which it is enabled, or to which it is deployed. A control implemented
            by an SCP is usually Global in scope. A control with Regional scope has
            operations that are restricted specifically to the Region from which it
            is enabled and to which it is deployed. Controls implemented by Config
            rules and CloudFormation hooks usually are Regional in scope. Security
            Hub controls usually are Regional in scope.
        DeployableRegions:
          allOf:
          - $ref: '#/components/schemas/DeployableRegions'
          description: Regions in which the control is available to be deployed.
      required:
      - Scope
      description: 'Returns information about the control, including the scope of
        the control, if enabled, and the Regions in which the control currently is
        available for deployment. For more information about scope, see [Global services](https://docs.aws.amazon.com/whitepapers/latest/aws-fault-isolation-boundaries/global-services.html).


        If you are applying controls through an Amazon Web Services Control Tower
        landing zone environment, remember that the values returned in the `RegionConfiguration`
        API operation are not related to the governed Regions in your landing zone.
        For example, if you are governing Regions `A`,`B`,and `C` while the control
        is available in Regions `A`, `B`, C`,` and `D`, you''d see a response with
        `DeployableRegions` of `A`, `B`, `C`, and `D` for a control with `REGIONAL`
        scope, even though you may not intend to deploy the control in Region `D`,
        because you do not govern it through your landing zone.'
    ResourceNotFoundException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The requested resource does not exist.
    ThrottlingException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The request was denied due to request throttling.
    ValidationException:
      type: object
      properties:
        Message:
          $ref: '#/components/schemas/String'
      description: The request has invalid or missing parameters.
