openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: pinpoint
  x-aws-serviceName: pinpoint
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2016-12-01'
  title: Amazon Pinpoint
  description: |-
    Doc Engage API - Amazon Pinpoint API
servers:
- description: The Amazon Pinpoint regional endpoint
  url: https://pinpoint.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /v1/apps:
    post:
      operationId: CreateApp
      description: |-
        Creates an application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CreateApplicationRequest:
                  $ref: '#/components/schemas/CreateApplicationRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetApps
      description: |-
        Retrieves information about all the applications that are associated with your Amazon Pinpoint account.
      parameters:
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/campaigns:
    post:
      operationId: CreateCampaign
      description: |-
        Creates a new campaign for an application or updates the settings of an existing campaign for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WriteCampaignRequest:
                  $ref: '#/components/schemas/WriteCampaignRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetCampaigns
      description: |-
        Retrieves information about the status, configuration, and other settings for all the campaigns that are associated with an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/templates/{TemplateName}/email:
    post:
      operationId: CreateEmailTemplate
      description: |-
        Creates a message template for messages that are sent through the email channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailTemplateRequest:
                  $ref: '#/components/schemas/EmailTemplateRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: DeleteEmailTemplate
      description: |-
        Deletes a message template for messages that were sent through the email channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEmailTemplate
      description: |-
        Retrieves the content and settings of a message template for messages that are sent through the email channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateEmailTemplate
      description: |-
        Updates an existing message template for messages that are sent through the email channel.
      parameters:
      - name: create-new-version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__boolean'
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailTemplateRequest:
                  $ref: '#/components/schemas/EmailTemplateRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/jobs/export:
    post:
      operationId: CreateExportJob
      description: |-
        Creates an export job for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ExportJobRequest:
                  $ref: '#/components/schemas/ExportJobRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetExportJobs
      description: |-
        Retrieves information about the status and settings of all the export jobs for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/jobs/import:
    post:
      operationId: CreateImportJob
      description: |-
        Creates an import job for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ImportJobRequest:
                  $ref: '#/components/schemas/ImportJobRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetImportJobs
      description: |-
        Retrieves information about the status and settings of all the import jobs for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/templates/{TemplateName}/inapp:
    post:
      operationId: CreateInAppTemplate
      description: |-
        Creates a new message template for messages using the in-app message channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InAppTemplateRequest:
                  $ref: '#/components/schemas/InAppTemplateRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: DeleteInAppTemplate
      description: |-
        Deletes a message template for messages sent using the in-app message channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetInAppTemplate
      description: |-
        Retrieves the content and settings of a message template for messages sent through the in-app channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateInAppTemplate
      description: |-
        Updates an existing message template for messages sent through the in-app message channel.
      parameters:
      - name: create-new-version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__boolean'
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                InAppTemplateRequest:
                  $ref: '#/components/schemas/InAppTemplateRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys:
    post:
      operationId: CreateJourney
      description: |-
        Creates a journey for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WriteJourneyRequest:
                  $ref: '#/components/schemas/WriteJourneyRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: ListJourneys
      description: |-
        Retrieves information about the status, configuration, and other settings for all the journeys that are associated with an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/templates/{TemplateName}/push:
    post:
      operationId: CreatePushTemplate
      description: |-
        Creates a message template for messages that are sent through a push notification channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PushNotificationTemplateRequest:
                  $ref: '#/components/schemas/PushNotificationTemplateRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: DeletePushTemplate
      description: |-
        Deletes a message template for messages that were sent through a push notification channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetPushTemplate
      description: |-
        Retrieves the content and settings of a message template for messages that are sent through a push notification channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdatePushTemplate
      description: |-
        Updates an existing message template for messages that are sent through a push notification channel.
      parameters:
      - name: create-new-version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__boolean'
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                PushNotificationTemplateRequest:
                  $ref: '#/components/schemas/PushNotificationTemplateRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/recommenders:
    post:
      operationId: CreateRecommenderConfiguration
      description: |-
        Creates an Amazon Pinpoint configuration for a recommender model.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                CreateRecommenderConfiguration:
                  $ref: '#/components/schemas/CreateRecommenderConfigurationShape'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetRecommenderConfigurations
      description: |-
        Retrieves information about all the recommender model configurations that are associated with your Amazon Pinpoint account.
      parameters:
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/segments:
    post:
      operationId: CreateSegment
      description: |-
        Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WriteSegmentRequest:
                  $ref: '#/components/schemas/WriteSegmentRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetSegments
      description: |-
        Retrieves information about the configuration, dimension, and other settings for all the segments that are associated with an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/templates/{TemplateName}/sms:
    post:
      operationId: CreateSmsTemplate
      description: |-
        Creates a message template for messages that are sent through the SMS channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SMSTemplateRequest:
                  $ref: '#/components/schemas/SMSTemplateRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: DeleteSmsTemplate
      description: |-
        Deletes a message template for messages that were sent through the SMS channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetSmsTemplate
      description: |-
        Retrieves the content and settings of a message template for messages that are sent through the SMS channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateSmsTemplate
      description: |-
        Updates an existing message template for messages that are sent through the SMS channel.
      parameters:
      - name: create-new-version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__boolean'
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SMSTemplateRequest:
                  $ref: '#/components/schemas/SMSTemplateRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/templates/{TemplateName}/voice:
    post:
      operationId: CreateVoiceTemplate
      description: |-
        Creates a message template for messages that are sent through the voice channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VoiceTemplateRequest:
                  $ref: '#/components/schemas/VoiceTemplateRequest'
      responses:
        '201': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    delete:
      operationId: DeleteVoiceTemplate
      description: |-
        Deletes a message template for messages that were sent through the voice channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetVoiceTemplate
      description: |-
        Retrieves the content and settings of a message template for messages that are sent through the voice channel.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateVoiceTemplate
      description: |-
        Updates an existing message template for messages that are sent through the voice channel.
      parameters:
      - name: create-new-version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__boolean'
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: version
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VoiceTemplateRequest:
                  $ref: '#/components/schemas/VoiceTemplateRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/adm:
    delete:
      operationId: DeleteAdmChannel
      description: |-
        Disables the ADM channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetAdmChannel
      description: |-
        Retrieves information about the status and settings of the ADM channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateAdmChannel
      description: |-
        Enables the ADM channel for an application or updates the status and settings of the ADM channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ADMChannelRequest:
                  $ref: '#/components/schemas/ADMChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/apns:
    delete:
      operationId: DeleteApnsChannel
      description: |-
        Disables the APNs channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetApnsChannel
      description: |-
        Retrieves information about the status and settings of the APNs channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateApnsChannel
      description: |-
        Enables the APNs channel for an application or updates the status and settings of the APNs channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                APNSChannelRequest:
                  $ref: '#/components/schemas/APNSChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/apns_sandbox:
    delete:
      operationId: DeleteApnsSandboxChannel
      description: |-
        Disables the APNs sandbox channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetApnsSandboxChannel
      description: |-
        Retrieves information about the status and settings of the APNs sandbox channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateApnsSandboxChannel
      description: |-
        Enables the APNs sandbox channel for an application or updates the status and settings of the APNs sandbox channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                APNSSandboxChannelRequest:
                  $ref: '#/components/schemas/APNSSandboxChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/apns_voip:
    delete:
      operationId: DeleteApnsVoipChannel
      description: |-
        Disables the APNs VoIP channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetApnsVoipChannel
      description: |-
        Retrieves information about the status and settings of the APNs VoIP channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateApnsVoipChannel
      description: |-
        Enables the APNs VoIP channel for an application or updates the status and settings of the APNs VoIP channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                APNSVoipChannelRequest:
                  $ref: '#/components/schemas/APNSVoipChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/apns_voip_sandbox:
    delete:
      operationId: DeleteApnsVoipSandboxChannel
      description: |-
        Disables the APNs VoIP sandbox channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetApnsVoipSandboxChannel
      description: |-
        Retrieves information about the status and settings of the APNs VoIP sandbox channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateApnsVoipSandboxChannel
      description: |-
        Enables the APNs VoIP sandbox channel for an application or updates the status and settings of the APNs VoIP sandbox channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                APNSVoipSandboxChannelRequest:
                  $ref: '#/components/schemas/APNSVoipSandboxChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}:
    delete:
      operationId: DeleteApp
      description: |-
        Deletes an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetApp
      description: |-
        Retrieves information about an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/baidu:
    delete:
      operationId: DeleteBaiduChannel
      description: |-
        Disables the Baidu channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetBaiduChannel
      description: |-
        Retrieves information about the status and settings of the Baidu channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateBaiduChannel
      description: |-
        Enables the Baidu channel for an application or updates the status and settings of the Baidu channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                BaiduChannelRequest:
                  $ref: '#/components/schemas/BaiduChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/campaigns/{CampaignId}:
    delete:
      operationId: DeleteCampaign
      description: |-
        Deletes a campaign from an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetCampaign
      description: |-
        Retrieves information about the status, configuration, and other settings for a campaign.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateCampaign
      description: |-
        Updates the configuration and other settings for a campaign.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WriteCampaignRequest:
                  $ref: '#/components/schemas/WriteCampaignRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/email:
    delete:
      operationId: DeleteEmailChannel
      description: |-
        Disables the email channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEmailChannel
      description: |-
        Retrieves information about the status and settings of the email channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateEmailChannel
      description: |-
        Enables the email channel for an application or updates the status and settings of the email channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EmailChannelRequest:
                  $ref: '#/components/schemas/EmailChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/endpoints/{EndpointId}:
    delete:
      operationId: DeleteEndpoint
      description: |-
        Deletes an endpoint from an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: EndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEndpoint
      description: |-
        Retrieves information about the settings and attributes of a specific endpoint for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: EndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateEndpoint
      description: |-
        Creates a new endpoint for an application or updates the settings and attributes of an existing endpoint for an application. You can also use this operation to define custom attributes for an endpoint. If an update includes one or more values for a custom attribute, Amazon Pinpoint replaces (overwrites) any existing values with the new values.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: EndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EndpointRequest:
                  $ref: '#/components/schemas/EndpointRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/eventstream:
    delete:
      operationId: DeleteEventStream
      description: |-
        Deletes the event stream for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetEventStream
      description: |-
        Retrieves information about the event stream settings for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    post:
      operationId: PutEventStream
      description: |-
        Creates a new event stream for an application or updates the settings of an existing event stream for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WriteEventStream:
                  $ref: '#/components/schemas/WriteEventStream'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/gcm:
    delete:
      operationId: DeleteGcmChannel
      description: |-
        Disables the GCM channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetGcmChannel
      description: |-
        Retrieves information about the status and settings of the GCM channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateGcmChannel
      description: |-
        Enables the GCM channel for an application or updates the status and settings of the GCM channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                GCMChannelRequest:
                  $ref: '#/components/schemas/GCMChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys/{JourneyId}:
    delete:
      operationId: DeleteJourney
      description: |-
        Deletes a journey from an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetJourney
      description: |-
        Retrieves information about the status, configuration, and other settings for a journey.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateJourney
      description: |-
        Updates the configuration and other settings for a journey.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WriteJourneyRequest:
                  $ref: '#/components/schemas/WriteJourneyRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '409':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/recommenders/{RecommenderId}:
    delete:
      operationId: DeleteRecommenderConfiguration
      description: |-
        Deletes an Amazon Pinpoint configuration for a recommender model.
      parameters:
      - name: RecommenderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetRecommenderConfiguration
      description: |-
        Retrieves information about an Amazon Pinpoint configuration for a recommender model.
      parameters:
      - name: RecommenderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateRecommenderConfiguration
      description: |-
        Updates an Amazon Pinpoint configuration for a recommender model.
      parameters:
      - name: RecommenderId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UpdateRecommenderConfiguration:
                  $ref: '#/components/schemas/UpdateRecommenderConfigurationShape'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/segments/{SegmentId}:
    delete:
      operationId: DeleteSegment
      description: |-
        Deletes a segment from an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SegmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetSegment
      description: |-
        Retrieves information about the configuration, dimension, and other settings for a specific segment that's associated with an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SegmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateSegment
      description: |-
        Creates a new segment for an application or updates the configuration, dimension, and other settings for an existing segment that's associated with an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SegmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WriteSegmentRequest:
                  $ref: '#/components/schemas/WriteSegmentRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/sms:
    delete:
      operationId: DeleteSmsChannel
      description: |-
        Disables the SMS channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetSmsChannel
      description: |-
        Retrieves information about the status and settings of the SMS channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateSmsChannel
      description: |-
        Enables the SMS channel for an application or updates the status and settings of the SMS channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SMSChannelRequest:
                  $ref: '#/components/schemas/SMSChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/users/{UserId}:
    delete:
      operationId: DeleteUserEndpoints
      description: |-
        Deletes all the endpoints that are associated with a specific user ID.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetUserEndpoints
      description: |-
        Retrieves information about all the endpoints that are associated with a specific user ID.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: UserId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels/voice:
    delete:
      operationId: DeleteVoiceChannel
      description: |-
        Disables the voice channel for an application and deletes any existing settings for the channel.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    get:
      operationId: GetVoiceChannel
      description: |-
        Retrieves information about the status and settings of the voice channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateVoiceChannel
      description: |-
        Enables the voice channel for an application or updates the status and settings of the voice channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VoiceChannelRequest:
                  $ref: '#/components/schemas/VoiceChannelRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/kpis/daterange/{KpiName}:
    get:
      operationId: GetApplicationDateRangeKpi
      description: |-
        Retrieves (queries) pre-aggregated data for a standard metric that applies to an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: end-time
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__timestampIso8601'
      - name: KpiName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: start-time
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__timestampIso8601'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/settings:
    get:
      operationId: GetApplicationSettings
      description: |-
        Retrieves information about the settings for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
    put:
      operationId: UpdateApplicationSettings
      description: |-
        Updates the settings for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                WriteApplicationSettingsRequest:
                  $ref: '#/components/schemas/WriteApplicationSettingsRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/campaigns/{CampaignId}/activities:
    get:
      operationId: GetCampaignActivities
      description: |-
        Retrieves information about all the activities for a campaign.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/campaigns/{CampaignId}/kpis/daterange/{KpiName}:
    get:
      operationId: GetCampaignDateRangeKpi
      description: |-
        Retrieves (queries) pre-aggregated data for a standard metric that applies to a campaign.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: end-time
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__timestampIso8601'
      - name: KpiName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: start-time
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__timestampIso8601'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions/{Version}:
    get:
      operationId: GetCampaignVersion
      description: |-
        Retrieves information about the status, configuration, and other settings for a specific version of a campaign.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: Version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/campaigns/{CampaignId}/versions:
    get:
      operationId: GetCampaignVersions
      description: |-
        Retrieves information about the status, configuration, and other settings for all versions of a campaign.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: CampaignId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/channels:
    get:
      operationId: GetChannels
      description: |-
        Retrieves information about the history and status of each channel for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/jobs/export/{JobId}:
    get:
      operationId: GetExportJob
      description: |-
        Retrieves information about the status and settings of a specific export job for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/jobs/import/{JobId}:
    get:
      operationId: GetImportJob
      description: |-
        Retrieves information about the status and settings of a specific import job for an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JobId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/endpoints/{EndpointId}/inappmessages:
    get:
      operationId: GetInAppMessages
      description: |-
        Retrieves the in-app messages targeted for the provided endpoint ID.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: EndpointId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys/{JourneyId}/kpis/daterange/{KpiName}:
    get:
      operationId: GetJourneyDateRangeKpi
      description: |-
        Retrieves (queries) pre-aggregated data for a standard engagement metric that applies to a journey.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: end-time
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__timestampIso8601'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: KpiName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: start-time
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__timestampIso8601'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys/{JourneyId}/activities/{JourneyActivityId}/execution-metrics:
    get:
      operationId: GetJourneyExecutionActivityMetrics
      description: |-
        Retrieves (queries) pre-aggregated data for a standard execution metric that applies to a journey activity.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyActivityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys/{JourneyId}/execution-metrics:
    get:
      operationId: GetJourneyExecutionMetrics
      description: |-
        Retrieves (queries) pre-aggregated data for a standard execution metric that applies to a journey.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys/{JourneyId}/runs/{RunId}/activities/{JourneyActivityId}/execution-metrics:
    get:
      operationId: GetJourneyRunExecutionActivityMetrics
      description: |-
        Retrieves (queries) pre-aggregated data for a standard run execution metric that applies to a journey activity.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyActivityId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: RunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys/{JourneyId}/runs/{RunId}/execution-metrics:
    get:
      operationId: GetJourneyRunExecutionMetrics
      description: |-
        Retrieves (queries) pre-aggregated data for a standard run execution metric that applies to a journey.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: RunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys/{JourneyId}/runs:
    get:
      operationId: GetJourneyRuns
      description: |-
        Provides information about the runs of a journey.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/export:
    get:
      operationId: GetSegmentExportJobs
      description: |-
        Retrieves information about the status and settings of the export jobs for a segment.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: SegmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/segments/{SegmentId}/jobs/import:
    get:
      operationId: GetSegmentImportJobs
      description: |-
        Retrieves information about the status and settings of the import jobs for a segment.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: SegmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/segments/{SegmentId}/versions/{Version}:
    get:
      operationId: GetSegmentVersion
      description: |-
        Retrieves information about the configuration, dimension, and other settings for a specific version of a segment that's associated with an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: SegmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: Version
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/segments/{SegmentId}/versions:
    get:
      operationId: GetSegmentVersions
      description: |-
        Retrieves information about the configuration, dimension, and other settings for all the versions of a specific segment that's associated with an application.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: SegmentId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/tags/{ResourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Retrieves all the tags (keys and values) that are associated with an application, campaign, message template, or segment.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
    post:
      operationId: TagResource
      description: |-
        Adds one or more tags (keys and values) to an application, campaign, message template, or segment.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TagsModel:
                  $ref: '#/components/schemas/TagsModel'
      responses:
        '204': {}
    delete:
      operationId: UntagResource
      description: |-
        Removes one or more tags (keys and values) from an application, campaign, message template, or segment.
      parameters:
      - name: ResourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/ListOf__string'
      responses:
        '204': {}
  /v1/templates/{TemplateName}/{TemplateType}/versions:
    get:
      operationId: ListTemplateVersions
      description: |-
        Retrieves information about all the versions of a specific message template.
      parameters:
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: TemplateType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/templates:
    get:
      operationId: ListTemplates
      description: |-
        Retrieves information about all the message templates that are associated with your Amazon Pinpoint account.
      parameters:
      - name: next-token
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: page-size
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: prefix
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      - name: template-type
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/__string'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/phone/number/validate:
    post:
      operationId: PhoneNumberValidate
      description: |-
        Retrieves information about a phone number.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                NumberValidateRequest:
                  $ref: '#/components/schemas/NumberValidateRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/events:
    post:
      operationId: PutEvents
      description: |-
        Creates a new event to record for endpoints, or creates or updates endpoint data that existing events are associated with.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EventsRequest:
                  $ref: '#/components/schemas/EventsRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/attributes/{AttributeType}:
    put:
      operationId: RemoveAttributes
      description: |-
        Removes one or more custom attributes, of the same attribute type, from the application. Existing endpoints still have the attributes but Amazon Pinpoint will stop capturing new or changed values for these attributes.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: AttributeType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                UpdateAttributesRequest:
                  $ref: '#/components/schemas/UpdateAttributesRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/messages:
    post:
      operationId: SendMessages
      description: |-
        Creates and sends a direct message.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                MessageRequest:
                  $ref: '#/components/schemas/MessageRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/otp:
    post:
      operationId: SendOTPMessage
      description: |-
        Send an OTP message
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SendOTPMessageRequestParameters:
                  $ref: '#/components/schemas/SendOTPMessageRequestParameters'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/users-messages:
    post:
      operationId: SendUsersMessages
      description: |-
        Creates and sends a message to a list of users.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                SendUsersMessageRequest:
                  $ref: '#/components/schemas/SendUsersMessageRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/endpoints:
    put:
      operationId: UpdateEndpointsBatch
      description: |-
        Creates a new batch of endpoints for an application or updates the settings and attributes of a batch of existing endpoints for an application. You can also use this operation to define custom attributes for a batch of endpoints. If an update includes one or more values for a custom attribute, Amazon Pinpoint replaces (overwrites) any existing values with the new values.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                EndpointBatchRequest:
                  $ref: '#/components/schemas/EndpointBatchRequest'
      responses:
        '202': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/journeys/{JourneyId}/state:
    put:
      operationId: UpdateJourneyState
      description: |-
        Cancels (stops) an active journey.
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: JourneyId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                JourneyStateRequest:
                  $ref: '#/components/schemas/JourneyStateRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/templates/{TemplateName}/{TemplateType}/active-version:
    put:
      operationId: UpdateTemplateActiveVersion
      description: |-
        Changes the status of a specific version of a message template to _active_.
      parameters:
      - name: TemplateName
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      - name: TemplateType
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                TemplateActiveVersionRequest:
                  $ref: '#/components/schemas/TemplateActiveVersionRequest'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
  /v1/apps/{ApplicationId}/verify-otp:
    post:
      operationId: VerifyOTPMessage
      description: |-
        Verify an OTP
      parameters:
      - name: ApplicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/__string'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                VerifyOTPMessageRequestParameters:
                  $ref: '#/components/schemas/VerifyOTPMessageRequestParameters'
      responses:
        '200': {}
        '400':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestException'
        '403':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenException'
        '500':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerErrorException'
        '405':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MethodNotAllowedException'
        '404':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundException'
        '413':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PayloadTooLargeException'
        '429':
          description: |-
            Provides information about an API request or response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyRequestsException'
components:
  schemas:
    ADMChannelRequest:
      type: object
      properties:
        ClientId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Client ID that you received from Amazon to send messages
            by using ADM.
        ClientSecret:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Client Secret that you received from Amazon to send messages
            by using ADM.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the ADM channel for the application.
      required:
      - ClientId
      - ClientSecret
      description: Specifies the status and settings of the ADM (Amazon Device Messaging)
        channel for an application.
    ADMChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the ADM channel
            applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the ADM channel was enabled.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the ADM channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the ADM channel. This property
            is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the ADM channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the ADM channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the ADM channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the ADM channel, this value is ADM.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the ADM channel.
      required:
      - Platform
      description: Provides information about the status and settings of the ADM (Amazon
        Device Messaging) channel for an application.
    ADMMessage:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The action to occur if the recipient taps the push notification.\
            \ Valid values are:\n\n  * OPEN_APP - Your app opens or it becomes the\
            \ foreground app if it was sent to the background. This is the default\
            \ action.\n\n  * DEEP_LINK - Your app opens and displays a designated\
            \ user interface in the app. This action uses the deep-linking features\
            \ of the Android platform.\n\n  * URL - The default mobile browser on\
            \ the recipient's device opens and loads the web page at a URL that you\
            \ specify."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the notification message.
        ConsolidationKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: An arbitrary string that indicates that multiple messages are
            logically the same and that Amazon Device Messaging (ADM) can drop previously
            enqueued messages in favor of this message.
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: The JSON data payload to use for the push notification, if
            the notification is a silent push notification. This payload is added
            to the data.pinpoint.jsonBody object of the notification.
        ExpiresAfter:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The amount of time, in seconds, that ADM should store the message
            if the recipient's device is offline. Amazon Pinpoint specifies this value
            in the expiresAfter parameter when it sends the notification message to
            ADM.
        IconReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The icon image name of the asset saved in your app.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the large icon image to display in the content view
            of the push notification.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of an image to display in the push notification.
        MD5:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The base64-encoded, MD5 checksum of the value specified by
            the Data property. ADM uses the MD5 value to verify the integrity of the
            data.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for the
            notification message. If specified, this value overrides all other content
            for the message.
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the notification is a silent push notification,
            which is a push notification that doesn't display on a recipient's device.
            Silent push notifications can be used for cases such as updating an app's
            configuration or supporting phone home functionality.
        SmallImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the small icon image to display in the status bar
            and the content view of the push notification.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The sound to play when the recipient receives the push notification.
            You can use the default stream or specify the file name of a sound resource
            that's bundled in your app. On an Android platform, the sound file must
            reside in /res/raw/.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The default message variables to use in the notification message.
            You can override the default variables with individual address variables.
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title to display above the notification message on the
            recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL to open in the recipient's default mobile browser,
            if a recipient taps the push notification and the value of the Action
            property is URL.
      description: Specifies the settings for a one-time message that's sent directly
        to an endpoint through the ADM (Amazon Device Messaging) channel.
    APNSChannelRequest:
      type: object
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The bundle identifier that's assigned to your iOS app. This
            identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The APNs client certificate that you received from Apple, if
            you want Amazon Pinpoint to communicate with APNs by using an APNs certificate.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method that you want Amazon Pinpoint
            to use when authenticating with APNs, key or certificate.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the APNs channel for the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The private key for the APNs client certificate that you want
            Amazon Pinpoint to use to communicate with APNs.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier that's assigned to your Apple developer account
            team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key identifier that's assigned to your APNs signing key,
            if you want Amazon Pinpoint to communicate with APNs by using APNs tokens.
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) channel for an application.
    APNSChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the APNs channel
            applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the APNs channel was enabled.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method that Amazon Pinpoint uses
            to authenticate with APNs for this channel, key or certificate.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        HasTokenKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs channel is configured to communicate
            with APNs by using APNs tokens. To provide an authentication key for APNs
            tokens, set the TokenKey property of the channel.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the APNs channel. This property
            is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the APNs channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the APNs channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the APNs channel, this value is APNS.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the APNs channel.
      required:
      - Platform
      description: Provides information about the status and settings of the APNs
        (Apple Push Notification service) channel for an application.
    APNSMessage:
      type: object
      properties:
        APNSPushType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The type of push notification to send. Valid values are:\n\
            \n  * alert - For a standard notification that's displayed on recipients'\
            \ devices and prompts a recipient to interact with the notification.\n\
            \n  * background - For a silent notification that delivers content in\
            \ the background and isn't displayed on recipients' devices.\n\n  * complication\
            \ - For a notification that contains update information for an app’s complication\
            \ timeline.\n\n  * fileprovider - For a notification that signals changes\
            \ to a File Provider extension.\n\n  * mdm - For a notification that tells\
            \ managed devices to contact the MDM server.\n\n  * voip - For a notification\
            \ that provides information about an incoming VoIP call.\n\nAmazon Pinpoint\
            \ specifies this value in the apns-push-type request header when it sends\
            \ the notification message to APNs. If you don't specify a value for this\
            \ property, Amazon Pinpoint sets the value to alert or background automatically,\
            \ based on the value that you specify for the SilentPush or RawContent\
            \ property of the message.\n\nFor more information about the apns-push-type\
            \ request header, see [Sending Notification Requests to APNs](https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/sending_notification_requests_to_apns)\
            \ on the Apple Developer website."
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The action to occur if the recipient taps the push notification.\
            \ Valid values are:\n\n  * OPEN_APP - Your app opens or it becomes the\
            \ foreground app if it was sent to the background. This is the default\
            \ action.\n\n  * DEEP_LINK - Your app opens and displays a designated\
            \ user interface in the app. This setting uses the deep-linking features\
            \ of the iOS platform.\n\n  * URL - The default mobile browser on the\
            \ recipient's device opens and loads the web page at a URL that you specify."
        Badge:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The key that indicates whether and how to modify the badge
            of your app's icon when the recipient receives the push notification.
            If this key isn't included in the dictionary, the badge doesn't change.
            To remove the badge, set this value to 0.
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the notification message.
        Category:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key that indicates the notification type for the push notification.
            This key is a value that's defined by the identifier property of one of
            your app's registered categories.
        CollapseId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'An arbitrary identifier that, if assigned to multiple messages,
            APNs uses to coalesce the messages into a single push notification instead
            of delivering each message individually. This value can''t exceed 64 bytes.


            Amazon Pinpoint specifies this value in the apns-collapse-id request header
            when it sends the notification message to APNs.'
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: The JSON payload to use for a silent push notification. This
            payload is added to the data.pinpoint.jsonBody object of the notification.
        MediaUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of an image or video to display in the push notification.
        PreferredAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The authentication method that you want Amazon Pinpoint to
            use when authenticating with APNs, CERTIFICATE or TOKEN.
        Priority:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'para>5 - Low priority, the notification might be delayed,
            delivered as part of a group, or throttled.


            /listitem>


            * 10 - High priority, the notification is sent immediately. This is the
            default value. A high priority notification should trigger an alert, play
            a sound, or badge your app''s icon on the recipient''s device.


            /para>


            Amazon Pinpoint specifies this value in the apns-priority request header
            when it sends the notification message to APNs.


            The equivalent values for Firebase Cloud Messaging (FCM), formerly Google
            Cloud Messaging (GCM), are normal, for 5, and high, for 10. If you specify
            an FCM value for this property, Amazon Pinpoint accepts and converts the
            value to the corresponding APNs value.'
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The raw, JSON-formatted string to use as the payload for the
            notification message. If specified, this value overrides all other content
            for the message.


            If you specify the raw content of an APNs push notification, the message
            payload has to include the content-available key. The value of the content-available
            key has to be an integer, and can only be 0 or 1. If you''re sending a
            standard notification, set the value of content-available to 0. If you''re
            sending a silent (background) notification, set the value of content-available
            to 1. Additionally, silent notification payloads can''t include the alert,
            badge, or sound keys. For more information, see [Generating a Remote Notification](https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/generating_a_remote_notification)
            and [Pushing Background Updates to Your App](https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/pushing_background_updates_to_your_app)
            on the Apple Developer website.'
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'Specifies whether the notification is a silent push notification.
            A silent (or background) push notification isn''t displayed on recipients''
            devices. You can use silent push notifications to make small updates to
            your app, or to display messages in an in-app message center.


            Amazon Pinpoint uses this property to determine the correct value for
            the apns-push-type request header when it sends the notification message
            to APNs. If you specify a value of true for this property, Amazon Pinpoint
            sets the value for the apns-push-type header field to background.


            If you specify the raw content of an APNs push notification, the message
            payload has to include the content-available key. For silent (background)
            notifications, set the value of content-available to 1. Additionally,
            the message payload for a silent notification can''t include the alert,
            badge, or sound keys. For more information, see [Generating a Remote Notification](https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/generating_a_remote_notification)
            and [Pushing Background Updates to Your App](https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/pushing_background_updates_to_your_app)
            on the Apple Developer website.


            Apple has indicated that they will throttle "excessive" background notifications
            based on current traffic volumes. To prevent your notifications being
            throttled, Apple recommends that you send no more than 3 silent push notifications
            to each recipient per hour.'
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key for the sound to play when the recipient receives the
            push notification. The value for this key is the name of a sound file
            in your app's main bundle or the Library/Sounds folder in your app's data
            container. If the sound file can't be found or you specify default for
            the value, the system plays the default alert sound.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The default message variables to use in the notification message.
            You can override these default variables with individual address variables.
        ThreadId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key that represents your app-specific identifier for grouping
            notifications. If you provide a Notification Content app extension, you
            can use this value to group your notifications together.
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The amount of time, in seconds, that APNs should store and
            attempt to deliver the push notification, if the service is unable to
            deliver the notification the first time. If this value is 0, APNs treats
            the notification as if it expires immediately and the service doesn''t
            store or try to deliver the notification again.


            Amazon Pinpoint specifies this value in the apns-expiration request header
            when it sends the notification message to APNs.'
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title to display above the notification message on the
            recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL to open in the recipient's default mobile browser,
            if a recipient taps the push notification and the value of the Action
            property is URL.
      description: Specifies the settings for a one-time message that's sent directly
        to an endpoint through the APNs (Apple Push Notification service) channel.
    APNSPushNotificationTemplate:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The action to occur if a recipient taps a push notification\
            \ that's based on the message template. Valid values are:\n\n  * OPEN_APP\
            \ - Your app opens or it becomes the foreground app if it was sent to\
            \ the background. This is the default action.\n\n  * DEEP_LINK - Your\
            \ app opens and displays a designated user interface in the app. This\
            \ setting uses the deep-linking features of the iOS platform.\n\n  * URL\
            \ - The default mobile browser on the recipient's device opens and loads\
            \ the web page at a URL that you specify."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body to use in push notifications that are based
            on the message template.
        MediaUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of an image or video to display in push notifications
            that are based on the message template.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for push
            notifications that are based on the message template. If specified, this
            value overrides all other content for the message template.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key for the sound to play when the recipient receives a
            push notification that's based on the message template. The value for
            this key is the name of a sound file in your app's main bundle or the
            Library/Sounds folder in your app's data container. If the sound file
            can't be found or you specify default for the value, the system plays
            the default alert sound.
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title to use in push notifications that are based on the
            message template. This title appears above the notification message on
            a recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL to open in the recipient's default mobile browser,
            if a recipient taps a push notification that's based on the message template
            and the value of the Action property is URL.
      description: Specifies channel-specific content and settings for a message template
        that can be used in push notifications that are sent through the APNs (Apple
        Push Notification service) channel.
    APNSSandboxChannelRequest:
      type: object
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The bundle identifier that's assigned to your iOS app. This
            identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The APNs client certificate that you received from Apple, if
            you want Amazon Pinpoint to communicate with the APNs sandbox environment
            by using an APNs certificate.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method that you want Amazon Pinpoint
            to use when authenticating with the APNs sandbox environment, key or certificate.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the APNs sandbox channel for the
            application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The private key for the APNs client certificate that you want
            Amazon Pinpoint to use to communicate with the APNs sandbox environment.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier that's assigned to your Apple developer account
            team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key identifier that's assigned to your APNs signing key,
            if you want Amazon Pinpoint to communicate with the APNs sandbox environment
            by using APNs tokens.
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) sandbox channel for an application.
    APNSSandboxChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the APNs sandbox
            channel applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the APNs sandbox channel was enabled.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method that Amazon Pinpoint uses
            to authenticate with the APNs sandbox environment for this channel, key
            or certificate.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs sandbox channel is enabled for the
            application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        HasTokenKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs sandbox channel is configured to
            communicate with APNs by using APNs tokens. To provide an authentication
            key for APNs tokens, set the TokenKey property of the channel.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the APNs sandbox channel. This
            property is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs sandbox channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the APNs sandbox channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the APNs sandbox channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the APNs sandbox channel, this value is APNS_SANDBOX.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the APNs sandbox channel.
      required:
      - Platform
      description: Provides information about the status and settings of the APNs
        (Apple Push Notification service) sandbox channel for an application.
    APNSVoipChannelRequest:
      type: object
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The bundle identifier that's assigned to your iOS app. This
            identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The APNs client certificate that you received from Apple, if
            you want Amazon Pinpoint to communicate with APNs by using an APNs certificate.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method that you want Amazon Pinpoint
            to use when authenticating with APNs, key or certificate.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the APNs VoIP channel for the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The private key for the APNs client certificate that you want
            Amazon Pinpoint to use to communicate with APNs.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier that's assigned to your Apple developer account
            team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key identifier that's assigned to your APNs signing key,
            if you want Amazon Pinpoint to communicate with APNs by using APNs tokens.
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) VoIP channel for an application.
    APNSVoipChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the APNs VoIP
            channel applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the APNs VoIP channel was enabled.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method that Amazon Pinpoint uses
            to authenticate with APNs for this channel, key or certificate.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs VoIP channel is enabled for the
            application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        HasTokenKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs VoIP channel is configured to communicate
            with APNs by using APNs tokens. To provide an authentication key for APNs
            tokens, set the TokenKey property of the channel.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the APNs VoIP channel. This
            property is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs VoIP channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the APNs VoIP channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the APNs VoIP channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the APNs VoIP channel, this value is APNS_VOIP.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the APNs VoIP channel.
      required:
      - Platform
      description: Provides information about the status and settings of the APNs
        (Apple Push Notification service) VoIP channel for an application.
    APNSVoipSandboxChannelRequest:
      type: object
      properties:
        BundleId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The bundle identifier that's assigned to your iOS app. This
            identifier is used for APNs tokens.
        Certificate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The APNs client certificate that you received from Apple, if
            you want Amazon Pinpoint to communicate with the APNs sandbox environment
            by using an APNs certificate.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method that you want Amazon Pinpoint
            to use when authenticating with the APNs sandbox environment for this
            channel, key or certificate.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs VoIP sandbox channel is enabled
            for the application.
        PrivateKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The private key for the APNs client certificate that you want
            Amazon Pinpoint to use to communicate with the APNs sandbox environment.
        TeamId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier that's assigned to your Apple developer account
            team. This identifier is used for APNs tokens.
        TokenKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The authentication key to use for APNs tokens.
        TokenKeyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The key identifier that's assigned to your APNs signing key,
            if you want Amazon Pinpoint to communicate with the APNs sandbox environment
            by using APNs tokens.
      description: Specifies the status and settings of the APNs (Apple Push Notification
        service) VoIP sandbox channel for an application.
    APNSVoipSandboxChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the APNs VoIP
            sandbox channel applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the APNs VoIP sandbox channel was enabled.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method that Amazon Pinpoint uses
            to authenticate with the APNs sandbox environment for this channel, key
            or certificate.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs VoIP sandbox channel is enabled
            for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        HasTokenKey:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs VoIP sandbox channel is configured
            to communicate with APNs by using APNs tokens. To provide an authentication
            key for APNs tokens, set the TokenKey property of the channel.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the APNs VoIP sandbox channel.
            This property is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the APNs VoIP sandbox channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the APNs VoIP sandbox channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the APNs VoIP sandbox channel was last
            modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the APNs VoIP sandbox channel, this value is APNS_VOIP_SANDBOX.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the APNs VoIP sandbox channel.
      required:
      - Platform
      description: Provides information about the status and settings of the APNs
        (Apple Push Notification service) VoIP sandbox channel for an application.
    Action:
      type: string
      enum:
      - OPEN_APP
      - DEEP_LINK
      - URL
    ActivitiesResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfActivityResponse'
          description: An array of responses, one for each activity that was performed
            by the campaign.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information about the activities that were performed by
        a campaign.
    Activity:
      type: object
      properties:
        CUSTOM:
          allOf:
          - $ref: '#/components/schemas/CustomMessageActivity'
          description: The settings for a custom message activity. This type of activity
            calls an AWS Lambda function or web hook that sends messages to participants.
        ConditionalSplit:
          allOf:
          - $ref: '#/components/schemas/ConditionalSplitActivity'
          description: The settings for a yes/no split activity. This type of activity
            sends participants down one of two paths in a journey, based on conditions
            that you specify.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the activity.
        EMAIL:
          allOf:
          - $ref: '#/components/schemas/EmailMessageActivity'
          description: The settings for an email activity. This type of activity sends
            an email message to participants.
        Holdout:
          allOf:
          - $ref: '#/components/schemas/HoldoutActivity'
          description: The settings for a holdout activity. This type of activity
            stops a journey for a specified percentage of participants.
        MultiCondition:
          allOf:
          - $ref: '#/components/schemas/MultiConditionalSplitActivity'
          description: The settings for a multivariate split activity. This type of
            activity sends participants down one of as many as five paths (including
            a default _Else_ path) in a journey, based on conditions that you specify.
        PUSH:
          allOf:
          - $ref: '#/components/schemas/PushMessageActivity'
          description: The settings for a push notification activity. This type of
            activity sends a push notification to participants.
        RandomSplit:
          allOf:
          - $ref: '#/components/schemas/RandomSplitActivity'
          description: The settings for a random split activity. This type of activity
            randomly sends specified percentages of participants down one of as many
            as five paths in a journey, based on conditions that you specify.
        SMS:
          allOf:
          - $ref: '#/components/schemas/SMSMessageActivity'
          description: The settings for an SMS activity. This type of activity sends
            a text message to participants.
        Wait:
          allOf:
          - $ref: '#/components/schemas/WaitActivity'
          description: The settings for a wait activity. This type of activity waits
            for a certain amount of time or until a specific date and time before
            moving participants to the next activity in a journey.
        ContactCenter:
          allOf:
          - $ref: '#/components/schemas/ContactCenterActivity'
          description: The settings for a connect activity. This type of activity
            initiates a contact center call to participants.
      description: Specifies the configuration and other settings for an activity
        in a journey.
    ActivityResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the campaign
            applies to.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign that the activity applies
            to.
        End:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The actual time, in ISO 8601 format, when the activity was
            marked CANCELLED or COMPLETED.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the activity.
        Result:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Specifies whether the activity succeeded. Possible values are
            SUCCESS and FAIL.
        ScheduledStart:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The scheduled start time, in ISO 8601 format, for the activity.
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The actual start time, in ISO 8601 format, of the activity.
        State:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The current status of the activity. Possible values are: PENDING,
            INITIALIZING, RUNNING, PAUSED, CANCELLED, and COMPLETED.'
        SuccessfulEndpointCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of endpoints that the campaign successfully
            delivered messages to.
        TimezonesCompletedCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of time zones that were completed.
        TimezonesTotalCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of unique time zones that are in the segment
            for the campaign.
        TotalEndpointCount:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of endpoints that the campaign attempted to
            deliver messages to.
        TreatmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign treatment that the activity
            applies to. A treatment is a variation of a campaign that's used for A/B
            testing of a campaign.
        ExecutionMetrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A JSON object that contains metrics relating to the campaign
            execution for this campaign activity. For information about the structure
            and contents of the results, see [Standard Amazon Pinpoint analytics metrics](https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html)
            in the _Amazon Pinpoint Developer Guide_.
      required:
      - ApplicationId
      - CampaignId
      - Id
      description: Provides information about an activity that was performed by a
        campaign.
    AddressConfiguration:
      type: object
      properties:
        BodyOverride:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body to use instead of the default message body.
            This value overrides the default message body.
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          description: The channel to use when sending the message.
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'An object that maps custom attributes to attributes for the
            address and is attached to the message. Attribute names are case sensitive.


            For a push notification, this payload is added to the data.pinpoint object.
            For an email or text message, this payload is added to email/SMS delivery
            receipt event attributes.'
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for the
            message. If specified, this value overrides all other values for the message.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: A map of the message variables to merge with the variables
            specified by properties of the DefaultMessage object. The variables specified
            in this map take precedence over all other variables.
        TitleOverride:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message title to use instead of the default message title.
            This value overrides the default message title.
      description: Specifies address-based configuration settings for a message that's
        sent directly to an endpoint.
    Alignment:
      type: string
      enum:
      - LEFT
      - CENTER
      - RIGHT
    AndroidPushNotificationTemplate:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The action to occur if a recipient taps a push notification\
            \ that's based on the message template. Valid values are:\n\n  * OPEN_APP\
            \ - Your app opens or it becomes the foreground app if it was sent to\
            \ the background. This is the default action.\n\n  * DEEP_LINK - Your\
            \ app opens and displays a designated user interface in the app. This\
            \ action uses the deep-linking features of the Android platform.\n\n \
            \ * URL - The default mobile browser on the recipient's device opens and\
            \ loads the web page at a URL that you specify."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body to use in a push notification that's based
            on the message template.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the large icon image to display in the content view
            of a push notification that's based on the message template.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of an image to display in a push notification that's
            based on the message template.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for a
            push notification that's based on the message template. If specified,
            this value overrides all other content for the message template.
        SmallImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the small icon image to display in the status bar
            and the content view of a push notification that's based on the message
            template.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The sound to play when a recipient receives a push notification
            that's based on the message template. You can use the default stream or
            specify the file name of a sound resource that's bundled in your app.
            On an Android platform, the sound file must reside in /res/raw/.
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title to use in a push notification that's based on the
            message template. This title appears above the notification message on
            a recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL to open in a recipient's default mobile browser, if
            a recipient taps a push notification that's based on the message template
            and the value of the Action property is URL.
      description: Specifies channel-specific content and settings for a message template
        that can be used in push notifications that are sent through the ADM (Amazon
        Device Messaging), Baidu (Baidu Cloud Push), or GCM (Firebase Cloud Messaging,
        formerly Google Cloud Messaging) channel.
    ApplicationDateRangeKpiResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the metric applies
            to.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The last date and time of the date range that was used to filter
            the query results, in extended ISO 8601 format. The date range is inclusive.
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the metric, also referred to as a _key performance
            indicator (KPI)_ , that the data was retrieved for. This value describes
            the associated metric and consists of two or more terms, which are comprised
            of lowercase alphanumeric characters, separated by a hyphen. For a list
            of possible values, see the [Amazon Pinpoint Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html).
        KpiResult:
          allOf:
          - $ref: '#/components/schemas/BaseKpiResult'
          description: An array of objects that contains the results of the query.
            Each object contains the value for the metric and metadata about that
            value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null for the Application
            Metrics resource because the resource returns all results in a single
            page.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The first date and time of the date range that was used to
            filter the query results, in extended ISO 8601 format. The date range
            is inclusive.
      required:
      - ApplicationId
      - EndTime
      - KpiName
      - KpiResult
      - StartTime
      description: Provides the results of a query that retrieved the data for a standard
        metric that applies to an application, and provides information about that
        query.
    ApplicationResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the application.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The display name of the application. This name is displayed
            as the **Project name** on the Amazon Pinpoint console.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that identifies the
            tags that are associated with the application. Each tag consists of a
            required tag key and an associated tag value.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the Application was created.
      required:
      - Arn
      - Id
      - Name
      description: Provides information about an application.
    ApplicationSettingsJourneyLimits:
      type: object
      properties:
        DailyCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The daily number of messages that an endpoint can receive from
            all journeys. The maximum value is 100. If set to 0, this limit will not
            apply.
        TimeframeCap:
          allOf:
          - $ref: '#/components/schemas/JourneyTimeframeCap'
          description: The default maximum number of messages that can be sent to
            an endpoint during the specified timeframe for all journeys.
        TotalCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The default maximum number of messages that a single journey
            can sent to a single endpoint. The maximum value is 100. If set to 0,
            this limit will not apply.
      description: The default sending limits for journeys in the application. To
        override these limits and define custom limits for a specific journey, use
        the Journey resource.
    ApplicationSettingsResource:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        CampaignHook:
          allOf:
          - $ref: '#/components/schemas/CampaignHook'
          description: The settings for the AWS Lambda function to invoke by default
            as a code hook for campaigns in the application. You can use this hook
            to customize segments that are used by campaigns in the application.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the application's
            settings were last modified.
        Limits:
          allOf:
          - $ref: '#/components/schemas/CampaignLimits'
          description: The default sending limits for campaigns in the application.
        QuietTime:
          allOf:
          - $ref: '#/components/schemas/QuietTime'
          description: "The default quiet time for campaigns in the application. Quiet\
            \ time is a specific time range when messages aren't sent to endpoints,\
            \ if all the following conditions are met:\n\n  * The EndpointDemographic.Timezone\
            \ property of the endpoint is set to a valid value.\n\n  * The current\
            \ time in the endpoint's time zone is later than or equal to the time\
            \ specified by the QuietTime.Start property for the application (or a\
            \ campaign or journey that has custom quiet time settings).\n\n  * The\
            \ current time in the endpoint's time zone is earlier than or equal to\
            \ the time specified by the QuietTime.End property for the application\
            \ (or a campaign or journey that has custom quiet time settings).\n\n\
            If any of the preceding conditions isn't met, the endpoint will receive\
            \ messages from a campaign or journey, even if quiet time is enabled."
        JourneyLimits:
          allOf:
          - $ref: '#/components/schemas/ApplicationSettingsJourneyLimits'
          description: The default sending limits for journeys in the application.
            These limits apply to each journey for the application but can be overridden,
            on a per journey basis, with the JourneyLimits resource.
      required:
      - ApplicationId
      description: Provides information about an application, including the default
        settings for an application.
    ApplicationsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfApplicationResponse'
          description: An array of responses, one for each application that was returned.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      description: Provides information about all of your applications.
    AttributeDimension:
      type: object
      properties:
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/AttributeType'
          description: "The type of segment dimension to use. Valid values are:\n\n\
            \  * INCLUSIVE - endpoints that have attributes matching the values are\
            \ included in the segment.\n  * EXCLUSIVE - endpoints that have attributes\
            \ matching the values are excluded in the segment.\n  * CONTAINS - endpoints\
            \ that have attributes' substrings match the values are included in the\
            \ segment.\n  * BEFORE - endpoints with attributes read as ISO_INSTANT\
            \ datetimes before the value are included in the segment.\n  * AFTER -\
            \ endpoints with attributes read as ISO_INSTANT datetimes after the value\
            \ are included in the segment.\n  * ON - endpoints with attributes read\
            \ as ISO_INSTANT dates on the value are included in the segment. Time\
            \ is ignored in this comparison.\n  * BETWEEN - endpoints with attributes\
            \ read as ISO_INSTANT datetimes between the values are included in the\
            \ segment."
        Values:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: The criteria values to use for the segment dimension. Depending
            on the value of the AttributeType property, endpoints are included or
            excluded from the segment if their attribute values match the criteria
            values.
      required:
      - Values
      description: Specifies attribute-based criteria for including or excluding endpoints
        from a segment.
    AttributeType:
      type: string
      enum:
      - INCLUSIVE
      - EXCLUSIVE
      - CONTAINS
      - BEFORE
      - AFTER
      - 'ON'
      - BETWEEN
    AttributesResource:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application.
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The type of attribute or attributes that were removed from\
            \ the endpoints. Valid values are:\n\n  * endpoint-custom-attributes -\
            \ Custom attributes that describe endpoints.\n\n  * endpoint-metric-attributes\
            \ - Custom metrics that your app reports to Amazon Pinpoint for endpoints.\n\
            \n  * endpoint-user-attributes - Custom attributes that describe users."
        Attributes:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: An array that specifies the names of the attributes that were
            removed from the endpoints.
      required:
      - ApplicationId
      - AttributeType
      description: Provides information about the type and the names of attributes
        that were removed from all the endpoints that are associated with an application.
    BadRequestException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    BaiduChannelRequest:
      type: object
      properties:
        ApiKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The API key that you received from the Baidu Cloud Push service
            to communicate with the service.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the Baidu channel for the application.
        SecretKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The secret key that you received from the Baidu Cloud Push
            service to communicate with the service.
      required:
      - ApiKey
      - SecretKey
      description: Specifies the status and settings of the Baidu (Baidu Cloud Push)
        channel for an application.
    BaiduChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the Baidu channel
            applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the Baidu channel was enabled.
        Credential:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The API key that you received from the Baidu Cloud Push service
            to communicate with the service.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the Baidu channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the Baidu channel. This property
            is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the Baidu channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the Baidu channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the Baidu channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the Baidu channel, this value is BAIDU.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the Baidu channel.
      required:
      - Credential
      - Platform
      description: Provides information about the status and settings of the Baidu
        (Baidu Cloud Push) channel for an application.
    BaiduMessage:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The action to occur if the recipient taps the push notification.\
            \ Valid values are:\n\n  * OPEN_APP - Your app opens or it becomes the\
            \ foreground app if it was sent to the background. This is the default\
            \ action.\n\n  * DEEP_LINK - Your app opens and displays a designated\
            \ user interface in the app. This action uses the deep-linking features\
            \ of the Android platform.\n\n  * URL - The default mobile browser on\
            \ the recipient's device opens and loads the web page at a URL that you\
            \ specify."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the notification message.
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: The JSON data payload to use for the push notification, if
            the notification is a silent push notification. This payload is added
            to the data.pinpoint.jsonBody object of the notification.
        IconReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The icon image name of the asset saved in your app.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the large icon image to display in the content view
            of the push notification.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of an image to display in the push notification.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for the
            notification message. If specified, this value overrides all other content
            for the message.
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the notification is a silent push notification,
            which is a push notification that doesn't display on a recipient's device.
            Silent push notifications can be used for cases such as updating an app's
            configuration or supporting phone home functionality.
        SmallImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the small icon image to display in the status bar
            and the content view of the push notification.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The sound to play when the recipient receives the push notification.
            You can use the default stream or specify the file name of a sound resource
            that's bundled in your app. On an Android platform, the sound file must
            reside in /res/raw/.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The default message variables to use in the notification message.
            You can override the default variables with individual address variables.
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The amount of time, in seconds, that the Baidu Cloud Push service
            should store the message if the recipient's device is offline. The default
            value and maximum supported time is 604,800 seconds (7 days).
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title to display above the notification message on the
            recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL to open in the recipient's default mobile browser,
            if a recipient taps the push notification and the value of the Action
            property is URL.
      description: Specifies the settings for a one-time message that's sent directly
        to an endpoint through the Baidu (Baidu Cloud Push) channel.
    BaseKpiResult:
      type: object
      properties:
        Rows:
          allOf:
          - $ref: '#/components/schemas/ListOfResultRow'
          description: An array of objects that provides the results of a query that
            retrieved the data for a standard metric that applies to an application,
            campaign, or journey.
      required:
      - Rows
      description: Provides the results of a query that retrieved the data for a standard
        metric that applies to an application, campaign, or journey.
    ButtonAction:
      type: string
      enum:
      - LINK
      - DEEP_LINK
      - CLOSE
    CampaignCustomMessage:
      type: object
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for the
            message. The maximum size is 5 KB.
      description: Specifies the contents of a message that's sent through a custom
        channel to recipients of a campaign.
    CampaignDateRangeKpiResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the metric applies
            to.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign that the metric applies
            to.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The last date and time of the date range that was used to filter
            the query results, in extended ISO 8601 format. The date range is inclusive.
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the metric, also referred to as a _key performance
            indicator (KPI)_ , that the data was retrieved for. This value describes
            the associated metric and consists of two or more terms, which are comprised
            of lowercase alphanumeric characters, separated by a hyphen. For a list
            of possible values, see the [Amazon Pinpoint Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html).
        KpiResult:
          allOf:
          - $ref: '#/components/schemas/BaseKpiResult'
          description: An array of objects that contains the results of the query.
            Each object contains the value for the metric and metadata about that
            value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null for the Campaign
            Metrics resource because the resource returns all results in a single
            page.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The first date and time of the date range that was used to
            filter the query results, in extended ISO 8601 format. The date range
            is inclusive.
      required:
      - ApplicationId
      - CampaignId
      - EndTime
      - KpiName
      - KpiResult
      - StartTime
      description: Provides the results of a query that retrieved the data for a standard
        metric that applies to a campaign, and provides information about that query.
    CampaignEmailMessage:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the email for recipients whose email clients don't
            render HTML content.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The verified email address to send the email from. The default
            address is the FromAddress specified for the email channel for the application.
        Headers:
          allOf:
          - $ref: '#/components/schemas/ListOfMessageHeader'
          description: The list of [MessageHeaders](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-campaigns-campaign-id.html#apps-application-id-campaigns-campaign-id-model-messageheader)
            for the email. You can have up to 15 MessageHeaders for each email.
        HtmlBody:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the email, in HTML format, for recipients whose
            email clients render HTML content.
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The subject line, or title, of the email.
      description: Specifies the content and "From" address for an email message that's
        sent to recipients of a campaign.
    CampaignEventFilter:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/EventDimensions'
          description: The dimension settings of the event filter for the campaign.
        FilterType:
          allOf:
          - $ref: '#/components/schemas/FilterType'
          description: 'The type of event that causes the campaign to be sent. Valid
            values are: SYSTEM, sends the campaign when a system event occurs; and,
            ENDPOINT, sends the campaign when an endpoint event (Events resource)
            occurs.'
      required:
      - Dimensions
      - FilterType
      description: Specifies the settings for events that cause a campaign to be sent.
    CampaignHook:
      type: object
      properties:
        LambdaFunctionName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name or Amazon Resource Name (ARN) of the AWS Lambda function
            that Amazon Pinpoint invokes to customize a segment for a campaign.
        Mode:
          allOf:
          - $ref: '#/components/schemas/Mode'
          description: "The mode that Amazon Pinpoint uses to invoke the AWS Lambda\
            \ function. Possible values are:\n\n  * FILTER - Invoke the function to\
            \ customize the segment that's used by a campaign.\n\n  * DELIVERY - (Deprecated)\
            \ Previously, invoked the function to send a campaign through a custom\
            \ channel. This functionality is not supported anymore. To send a campaign\
            \ through a custom channel, use the CustomDeliveryConfiguration and CampaignCustomMessage\
            \ objects of the campaign."
        WebUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The web URL that Amazon Pinpoint calls to invoke the AWS Lambda
            function over HTTPS.
      description: Specifies settings for invoking an AWS Lambda function that customizes
        a segment for a campaign.
    CampaignInAppMessage:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body of the notification, the email body or the
            text message.
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          description: In-app message content.
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: Custom config to be sent to client.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          description: In-app message layout.
      description: In-app message configuration.
    CampaignLimits:
      type: object
      properties:
        Daily:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of messages that a campaign can send to
            a single endpoint during a 24-hour period. For an application, this value
            specifies the default limit for the number of messages that campaigns
            and journeys can send to a single endpoint during a 24-hour period. The
            maximum value is 100.
        MaximumDuration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum amount of time, in seconds, that a campaign can
            attempt to deliver a message after the scheduled start time for the campaign.
            The minimum value is 60 seconds.
        MessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of messages that a campaign can send each
            second. For an application, this value specifies the default limit for
            the number of messages that campaigns can send each second. The minimum
            value is 1. The maximum value is 20,000.
        Total:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of messages that a campaign can send to
            a single endpoint during the course of the campaign. If a campaign recurs,
            this setting applies to all runs of the campaign. The maximum value is
            100.
        Session:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum total number of messages that the campaign can
            send per user session.
      description: For a campaign, specifies limits on the messages that the campaign
        can send. For an application, specifies the default limits for messages that
        campaigns in the application can send.
    CampaignResponse:
      type: object
      properties:
        AdditionalTreatments:
          allOf:
          - $ref: '#/components/schemas/ListOfTreatmentResource'
          description: An array of responses, one for each treatment that you defined
            for the campaign, in addition to the default treatment.
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the campaign
            applies to.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the campaign.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the campaign was created.
        CustomDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/CustomDeliveryConfiguration'
          description: The delivery configuration settings for sending the campaign
            through a custom channel.
        DefaultState:
          allOf:
          - $ref: '#/components/schemas/CampaignState'
          description: The current status of the campaign's default treatment. This
            value exists only for campaigns that have more than one treatment.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the campaign.
        HoldoutPercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The allocated percentage of users (segment members) who shouldn't
            receive messages from the campaign.
        Hook:
          allOf:
          - $ref: '#/components/schemas/CampaignHook'
          description: The settings for the AWS Lambda function to use as a code hook
            for the campaign. You can use this hook to customize the segment that's
            used by the campaign.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign.
        IsPaused:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the campaign is paused. A paused campaign
            doesn't run unless you resume it by changing this value to false.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the campaign was last modified.
        Limits:
          allOf:
          - $ref: '#/components/schemas/CampaignLimits'
          description: The messaging limits for the campaign.
        MessageConfiguration:
          allOf:
          - $ref: '#/components/schemas/MessageConfiguration'
          description: The message configuration settings for the campaign.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the campaign.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/Schedule'
          description: The schedule settings for the campaign.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment that's associated with
            the campaign.
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The version number of the segment that's associated with the
            campaign.
        State:
          allOf:
          - $ref: '#/components/schemas/CampaignState'
          description: The current status of the campaign.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that identifies the
            tags that are associated with the campaign. Each tag consists of a required
            tag key and an associated tag value.
        TemplateConfiguration:
          allOf:
          - $ref: '#/components/schemas/TemplateConfiguration'
          description: The message template that’s used for the campaign.
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the default treatment for the campaign.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom name of the default treatment for the campaign,
            if the campaign has multiple treatments. A _treatment_ is a variation
            of a campaign that's used for A/B testing.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The version number of the campaign.
        Priority:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Defines the priority of the campaign, used to decide the order
            of messages displayed to user if there are multiple messages scheduled
            to be displayed at the same moment.
      required:
      - ApplicationId
      - Arn
      - CreationDate
      - Id
      - LastModifiedDate
      - SegmentId
      - SegmentVersion
      description: Provides information about the status, configuration, and other
        settings for a campaign.
    CampaignSmsMessage:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the SMS message.
        MessageType:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: The SMS message type. Valid values are TRANSACTIONAL (for messages
            that are critical or time-sensitive, such as a one-time passwords) and
            PROMOTIONAL (for messsages that aren't critical or time-sensitive, such
            as marketing messages).
        OriginationNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The long code to send the SMS message from. This value should
            be one of the dedicated long codes that's assigned to your AWS account.
            Although it isn't required, we recommend that you specify the long code
            using an E.164 format to ensure prompt and accurate delivery of the message.
            For example, +12065550100.
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The sender ID to display on recipients' devices when they receive
            the SMS message.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The entity ID or Principal Entity (PE) id received from the
            regulatory body for sending SMS in your country.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The template ID received from the regulatory body for sending
            SMS in your country.
      description: Specifies the content and settings for an SMS message that's sent
        to recipients of a campaign.
    CampaignState:
      type: object
      properties:
        CampaignStatus:
          allOf:
          - $ref: '#/components/schemas/CampaignStatus'
          description: 'The current status of the campaign, or the current status
            of a treatment that belongs to an A/B test campaign.


            If a campaign uses A/B testing, the campaign has a status of COMPLETED
            only if all campaign treatments have a status of COMPLETED. If you delete
            the segment that''s associated with a campaign, the campaign fails and
            has a status of DELETED.'
      description: Provides information about the status of a campaign.
    CampaignStatus:
      type: string
      enum:
      - SCHEDULED
      - EXECUTING
      - PENDING_NEXT_RUN
      - COMPLETED
      - PAUSED
      - DELETED
      - INVALID
    CampaignsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfCampaignResponse'
          description: An array of responses, one for each campaign that's associated
            with the application.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information about the configuration and other settings
        for all the campaigns that are associated with an application.
    ChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the channel was
            enabled.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the channel. This property is
            retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the channel was
            last modified.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the channel.
      description: Provides information about the general settings and status of a
        channel for an application.
    ChannelType:
      type: string
      enum:
      - PUSH
      - GCM
      - APNS
      - APNS_SANDBOX
      - APNS_VOIP
      - APNS_VOIP_SANDBOX
      - ADM
      - SMS
      - VOICE
      - EMAIL
      - BAIDU
      - CUSTOM
      - IN_APP
    ChannelsResponse:
      type: object
      properties:
        Channels:
          allOf:
          - $ref: '#/components/schemas/MapOfChannelResponse'
          description: A map that contains a multipart response for each channel.
            For each item in this object, the ChannelType is the key and the Channel
            is the value.
      required:
      - Channels
      description: Provides information about the general settings and status of all
        channels for an application, including channels that aren't enabled for the
        application.
    ClosedDays:
      type: object
      properties:
        EMAIL:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          description: Rules for the Email channel.
        SMS:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          description: Rules for the SMS channel.
        PUSH:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          description: Rules for the Push channel.
        VOICE:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          description: Rules for the Voice channel.
        CUSTOM:
          allOf:
          - $ref: '#/components/schemas/ListOfClosedDaysRules'
          description: Rules for the Custom channel.
      description: The time when a journey will not send messages. QuietTime should
        be configured first and SendingSchedule should be set to true.
    ClosedDaysRule:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the closed day rule.
        StartDateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Start DateTime ISO 8601 format
        EndDateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: End DateTime ISO 8601 format
      description: Specifies the rule settings for when messages can't be sent.
    Condition:
      type: object
      properties:
        Conditions:
          allOf:
          - $ref: '#/components/schemas/ListOfSimpleCondition'
          description: The conditions to evaluate for the activity.
        Operator:
          allOf:
          - $ref: '#/components/schemas/Operator'
          description: Specifies how to handle multiple conditions for the activity.
            For example, if you specify two conditions for an activity, whether both
            or only one of the conditions must be met for the activity to be performed.
      description: Specifies the conditions to evaluate for an activity in a journey,
        and how to evaluate those conditions.
    ConditionalSplitActivity:
      type: object
      properties:
        Condition:
          allOf:
          - $ref: '#/components/schemas/Condition'
          description: The conditions that define the paths for the activity, and
            the relationship between the conditions.
        EvaluationWaitTime:
          allOf:
          - $ref: '#/components/schemas/WaitTime'
          description: The amount of time to wait before determining whether the conditions
            are met, or the date and time when Amazon Pinpoint determines whether
            the conditions are met.
        FalseActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the activity to perform if the conditions
            aren't met.
        TrueActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the activity to perform if the conditions
            are met.
      description: 'Specifies the settings for a yes/no split activity in a journey.
        This type of activity sends participants down one of two paths in a journey,
        based on conditions that you specify.


        To create yes/no split activities that send participants down different paths
        based on push notification events (such as Open or Received events), your
        mobile app has to specify the User ID and Endpoint ID values. For more information,
        see [Integrating Amazon Pinpoint with your application](https://docs.aws.amazon.com/pinpoint/latest/developerguide/integrate.html)
        in the _Amazon Pinpoint Developer Guide_.'
    ConflictException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    ContactCenterActivity:
      type: object
      properties:
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform after
            the this activity.
    CreateAppRequest:
      type: object
      properties:
        CreateApplicationRequest:
          $ref: '#/components/schemas/CreateApplicationRequest'
      required:
      - CreateApplicationRequest
    CreateAppResponse:
      type: object
      properties:
        ApplicationResponse:
          $ref: '#/components/schemas/ApplicationResponse'
      required:
      - ApplicationResponse
    CreateApplicationRequest:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The display name of the application. This name is displayed
            as the **Project name** on the Amazon Pinpoint console.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that defines the
            tags to associate with the application. Each tag consists of a required
            tag key and an associated tag value.
      required:
      - Name
      description: Specifies the display name of an application and the tags to associate
        with the application.
    CreateCampaignRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        WriteCampaignRequest:
          $ref: '#/components/schemas/WriteCampaignRequest'
      required:
      - ApplicationId
      - WriteCampaignRequest
    CreateCampaignResponse:
      type: object
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
    CreateEmailTemplateRequest:
      type: object
      properties:
        EmailTemplateRequest:
          $ref: '#/components/schemas/EmailTemplateRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
      required:
      - EmailTemplateRequest
      - TemplateName
    CreateEmailTemplateResponse:
      type: object
      properties:
        CreateTemplateMessageBody:
          $ref: '#/components/schemas/CreateTemplateMessageBody'
      required:
      - CreateTemplateMessageBody
    CreateExportJobRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        ExportJobRequest:
          $ref: '#/components/schemas/ExportJobRequest'
      required:
      - ApplicationId
      - ExportJobRequest
    CreateExportJobResponse:
      type: object
      properties:
        ExportJobResponse:
          $ref: '#/components/schemas/ExportJobResponse'
      required:
      - ExportJobResponse
    CreateImportJobRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        ImportJobRequest:
          $ref: '#/components/schemas/ImportJobRequest'
      required:
      - ApplicationId
      - ImportJobRequest
    CreateImportJobResponse:
      type: object
      properties:
        ImportJobResponse:
          $ref: '#/components/schemas/ImportJobResponse'
      required:
      - ImportJobResponse
    CreateInAppTemplateRequest:
      type: object
      properties:
        InAppTemplateRequest:
          $ref: '#/components/schemas/InAppTemplateRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
      required:
      - InAppTemplateRequest
      - TemplateName
    CreateInAppTemplateResponse:
      type: object
      properties:
        TemplateCreateMessageBody:
          $ref: '#/components/schemas/TemplateCreateMessageBody'
      required:
      - TemplateCreateMessageBody
    CreateJourneyRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        WriteJourneyRequest:
          $ref: '#/components/schemas/WriteJourneyRequest'
      required:
      - ApplicationId
      - WriteJourneyRequest
    CreateJourneyResponse:
      type: object
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
    CreatePushTemplateRequest:
      type: object
      properties:
        PushNotificationTemplateRequest:
          $ref: '#/components/schemas/PushNotificationTemplateRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
      required:
      - PushNotificationTemplateRequest
      - TemplateName
    CreatePushTemplateResponse:
      type: object
      properties:
        CreateTemplateMessageBody:
          $ref: '#/components/schemas/CreateTemplateMessageBody'
      required:
      - CreateTemplateMessageBody
    CreateRecommenderConfigurationRequest:
      type: object
      properties:
        CreateRecommenderConfiguration:
          $ref: '#/components/schemas/CreateRecommenderConfigurationShape'
      required:
      - CreateRecommenderConfiguration
    CreateRecommenderConfigurationResponse:
      type: object
      properties:
        RecommenderConfigurationResponse:
          $ref: '#/components/schemas/RecommenderConfigurationResponse'
      required:
      - RecommenderConfigurationResponse
    CreateRecommenderConfigurationShape:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: "A map of key-value pairs that defines 1-10 custom endpoint\
            \ or user attributes, depending on the value for the RecommendationProviderIdType\
            \ property. Each of these attributes temporarily stores a recommended\
            \ item that's retrieved from the recommender model and sent to an AWS\
            \ Lambda function for additional processing. Each attribute can be used\
            \ as a message variable in a message template.\n\nIn the map, the key\
            \ is the name of a custom attribute and the value is a custom display\
            \ name for that attribute. The display name appears in the **Attribute\
            \ finder** of the template editor on the Amazon Pinpoint console. The\
            \ following restrictions apply to these names:\n\n  * An attribute name\
            \ must start with a letter or number and it can contain up to 50 characters.\
            \ The characters can be letters, numbers, underscores (_), or hyphens\
            \ (-). Attribute names are case sensitive and must be unique.\n\n  * An\
            \ attribute display name must start with a letter or number and it can\
            \ contain up to 25 characters. The characters can be letters, numbers,\
            \ spaces, underscores (_), or hyphens (-).\n\nThis object is required\
            \ if the configuration invokes an AWS Lambda function (RecommendationTransformerUri)\
            \ to process recommendation data. Otherwise, don't include this object\
            \ in your request."
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'A custom description of the configuration for the recommender
            model. The description can contain up to 128 characters. The characters
            can be letters, numbers, spaces, or the following symbols: _ ; () , ‐.'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom name of the configuration for the recommender model.
            The name must start with a letter or number and it can contain up to 128
            characters. The characters can be letters, numbers, spaces, underscores
            (_), or hyphens (-).
        RecommendationProviderIdType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The type of Amazon Pinpoint ID to associate with unique user\
            \ IDs in the recommender model. This value enables the model to use attribute\
            \ and event data that’s specific to a particular endpoint or user in an\
            \ Amazon Pinpoint application. Valid values are:\n\n  * PINPOINT_ENDPOINT_ID\
            \ - Associate each user in the model with a particular endpoint in Amazon\
            \ Pinpoint. The data is correlated based on endpoint IDs in Amazon Pinpoint.\
            \ This is the default value.\n\n  * PINPOINT_USER_ID - Associate each\
            \ user in the model with a particular user and endpoint in Amazon Pinpoint.\
            \ The data is correlated based on user IDs in Amazon Pinpoint. If you\
            \ specify this value, an endpoint definition in Amazon Pinpoint has to\
            \ specify both a user ID (UserId) and an endpoint ID. Otherwise, messages\
            \ won’t be sent to the user's endpoint."
        RecommendationProviderRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation
            data from the recommender model.
        RecommendationProviderUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the recommender model to
            retrieve recommendation data from. This value must match the ARN of an
            Amazon Personalize campaign.
        RecommendationTransformerUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name or Amazon Resource Name (ARN) of the AWS Lambda function
            to invoke for additional processing of recommendation data that's retrieved
            from the recommender model.
        RecommendationsDisplayName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'A custom display name for the standard endpoint or user attribute
            (RecommendationItems) that temporarily stores recommended items for each
            endpoint or user, depending on the value for the RecommendationProviderIdType
            property. This value is required if the configuration doesn''t invoke
            an AWS Lambda function (RecommendationTransformerUri) to perform additional
            processing of recommendation data.


            This name appears in the **Attribute finder** of the template editor on
            the Amazon Pinpoint console. The name can contain up to 25 characters.
            The characters can be letters, numbers, spaces, underscores (_), or hyphens
            (-). These restrictions don''t apply to attribute values.'
        RecommendationsPerMessage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The number of recommended items to retrieve from the model
            for each endpoint or user, depending on the value for the RecommendationProviderIdType
            property. This number determines how many recommended items are available
            for use in message variables. The minimum value is 1. The maximum value
            is 5. The default value is 5.


            To use multiple recommended items and custom attributes with message variables,
            you have to use an AWS Lambda function (RecommendationTransformerUri)
            to perform additional processing of recommendation data.'
      required:
      - RecommendationProviderRoleArn
      - RecommendationProviderUri
      description: Specifies Amazon Pinpoint configuration settings for retrieving
        and processing recommendation data from a recommender model.
    CreateSegmentRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        WriteSegmentRequest:
          $ref: '#/components/schemas/WriteSegmentRequest'
      required:
      - ApplicationId
      - WriteSegmentRequest
    CreateSegmentResponse:
      type: object
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
    CreateSmsTemplateRequest:
      type: object
      properties:
        SMSTemplateRequest:
          $ref: '#/components/schemas/SMSTemplateRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
      required:
      - SMSTemplateRequest
      - TemplateName
    CreateSmsTemplateResponse:
      type: object
      properties:
        CreateTemplateMessageBody:
          $ref: '#/components/schemas/CreateTemplateMessageBody'
      required:
      - CreateTemplateMessageBody
    CreateTemplateMessageBody:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the message template that
            was created.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API for the request to
            create the message template.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request to create the message
            template.
      description: Provides information about a request to create a message template.
    CreateVoiceTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        VoiceTemplateRequest:
          $ref: '#/components/schemas/VoiceTemplateRequest'
      required:
      - TemplateName
      - VoiceTemplateRequest
    CreateVoiceTemplateResponse:
      type: object
      properties:
        CreateTemplateMessageBody:
          $ref: '#/components/schemas/CreateTemplateMessageBody'
      required:
      - CreateTemplateMessageBody
    CustomDeliveryConfiguration:
      type: object
      properties:
        DeliveryUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The destination to send the campaign or treatment to. This\
            \ value can be one of the following:\n\n  * The name or Amazon Resource\
            \ Name (ARN) of an AWS Lambda function to invoke to handle delivery of\
            \ the campaign or treatment.\n\n  * The URL for a web application or service\
            \ that supports HTTPS and can receive the message. The URL has to be a\
            \ full URL, including the HTTPS protocol."
        EndpointTypes:
          allOf:
          - $ref: '#/components/schemas/ListOf__EndpointTypesElement'
          description: The types of endpoints to send the campaign or treatment to.
            Each valid value maps to a type of channel that you can associate with
            an endpoint by using the ChannelType property of an endpoint.
      required:
      - DeliveryUri
      description: Specifies the delivery configuration settings for sending a campaign
        or campaign treatment through a custom channel. This object is required if
        you use the CampaignCustomMessage object to define the message to send for
        the campaign or campaign treatment.
    CustomMessageActivity:
      type: object
      properties:
        DeliveryUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The destination to send the campaign or treatment to. This\
            \ value can be one of the following:\n\n  * The name or Amazon Resource\
            \ Name (ARN) of an AWS Lambda function to invoke to handle delivery of\
            \ the campaign or treatment.\n\n  * The URL for a web application or service\
            \ that supports HTTPS and can receive the message. The URL has to be a\
            \ full URL, including the HTTPS protocol."
        EndpointTypes:
          allOf:
          - $ref: '#/components/schemas/ListOf__EndpointTypesElement'
          description: The types of endpoints to send the custom message to. Each
            valid value maps to a type of channel that you can associate with an endpoint
            by using the ChannelType property of an endpoint.
        MessageConfig:
          allOf:
          - $ref: '#/components/schemas/JourneyCustomMessage'
          description: Specifies the message data included in a custom channel message
            that's sent to participants in a journey.
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform, after
            Amazon Pinpoint calls the AWS Lambda function or web hook.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the custom message template to use for the message.
            If specified, this value must match the name of an existing message template.
        TemplateVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The unique identifier for the version of the message template
            to use for the message. If specified, this value must match the identifier
            for an existing template version. To retrieve a list of versions and version
            identifiers for a template, use the Template Versions resource.


            If you don''t specify a value for this property, Amazon Pinpoint uses
            the _active version_ of the template. The _active version_ is typically
            the version of a template that''s been most recently reviewed and approved
            for use, depending on your workflow. It isn''t necessarily the latest
            version of a template.'
      description: The settings for a custom message activity. This type of activity
        calls an AWS Lambda function or web hook that sends messages to participants.
    DayOfWeek:
      type: string
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
    DefaultButtonConfiguration:
      type: object
      properties:
        BackgroundColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The background color of the button.
        BorderRadius:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The border radius of the button.
        ButtonAction:
          allOf:
          - $ref: '#/components/schemas/ButtonAction'
          description: Action triggered by the button.
        Link:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Button destination.
        Text:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Button text.
        TextColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The text color of the button.
      required:
      - ButtonAction
      - Text
      description: Default button configuration.
    DefaultMessage:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default body of the message.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The default message variables to use in the message. You can
            override these default variables with individual address variables.
      description: Specifies the default message for all channels.
    DefaultPushNotificationMessage:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The default action to occur if a recipient taps the push notification.\
            \ Valid values are:\n\n  * OPEN_APP - Your app opens or it becomes the\
            \ foreground app if it was sent to the background. This is the default\
            \ action.\n\n  * DEEP_LINK - Your app opens and displays a designated\
            \ user interface in the app. This setting uses the deep-linking features\
            \ of the iOS and Android platforms.\n\n  * URL - The default mobile browser\
            \ on the recipient's device opens and loads the web page at a URL that\
            \ you specify."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default body of the notification message.
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: The JSON data payload to use for the default push notification,
            if the notification is a silent push notification. This payload is added
            to the data.pinpoint.jsonBody object of the notification.
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the default notification is a silent push
            notification, which is a push notification that doesn't display on a recipient's
            device. Silent push notifications can be used for cases such as updating
            an app's configuration or delivering messages to an in-app notification
            center.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The default message variables to use in the notification message.
            You can override the default variables with individual address variables.
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default title to display above the notification message
            on a recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default URL to open in a recipient's default mobile browser,
            if a recipient taps the push notification and the value of the Action
            property is URL.
      description: Specifies the default settings and content for a push notification
        that's sent directly to an endpoint.
    DefaultPushNotificationTemplate:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The action to occur if a recipient taps a push notification\
            \ that's based on the message template. Valid values are:\n\n  * OPEN_APP\
            \ - Your app opens or it becomes the foreground app if it was sent to\
            \ the background. This is the default action.\n\n  * DEEP_LINK - Your\
            \ app opens and displays a designated user interface in the app. This\
            \ setting uses the deep-linking features of the iOS and Android platforms.\n\
            \n  * URL - The default mobile browser on the recipient's device opens\
            \ and loads the web page at a URL that you specify."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body to use in push notifications that are based
            on the message template.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The sound to play when a recipient receives a push notification
            that''s based on the message template. You can use the default stream
            or specify the file name of a sound resource that''s bundled in your app.
            On an Android platform, the sound file must reside in /res/raw/.


            For an iOS platform, this value is the key for the name of a sound file
            in your app''s main bundle or the Library/Sounds folder in your app''s
            data container. If the sound file can''t be found or you specify default
            for the value, the system plays the default alert sound.'
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title to use in push notifications that are based on the
            message template. This title appears above the notification message on
            a recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL to open in a recipient's default mobile browser, if
            a recipient taps a push notification that's based on the message template
            and the value of the Action property is URL.
      description: Specifies the default settings and content for a message template
        that can be used in messages that are sent through a push notification channel.
    DeleteAdmChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteAdmChannelResponse:
      type: object
      properties:
        ADMChannelResponse:
          $ref: '#/components/schemas/ADMChannelResponse'
      required:
      - ADMChannelResponse
    DeleteApnsChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteApnsChannelResponse:
      type: object
      properties:
        APNSChannelResponse:
          $ref: '#/components/schemas/APNSChannelResponse'
      required:
      - APNSChannelResponse
    DeleteApnsSandboxChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteApnsSandboxChannelResponse:
      type: object
      properties:
        APNSSandboxChannelResponse:
          $ref: '#/components/schemas/APNSSandboxChannelResponse'
      required:
      - APNSSandboxChannelResponse
    DeleteApnsVoipChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteApnsVoipChannelResponse:
      type: object
      properties:
        APNSVoipChannelResponse:
          $ref: '#/components/schemas/APNSVoipChannelResponse'
      required:
      - APNSVoipChannelResponse
    DeleteApnsVoipSandboxChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteApnsVoipSandboxChannelResponse:
      type: object
      properties:
        APNSVoipSandboxChannelResponse:
          $ref: '#/components/schemas/APNSVoipSandboxChannelResponse'
      required:
      - APNSVoipSandboxChannelResponse
    DeleteAppRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteAppResponse:
      type: object
      properties:
        ApplicationResponse:
          $ref: '#/components/schemas/ApplicationResponse'
      required:
      - ApplicationResponse
    DeleteBaiduChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteBaiduChannelResponse:
      type: object
      properties:
        BaiduChannelResponse:
          $ref: '#/components/schemas/BaiduChannelResponse'
      required:
      - BaiduChannelResponse
    DeleteCampaignRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign.
      required:
      - ApplicationId
      - CampaignId
    DeleteCampaignResponse:
      type: object
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
    DeleteEmailChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteEmailChannelResponse:
      type: object
      properties:
        EmailChannelResponse:
          $ref: '#/components/schemas/EmailChannelResponse'
      required:
      - EmailChannelResponse
    DeleteEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    DeleteEmailTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    DeleteEndpointRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The case insensitive unique identifier for the endpoint. The
            identifier can't contain `$`, `{` or `}`.
      required:
      - ApplicationId
      - EndpointId
    DeleteEndpointResponse:
      type: object
      properties:
        EndpointResponse:
          $ref: '#/components/schemas/EndpointResponse'
      required:
      - EndpointResponse
    DeleteEventStreamRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteEventStreamResponse:
      type: object
      properties:
        EventStream:
          $ref: '#/components/schemas/EventStream'
      required:
      - EventStream
    DeleteGcmChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteGcmChannelResponse:
      type: object
      properties:
        GCMChannelResponse:
          $ref: '#/components/schemas/GCMChannelResponse'
      required:
      - GCMChannelResponse
    DeleteInAppTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    DeleteInAppTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    DeleteJourneyRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
      required:
      - ApplicationId
      - JourneyId
    DeleteJourneyResponse:
      type: object
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
    DeletePushTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    DeletePushTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    DeleteRecommenderConfigurationRequest:
      type: object
      properties:
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model configuration.
            This identifier is displayed as the **Recommender ID** on the Amazon Pinpoint
            console.
      required:
      - RecommenderId
    DeleteRecommenderConfigurationResponse:
      type: object
      properties:
        RecommenderConfigurationResponse:
          $ref: '#/components/schemas/RecommenderConfigurationResponse'
      required:
      - RecommenderConfigurationResponse
    DeleteSegmentRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
      required:
      - ApplicationId
      - SegmentId
    DeleteSegmentResponse:
      type: object
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
    DeleteSmsChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteSmsChannelResponse:
      type: object
      properties:
        SMSChannelResponse:
          $ref: '#/components/schemas/SMSChannelResponse'
      required:
      - SMSChannelResponse
    DeleteSmsTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    DeleteSmsTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    DeleteUserEndpointsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        UserId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the user.
      required:
      - ApplicationId
      - UserId
    DeleteUserEndpointsResponse:
      type: object
      properties:
        EndpointsResponse:
          $ref: '#/components/schemas/EndpointsResponse'
      required:
      - EndpointsResponse
    DeleteVoiceChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    DeleteVoiceChannelResponse:
      type: object
      properties:
        VoiceChannelResponse:
          $ref: '#/components/schemas/VoiceChannelResponse'
      required:
      - VoiceChannelResponse
    DeleteVoiceTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    DeleteVoiceTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    DeliveryStatus:
      type: string
      enum:
      - SUCCESSFUL
      - THROTTLED
      - TEMPORARY_FAILURE
      - PERMANENT_FAILURE
      - UNKNOWN_FAILURE
      - OPT_OUT
      - DUPLICATE
    DimensionType:
      type: string
      enum:
      - INCLUSIVE
      - EXCLUSIVE
    DirectMessageConfiguration:
      type: object
      properties:
        ADMMessage:
          allOf:
          - $ref: '#/components/schemas/ADMMessage'
          description: The default push notification message for the ADM (Amazon Device
            Messaging) channel. This message overrides the default push notification
            message (DefaultPushNotificationMessage).
        APNSMessage:
          allOf:
          - $ref: '#/components/schemas/APNSMessage'
          description: The default push notification message for the APNs (Apple Push
            Notification service) channel. This message overrides the default push
            notification message (DefaultPushNotificationMessage).
        BaiduMessage:
          allOf:
          - $ref: '#/components/schemas/BaiduMessage'
          description: The default push notification message for the Baidu (Baidu
            Cloud Push) channel. This message overrides the default push notification
            message (DefaultPushNotificationMessage).
        DefaultMessage:
          allOf:
          - $ref: '#/components/schemas/DefaultMessage'
          description: The default message for all channels.
        DefaultPushNotificationMessage:
          allOf:
          - $ref: '#/components/schemas/DefaultPushNotificationMessage'
          description: The default push notification message for all push notification
            channels.
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/EmailMessage'
          description: The default message for the email channel. This message overrides
            the default message (DefaultMessage).
        GCMMessage:
          allOf:
          - $ref: '#/components/schemas/GCMMessage'
          description: The default push notification message for the GCM channel,
            which is used to send notifications through the Firebase Cloud Messaging
            (FCM), formerly Google Cloud Messaging (GCM), service. This message overrides
            the default push notification message (DefaultPushNotificationMessage).
        SMSMessage:
          allOf:
          - $ref: '#/components/schemas/SMSMessage'
          description: The default message for the SMS channel. This message overrides
            the default message (DefaultMessage).
        VoiceMessage:
          allOf:
          - $ref: '#/components/schemas/VoiceMessage'
          description: The default message for the voice channel. This message overrides
            the default message (DefaultMessage).
      description: Specifies the settings and content for the default message and
        any default messages that you tailored for specific channels.
    Duration:
      type: string
      enum:
      - HR_24
      - DAY_7
      - DAY_14
      - DAY_30
    EmailChannelRequest:
      type: object
      properties:
        ConfigurationSet:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The [Amazon SES configuration set](https://docs.aws.amazon.com/ses/latest/APIReference/API_ConfigurationSet.html)
            that you want to apply to messages that you send through the channel.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the email channel for the application.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The verified email address that you want to send email from
            when you send email through the channel.
        Identity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the identity, verified with
            Amazon Simple Email Service (Amazon SES), that you want to use when you
            send email through the channel.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the AWS Identity and Access Management (IAM) role
            that you want Amazon Pinpoint to use when it submits email-related event
            data for the channel.
        OrchestrationSendingRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of an IAM role for Amazon Pinpoint to use to send email
            from your campaigns or journeys through Amazon SES.
      required:
      - FromAddress
      - Identity
      description: Specifies the status and settings of the email channel for an application.
    EmailChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the email channel
            applies to.
        ConfigurationSet:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The [Amazon SES configuration set](https://docs.aws.amazon.com/ses/latest/APIReference/API_ConfigurationSet.html)
            that's applied to messages that are sent through the channel.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the email channel
            was enabled.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the email channel is enabled for the application.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The verified email address that email is sent from when you
            send email through the channel.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the email channel. This property
            is retained only for backward compatibility.
        Identity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the identity, verified with
            Amazon Simple Email Service (Amazon SES), that's used when you send email
            through the channel.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the email channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the email channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the email channel
            was last modified.
        MessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of emails that can be sent through the channel
            each second.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the email channel, this value is EMAIL.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of the AWS Identity and Access Management (IAM) role
            that Amazon Pinpoint uses to submit email-related event data for the channel.
        OrchestrationSendingRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The ARN of an IAM role for Amazon Pinpoint to use to send email
            from your campaigns or journeys through Amazon SES.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the email channel.
      required:
      - Platform
      description: Provides information about the status and settings of the email
        channel for an application.
    EmailMessage:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the email message.
        FeedbackForwardingAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The email address to forward bounces and complaints to, if
            feedback forwarding is enabled.
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The verified email address to send the email message from.
            The default value is the FromAddress specified for the email channel.
        RawEmail:
          allOf:
          - $ref: '#/components/schemas/RawEmail'
          description: The email message, represented as a raw MIME message.
        ReplyToAddresses:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: The reply-to email address(es) for the email message. If a
            recipient replies to the email, each reply-to address receives the reply.
        SimpleEmail:
          allOf:
          - $ref: '#/components/schemas/SimpleEmail'
          description: The email message, composed of a subject, a text part, and
            an HTML part.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The default message variables to use in the email message.
            You can override the default variables with individual address variables.
      description: Specifies the default settings and content for a one-time email
        message that's sent directly to an endpoint.
    EmailMessageActivity:
      type: object
      properties:
        MessageConfig:
          allOf:
          - $ref: '#/components/schemas/JourneyEmailMessage'
          description: Specifies the sender address for an email message that's sent
            to participants in the journey.
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform, after
            the message is sent.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the email message template to use for the message.
            If specified, this value must match the name of an existing message template.
        TemplateVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The unique identifier for the version of the email template
            to use for the message. If specified, this value must match the identifier
            for an existing template version. To retrieve a list of versions and version
            identifiers for a template, use the Template Versions resource.


            If you don''t specify a value for this property, Amazon Pinpoint uses
            the _active version_ of the template. The _active version_ is typically
            the version of a template that''s been most recently reviewed and approved
            for use, depending on your workflow. It isn''t necessarily the latest
            version of a template.'
      description: Specifies the settings for an email activity in a journey. This
        type of activity sends an email message to participants.
    EmailTemplateRequest:
      type: object
      properties:
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A JSON object that specifies the default values to use for
            message variables in the message template. This object is a set of key-value
            pairs. Each key defines a message variable in the template. The corresponding
            value defines the default value for that variable. When you create a message
            that's based on the template, you can override these defaults with message-specific
            and address-specific variables and values.
        HtmlPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body, in HTML format, to use in email messages
            that are based on the message template. We recommend using HTML format
            for email clients that render HTML content. You can include links, formatted
            text, and more in an HTML message.
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model to use for
            the message template. Amazon Pinpoint uses this value to determine how
            to retrieve and process data from a recommender model when it sends messages
            that use the template, if the template contains message variables for
            recommendation data.
        Subject:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The subject line, or title, to use in email messages that are
            based on the message template.
        Headers:
          allOf:
          - $ref: '#/components/schemas/ListOfMessageHeader'
          description: The list of [MessageHeaders](https://docs.aws.amazon.com/pinpoint/latest/apireference/templates-template-name-email.html#templates-template-name-email-model-messageheader)
            for the email. You can have up to 15 Headers.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'As of **22-05-2023** tags has been deprecated for update operations.
            After this date any value in tags is not processed and an error code is
            not returned. To manage tags we recommend using either [Tags](https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html)
            in the _API Reference for Amazon Pinpoint_ , [resourcegroupstaggingapi](https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html)
            commands in the _AWS Command Line Interface Documentation_ or [resourcegroupstaggingapi](https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html)
            in the _AWS SDK_.


            (Deprecated) A string-to-string map of key-value pairs that defines the
            tags to associate with the message template. Each tag consists of a required
            tag key and an associated tag value.'
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom description of the message template.
        TextPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body, in plain text format, to use in email messages
            that are based on the message template. We recommend using plain text
            format for email clients that don't render HTML content and clients that
            are connected to high-latency networks, such as mobile devices.
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through the email channel.
    EmailTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the message template.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            created.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The JSON object that specifies the default values that are
            used for message variables in the message template. This object is a set
            of key-value pairs. Each key defines a message variable in the template.
            The corresponding value defines the default value for that variable.
        HtmlPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body, in HTML format, that's used in email messages
            that are based on the message template.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            last modified.
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model that's used
            by the message template.
        Subject:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The subject line, or title, that's used in email messages that
            are based on the message template.
        Headers:
          allOf:
          - $ref: '#/components/schemas/ListOfMessageHeader'
          description: The list of [MessageHeaders](https://docs.aws.amazon.com/pinpoint/latest/apireference/templates-template-name-email.html#templates-template-name-email-model-messageheader)
            for the email. You can have up to 15 Headers.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that identifies the
            tags that are associated with the message template. Each tag consists
            of a required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: The type of channel that the message template is designed for.
            For an email template, this value is EMAIL.
        TextPart:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body, in plain text format, that's used in email
            messages that are based on the message template.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier, as an integer, for the active version
            of the message template, or the version of the template that you specified
            by using the version parameter in your request.
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      description: Provides information about the content and settings for a message
        template that can be used in messages that are sent through the email channel.
    EndpointBatchItem:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The destination address for messages or push notifications
            that you send to the endpoint. The address varies by channel. For a push-notification
            channel, use the token provided by the push notification service, such
            as an Apple Push Notification service (APNs) device token or a Firebase
            Cloud Messaging (FCM) registration token. For the SMS channel, use a phone
            number in E.164 format, such as +12065550100. For the email channel, use
            an email address.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: 'One or more custom attributes that describe the endpoint by
            associating a name with an array of values. For example, the value of
            a custom attribute named Interests might be: ["Science", "Music", "Travel"].
            You can use these attributes as filter criteria when you create segments.
            Attribute names are case sensitive.


            An attribute name can contain up to 50 characters. An attribute value
            can contain up to 100 characters. When you define the name of a custom
            attribute, avoid using the following characters: number sign (#), colon
            (:), question mark (?), backslash (\\), and slash (/). The Amazon Pinpoint
            console can''t display attribute names that contain these characters.
            This restriction doesn''t apply to attribute values.'
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          description: The channel to use when sending messages or push notifications
            to the endpoint.
        Demographic:
          allOf:
          - $ref: '#/components/schemas/EndpointDemographic'
          description: The demographic information for the endpoint, such as the time
            zone and platform.
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the endpoint was
            created or updated.
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Specifies whether to send messages or push notifications to
            the endpoint. Valid values are: ACTIVE, messages are sent to the endpoint;
            and, INACTIVE, messages aren’t sent to the endpoint.


            Amazon Pinpoint automatically sets this value to ACTIVE when you create
            an endpoint or update an existing endpoint. Amazon Pinpoint automatically
            sets this value to INACTIVE if you update another endpoint that has the
            same address specified by the Address property.'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the endpoint in the context of the
            batch.
        Location:
          allOf:
          - $ref: '#/components/schemas/EndpointLocation'
          description: The geographic information for the endpoint.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          description: One or more custom metrics that your app reports to Amazon
            Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Specifies whether the user who''s associated with the endpoint
            has opted out of receiving messages and push notifications from you. Possible
            values are: ALL, the user has opted out and doesn''t want to receive any
            messages or push notifications; and, NONE, the user hasn''t opted out
            and wants to receive all messages and push notifications.'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request to create or update the
            endpoint.
        User:
          allOf:
          - $ref: '#/components/schemas/EndpointUser'
          description: One or more custom attributes that describe the user who's
            associated with the endpoint.
      description: Specifies an endpoint to create or update and the settings and
        attributes to set or change for the endpoint.
    EndpointBatchRequest:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfEndpointBatchItem'
          description: An array that defines the endpoints to create or update and,
            for each endpoint, the property values to set or change. An array can
            contain a maximum of 100 items.
      required:
      - Item
      description: Specifies a batch of endpoints to create or update and the settings
        and attributes to set or change for each endpoint.
    EndpointDemographic:
      type: object
      properties:
        AppVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of the app that's associated with the endpoint.
        Locale:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The locale of the endpoint, in the following format: the ISO
            639-1 alpha-2 code, followed by an underscore (_), followed by an ISO
            3166-1 alpha-2 value.'
        Make:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The manufacturer of the endpoint device, such as apple or samsung.
        Model:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The model name or number of the endpoint device, such as iPhone
            or SM-G900F.
        ModelVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The model version of the endpoint device.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The platform of the endpoint device, such as ios.
        PlatformVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The platform version of the endpoint device.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time zone of the endpoint, specified as a tz database name
            value, such as America/Los_Angeles.
      description: Specifies demographic information about an endpoint, such as the
        applicable time zone and platform.
    EndpointItemResponse:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom message that's returned in the response as a result
            of processing the endpoint data.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The status code that's returned in the response as a result
            of processing the endpoint data.
      description: Provides the status code and message that result from processing
        data for an endpoint.
    EndpointLocation:
      type: object
      properties:
        City:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the city where the endpoint is located.
        Country:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The two-character code, in ISO 3166-1 alpha-2 format, for the
            country or region where the endpoint is located. For example, US for the
            United States.
        Latitude:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The latitude coordinate of the endpoint location, rounded to
            one decimal place.
        Longitude:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The longitude coordinate of the endpoint location, rounded
            to one decimal place.
        PostalCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The postal or ZIP code for the area where the endpoint is located.
        Region:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the region where the endpoint is located. For locations
            in the United States, this value is the name of a state.
      description: Specifies geographic information about an endpoint.
    EndpointMessageResult:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The endpoint address that the message was delivered to.
        DeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatus'
          description: "The delivery status of the message. Possible values are:\n\
            \n  * DUPLICATE - The endpoint address is a duplicate of another endpoint\
            \ address. Amazon Pinpoint won't attempt to send the message again.\n\n\
            \  * OPT_OUT - The user who's associated with the endpoint has opted out\
            \ of receiving messages from you. Amazon Pinpoint won't attempt to send\
            \ the message again.\n\n  * PERMANENT_FAILURE - An error occurred when\
            \ delivering the message to the endpoint. Amazon Pinpoint won't attempt\
            \ to send the message again.\n\n  * SUCCESSFUL - The message was successfully\
            \ delivered to the endpoint.\n\n  * TEMPORARY_FAILURE - A temporary error\
            \ occurred. Amazon Pinpoint won't attempt to send the message again.\n\
            \n  * THROTTLED - Amazon Pinpoint throttled the operation to send the\
            \ message to the endpoint.\n\n  * UNKNOWN_FAILURE - An unknown error occurred."
        MessageId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the message that was sent.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The downstream service status code for delivering the message.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The status message for delivering the message.
        UpdatedToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: For push notifications that are sent through the GCM channel,
            specifies whether the endpoint's device registration token was updated
            as part of delivering the message.
      required:
      - DeliveryStatus
      - StatusCode
      description: Provides information about the delivery status and results of sending
        a message directly to an endpoint.
    EndpointRequest:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The destination address for messages or push notifications
            that you send to the endpoint. The address varies by channel. For a push-notification
            channel, use the token provided by the push notification service, such
            as an Apple Push Notification service (APNs) device token or a Firebase
            Cloud Messaging (FCM) registration token. For the SMS channel, use a phone
            number in E.164 format, such as +12065550100. For the email channel, use
            an email address.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: 'One or more custom attributes that describe the endpoint by
            associating a name with an array of values. For example, the value of
            a custom attribute named Interests might be: ["Science", "Music", "Travel"].
            You can use these attributes as filter criteria when you create segments.
            Attribute names are case sensitive.


            An attribute name can contain up to 50 characters. An attribute value
            can contain up to 100 characters. When you define the name of a custom
            attribute, avoid using the following characters: number sign (#), colon
            (:), question mark (?), backslash (\\), and slash (/). The Amazon Pinpoint
            console can''t display attribute names that contain these characters.
            This restriction doesn''t apply to attribute values.'
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          description: The channel to use when sending messages or push notifications
            to the endpoint.
        Demographic:
          allOf:
          - $ref: '#/components/schemas/EndpointDemographic'
          description: The demographic information for the endpoint, such as the time
            zone and platform.
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the endpoint is
            updated.
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Specifies whether to send messages or push notifications to
            the endpoint. Valid values are: ACTIVE, messages are sent to the endpoint;
            and, INACTIVE, messages aren’t sent to the endpoint.


            Amazon Pinpoint automatically sets this value to ACTIVE when you create
            an endpoint or update an existing endpoint. Amazon Pinpoint automatically
            sets this value to INACTIVE if you update another endpoint that has the
            same address specified by the Address property.'
        Location:
          allOf:
          - $ref: '#/components/schemas/EndpointLocation'
          description: The geographic information for the endpoint.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          description: One or more custom metrics that your app reports to Amazon
            Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Specifies whether the user who''s associated with the endpoint
            has opted out of receiving messages and push notifications from you. Possible
            values are: ALL, the user has opted out and doesn''t want to receive any
            messages or push notifications; and, NONE, the user hasn''t opted out
            and wants to receive all messages and push notifications.'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the most recent request to update
            the endpoint.
        User:
          allOf:
          - $ref: '#/components/schemas/EndpointUser'
          description: One or more custom attributes that describe the user who's
            associated with the endpoint.
      description: Specifies the channel type and other settings for an endpoint.
    EndpointResponse:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The destination address for messages or push notifications
            that you send to the endpoint. The address varies by channel. For example,
            the address for a push-notification channel is typically the token provided
            by a push notification service, such as an Apple Push Notification service
            (APNs) device token or a Firebase Cloud Messaging (FCM) registration token.
            The address for the SMS channel is a phone number in E.164 format, such
            as +12065550100. The address for the email channel is an email address.
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that's associated
            with the endpoint.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: 'One or more custom attributes that describe the endpoint by
            associating a name with an array of values. For example, the value of
            a custom attribute named Interests might be: ["Science", "Music", "Travel"].
            You can use these attributes as filter criteria when you create segments.'
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          description: The channel that's used when sending messages or push notifications
            to the endpoint.
        CohortId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A number from 0-99 that represents the cohort that the endpoint
            is assigned to. Endpoints are grouped into cohorts randomly, and each
            cohort contains approximately 1 percent of the endpoints for an application.
            Amazon Pinpoint assigns cohorts to the holdout or treatment allocations
            for campaigns.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the endpoint was
            created.
        Demographic:
          allOf:
          - $ref: '#/components/schemas/EndpointDemographic'
          description: The demographic information for the endpoint, such as the time
            zone and platform.
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the endpoint was
            last updated.
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Specifies whether messages or push notifications are sent
            to the endpoint. Possible values are: ACTIVE, messages are sent to the
            endpoint; and, INACTIVE, messages aren’t sent to the endpoint.


            Amazon Pinpoint automatically sets this value to ACTIVE when you create
            an endpoint or update an existing endpoint. Amazon Pinpoint automatically
            sets this value to INACTIVE if you update another endpoint that has the
            same address specified by the Address property.'
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier that you assigned to the endpoint. The
            identifier should be a globally unique identifier (GUID) to ensure that
            it doesn't conflict with other endpoint identifiers that are associated
            with the application.
        Location:
          allOf:
          - $ref: '#/components/schemas/EndpointLocation'
          description: The geographic information for the endpoint.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          description: One or more custom metrics that your app reports to Amazon
            Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Specifies whether the user who''s associated with the endpoint
            has opted out of receiving messages and push notifications from you. Possible
            values are: ALL, the user has opted out and doesn''t want to receive any
            messages or push notifications; and, NONE, the user hasn''t opted out
            and wants to receive all messages and push notifications.'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the most recent request to update
            the endpoint.
        User:
          allOf:
          - $ref: '#/components/schemas/EndpointUser'
          description: One or more custom user attributes that your app reports to
            Amazon Pinpoint for the user who's associated with the endpoint.
      description: Provides information about the channel type and other settings
        for an endpoint.
    EndpointSendConfiguration:
      type: object
      properties:
        BodyOverride:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the message. If specified, this value overrides
            the default message body.
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'A map of custom attributes to attach to the message for the
            address. Attribute names are case sensitive.


            For a push notification, this payload is added to the data.pinpoint object.
            For an email or text message, this payload is added to email/SMS delivery
            receipt event attributes.'
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for the
            message. If specified, this value overrides all other values for the message.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: A map of the message variables to merge with the variables
            specified for the default message (DefaultMessage.Substitutions). The
            variables specified in this map take precedence over all other variables.
        TitleOverride:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title or subject line of the message. If specified, this
            value overrides the default message title or subject line.
      description: Specifies the content, including message variables and attributes,
        to use in a message that's sent directly to an endpoint.
    EndpointUser:
      type: object
      properties:
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: 'One or more custom attributes that describe the user by associating
            a name with an array of values. For example, the value of an attribute
            named Interests might be: ["Science", "Music", "Travel"]. You can use
            these attributes as filter criteria when you create segments. Attribute
            names are case sensitive.


            An attribute name can contain up to 50 characters. An attribute value
            can contain up to 100 characters. When you define the name of a custom
            attribute, avoid using the following characters: number sign (#), colon
            (:), question mark (?), backslash (\\), and slash (/). The Amazon Pinpoint
            console can''t display attribute names that contain these characters.
            This restriction doesn''t apply to attribute values.'
        UserId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the user.
      description: Specifies data for one or more attributes that describe the user
        who's associated with an endpoint.
    EndpointsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfEndpointResponse'
          description: An array of responses, one for each endpoint that's associated
            with the user ID.
      required:
      - Item
      description: Provides information about all the endpoints that are associated
        with a user ID.
    Event:
      type: object
      properties:
        AppPackageName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The package name of the app that's recording the event.
        AppTitle:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title of the app that's recording the event.
        AppVersionCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version number of the app that's recording the event.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: One or more custom attributes that are associated with the
            event.
        ClientSdkVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version of the SDK that's running on the client device.
        EventType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the event.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          description: One or more custom metrics that are associated with the event.
        SdkName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the SDK that's being used to record the event.
        Session:
          allOf:
          - $ref: '#/components/schemas/Session'
          description: Information about the session in which the event occurred.
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the event occurred.
      required:
      - EventType
      - Timestamp
      description: Specifies information about an event that reports data to Amazon
        Pinpoint.
    EventCondition:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/EventDimensions'
          description: The dimensions for the event filter to use for the activity.
        MessageActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message identifier (message_id) for the message to use
            when determining whether message events meet the condition.
      description: Specifies the conditions to evaluate for an event that applies
        to an activity in a journey.
    EventDimensions:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfAttributeDimension'
          description: One or more custom attributes that your application reports
            to Amazon Pinpoint. You can use these attributes as selection criteria
            when you create an event filter.
        EventType:
          allOf:
          - $ref: '#/components/schemas/SetDimension'
          description: The name of the event that causes the campaign to be sent or
            the journey activity to be performed. This can be a standard event that
            Amazon Pinpoint generates, such as _email.delivered. For campaigns, this
            can also be a custom event that's specific to your application. For information
            about standard events, see [Streaming Amazon Pinpoint Events](https://docs.aws.amazon.com/pinpoint/latest/developerguide/event-streams.html)
            in the _Amazon Pinpoint Developer Guide_.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOfMetricDimension'
          description: One or more custom metrics that your application reports to
            Amazon Pinpoint. You can use these metrics as selection criteria when
            you create an event filter.
      description: Specifies the dimensions for an event filter that determines when
        a campaign is sent or a journey activity is performed.
    EventFilter:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/EventDimensions'
          description: The dimensions for the event filter to use for the campaign
            or the journey activity.
        FilterType:
          allOf:
          - $ref: '#/components/schemas/FilterType'
          description: 'The type of event that causes the campaign to be sent or the
            journey activity to be performed. Valid values are: SYSTEM, sends the
            campaign or performs the activity when a system event occurs; and, ENDPOINT,
            sends the campaign or performs the activity when an endpoint event (Events
            resource) occurs.'
      required:
      - Dimensions
      - FilterType
      description: Specifies the settings for an event that causes a campaign to be
        sent or a journey activity to be performed.
    EventItemResponse:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom message that's returned in the response as a result
            of processing the event.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The status code that''s returned in the response as a result
            of processing the event. Possible values are: 202, for events that were
            accepted; and, 400, for events that weren''t valid.'
      description: Provides the status code and message that result from processing
        an event.
    EventStartCondition:
      type: object
      properties:
        EventFilter:
          $ref: '#/components/schemas/EventFilter'
        SegmentId:
          $ref: '#/components/schemas/__string'
      description: Specifies the settings for an event that causes a journey activity
        to start.
    EventStream:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application to publish event
            data for.
        DestinationStreamArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The Amazon Resource Name (ARN) of the Amazon Kinesis data
            stream or Amazon Kinesis Data Firehose delivery stream to publish event
            data to.


            For a Kinesis data stream, the ARN format is: arn:aws:kinesis:region:account-id:stream/stream_name


            For a Kinesis Data Firehose delivery stream, the ARN format is: arn:aws:firehose:region:account-id:deliverystream/stream_name'
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) Your AWS account ID, which you assigned to an
            external ID key in an IAM trust policy. Amazon Pinpoint previously used
            this value to assume an IAM role when publishing event data, but we removed
            this requirement. We don't recommend use of external IDs for IAM roles
            that are assumed by Amazon Pinpoint.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the event stream was last
            modified.
        LastUpdatedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The IAM user who last modified the event stream.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The AWS Identity and Access Management (IAM) role that authorizes
            Amazon Pinpoint to publish event data to the stream in your AWS account.
      required:
      - ApplicationId
      - DestinationStreamArn
      - RoleArn
      description: Specifies settings for publishing event data to an Amazon Kinesis
        data stream or an Amazon Kinesis Data Firehose delivery stream.
    EventsBatch:
      type: object
      properties:
        Endpoint:
          allOf:
          - $ref: '#/components/schemas/PublicEndpoint'
          description: A set of properties and attributes that are associated with
            the endpoint.
        Events:
          allOf:
          - $ref: '#/components/schemas/MapOfEvent'
          description: A set of properties that are associated with the event.
      required:
      - Endpoint
      - Events
      description: Specifies a batch of endpoints and events to process.
    EventsRequest:
      type: object
      properties:
        BatchItem:
          allOf:
          - $ref: '#/components/schemas/MapOfEventsBatch'
          description: The batch of events to process. For each item in a batch, the
            endpoint ID acts as a key that has an EventsBatch object as its value.
      required:
      - BatchItem
      description: Specifies a batch of events to process.
    EventsResponse:
      type: object
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/MapOfItemResponse'
          description: 'A map that contains a multipart response for each endpoint.
            For each item in this object, the endpoint ID is the key and the item
            response is the value. If no item response exists, the value can also
            be one of the following: 202, the request was processed successfully;
            or 400, the payload wasn''t valid or required fields were missing.'
      description: Provides information about endpoints and the events that they're
        associated with.
    ExportJobRequest:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that authorizes Amazon Pinpoint to access the Amazon
            S3 location where you want to export endpoint definitions to.
        S3UrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The URL of the location in an Amazon Simple Storage Service
            (Amazon S3) bucket where you want to export endpoint definitions to. This
            location is typically a folder that contains multiple files. The URL should
            be in the following format: s3://bucket-name/folder-name/.'
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the segment to export endpoint definitions
            from. If you don't specify this value, Amazon Pinpoint exports definitions
            for all the endpoints that are associated with the application.
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The version of the segment to export endpoint definitions from,
            if specified.
      required:
      - RoleArn
      - S3UrlPrefix
      description: Specifies the settings for a job that exports endpoint definitions
        to an Amazon Simple Storage Service (Amazon S3) bucket.
    ExportJobResource:
      type: object
      properties:
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that authorized Amazon Pinpoint to access the Amazon
            S3 location where the endpoint definitions were exported to.
        S3UrlPrefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The URL of the location in an Amazon Simple Storage Service
            (Amazon S3) bucket where the endpoint definitions were exported to. This
            location is typically a folder that contains multiple files. The URL should
            be in the following format: s3://bucket-name/folder-name/.'
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the segment that the endpoint definitions
            were exported from. If this value isn't present, Amazon Pinpoint exported
            definitions for all the endpoints that are associated with the application.
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The version of the segment that the endpoint definitions were
            exported from.
      required:
      - RoleArn
      - S3UrlPrefix
      description: Provides information about the resource settings for a job that
        exports endpoint definitions to a file. The file can be added directly to
        an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint
        API or downloaded directly to a computer by using the Amazon Pinpoint console.
    ExportJobResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that's associated
            with the export job.
        CompletedPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of pieces that were processed successfully (completed)
            by the export job, as of the time of the request.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the export job was completed.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the export job was created.
        Definition:
          allOf:
          - $ref: '#/components/schemas/ExportJobResource'
          description: The resource settings that apply to the export job.
        FailedPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of pieces that weren't processed successfully (failed)
            by the export job, as of the time of the request.
        Failures:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: An array of entries, one for each of the first 100 entries
            that weren't processed successfully (failed) by the export job, if any.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the export job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the export job. The job status is FAILED if Amazon
            Pinpoint wasn't able to process one or more pieces in the job.
        TotalFailures:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of endpoint definitions that weren't processed
            successfully (failed) by the export job, typically because an error, such
            as a syntax error, occurred.
        TotalPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of pieces that must be processed to complete
            the export job. Each piece consists of an approximately equal portion
            of the endpoint definitions that are part of the export job.
        TotalProcessed:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of endpoint definitions that were processed
            by the export job.
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The job type. This value is EXPORT for export jobs.
      required:
      - ApplicationId
      - CreationDate
      - Definition
      - Id
      - JobStatus
      - Type
      description: Provides information about the status and settings of a job that
        exports endpoint definitions to a file. The file can be added directly to
        an Amazon Simple Storage Service (Amazon S3) bucket by using the Amazon Pinpoint
        API or downloaded directly to a computer by using the Amazon Pinpoint console.
    ExportJobsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfExportJobResponse'
          description: An array of responses, one for each export job that's associated
            with the application (Export Jobs resource) or segment (Segment Export
            Jobs resource).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information about all the export jobs that are associated
        with an application or segment. An export job is a job that exports endpoint
        definitions to a file.
    FilterType:
      type: string
      enum:
      - SYSTEM
      - ENDPOINT
    ForbiddenException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    Format:
      type: string
      enum:
      - CSV
      - JSON
    Frequency:
      type: string
      enum:
      - ONCE
      - HOURLY
      - DAILY
      - WEEKLY
      - MONTHLY
      - EVENT
      - IN_APP_EVENT
    GCMChannelRequest:
      type: object
      properties:
        ApiKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Web API Key, also referred to as an _API_KEY_ or _server
            key_ , that you received from Google to communicate with Google services.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method used for GCM. Values are
            either "TOKEN" or "KEY". Defaults to "KEY".
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the GCM channel for the application.
        ServiceJson:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The contents of the JSON file provided by Google during registration
            in order to generate an access token for authentication. For more information
            see [Migrate from legacy FCM APIs to HTTP v1](https://firebase.google.com/docs/cloud-messaging/migrate-v1).
      description: Specifies the status and settings of the GCM channel for an application.
        This channel enables Amazon Pinpoint to send push notifications through the
        Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
    GCMChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the GCM channel
            applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the GCM channel was enabled.
        Credential:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Web API Key, also referred to as an _API_KEY_ or _server
            key_ , that you received from Google to communicate with Google services.
        DefaultAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The default authentication method used for GCM. Values are
            either "TOKEN" or "KEY". Defaults to "KEY".
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the GCM channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        HasFcmServiceCredentials:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Returns true if the JSON file provided by Google during registration
            process was used in the **ServiceJson** field of the request.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the GCM channel. This property
            is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the GCM channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the GCM channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the GCM channel was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the GCM channel, this value is GCM.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the GCM channel.
      required:
      - Platform
      description: Provides information about the status and settings of the GCM channel
        for an application. The GCM channel enables Amazon Pinpoint to send push notifications
        through the Firebase Cloud Messaging (FCM), formerly Google Cloud Messaging
        (GCM), service.
    GCMMessage:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The action to occur if the recipient taps the push notification.\
            \ Valid values are:\n\n  * OPEN_APP - Your app opens or it becomes the\
            \ foreground app if it was sent to the background. This is the default\
            \ action.\n\n  * DEEP_LINK - Your app opens and displays a designated\
            \ user interface in the app. This action uses the deep-linking features\
            \ of the Android platform.\n\n  * URL - The default mobile browser on\
            \ the recipient's device opens and loads the web page at a URL that you\
            \ specify."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the notification message.
        CollapseKey:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'An arbitrary string that identifies a group of messages that
            can be collapsed to ensure that only the last message is sent when delivery
            can resume. This helps avoid sending too many instances of the same messages
            when the recipient''s device comes online again or becomes active.


            Amazon Pinpoint specifies this value in the Firebase Cloud Messaging (FCM)
            collapse_key parameter when it sends the notification message to FCM.'
        Data:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: The JSON data payload to use for the push notification, if
            the notification is a silent push notification. This payload is added
            to the data.pinpoint.jsonBody object of the notification.
        IconReference:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The icon image name of the asset saved in your app.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the large icon image to display in the content view
            of the push notification.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of an image to display in the push notification.
        PreferredAuthenticationMethod:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The preferred authentication method, with valid values "KEY"
            or "TOKEN". If a value isn't provided then the **DefaultAuthenticationMethod**
            is used.
        Priority:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'para>normal – The notification might be delayed. Delivery
            is optimized for battery usage on the recipient''s device. Use this value
            unless immediate delivery is required.


            /listitem>


            * high – The notification is sent immediately and might wake a sleeping
            device.


            /para>


            Amazon Pinpoint specifies this value in the FCM priority parameter when
            it sends the notification message to FCM.


            The equivalent values for Apple Push Notification service (APNs) are 5,
            for normal, and 10, for high. If you specify an APNs value for this property,
            Amazon Pinpoint accepts and converts the value to the corresponding FCM
            value.'
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for the
            notification message. If specified, this value overrides all other content
            for the message.
        RestrictedPackageName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The package name of the application where registration tokens
            must match in order for the recipient to receive the message.
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the notification is a silent push notification,
            which is a push notification that doesn't display on a recipient's device.
            Silent push notifications can be used for cases such as updating an app's
            configuration or supporting phone home functionality.
        SmallImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the small icon image to display in the status bar
            and the content view of the push notification.
        Sound:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The sound to play when the recipient receives the push notification.
            You can use the default stream or specify the file name of a sound resource
            that's bundled in your app. On an Android platform, the sound file must
            reside in /res/raw/.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The default message variables to use in the notification message.
            You can override the default variables with individual address variables.
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The amount of time, in seconds, that FCM should store and
            attempt to deliver the push notification, if the service is unable to
            deliver the notification the first time. If you don''t specify this value,
            FCM defaults to the maximum value, which is 2,419,200 seconds (28 days).


            Amazon Pinpoint specifies this value in the FCM time_to_live parameter
            when it sends the notification message to FCM.'
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title to display above the notification message on the
            recipient's device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL to open in the recipient's default mobile browser,
            if a recipient taps the push notification and the value of the Action
            property is URL.
      description: Specifies the settings for a one-time message that's sent directly
        to an endpoint through the GCM channel. The GCM channel enables Amazon Pinpoint
        to send messages to the Firebase Cloud Messaging (FCM), formerly Google Cloud
        Messaging (GCM), service.
    GPSCoordinates:
      type: object
      properties:
        Latitude:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The latitude coordinate of the location.
        Longitude:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The longitude coordinate of the location.
      required:
      - Latitude
      - Longitude
      description: Specifies the GPS coordinates of a location.
    GPSPointDimension:
      type: object
      properties:
        Coordinates:
          allOf:
          - $ref: '#/components/schemas/GPSCoordinates'
          description: The GPS coordinates to measure distance from.
        RangeInKilometers:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The range, in kilometers, from the GPS coordinates.
      required:
      - Coordinates
      description: Specifies GPS-based criteria for including or excluding endpoints
        from a segment.
    GetAdmChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetAdmChannelResponse:
      type: object
      properties:
        ADMChannelResponse:
          $ref: '#/components/schemas/ADMChannelResponse'
      required:
      - ADMChannelResponse
    GetApnsChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetApnsChannelResponse:
      type: object
      properties:
        APNSChannelResponse:
          $ref: '#/components/schemas/APNSChannelResponse'
      required:
      - APNSChannelResponse
    GetApnsSandboxChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetApnsSandboxChannelResponse:
      type: object
      properties:
        APNSSandboxChannelResponse:
          $ref: '#/components/schemas/APNSSandboxChannelResponse'
      required:
      - APNSSandboxChannelResponse
    GetApnsVoipChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetApnsVoipChannelResponse:
      type: object
      properties:
        APNSVoipChannelResponse:
          $ref: '#/components/schemas/APNSVoipChannelResponse'
      required:
      - APNSVoipChannelResponse
    GetApnsVoipSandboxChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetApnsVoipSandboxChannelResponse:
      type: object
      properties:
        APNSVoipSandboxChannelResponse:
          $ref: '#/components/schemas/APNSVoipSandboxChannelResponse'
      required:
      - APNSVoipSandboxChannelResponse
    GetAppRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetAppResponse:
      type: object
      properties:
        ApplicationResponse:
          $ref: '#/components/schemas/ApplicationResponse'
      required:
      - ApplicationResponse
    GetApplicationDateRangeKpiRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: 'The last date and time to retrieve data for, as part of an
            inclusive date range that filters the query results. This value should
            be in extended ISO 8601 format and use Coordinated Universal Time (UTC),
            for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.'
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the metric, also referred to as a _key performance
            indicator (KPI)_ , to retrieve data for. This value describes the associated
            metric and consists of two or more terms, which are comprised of lowercase
            alphanumeric characters, separated by a hyphen. Examples are email-open-rate
            and successful-delivery-rate. For a list of valid values, see the [Amazon
            Pinpoint Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string that specifies which page of results to return in
            a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: 'The first date and time to retrieve data for, as part of an
            inclusive date range that filters the query results. This value should
            be in extended ISO 8601 format and use Coordinated Universal Time (UTC),
            for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This
            value should also be fewer than 90 days from the current day.'
      required:
      - ApplicationId
      - KpiName
    GetApplicationDateRangeKpiResponse:
      type: object
      properties:
        ApplicationDateRangeKpiResponse:
          $ref: '#/components/schemas/ApplicationDateRangeKpiResponse'
      required:
      - ApplicationDateRangeKpiResponse
    GetApplicationSettingsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetApplicationSettingsResponse:
      type: object
      properties:
        ApplicationSettingsResource:
          $ref: '#/components/schemas/ApplicationSettingsResource'
      required:
      - ApplicationSettingsResource
    GetAppsRequest:
      type: object
      properties:
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
    GetAppsResponse:
      type: object
      properties:
        ApplicationsResponse:
          $ref: '#/components/schemas/ApplicationsResponse'
      required:
      - ApplicationsResponse
    GetBaiduChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetBaiduChannelResponse:
      type: object
      properties:
        BaiduChannelResponse:
          $ref: '#/components/schemas/BaiduChannelResponse'
      required:
      - BaiduChannelResponse
    GetCampaignActivitiesRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
      - CampaignId
    GetCampaignActivitiesResponse:
      type: object
      properties:
        ActivitiesResponse:
          $ref: '#/components/schemas/ActivitiesResponse'
      required:
      - ActivitiesResponse
    GetCampaignDateRangeKpiRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: 'The last date and time to retrieve data for, as part of an
            inclusive date range that filters the query results. This value should
            be in extended ISO 8601 format and use Coordinated Universal Time (UTC),
            for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.'
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the metric, also referred to as a _key performance
            indicator (KPI)_ , to retrieve data for. This value describes the associated
            metric and consists of two or more terms, which are comprised of lowercase
            alphanumeric characters, separated by a hyphen. Examples are email-open-rate
            and successful-delivery-rate. For a list of valid values, see the [Amazon
            Pinpoint Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string that specifies which page of results to return in
            a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: 'The first date and time to retrieve data for, as part of an
            inclusive date range that filters the query results. This value should
            be in extended ISO 8601 format and use Coordinated Universal Time (UTC),
            for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This
            value should also be fewer than 90 days from the current day.'
      required:
      - ApplicationId
      - CampaignId
      - KpiName
    GetCampaignDateRangeKpiResponse:
      type: object
      properties:
        CampaignDateRangeKpiResponse:
          $ref: '#/components/schemas/CampaignDateRangeKpiResponse'
      required:
      - CampaignDateRangeKpiResponse
    GetCampaignRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign.
      required:
      - ApplicationId
      - CampaignId
    GetCampaignResponse:
      type: object
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
    GetCampaignVersionRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique version number (Version property) for the campaign
            version.
      required:
      - ApplicationId
      - CampaignId
      - Version
    GetCampaignVersionResponse:
      type: object
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
    GetCampaignVersionsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
      - CampaignId
    GetCampaignVersionsResponse:
      type: object
      properties:
        CampaignsResponse:
          $ref: '#/components/schemas/CampaignsResponse'
      required:
      - CampaignsResponse
    GetCampaignsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
    GetCampaignsResponse:
      type: object
      properties:
        CampaignsResponse:
          $ref: '#/components/schemas/CampaignsResponse'
      required:
      - CampaignsResponse
    GetChannelsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetChannelsResponse:
      type: object
      properties:
        ChannelsResponse:
          $ref: '#/components/schemas/ChannelsResponse'
      required:
      - ChannelsResponse
    GetEmailChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetEmailChannelResponse:
      type: object
      properties:
        EmailChannelResponse:
          $ref: '#/components/schemas/EmailChannelResponse'
      required:
      - EmailChannelResponse
    GetEmailTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    GetEmailTemplateResponse:
      type: object
      properties:
        EmailTemplateResponse:
          $ref: '#/components/schemas/EmailTemplateResponse'
      required:
      - EmailTemplateResponse
    GetEndpointRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The case insensitive unique identifier for the endpoint. The
            identifier can't contain `$`, `{` or `}`.
      required:
      - ApplicationId
      - EndpointId
    GetEndpointResponse:
      type: object
      properties:
        EndpointResponse:
          $ref: '#/components/schemas/EndpointResponse'
      required:
      - EndpointResponse
    GetEventStreamRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetEventStreamResponse:
      type: object
      properties:
        EventStream:
          $ref: '#/components/schemas/EventStream'
      required:
      - EventStream
    GetExportJobRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the job.
      required:
      - ApplicationId
      - JobId
    GetExportJobResponse:
      type: object
      properties:
        ExportJobResponse:
          $ref: '#/components/schemas/ExportJobResponse'
      required:
      - ExportJobResponse
    GetExportJobsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
    GetExportJobsResponse:
      type: object
      properties:
        ExportJobsResponse:
          $ref: '#/components/schemas/ExportJobsResponse'
      required:
      - ExportJobsResponse
    GetGcmChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetGcmChannelResponse:
      type: object
      properties:
        GCMChannelResponse:
          $ref: '#/components/schemas/GCMChannelResponse'
      required:
      - GCMChannelResponse
    GetImportJobRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JobId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the job.
      required:
      - ApplicationId
      - JobId
    GetImportJobResponse:
      type: object
      properties:
        ImportJobResponse:
          $ref: '#/components/schemas/ImportJobResponse'
      required:
      - ImportJobResponse
    GetImportJobsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
    GetImportJobsResponse:
      type: object
      properties:
        ImportJobsResponse:
          $ref: '#/components/schemas/ImportJobsResponse'
      required:
      - ImportJobsResponse
    GetInAppMessagesRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the endpoint.
      required:
      - ApplicationId
      - EndpointId
    GetInAppMessagesResponse:
      type: object
      properties:
        InAppMessagesResponse:
          $ref: '#/components/schemas/InAppMessagesResponse'
      required:
      - InAppMessagesResponse
    GetInAppTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    GetInAppTemplateResponse:
      type: object
      properties:
        InAppTemplateResponse:
          $ref: '#/components/schemas/InAppTemplateResponse'
      required:
      - InAppTemplateResponse
    GetJourneyDateRangeKpiRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: 'The last date and time to retrieve data for, as part of an
            inclusive date range that filters the query results. This value should
            be in extended ISO 8601 format and use Coordinated Universal Time (UTC),
            for example: 2019-07-26T20:00:00Z for 8:00 PM UTC July 26, 2019.'
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the metric, also referred to as a _key performance
            indicator (KPI)_ , to retrieve data for. This value describes the associated
            metric and consists of two or more terms, which are comprised of lowercase
            alphanumeric characters, separated by a hyphen. Examples are email-open-rate
            and successful-delivery-rate. For a list of valid values, see the [Amazon
            Pinpoint Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string that specifies which page of results to return in
            a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: 'The first date and time to retrieve data for, as part of an
            inclusive date range that filters the query results. This value should
            be in extended ISO 8601 format and use Coordinated Universal Time (UTC),
            for example: 2019-07-19T20:00:00Z for 8:00 PM UTC July 19, 2019. This
            value should also be fewer than 90 days from the current day.'
      required:
      - ApplicationId
      - JourneyId
      - KpiName
    GetJourneyDateRangeKpiResponse:
      type: object
      properties:
        JourneyDateRangeKpiResponse:
          $ref: '#/components/schemas/JourneyDateRangeKpiResponse'
      required:
      - JourneyDateRangeKpiResponse
    GetJourneyExecutionActivityMetricsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyActivityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey activity.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The `` string that specifies which page of results to return
            in a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
      required:
      - ApplicationId
      - JourneyActivityId
      - JourneyId
    GetJourneyExecutionActivityMetricsResponse:
      type: object
      properties:
        JourneyExecutionActivityMetricsResponse:
          $ref: '#/components/schemas/JourneyExecutionActivityMetricsResponse'
      required:
      - JourneyExecutionActivityMetricsResponse
    GetJourneyExecutionMetricsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The `` string that specifies which page of results to return
            in a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
      required:
      - ApplicationId
      - JourneyId
    GetJourneyExecutionMetricsResponse:
      type: object
      properties:
        JourneyExecutionMetricsResponse:
          $ref: '#/components/schemas/JourneyExecutionMetricsResponse'
      required:
      - JourneyExecutionMetricsResponse
    GetJourneyRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
      required:
      - ApplicationId
      - JourneyId
    GetJourneyResponse:
      type: object
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
    GetJourneyRunExecutionActivityMetricsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyActivityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey activity.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The `` string that specifies which page of results to return
            in a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        RunId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey run.
      required:
      - ApplicationId
      - JourneyActivityId
      - JourneyId
      - RunId
    GetJourneyRunExecutionActivityMetricsResponse:
      type: object
      properties:
        JourneyRunExecutionActivityMetricsResponse:
          $ref: '#/components/schemas/JourneyRunExecutionActivityMetricsResponse'
      required:
      - JourneyRunExecutionActivityMetricsResponse
    GetJourneyRunExecutionMetricsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The `` string that specifies which page of results to return
            in a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        RunId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey run.
      required:
      - ApplicationId
      - JourneyId
      - RunId
    GetJourneyRunExecutionMetricsResponse:
      type: object
      properties:
        JourneyRunExecutionMetricsResponse:
          $ref: '#/components/schemas/JourneyRunExecutionMetricsResponse'
      required:
      - JourneyRunExecutionMetricsResponse
    GetJourneyRunsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
      - JourneyId
    GetJourneyRunsResponse:
      type: object
      properties:
        JourneyRunsResponse:
          $ref: '#/components/schemas/JourneyRunsResponse'
      required:
      - JourneyRunsResponse
    GetPushTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    GetPushTemplateResponse:
      type: object
      properties:
        PushNotificationTemplateResponse:
          $ref: '#/components/schemas/PushNotificationTemplateResponse'
      required:
      - PushNotificationTemplateResponse
    GetRecommenderConfigurationRequest:
      type: object
      properties:
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model configuration.
            This identifier is displayed as the **Recommender ID** on the Amazon Pinpoint
            console.
      required:
      - RecommenderId
    GetRecommenderConfigurationResponse:
      type: object
      properties:
        RecommenderConfigurationResponse:
          $ref: '#/components/schemas/RecommenderConfigurationResponse'
      required:
      - RecommenderConfigurationResponse
    GetRecommenderConfigurationsRequest:
      type: object
      properties:
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
    GetRecommenderConfigurationsResponse:
      type: object
      properties:
        ListRecommenderConfigurationsResponse:
          $ref: '#/components/schemas/ListRecommenderConfigurationsResponse'
      required:
      - ListRecommenderConfigurationsResponse
    GetSegmentExportJobsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
      - SegmentId
    GetSegmentExportJobsResponse:
      type: object
      properties:
        ExportJobsResponse:
          $ref: '#/components/schemas/ExportJobsResponse'
      required:
      - ExportJobsResponse
    GetSegmentImportJobsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
      - SegmentId
    GetSegmentImportJobsResponse:
      type: object
      properties:
        ImportJobsResponse:
          $ref: '#/components/schemas/ImportJobsResponse'
      required:
      - ImportJobsResponse
    GetSegmentRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
      required:
      - ApplicationId
      - SegmentId
    GetSegmentResponse:
      type: object
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
    GetSegmentVersionRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique version number (Version property) for the campaign
            version.
      required:
      - ApplicationId
      - SegmentId
      - Version
    GetSegmentVersionResponse:
      type: object
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
    GetSegmentVersionsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
      - SegmentId
    GetSegmentVersionsResponse:
      type: object
      properties:
        SegmentsResponse:
          $ref: '#/components/schemas/SegmentsResponse'
      required:
      - SegmentsResponse
    GetSegmentsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
    GetSegmentsResponse:
      type: object
      properties:
        SegmentsResponse:
          $ref: '#/components/schemas/SegmentsResponse'
      required:
      - SegmentsResponse
    GetSmsChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetSmsChannelResponse:
      type: object
      properties:
        SMSChannelResponse:
          $ref: '#/components/schemas/SMSChannelResponse'
      required:
      - SMSChannelResponse
    GetSmsTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    GetSmsTemplateResponse:
      type: object
      properties:
        SMSTemplateResponse:
          $ref: '#/components/schemas/SMSTemplateResponse'
      required:
      - SMSTemplateResponse
    GetUserEndpointsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        UserId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the user.
      required:
      - ApplicationId
      - UserId
    GetUserEndpointsResponse:
      type: object
      properties:
        EndpointsResponse:
          $ref: '#/components/schemas/EndpointsResponse'
      required:
      - EndpointsResponse
    GetVoiceChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ApplicationId
    GetVoiceChannelResponse:
      type: object
      properties:
        VoiceChannelResponse:
          $ref: '#/components/schemas/VoiceChannelResponse'
      required:
      - VoiceChannelResponse
    GetVoiceTemplateRequest:
      type: object
      properties:
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - TemplateName
    GetVoiceTemplateResponse:
      type: object
      properties:
        VoiceTemplateResponse:
          $ref: '#/components/schemas/VoiceTemplateResponse'
      required:
      - VoiceTemplateResponse
    HoldoutActivity:
      type: object
      properties:
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform, after
            performing the holdout activity.
        Percentage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The percentage of participants who shouldn''t continue the
            journey.


            To determine which participants are held out, Amazon Pinpoint applies
            a probability-based algorithm to the percentage that you specify. Therefore,
            the actual percentage of participants who are held out may not be equal
            to the percentage that you specify.'
      required:
      - Percentage
      description: Specifies the settings for a holdout activity in a journey. This
        type of activity stops a journey for a specified percentage of participants.
    ImportJobRequest:
      type: object
      properties:
        DefineSegment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to create a segment that contains the endpoints,
            when the endpoint definitions are imported.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) Your AWS account ID, which you assigned to an
            external ID key in an IAM trust policy. Amazon Pinpoint previously used
            this value to assume an IAM role when importing endpoint definitions,
            but we removed this requirement. We don't recommend use of external IDs
            for IAM roles that are assumed by Amazon Pinpoint.
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          description: 'The format of the files that contain the endpoint definitions
            to import. Valid values are: CSV, for comma-separated values format; and,
            JSON, for newline-delimited JSON format. If the Amazon S3 location stores
            multiple files that use different formats, Amazon Pinpoint imports data
            only from the files that use the specified format.'
        RegisterEndpoints:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to register the endpoints with Amazon Pinpoint,
            when the endpoint definitions are imported.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that authorizes Amazon Pinpoint to access the Amazon
            S3 location to import endpoint definitions from.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The URL of the Amazon Simple Storage Service (Amazon S3) bucket
            that contains the endpoint definitions to import. This location can be
            a folder or a single file. If the location is a folder, Amazon Pinpoint
            imports endpoint definitions from the files in this location, including
            any subfolders that the folder contains.


            The URL should be in the following format: s3://bucket-name/folder-name/file-name.
            The location can end with the key for an individual object or a prefix
            that qualifies multiple objects.'
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the segment to update or add the imported
            endpoint definitions to, if the import job is meant to update an existing
            segment.
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom name for the segment that's created by the import
            job, if the value of the DefineSegment property is true.
      required:
      - Format
      - RoleArn
      - S3Url
      description: Specifies the settings for a job that imports endpoint definitions
        from an Amazon Simple Storage Service (Amazon S3) bucket.
    ImportJobResource:
      type: object
      properties:
        DefineSegment:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the import job creates a segment that contains
            the endpoints, when the endpoint definitions are imported.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) Your AWS account ID, which you assigned to an
            external ID key in an IAM trust policy. Amazon Pinpoint previously used
            this value to assume an IAM role when importing endpoint definitions,
            but we removed this requirement. We don't recommend use of external IDs
            for IAM roles that are assumed by Amazon Pinpoint.
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          description: 'The format of the files that contain the endpoint definitions
            to import. Valid values are: CSV, for comma-separated values format; and,
            JSON, for newline-delimited JSON format.


            If the files are stored in an Amazon S3 location and that location contains
            multiple files that use different formats, Amazon Pinpoint imports data
            only from the files that use the specified format.'
        RegisterEndpoints:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the import job registers the endpoints with
            Amazon Pinpoint, when the endpoint definitions are imported.
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that authorizes Amazon Pinpoint to access the Amazon
            S3 location to import endpoint definitions from.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The URL of the Amazon Simple Storage Service (Amazon S3) bucket
            that contains the endpoint definitions to import. This location can be
            a folder or a single file. If the location is a folder, Amazon Pinpoint
            imports endpoint definitions from the files in this location, including
            any subfolders that the folder contains.


            The URL should be in the following format: s3://bucket-name/folder-name/file-name.
            The location can end with the key for an individual object or a prefix
            that qualifies multiple objects.'
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the segment that the import job updates
            or adds endpoint definitions to, if the import job updates an existing
            segment.
        SegmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom name for the segment that's created by the import
            job, if the value of the DefineSegment property is true.
      required:
      - Format
      - RoleArn
      - S3Url
      description: Provides information about the resource settings for a job that
        imports endpoint definitions from one or more files. The files can be stored
        in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly
        from a computer by using the Amazon Pinpoint console.
    ImportJobResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that's associated
            with the import job.
        CompletedPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of pieces that were processed successfully (completed)
            by the import job, as of the time of the request.
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the import job was completed.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the import job was created.
        Definition:
          allOf:
          - $ref: '#/components/schemas/ImportJobResource'
          description: The resource settings that apply to the import job.
        FailedPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of pieces that weren't processed successfully (failed)
            by the import job, as of the time of the request.
        Failures:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: An array of entries, one for each of the first 100 entries
            that weren't processed successfully (failed) by the import job, if any.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the import job.
        JobStatus:
          allOf:
          - $ref: '#/components/schemas/JobStatus'
          description: The status of the import job. The job status is FAILED if Amazon
            Pinpoint wasn't able to process one or more pieces in the job.
        TotalFailures:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of endpoint definitions that weren't processed
            successfully (failed) by the import job, typically because an error, such
            as a syntax error, occurred.
        TotalPieces:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of pieces that must be processed to complete
            the import job. Each piece consists of an approximately equal portion
            of the endpoint definitions that are part of the import job.
        TotalProcessed:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The total number of endpoint definitions that were processed
            by the import job.
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The job type. This value is IMPORT for import jobs.
      required:
      - ApplicationId
      - CreationDate
      - Definition
      - Id
      - JobStatus
      - Type
      description: Provides information about the status and settings of a job that
        imports endpoint definitions from one or more files. The files can be stored
        in an Amazon Simple Storage Service (Amazon S3) bucket or uploaded directly
        from a computer by using the Amazon Pinpoint console.
    ImportJobsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfImportJobResponse'
          description: An array of responses, one for each import job that's associated
            with the application (Import Jobs resource) or segment (Segment Import
            Jobs resource).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information about the status and settings of all the import
        jobs that are associated with an application or segment. An import job is
        a job that imports endpoint definitions from one or more files.
    InAppCampaignSchedule:
      type: object
      properties:
        EndDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The scheduled time after which the in-app message should not
            be shown. Timestamp is in ISO 8601 format.
        EventFilter:
          allOf:
          - $ref: '#/components/schemas/CampaignEventFilter'
          description: The event filter the SDK has to use to show the in-app message
            in the application.
        QuietTime:
          allOf:
          - $ref: '#/components/schemas/QuietTime'
          description: Time during which the in-app message should not be shown to
            the user.
      description: Schedule of the campaign.
    InAppMessage:
      type: object
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          description: In-app message content.
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: Custom config to be sent to SDK.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          description: The layout of the message.
      description: Provides all fields required for building an in-app message.
    InAppMessageBodyConfig:
      type: object
      properties:
        Alignment:
          allOf:
          - $ref: '#/components/schemas/Alignment'
          description: 'The alignment of the text. Valid values: LEFT, CENTER, RIGHT.'
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Message Body.
        TextColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The text color.
      required:
      - Alignment
      - Body
      - TextColor
      description: Text config for Message Body.
    InAppMessageButton:
      type: object
      properties:
        Android:
          allOf:
          - $ref: '#/components/schemas/OverrideButtonConfiguration'
          description: Default button content.
        DefaultConfig:
          allOf:
          - $ref: '#/components/schemas/DefaultButtonConfiguration'
          description: Default button content.
        IOS:
          allOf:
          - $ref: '#/components/schemas/OverrideButtonConfiguration'
          description: Default button content.
        Web:
          allOf:
          - $ref: '#/components/schemas/OverrideButtonConfiguration'
          description: Default button content.
      description: Button Config for an in-app message.
    InAppMessageCampaign:
      type: object
      properties:
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Campaign id of the corresponding campaign.
        DailyCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Daily cap which controls the number of times any in-app messages
            can be shown to the endpoint during a day.
        InAppMessage:
          allOf:
          - $ref: '#/components/schemas/InAppMessage'
          description: In-app message content with all fields required for rendering
            an in-app message.
        Priority:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Priority of the in-app message.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/InAppCampaignSchedule'
          description: Schedule of the campaign.
        SessionCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Session cap which controls the number of times an in-app message
            can be shown to the endpoint during an application session.
        TotalCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Total cap which controls the number of times an in-app message
            can be shown to the endpoint.
        TreatmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Treatment id of the campaign.
      description: Targeted in-app message campaign.
    InAppMessageContent:
      type: object
      properties:
        BackgroundColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The background color for the message.
        BodyConfig:
          allOf:
          - $ref: '#/components/schemas/InAppMessageBodyConfig'
          description: The configuration for the message body.
        HeaderConfig:
          allOf:
          - $ref: '#/components/schemas/InAppMessageHeaderConfig'
          description: The configuration for the message header.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The image url for the background of message.
        PrimaryBtn:
          allOf:
          - $ref: '#/components/schemas/InAppMessageButton'
          description: The first button inside the message.
        SecondaryBtn:
          allOf:
          - $ref: '#/components/schemas/InAppMessageButton'
          description: The second button inside message.
      description: The configuration for the message content.
    InAppMessageHeaderConfig:
      type: object
      properties:
        Alignment:
          allOf:
          - $ref: '#/components/schemas/Alignment'
          description: 'The alignment of the text. Valid values: LEFT, CENTER, RIGHT.'
        Header:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Message Header.
        TextColor:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The text color.
      required:
      - Alignment
      - Header
      - TextColor
      description: Text config for Message Header.
    InAppMessagesResponse:
      type: object
      properties:
        InAppMessageCampaigns:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageCampaign'
          description: List of targeted in-app message campaigns.
      description: Get in-app messages response object.
    InAppTemplateRequest:
      type: object
      properties:
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          description: The content of the message, can include up to 5 modals. Each
            modal must contain a message, a header, and background color. ImageUrl
            and buttons are optional.
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: Custom config to be sent to client.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          description: The layout of the message.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'As of **22-05-2023** tags has been deprecated for update operations.
            After this date any value in tags is not processed and an error code is
            not returned. To manage tags we recommend using either [Tags](https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html)
            in the _API Reference for Amazon Pinpoint_ , [resourcegroupstaggingapi](https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html)
            commands in the _AWS Command Line Interface Documentation_ or [resourcegroupstaggingapi](https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html)
            in the _AWS SDK_.


            (Deprecated) A string-to-string map of key-value pairs that defines the
            tags to associate with the message template. Each tag consists of a required
            tag key and an associated tag value.'
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the template.
      description: InApp Template Request.
    InAppTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The resource arn of the template.
        Content:
          allOf:
          - $ref: '#/components/schemas/ListOfInAppMessageContent'
          description: The content of the message, can include up to 5 modals. Each
            modal must contain a message, a header, and background color. ImageUrl
            and buttons are optional.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The creation date of the template.
        CustomConfig:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: Custom config to be sent to client.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The last modified date of the template.
        Layout:
          allOf:
          - $ref: '#/components/schemas/Layout'
          description: The layout of the message.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that defines the
            tags to associate with the message template. Each tag consists of a required
            tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The description of the template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: The type of the template.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The version id of the template.
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      description: In-App Template Response.
    Include:
      type: string
      enum:
      - ALL
      - ANY
      - NONE
    InternalServerErrorException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    ItemResponse:
      type: object
      properties:
        EndpointItemResponse:
          allOf:
          - $ref: '#/components/schemas/EndpointItemResponse'
          description: The response that was received after the endpoint data was
            accepted.
        EventsItemResponse:
          allOf:
          - $ref: '#/components/schemas/MapOfEventItemResponse'
          description: A multipart response object that contains a key and a value
            for each event in the request. In each object, the event ID is the key
            and an EventItemResponse object is the value.
      description: Provides information about the results of a request to create or
        update an endpoint that's associated with an event.
    JobStatus:
      type: string
      enum:
      - CREATED
      - PREPARING_FOR_INITIALIZATION
      - INITIALIZING
      - PROCESSING
      - PENDING_JOB
      - COMPLETING
      - COMPLETED
      - FAILING
      - FAILED
    JourneyChannelSettings:
      type: object
      properties:
        ConnectCampaignArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Amazon Resource Name (ARN) of the Connect Campaign.
        ConnectCampaignExecutionRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: IAM role ARN to be assumed when invoking Connect campaign execution
            APIs for dialing.
      description: The channel-specific configurations for the journey.
    JourneyCustomMessage:
      type: object
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message content that's passed to an AWS Lambda function
            or to a web hook.
      description: Specifies the message content for a custom channel message that's
        sent to participants in a journey.
    JourneyDateRangeKpiResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the metric applies
            to.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The last date and time of the date range that was used to filter
            the query results, in extended ISO 8601 format. The date range is inclusive.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey that the metric applies
            to.
        KpiName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the metric, also referred to as a _key performance
            indicator (KPI)_ , that the data was retrieved for. This value describes
            the associated metric and consists of two or more terms, which are comprised
            of lowercase alphanumeric characters, separated by a hyphen. For a list
            of possible values, see the [Amazon Pinpoint Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html).
        KpiResult:
          allOf:
          - $ref: '#/components/schemas/BaseKpiResult'
          description: An array of objects that contains the results of the query.
            Each object contains the value for the metric and metadata about that
            value.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null for the Journey
            Engagement Metrics resource because the resource returns all results in
            a single page.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The first date and time of the date range that was used to
            filter the query results, in extended ISO 8601 format. The date range
            is inclusive.
      required:
      - ApplicationId
      - EndTime
      - JourneyId
      - KpiName
      - KpiResult
      - StartTime
      description: Provides the results of a query that retrieved the data for a standard
        engagement metric that applies to a journey, and provides information about
        that query.
    JourneyEmailMessage:
      type: object
      properties:
        FromAddress:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The verified email address to send the email message from.
            The default address is the FromAddress specified for the email channel
            for the application.
      description: Specifies the "From" address for an email message that's sent to
        participants in a journey.
    JourneyExecutionActivityMetricsResponse:
      type: object
      properties:
        ActivityType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The type of activity that the metric applies to. Possible\
            \ values are:\n\n  * CONDITIONAL_SPLIT – For a yes/no split activity,\
            \ which is an activity that sends participants down one of two paths in\
            \ a journey.\n\n  * HOLDOUT – For a holdout activity, which is an activity\
            \ that stops a journey for a specified percentage of participants.\n\n\
            \  * MESSAGE – For an email activity, which is an activity that sends\
            \ an email message to participants.\n\n  * MULTI_CONDITIONAL_SPLIT – For\
            \ a multivariate split activity, which is an activity that sends participants\
            \ down one of as many as five paths in a journey.\n\n  * RANDOM_SPLIT\
            \ – For a random split activity, which is an activity that sends specified\
            \ percentages of participants down one of as many as five paths in a journey.\n\
            \n  * WAIT – For a wait activity, which is an activity that waits for\
            \ a certain amount of time or until a specific date and time before moving\
            \ participants to the next activity in a journey."
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the metric applies
            to.
        JourneyActivityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the activity that the metric applies
            to.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey that the metric applies
            to.
        LastEvaluatedTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when Amazon Pinpoint
            last evaluated the execution status of the activity and updated the data
            for the metric.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A JSON object that contains the results of the query. The results
            vary depending on the type of activity (ActivityType). For information
            about the structure and contents of the results, see the [Amazon Pinpoint
            Developer Guide](https://docs.aws.amazon.com/pinpoint/latest/developerguide/analytics-standard-metrics.html).
      required:
      - ActivityType
      - ApplicationId
      - JourneyActivityId
      - JourneyId
      - LastEvaluatedTime
      - Metrics
      description: Provides the results of a query that retrieved the data for a standard
        execution metric that applies to a journey activity, and provides information
        about that query.
    JourneyExecutionMetricsResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the metric applies
            to.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey that the metric applies
            to.
        LastEvaluatedTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when Amazon Pinpoint
            last evaluated the journey and updated the data for the metric.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A JSON object that contains the results of the query. For information
            about the structure and contents of the results, see the [Amazon Pinpoint
            Developer Guide](https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html).
      required:
      - ApplicationId
      - JourneyId
      - LastEvaluatedTime
      - Metrics
      description: Provides the results of a query that retrieved the data for a standard
        execution metric that applies to a journey, and provides information about
        that query.
    JourneyLimits:
      type: object
      properties:
        DailyCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of messages that the journey can send to
            a single participant during a 24-hour period. The maximum value is 100.
        EndpointReentryCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of times that a participant can enter the
            journey. The maximum value is 100. To allow participants to enter the
            journey an unlimited number of times, set this value to 0.
        MessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of messages that the journey can send each
            second.
        EndpointReentryInterval:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Minimum time that must pass before an endpoint can re-enter
            a given journey. The duration should use an ISO 8601 format, such as PT1H.
        TimeframeCap:
          allOf:
          - $ref: '#/components/schemas/JourneyTimeframeCap'
          description: The number of messages that an endpoint can receive during
            the specified timeframe.
        TotalCap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of messages a journey can sent to a single
            endpoint. The maximum value is 100. If set to 0, this limit will not apply.
      description: Specifies limits on the messages that a journey can send and the
        number of times participants can enter a journey.
    JourneyPushMessage:
      type: object
      properties:
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The number of seconds that the push notification service should
            keep the message, if the service is unable to deliver the notification
            the first time. This value is converted to an expiration value when it''s
            sent to a push-notification service. If this value is 0, the service treats
            the notification as if it expires immediately and the service doesn''t
            store or try to deliver the notification again.


            This value doesn''t apply to messages that are sent through the Amazon
            Device Messaging (ADM) service.'
      description: Specifies the message configuration for a push notification that's
        sent to participants in a journey.
    JourneyResponse:
      type: object
      properties:
        Activities:
          allOf:
          - $ref: '#/components/schemas/MapOfActivity'
          description: A map that contains a set of Activity objects, one object for
            each activity in the journey. For each Activity object, the key is the
            unique identifier (string) for an activity and the value is the settings
            for the activity.
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the journey
            applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the journey was created.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the journey was last modified.
        Limits:
          allOf:
          - $ref: '#/components/schemas/JourneyLimits'
          description: The messaging and entry limits for the journey.
        LocalTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the journey's scheduled start and end times
            use each participant's local time. If this value is true, the schedule
            uses each participant's local time.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the journey.
        QuietTime:
          allOf:
          - $ref: '#/components/schemas/QuietTime'
          description: "The quiet time settings for the journey. Quiet time is a specific\
            \ time range when a journey doesn't send messages to participants, if\
            \ all the following conditions are met:\n\n  * The EndpointDemographic.Timezone\
            \ property of the endpoint for the participant is set to a valid value.\n\
            \n  * The current time in the participant's time zone is later than or\
            \ equal to the time specified by the QuietTime.Start property for the\
            \ journey.\n\n  * The current time in the participant's time zone is earlier\
            \ than or equal to the time specified by the QuietTime.End property for\
            \ the journey.\n\nIf any of the preceding conditions isn't met, the participant\
            \ will receive messages from the journey, even if quiet time is enabled."
        RefreshFrequency:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The frequency with which Amazon Pinpoint evaluates segment
            and event data for the journey, as a duration in ISO 8601 format.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/JourneySchedule'
          description: The schedule settings for the journey.
        StartActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the first activity in the journey.
        StartCondition:
          allOf:
          - $ref: '#/components/schemas/StartCondition'
          description: The segment that defines which users are participants in the
            journey.
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          description: "The current status of the journey. Possible values are:\n\n\
            \  * DRAFT - The journey is being developed and hasn't been published\
            \ yet.\n\n  * ACTIVE - The journey has been developed and published. Depending\
            \ on the journey's schedule, the journey may currently be running or scheduled\
            \ to start running at a later time. If a journey's status is ACTIVE, you\
            \ can't add, change, or remove activities from it.\n\n  * COMPLETED -\
            \ The journey has been published and has finished running. All participants\
            \ have entered the journey and no participants are waiting to complete\
            \ the journey or any activities in the journey.\n\n  * CANCELLED - The\
            \ journey has been stopped. If a journey's status is CANCELLED, you can't\
            \ add, change, or remove activities or segment settings from the journey.\n\
            \n  * CLOSED - The journey has been published and has started running.\
            \ It may have also passed its scheduled end time, or passed its scheduled\
            \ start time and a refresh frequency hasn't been specified for it. If\
            \ a journey's status is CLOSED, you can't add participants to it, and\
            \ no existing participants can enter the journey for the first time. However,\
            \ any existing participants who are currently waiting to start an activity\
            \ may continue the journey."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: This object is not used or supported.
        WaitForQuietTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether endpoints in quiet hours should enter a wait
            activity until quiet hours have elapsed.
        RefreshOnSegmentUpdate:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether the journey participants should be refreshed
            when a segment is updated.
        JourneyChannelSettings:
          allOf:
          - $ref: '#/components/schemas/JourneyChannelSettings'
          description: The channel-specific configurations for the journey.
        SendingSchedule:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates if journey has Advance Quiet Time enabled. This flag
            should be set to true in order to allow using OpenHours and ClosedDays.
        OpenHours:
          allOf:
          - $ref: '#/components/schemas/OpenHours'
          description: The time when a journey can send messages. QuietTime should
            be configured first and SendingSchedule should be set to true.
        ClosedDays:
          allOf:
          - $ref: '#/components/schemas/ClosedDays'
          description: The time when a journey will not send messages. QuietTime should
            be configured first and SendingSchedule should be set to true.
        TimezoneEstimationMethods:
          allOf:
          - $ref: '#/components/schemas/ListOf__TimezoneEstimationMethodsElement'
          description: "An array of time zone estimation methods, if any, to use for\
            \ determining an [Endpoints](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-endpoints-endpoint-id.html)\
            \ time zone if the Endpoint does not have a value for the Demographic.Timezone\
            \ attribute.\n\n  * PHONE_NUMBER - A time zone is determined based on\
            \ the Endpoint.Address and Endpoint.Location.Country.\n\n  * POSTAL_CODE\
            \ - A time zone is determined based on the Endpoint.Location.PostalCode\
            \ and Endpoint.Location.Country.\n\nPOSTAL_CODE detection is only supported\
            \ in the United States, United Kingdom, Australia, New Zealand, Canada,\
            \ France, Italy, Spain, Germany and in regions where Amazon Pinpoint is\
            \ available."
      required:
      - ApplicationId
      - Id
      - Name
      description: Provides information about the status, configuration, and other
        settings for a journey.
    JourneyRunExecutionActivityMetricsResponse:
      type: object
      properties:
        ActivityType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The type of activity that the metric applies to. Possible\
            \ values are:\n\n  * CONDITIONAL_SPLIT – For a yes/no split activity,\
            \ which is an activity that sends participants down one of two paths in\
            \ a journey.\n\n  * HOLDOUT – For a holdout activity, which is an activity\
            \ that stops a journey for a specified percentage of participants.\n\n\
            \  * MESSAGE – For an email activity, which is an activity that sends\
            \ an email message to participants.\n\n  * MULTI_CONDITIONAL_SPLIT – For\
            \ a multivariate split activity, which is an activity that sends participants\
            \ down one of as many as five paths in a journey.\n\n  * RANDOM_SPLIT\
            \ – For a random split activity, which is an activity that sends specified\
            \ percentages of participants down one of as many as five paths in a journey.\n\
            \n  * WAIT – For a wait activity, which is an activity that waits for\
            \ a certain amount of time or until a specific date and time before moving\
            \ participants to the next activity in a journey."
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the metric applies
            to.
        JourneyActivityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the activity that the metric applies
            to.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey that the metric applies
            to.
        LastEvaluatedTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when Amazon Pinpoint
            last evaluated the execution status of the activity for this journey run
            and updated the data for the metric.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A JSON object that contains the results of the query. For information
            about the structure and contents of the results, see see [Standard Amazon
            Pinpoint analytics metrics](https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html)
            in the _Amazon Pinpoint Developer Guide_.
        RunId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey run that the metric applies
            to.
      required:
      - ActivityType
      - ApplicationId
      - JourneyActivityId
      - JourneyId
      - LastEvaluatedTime
      - Metrics
      - RunId
      description: Provides the results of a query that retrieved the data for a standard
        execution metric that applies to a journey activity for a particular journey
        run, and provides information about that query.
    JourneyRunExecutionMetricsResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the metric applies
            to.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey that the metric applies
            to.
        LastEvaluatedTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when Amazon Pinpoint
            last evaluated the journey run and updated the data for the metric.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A JSON object that contains the results of the query. For information
            about the structure and contents of the results, see the [Standard Amazon
            Pinpoint analytics metrics](https://docs.aws.amazon.com//pinpoint/latest/developerguide/analytics-standard-metrics.html)
            in the _Amazon Pinpoint Developer Guide_.
        RunId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey run that the metric applies
            to.
      required:
      - ApplicationId
      - JourneyId
      - LastEvaluatedTime
      - Metrics
      - RunId
      description: Provides the results of a query that retrieved the data for a standard
        execution metric that applies to a journey run, and provides information about
        that query.
    JourneyRunResponse:
      type: object
      properties:
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time when the journey run was created or scheduled, in
            ISO 8601 format.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The last time the journey run was updated, in ISO 8601 format..
        RunId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the run.
        Status:
          allOf:
          - $ref: '#/components/schemas/JourneyRunStatus'
          description: The current status of the journey run.
      required:
      - CreationTime
      - LastUpdateTime
      - RunId
      - Status
      description: Provides information from a specified run of a journey.
    JourneyRunStatus:
      type: string
      enum:
      - SCHEDULED
      - RUNNING
      - COMPLETED
      - CANCELLED
    JourneyRunsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfJourneyRunResponse'
          description: An array of responses, one for each run of the journey
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information from all runs of a journey.
    JourneySMSMessage:
      type: object
      properties:
        MessageType:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: The SMS message type. Valid values are TRANSACTIONAL (for messages
            that are critical or time-sensitive, such as a one-time passwords) and
            PROMOTIONAL (for messsages that aren't critical or time-sensitive, such
            as marketing messages).
        OriginationNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The long code to send the SMS message from. This value should
            be one of the dedicated long codes that's assigned to your AWS account.
            Although it isn't required, we recommend that you specify the long code
            using an E.164 format to ensure prompt and accurate delivery of the message.
            For example, +12065550100.
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The sender ID to display as the sender of the message on a
            recipient's device. Support for sender IDs varies by country or region.
            For more information, see [Supported Countries and Regions](https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-sms-countries.html)
            in the Amazon Pinpoint User Guide.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The entity ID or Principal Entity (PE) id received from the
            regulatory body for sending SMS in your country.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The template ID received from the regulatory body for sending
            SMS in your country.
      description: Specifies the sender ID and message type for an SMS message that's
        sent to participants in a journey.
    JourneySchedule:
      type: object
      properties:
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The scheduled time, in ISO 8601 format, when the journey ended
            or will end.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__timestampIso8601'
          description: The scheduled time, in ISO 8601 format, when the journey began
            or will begin.
        Timezone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The starting UTC offset for the journey schedule, if the value
            of the journey''s LocalTime property is true. Valid values are: UTC, UTC+01,
            UTC+02, UTC+03, UTC+03:30, UTC+04, UTC+04:30, UTC+05, UTC+05:30, UTC+05:45,
            UTC+06, UTC+06:30, UTC+07, UTC+08, UTC+08:45, UTC+09, UTC+09:30, UTC+10,
            UTC+10:30, UTC+11, UTC+12, UTC+12:45, UTC+13, UTC+13:45, UTC-02, UTC-02:30,
            UTC-03, UTC-03:30, UTC-04, UTC-05, UTC-06, UTC-07, UTC-08, UTC-09, UTC-09:30,
            UTC-10, and UTC-11.'
      description: Specifies the schedule settings for a journey.
    JourneyStateRequest:
      type: object
      properties:
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          description: 'The status of the journey. Currently, Supported values are
            ACTIVE, PAUSED, and CANCELLED


            If you cancel a journey, Amazon Pinpoint continues to perform activities
            that are currently in progress, until those activities are complete. Amazon
            Pinpoint also continues to collect and aggregate analytics data for those
            activities, until they are complete, and any activities that were complete
            when you cancelled the journey.


            After you cancel a journey, you can''t add, change, or remove any activities
            from the journey. In addition, Amazon Pinpoint stops evaluating the journey
            and doesn''t perform any activities that haven''t started.


            When the journey is paused, Amazon Pinpoint continues to perform activities
            that are currently in progress, until those activities are complete. Endpoints
            will stop entering journeys when the journey is paused and will resume
            entering the journey after the journey is resumed. For wait activities,
            wait time is paused when the journey is paused. Currently, PAUSED only
            supports journeys with a segment refresh interval.'
      description: Changes the status of a journey.
    JourneyTimeframeCap:
      type: object
      properties:
        Cap:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of messages that all journeys can send to
            an endpoint during the specified timeframe. The maximum value is 100.
            If set to 0, this limit will not apply.
        Days:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The length of the timeframe in days. The maximum value is 30.
            If set to 0, this limit will not apply.
      description: The number of messages that can be sent to an endpoint during the
        specified timeframe for all journeys.
    JourneysResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfJourneyResponse'
          description: An array of responses, one for each journey that's associated
            with the application.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information about the status, configuration, and other
        settings for all the journeys that are associated with an application.
    Layout:
      type: string
      enum:
      - BOTTOM_BANNER
      - TOP_BANNER
      - OVERLAYS
      - MOBILE_FEED
      - MIDDLE_BANNER
      - CAROUSEL
    ListJourneysRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Token:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The NextToken string that specifies which page of results to
            return in a paginated response.
      required:
      - ApplicationId
    ListJourneysResponse:
      type: object
      properties:
        JourneysResponse:
          $ref: '#/components/schemas/JourneysResponse'
      required:
      - JourneysResponse
    ListOfActivityResponse:
      type: array
      items:
        $ref: '#/components/schemas/ActivityResponse'
    ListOfApplicationResponse:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationResponse'
    ListOfCampaignResponse:
      type: array
      items:
        $ref: '#/components/schemas/CampaignResponse'
    ListOfClosedDaysRules:
      type: array
      items:
        $ref: '#/components/schemas/ClosedDaysRule'
    ListOfEndpointBatchItem:
      type: array
      items:
        $ref: '#/components/schemas/EndpointBatchItem'
    ListOfEndpointResponse:
      type: array
      items:
        $ref: '#/components/schemas/EndpointResponse'
    ListOfExportJobResponse:
      type: array
      items:
        $ref: '#/components/schemas/ExportJobResponse'
    ListOfImportJobResponse:
      type: array
      items:
        $ref: '#/components/schemas/ImportJobResponse'
    ListOfInAppMessageCampaign:
      type: array
      items:
        $ref: '#/components/schemas/InAppMessageCampaign'
    ListOfInAppMessageContent:
      type: array
      items:
        $ref: '#/components/schemas/InAppMessageContent'
    ListOfJourneyResponse:
      type: array
      items:
        $ref: '#/components/schemas/JourneyResponse'
    ListOfJourneyRunResponse:
      type: array
      items:
        $ref: '#/components/schemas/JourneyRunResponse'
    ListOfMessageHeader:
      type: array
      items:
        $ref: '#/components/schemas/MessageHeader'
    ListOfMultiConditionalBranch:
      type: array
      items:
        $ref: '#/components/schemas/MultiConditionalBranch'
    ListOfOpenHoursRules:
      type: array
      items:
        $ref: '#/components/schemas/OpenHoursRule'
    ListOfRandomSplitEntry:
      type: array
      items:
        $ref: '#/components/schemas/RandomSplitEntry'
    ListOfRecommenderConfigurationResponse:
      type: array
      items:
        $ref: '#/components/schemas/RecommenderConfigurationResponse'
    ListOfResultRow:
      type: array
      items:
        $ref: '#/components/schemas/ResultRow'
    ListOfResultRowValue:
      type: array
      items:
        $ref: '#/components/schemas/ResultRowValue'
    ListOfSegmentDimensions:
      type: array
      items:
        $ref: '#/components/schemas/SegmentDimensions'
    ListOfSegmentGroup:
      type: array
      items:
        $ref: '#/components/schemas/SegmentGroup'
    ListOfSegmentReference:
      type: array
      items:
        $ref: '#/components/schemas/SegmentReference'
    ListOfSegmentResponse:
      type: array
      items:
        $ref: '#/components/schemas/SegmentResponse'
    ListOfSimpleCondition:
      type: array
      items:
        $ref: '#/components/schemas/SimpleCondition'
    ListOfTemplateResponse:
      type: array
      items:
        $ref: '#/components/schemas/TemplateResponse'
    ListOfTemplateVersionResponse:
      type: array
      items:
        $ref: '#/components/schemas/TemplateVersionResponse'
    ListOfTreatmentResource:
      type: array
      items:
        $ref: '#/components/schemas/TreatmentResource'
    ListOfWriteTreatmentResource:
      type: array
      items:
        $ref: '#/components/schemas/WriteTreatmentResource'
    ListOf__EndpointTypesElement:
      type: array
      items:
        $ref: '#/components/schemas/__EndpointTypesElement'
    ListOf__TimezoneEstimationMethodsElement:
      type: array
      items:
        $ref: '#/components/schemas/__TimezoneEstimationMethodsElement'
    ListOf__string:
      type: array
      items:
        $ref: '#/components/schemas/__string'
    ListRecommenderConfigurationsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfRecommenderConfigurationResponse'
          description: An array of responses, one for each recommender model configuration
            that's associated with your Amazon Pinpoint account.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information about all the recommender model configurations
        that are associated with your Amazon Pinpoint account.
    ListTagsForResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource.
      required:
      - ResourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        TagsModel:
          $ref: '#/components/schemas/TagsModel'
      required:
      - TagsModel
    ListTemplateVersionsRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string that specifies which page of results to return in
            a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The type of channel that the message template is designed
            for. Valid values are: EMAIL, PUSH, SMS, and VOICE.'
      required:
      - TemplateName
      - TemplateType
    ListTemplateVersionsResponse:
      type: object
      properties:
        TemplateVersionsResponse:
          $ref: '#/components/schemas/TemplateVersionsResponse'
      required:
      - TemplateVersionsResponse
    ListTemplatesRequest:
      type: object
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string that specifies which page of results to return in
            a paginated response. This parameter is not supported for application,
            campaign, and journey metrics.
        PageSize:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The maximum number of items to include in each page of a paginated
            response. This parameter is not supported for application, campaign, and
            journey metrics.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The substring to match in the names of the message templates
            to include in the results. If you specify this value, Amazon Pinpoint
            returns only those templates whose names begin with the value that you
            specify.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The type of message template to include in the results. Valid
            values are: EMAIL, PUSH, SMS, and VOICE. To include all types of templates
            in the results, don''t include this parameter in your request.'
    ListTemplatesResponse:
      type: object
      properties:
        TemplatesResponse:
          $ref: '#/components/schemas/TemplatesResponse'
      required:
      - TemplatesResponse
    MapOfActivity:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Activity'
    MapOfAddressConfiguration:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AddressConfiguration'
    MapOfAttributeDimension:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/AttributeDimension'
    MapOfChannelResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ChannelResponse'
    MapOfEndpointMessageResult:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EndpointMessageResult'
    MapOfEndpointSendConfiguration:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EndpointSendConfiguration'
    MapOfEvent:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Event'
    MapOfEventItemResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EventItemResponse'
    MapOfEventsBatch:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/EventsBatch'
    MapOfItemResponse:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ItemResponse'
    MapOfListOfOpenHoursRules:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ListOfOpenHoursRules'
    MapOfListOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ListOf__string'
    MapOfMapOfEndpointMessageResult:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MapOfEndpointMessageResult'
    MapOfMessageResult:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MessageResult'
    MapOfMetricDimension:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/MetricDimension'
    MapOf__double:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__double'
    MapOf__integer:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__integer'
    MapOf__string:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/__string'
    Message:
      type: object
      properties:
        Action:
          allOf:
          - $ref: '#/components/schemas/Action'
          description: "The action to occur if a recipient taps the push notification.\
            \ Valid values are:\n\n  * OPEN_APP - Your app opens or it becomes the\
            \ foreground app if it was sent to the background. This is the default\
            \ action.\n\n  * DEEP_LINK - Your app opens and displays a designated\
            \ user interface in the app. This setting uses the deep-linking features\
            \ of iOS and Android.\n\n  * URL - The default mobile browser on the recipient's\
            \ device opens and loads the web page at a URL that you specify."
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the notification message. The maximum number of
            characters is 200.
        ImageIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the image to display as the push-notification icon,
            such as the icon for the app.
        ImageSmallIconUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the image to display as the small, push-notification
            icon, such as a small version of the icon for the app.
        ImageUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of an image to display in the push notification.
        JsonBody:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The JSON payload to use for a silent push notification.
        MediaUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the image or video to display in the push notification.
        RawContent:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The raw, JSON-formatted string to use as the payload for the
            notification message. If specified, this value overrides all other content
            for the message.
        SilentPush:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the notification is a silent push notification,
            which is a push notification that doesn't display on a recipient's device.
            Silent push notifications can be used for cases such as updating an app's
            configuration, displaying messages in an in-app message center, or supporting
            phone home functionality.
        TimeToLive:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The number of seconds that the push-notification service should
            keep the message, if the service is unable to deliver the notification
            the first time. This value is converted to an expiration value when it''s
            sent to a push-notification service. If this value is 0, the service treats
            the notification as if it expires immediately and the service doesn''t
            store or try to deliver the notification again.


            This value doesn''t apply to messages that are sent through the Amazon
            Device Messaging (ADM) service.'
        Title:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The title to display above the notification message on a recipient's
            device.
        Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL to open in a recipient's default mobile browser, if
            a recipient taps the push notification and the value of the Action property
            is URL.
      description: Specifies the content and settings for a push notification that's
        sent to recipients of a campaign.
    MessageBody:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    MessageConfiguration:
      type: object
      properties:
        ADMMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message that the campaign sends through the ADM (Amazon
            Device Messaging) channel. If specified, this message overrides the default
            message.
        APNSMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message that the campaign sends through the APNs (Apple
            Push Notification service) channel. If specified, this message overrides
            the default message.
        BaiduMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message that the campaign sends through the Baidu (Baidu
            Cloud Push) channel. If specified, this message overrides the default
            message.
        CustomMessage:
          allOf:
          - $ref: '#/components/schemas/CampaignCustomMessage'
          description: The message that the campaign sends through a custom channel,
            as specified by the delivery configuration (CustomDeliveryConfiguration)
            settings for the campaign. If specified, this message overrides the default
            message.
        DefaultMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The default message that the campaign sends through all the
            channels that are configured for the campaign.
        EmailMessage:
          allOf:
          - $ref: '#/components/schemas/CampaignEmailMessage'
          description: The message that the campaign sends through the email channel.
            If specified, this message overrides the default message.
        GCMMessage:
          allOf:
          - $ref: '#/components/schemas/Message'
          description: The message that the campaign sends through the GCM channel,
            which enables Amazon Pinpoint to send push notifications through the Firebase
            Cloud Messaging (FCM), formerly Google Cloud Messaging (GCM), service.
            If specified, this message overrides the default message.
        SMSMessage:
          allOf:
          - $ref: '#/components/schemas/CampaignSmsMessage'
          description: The message that the campaign sends through the SMS channel.
            If specified, this message overrides the default message.
        InAppMessage:
          allOf:
          - $ref: '#/components/schemas/CampaignInAppMessage'
          description: The in-app message configuration.
      description: Specifies the message configuration settings for a campaign.
    MessageHeader:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message header. The header name can contain
            up to 126 characters.
        Value:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The value of the message header. The header value can contain
            up to 870 characters, including the length of any rendered attributes.
            For example if you add the {CreationDate} attribute, it renders as YYYY-MM-DDTHH:MM:SS.SSSZ
            and is 24 characters in length.
      description: Contains the name and value pair of an email header to add to your
        email. You can have up to 15 MessageHeaders. A header can contain information
        such as the sender, receiver, route, or timestamp.
    MessageRequest:
      type: object
      properties:
        Addresses:
          allOf:
          - $ref: '#/components/schemas/MapOfAddressConfiguration'
          description: A map of key-value pairs, where each key is an address and
            each value is an [AddressConfiguration](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-addressconfiguration)
            object. An address can be a push notification token, a phone number, or
            an email address. You can use an [AddressConfiguration](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-addressconfiguration)
            object to tailor the message for an address by specifying settings such
            as content overrides and message variables.
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A map of custom attributes to attach to the message. For a
            push notification, this payload is added to the data.pinpoint object.
            For an email or text message, this payload is added to email/SMS delivery
            receipt event attributes.
        Endpoints:
          allOf:
          - $ref: '#/components/schemas/MapOfEndpointSendConfiguration'
          description: A map of key-value pairs, where each key is an endpoint ID
            and each value is an [EndpointSendConfiguration](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration)
            object. You can use an [EndpointSendConfiguration](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration)
            object to tailor the message for an endpoint by specifying settings such
            as content overrides and message variables.
        MessageConfiguration:
          allOf:
          - $ref: '#/components/schemas/DirectMessageConfiguration'
          description: The settings and content for the default message and any default
            messages that you defined for specific channels.
        TemplateConfiguration:
          allOf:
          - $ref: '#/components/schemas/TemplateConfiguration'
          description: The message template to use for the message.
        TraceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for tracing the message. This identifier
            is visible to message recipients.
      required:
      - MessageConfiguration
      description: Specifies the configuration and other settings for a message.
    MessageResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that was used to
            send the message.
        EndpointResult:
          allOf:
          - $ref: '#/components/schemas/MapOfEndpointMessageResult'
          description: A map that contains a multipart response for each address that
            the message was sent to. In the map, the endpoint ID is the key and the
            result is the value.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identifier for the original request that the message was
            delivered for.
        Result:
          allOf:
          - $ref: '#/components/schemas/MapOfMessageResult'
          description: A map that contains a multipart response for each address (email
            address, phone number, or push notification token) that the message was
            sent to. In the map, the address is the key and the result is the value.
      required:
      - ApplicationId
      description: Provides information about the results of a request to send a message
        to an endpoint address.
    MessageResult:
      type: object
      properties:
        DeliveryStatus:
          allOf:
          - $ref: '#/components/schemas/DeliveryStatus'
          description: "The delivery status of the message. Possible values are:\n\
            \n  * DUPLICATE - The endpoint address is a duplicate of another endpoint\
            \ address. Amazon Pinpoint won't attempt to send the message again.\n\n\
            \  * OPT_OUT - The user who's associated with the endpoint address has\
            \ opted out of receiving messages from you. Amazon Pinpoint won't attempt\
            \ to send the message again.\n\n  * PERMANENT_FAILURE - An error occurred\
            \ when delivering the message to the endpoint address. Amazon Pinpoint\
            \ won't attempt to send the message again.\n\n  * SUCCESSFUL - The message\
            \ was successfully delivered to the endpoint address.\n\n  * TEMPORARY_FAILURE\
            \ - A temporary error occurred. Amazon Pinpoint won't attempt to send\
            \ the message again.\n\n  * THROTTLED - Amazon Pinpoint throttled the\
            \ operation to send the message to the endpoint address.\n\n  * UNKNOWN_FAILURE\
            \ - An unknown error occurred."
        MessageId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the message that was sent.
        StatusCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The downstream service status code for delivering the message.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The status message for delivering the message.
        UpdatedToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: For push notifications that are sent through the GCM channel,
            specifies whether the endpoint's device registration token was updated
            as part of delivering the message.
      required:
      - DeliveryStatus
      - StatusCode
      description: Provides information about the results of sending a message directly
        to an endpoint address.
    MessageType:
      type: string
      enum:
      - TRANSACTIONAL
      - PROMOTIONAL
    MethodNotAllowedException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    MetricDimension:
      type: object
      properties:
        ComparisonOperator:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The operator to use when comparing metric values. Valid values
            are: GREATER_THAN, LESS_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN_OR_EQUAL,
            and EQUAL.'
        Value:
          allOf:
          - $ref: '#/components/schemas/__double'
          description: The value to compare.
      required:
      - ComparisonOperator
      - Value
      description: Specifies metric-based criteria for including or excluding endpoints
        from a segment. These criteria derive from custom metrics that you define
        for endpoints.
    Mode:
      type: string
      enum:
      - DELIVERY
      - FILTER
    MultiConditionalBranch:
      type: object
      properties:
        Condition:
          allOf:
          - $ref: '#/components/schemas/SimpleCondition'
          description: The condition to evaluate for the activity path.
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform, after
            completing the activity for the path.
      description: Specifies a condition to evaluate for an activity path in a journey.
    MultiConditionalSplitActivity:
      type: object
      properties:
        Branches:
          allOf:
          - $ref: '#/components/schemas/ListOfMultiConditionalBranch'
          description: The paths for the activity, including the conditions for entering
            each path and the activity to perform for each path.
        DefaultActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the activity to perform for participants
            who don't meet any of the conditions specified for other paths in the
            activity.
        EvaluationWaitTime:
          allOf:
          - $ref: '#/components/schemas/WaitTime'
          description: The amount of time to wait or the date and time when Amazon
            Pinpoint determines whether the conditions are met.
      description: 'Specifies the settings for a multivariate split activity in a
        journey. This type of activity sends participants down one of as many as five
        paths (including a default _Else_ path) in a journey, based on conditions
        that you specify.


        To create multivariate split activities that send participants down different
        paths based on push notification events (such as Open or Received events),
        your mobile app has to specify the User ID and Endpoint ID values. For more
        information, see [Integrating Amazon Pinpoint with your application](https://docs.aws.amazon.com/pinpoint/latest/developerguide/integrate.html)
        in the _Amazon Pinpoint Developer Guide_.'
    NotFoundException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    NumberValidateRequest:
      type: object
      properties:
        IsoCountryCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The two-character code, in ISO 3166-1 alpha-2 format, for the
            country or region where the phone number was originally registered.
        PhoneNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The phone number to retrieve information about. The phone number
            that you provide should include a valid numeric country code. Otherwise,
            the operation might result in an error.
      description: Specifies a phone number to validate and retrieve information about.
    NumberValidateResponse:
      type: object
      properties:
        Carrier:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The carrier or service provider that the phone number is currently
            registered with. In some countries and regions, this value may be the
            carrier or service provider that the phone number was originally registered
            with.
        City:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the city where the phone number was originally
            registered.
        CleansedPhoneNumberE164:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The cleansed phone number, in E.164 format, for the location
            where the phone number was originally registered.
        CleansedPhoneNumberNational:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The cleansed phone number, in the format for the location where
            the phone number was originally registered.
        Country:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the country or region where the phone number was
            originally registered.
        CountryCodeIso2:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The two-character code, in ISO 3166-1 alpha-2 format, for the
            country or region where the phone number was originally registered.
        CountryCodeNumeric:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The numeric code for the country or region where the phone
            number was originally registered.
        County:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the county where the phone number was originally
            registered.
        OriginalCountryCodeIso2:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The two-character code, in ISO 3166-1 alpha-2 format, that
            was sent in the request body.
        OriginalPhoneNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The phone number that was sent in the request body.
        PhoneType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The description of the phone type. Valid values are: MOBILE,
            LANDLINE, VOIP, INVALID, PREPAID, and OTHER.'
        PhoneTypeCode:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The phone type, represented by an integer. Valid values are:
            0 (mobile), 1 (landline), 2 (VoIP), 3 (invalid), 4 (other), and 5 (prepaid).'
        Timezone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The time zone for the location where the phone number was originally
            registered.
        ZipCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The postal or ZIP code for the location where the phone number
            was originally registered.
      description: Provides information about a phone number.
    OpenHours:
      type: object
      properties:
        EMAIL:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          description: Specifies the schedule settings for the email channel.
        SMS:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          description: Specifies the schedule settings for the SMS channel.
        PUSH:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          description: Specifies the schedule settings for the push channel.
        VOICE:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          description: Specifies the schedule settings for the voice channel.
        CUSTOM:
          allOf:
          - $ref: '#/components/schemas/MapOfListOfOpenHoursRules'
          description: Specifies the schedule settings for the custom channel.
      description: Specifies the times when message are allowed to be sent to endpoints.
    OpenHoursRule:
      type: object
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The start of the scheduled time, in ISO 8601 format, when the
            channel can send messages.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The end of the scheduled time, in ISO 8601 format, when the
            channel can't send messages.
      description: Specifies the start and end time for OpenHours.
    Operator:
      type: string
      enum:
      - ALL
      - ANY
    OverrideButtonConfiguration:
      type: object
      properties:
        ButtonAction:
          allOf:
          - $ref: '#/components/schemas/ButtonAction'
          description: Action triggered by the button.
        Link:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Button destination.
      required:
      - ButtonAction
      description: Override button configuration.
    PayloadTooLargeException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    PhoneNumberValidateRequest:
      type: object
      properties:
        NumberValidateRequest:
          $ref: '#/components/schemas/NumberValidateRequest'
      required:
      - NumberValidateRequest
    PhoneNumberValidateResponse:
      type: object
      properties:
        NumberValidateResponse:
          $ref: '#/components/schemas/NumberValidateResponse'
      required:
      - NumberValidateResponse
    PublicEndpoint:
      type: object
      properties:
        Address:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recipient, such as a device token,
            email address, or mobile phone number.
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: One or more custom attributes that describe the endpoint by
            associating a name with an array of values. You can use these attributes
            as filter criteria when you create segments.
        ChannelType:
          allOf:
          - $ref: '#/components/schemas/ChannelType'
          description: The channel that's used when sending messages or push notifications
            to the endpoint.
        Demographic:
          allOf:
          - $ref: '#/components/schemas/EndpointDemographic'
          description: The demographic information for the endpoint, such as the time
            zone and platform.
        EffectiveDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the endpoint was
            last updated.
        EndpointStatus:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Specifies whether to send messages or push notifications to
            the endpoint. Valid values are: ACTIVE, messages are sent to the endpoint;
            and, INACTIVE, messages aren’t sent to the endpoint.


            Amazon Pinpoint automatically sets this value to ACTIVE when you create
            an endpoint or update an existing endpoint. Amazon Pinpoint automatically
            sets this value to INACTIVE if you update another endpoint that has the
            same address specified by the Address property.'
        Location:
          allOf:
          - $ref: '#/components/schemas/EndpointLocation'
          description: The geographic information for the endpoint.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOf__double'
          description: One or more custom metrics that your app reports to Amazon
            Pinpoint for the endpoint.
        OptOut:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Specifies whether the user who''s associated with the endpoint
            has opted out of receiving messages and push notifications from you. Possible
            values are: ALL, the user has opted out and doesn''t want to receive any
            messages or push notifications; and, NONE, the user hasn''t opted out
            and wants to receive all messages and push notifications.'
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A unique identifier that's generated each time the endpoint
            is updated.
        User:
          allOf:
          - $ref: '#/components/schemas/EndpointUser'
          description: One or more custom user attributes that your app reports to
            Amazon Pinpoint for the user who's associated with the endpoint.
      description: Specifies the properties and attributes of an endpoint that's associated
        with an event.
    PushMessageActivity:
      type: object
      properties:
        MessageConfig:
          allOf:
          - $ref: '#/components/schemas/JourneyPushMessage'
          description: Specifies the time to live (TTL) value for push notifications
            that are sent to participants in a journey.
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform, after
            the message is sent.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the push notification template to use for the message.
            If specified, this value must match the name of an existing message template.
        TemplateVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The unique identifier for the version of the push notification
            template to use for the message. If specified, this value must match the
            identifier for an existing template version. To retrieve a list of versions
            and version identifiers for a template, use the Template Versions resource.


            If you don''t specify a value for this property, Amazon Pinpoint uses
            the _active version_ of the template. The _active version_ is typically
            the version of a template that''s been most recently reviewed and approved
            for use, depending on your workflow. It isn''t necessarily the latest
            version of a template.'
      description: Specifies the settings for a push notification activity in a journey.
        This type of activity sends a push notification to participants.
    PushNotificationTemplateRequest:
      type: object
      properties:
        ADM:
          allOf:
          - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
          description: The message template to use for the ADM (Amazon Device Messaging)
            channel. This message template overrides the default template for push
            notification channels (DefaultPushNotificationTemplate).
        APNS:
          allOf:
          - $ref: '#/components/schemas/APNSPushNotificationTemplate'
          description: The message template to use for the APNs (Apple Push Notification
            service) channel. This message template overrides the default template
            for push notification channels (DefaultPushNotificationTemplate).
        Baidu:
          allOf:
          - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
          description: The message template to use for the Baidu (Baidu Cloud Push)
            channel. This message template overrides the default template for push
            notification channels (DefaultPushNotificationTemplate).
        Default:
          allOf:
          - $ref: '#/components/schemas/DefaultPushNotificationTemplate'
          description: The default message template to use for push notification channels.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A JSON object that specifies the default values to use for
            message variables in the message template. This object is a set of key-value
            pairs. Each key defines a message variable in the template. The corresponding
            value defines the default value for that variable. When you create a message
            that's based on the template, you can override these defaults with message-specific
            and address-specific variables and values.
        GCM:
          allOf:
          - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
          description: The message template to use for the GCM channel, which is used
            to send notifications through the Firebase Cloud Messaging (FCM), formerly
            Google Cloud Messaging (GCM), service. This message template overrides
            the default template for push notification channels (DefaultPushNotificationTemplate).
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model to use for
            the message template. Amazon Pinpoint uses this value to determine how
            to retrieve and process data from a recommender model when it sends messages
            that use the template, if the template contains message variables for
            recommendation data.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'As of **22-05-2023** tags has been deprecated for update operations.
            After this date any value in tags is not processed and an error code is
            not returned. To manage tags we recommend using either [Tags](https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html)
            in the _API Reference for Amazon Pinpoint_ , [resourcegroupstaggingapi](https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html)
            commands in the _AWS Command Line Interface Documentation_ or [resourcegroupstaggingapi](https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html)
            in the _AWS SDK_.


            (Deprecated) A string-to-string map of key-value pairs that defines the
            tags to associate with the message template. Each tag consists of a required
            tag key and an associated tag value.'
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom description of the message template.
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through a push notification channel.
    PushNotificationTemplateResponse:
      type: object
      properties:
        ADM:
          allOf:
          - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
          description: The message template that's used for the ADM (Amazon Device
            Messaging) channel. This message template overrides the default template
            for push notification channels (DefaultPushNotificationTemplate).
        APNS:
          allOf:
          - $ref: '#/components/schemas/APNSPushNotificationTemplate'
          description: The message template that's used for the APNs (Apple Push Notification
            service) channel. This message template overrides the default template
            for push notification channels (DefaultPushNotificationTemplate).
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the message template.
        Baidu:
          allOf:
          - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
          description: The message template that's used for the Baidu (Baidu Cloud
            Push) channel. This message template overrides the default template for
            push notification channels (DefaultPushNotificationTemplate).
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            created.
        Default:
          allOf:
          - $ref: '#/components/schemas/DefaultPushNotificationTemplate'
          description: The default message template that's used for push notification
            channels.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The JSON object that specifies the default values that are
            used for message variables in the message template. This object is a set
            of key-value pairs. Each key defines a message variable in the template.
            The corresponding value defines the default value for that variable.
        GCM:
          allOf:
          - $ref: '#/components/schemas/AndroidPushNotificationTemplate'
          description: The message template that's used for the GCM channel, which
            is used to send notifications through the Firebase Cloud Messaging (FCM),
            formerly Google Cloud Messaging (GCM), service. This message template
            overrides the default template for push notification channels (DefaultPushNotificationTemplate).
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            last modified.
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model that's used
            by the message template.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that identifies the
            tags that are associated with the message template. Each tag consists
            of a required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: The type of channel that the message template is designed for.
            For a push notification template, this value is PUSH.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier, as an integer, for the active version
            of the message template, or the version of the template that you specified
            by using the version parameter in your request.
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      description: Provides information about the content and settings for a message
        template that can be used in messages that are sent through a push notification
        channel.
    PutEventStreamRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        WriteEventStream:
          $ref: '#/components/schemas/WriteEventStream'
      required:
      - ApplicationId
      - WriteEventStream
    PutEventStreamResponse:
      type: object
      properties:
        EventStream:
          $ref: '#/components/schemas/EventStream'
      required:
      - EventStream
    PutEventsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EventsRequest:
          $ref: '#/components/schemas/EventsRequest'
      required:
      - ApplicationId
      - EventsRequest
    PutEventsResponse:
      type: object
      properties:
        EventsResponse:
          $ref: '#/components/schemas/EventsResponse'
      required:
      - EventsResponse
    QuietTime:
      type: object
      properties:
        End:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The specific time when quiet time ends. This value has to use
            24-hour notation and be in HH:MM format, where HH is the hour (with a
            leading zero, if applicable) and MM is the minutes. For example, use 02:30
            to represent 2:30 AM, or 14:30 to represent 2:30 PM.
        Start:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The specific time when quiet time begins. This value has to
            use 24-hour notation and be in HH:MM format, where HH is the hour (with
            a leading zero, if applicable) and MM is the minutes. For example, use
            02:30 to represent 2:30 AM, or 14:30 to represent 2:30 PM.
      description: Specifies the start and end times that define a time range when
        messages aren't sent to endpoints.
    RandomSplitActivity:
      type: object
      properties:
        Branches:
          allOf:
          - $ref: '#/components/schemas/ListOfRandomSplitEntry'
          description: The paths for the activity, including the percentage of participants
            to enter each path and the activity to perform for each path.
      description: Specifies the settings for a random split activity in a journey.
        This type of activity randomly sends specified percentages of participants
        down one of as many as five paths in a journey, based on conditions that you
        specify.
    RandomSplitEntry:
      type: object
      properties:
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform, after
            completing the activity for the path.
        Percentage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The percentage of participants to send down the activity path.


            To determine which participants are sent down each path, Amazon Pinpoint
            applies a probability-based algorithm to the percentages that you specify
            for the paths. Therefore, the actual percentage of participants who are
            sent down a path may not be equal to the percentage that you specify.'
      description: Specifies the settings for a path in a random split activity in
        a journey.
    RawEmail:
      type: object
      properties:
        Data:
          allOf:
          - $ref: '#/components/schemas/__blob'
          description: The email message, represented as a raw MIME message. The entire
            message must be base64 encoded.
      description: Specifies the contents of an email message, represented as a raw
        MIME message.
    RecencyDimension:
      type: object
      properties:
        Duration:
          allOf:
          - $ref: '#/components/schemas/Duration'
          description: The duration to use when determining whether an endpoint is
            active or inactive.
        RecencyType:
          allOf:
          - $ref: '#/components/schemas/RecencyType'
          description: 'The type of recency dimension to use for the segment. Valid
            values are: ACTIVE, endpoints that were active within the specified duration
            are included in the segment; and, INACTIVE, endpoints that weren''t active
            within the specified duration are included in the segment.'
      required:
      - Duration
      - RecencyType
      description: Specifies criteria for including or excluding endpoints from a
        segment based on how recently an endpoint was active.
    RecencyType:
      type: string
      enum:
      - ACTIVE
      - INACTIVE
    RecommenderConfigurationResponse:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'A map that defines 1-10 custom endpoint or user attributes,
            depending on the value for the RecommendationProviderIdType property.
            Each of these attributes temporarily stores a recommended item that''s
            retrieved from the recommender model and sent to an AWS Lambda function
            for additional processing. Each attribute can be used as a message variable
            in a message template.


            This value is null if the configuration doesn''t invoke an AWS Lambda
            function (RecommendationTransformerUri) to perform additional processing
            of recommendation data.'
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in extended ISO 8601 format, when the configuration
            was created for the recommender model.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the configuration for the recommender
            model.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model configuration.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in extended ISO 8601 format, when the configuration
            for the recommender model was last modified.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom name of the configuration for the recommender model.
        RecommendationProviderIdType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The type of Amazon Pinpoint ID that's associated with unique\
            \ user IDs in the recommender model. This value enables the model to use\
            \ attribute and event data that’s specific to a particular endpoint or\
            \ user in an Amazon Pinpoint application. Possible values are:\n\n  *\
            \ PINPOINT_ENDPOINT_ID - Each user in the model is associated with a particular\
            \ endpoint in Amazon Pinpoint. The data is correlated based on endpoint\
            \ IDs in Amazon Pinpoint. This is the default value.\n\n  * PINPOINT_USER_ID\
            \ - Each user in the model is associated with a particular user and endpoint\
            \ in Amazon Pinpoint. The data is correlated based on user IDs in Amazon\
            \ Pinpoint. If this value is specified, an endpoint definition in Amazon\
            \ Pinpoint has to specify both a user ID (UserId) and an endpoint ID.\
            \ Otherwise, messages won’t be sent to the user's endpoint."
        RecommendationProviderRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation
            data from the recommender model.
        RecommendationProviderUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the recommender model that
            Amazon Pinpoint retrieves the recommendation data from. This value is
            the ARN of an Amazon Personalize campaign.
        RecommendationTransformerUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name or Amazon Resource Name (ARN) of the AWS Lambda function
            that Amazon Pinpoint invokes to perform additional processing of recommendation
            data that it retrieves from the recommender model.
        RecommendationsDisplayName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The custom display name for the standard endpoint or user
            attribute (RecommendationItems) that temporarily stores recommended items
            for each endpoint or user, depending on the value for the RecommendationProviderIdType
            property. This name appears in the **Attribute finder** of the template
            editor on the Amazon Pinpoint console.


            This value is null if the configuration doesn''t invoke an AWS Lambda
            function (RecommendationTransformerUri) to perform additional processing
            of recommendation data.'
        RecommendationsPerMessage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of recommended items that are retrieved from the
            model for each endpoint or user, depending on the value for the RecommendationProviderIdType
            property. This number determines how many recommended items are available
            for use in message variables.
      required:
      - CreationDate
      - Id
      - LastModifiedDate
      - RecommendationProviderRoleArn
      - RecommendationProviderUri
      description: Provides information about Amazon Pinpoint configuration settings
        for retrieving and processing data from a recommender model.
    RemoveAttributesRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        AttributeType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The type of attribute or attributes to remove. Valid values\
            \ are:\n\n  * endpoint-custom-attributes - Custom attributes that describe\
            \ endpoints, such as the date when an associated user opted in or out\
            \ of receiving communications from you through a specific type of channel.\n\
            \n  * endpoint-metric-attributes - Custom metrics that your app reports\
            \ to Amazon Pinpoint for endpoints, such as the number of app sessions\
            \ or the number of items left in a cart.\n\n  * endpoint-user-attributes\
            \ - Custom attributes that describe users, such as first name, last name,\
            \ and age."
        UpdateAttributesRequest:
          $ref: '#/components/schemas/UpdateAttributesRequest'
      required:
      - ApplicationId
      - AttributeType
      - UpdateAttributesRequest
    RemoveAttributesResponse:
      type: object
      properties:
        AttributesResource:
          $ref: '#/components/schemas/AttributesResource'
      required:
      - AttributesResource
    ResultRow:
      type: object
      properties:
        GroupedBys:
          allOf:
          - $ref: '#/components/schemas/ListOfResultRowValue'
          description: An array of objects that defines the field and field values
            that were used to group data in a result set that contains multiple results.
            This value is null if the data in a result set isn’t grouped.
        Values:
          allOf:
          - $ref: '#/components/schemas/ListOfResultRowValue'
          description: An array of objects that provides pre-aggregated values for
            a standard metric that applies to an application, campaign, or journey.
      required:
      - GroupedBys
      - Values
      description: Provides the results of a query that retrieved the data for a standard
        metric that applies to an application, campaign, or journey.
    ResultRowValue:
      type: object
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The friendly name of the metric whose value is specified by
            the Value property.
        Type:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The data type of the value specified by the Value property.
        Value:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: In a Values object, the value for the metric that the query
            retrieved data for. In a GroupedBys object, the value for the field that
            was used to group data in a result set that contains multiple results
            (Values objects).
      required:
      - Key
      - Type
      - Value
      description: Provides a single value and metadata about that value as part of
        an array of query results for a standard metric that applies to an application,
        campaign, or journey.
    SMSChannelRequest:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the SMS channel for the application.
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identity that you want to display on recipients' devices
            when they receive messages from the SMS channel.
        ShortCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The registered short code that you want to use when you send
            messages through the SMS channel.
      description: Specifies the status and settings of the SMS channel for an application.
    SMSChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the SMS channel
            applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the SMS channel
            was enabled.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the SMS channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the SMS channel. This property
            is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the SMS channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the SMS channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the SMS channel
            was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the SMS channel, this value is SMS.
        PromotionalMessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of promotional messages that you can send
            through the SMS channel each second.
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The identity that displays on recipients' devices when they
            receive messages from the SMS channel.
        ShortCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The registered short code to use when you send messages through
            the SMS channel.
        TransactionalMessagesPerSecond:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The maximum number of transactional messages that you can send
            through the SMS channel each second.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the SMS channel.
      required:
      - Platform
      description: Provides information about the status and settings of the SMS channel
        for an application.
    SMSMessage:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The body of the SMS message.
        Keyword:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The SMS program name that you provided to AWS Support when
            you requested your dedicated number.
        MediaUrl:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: This field is reserved for future use.
        MessageType:
          allOf:
          - $ref: '#/components/schemas/MessageType'
          description: The SMS message type. Valid values are TRANSACTIONAL (for messages
            that are critical or time-sensitive, such as a one-time passwords) and
            PROMOTIONAL (for messsages that aren't critical or time-sensitive, such
            as marketing messages).
        OriginationNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The number to send the SMS message from. This value should
            be one of the dedicated long or short codes that's assigned to your AWS
            account. If you don't specify a long or short code, Amazon Pinpoint assigns
            a random long code to the SMS message and sends the message from that
            code.
        SenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The sender ID to display as the sender of the message on a
            recipient's device. Support for sender IDs varies by country or region.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The message variables to use in the SMS message. You can override
            the default variables with individual address variables.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The entity ID or Principal Entity (PE) id received from the
            regulatory body for sending SMS in your country.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The template ID received from the regulatory body for sending
            SMS in your country.
      description: Specifies the default settings for a one-time SMS message that's
        sent directly to an endpoint.
    SMSMessageActivity:
      type: object
      properties:
        MessageConfig:
          allOf:
          - $ref: '#/components/schemas/JourneySMSMessage'
          description: Specifies the sender ID and message type for an SMS message
            that's sent to participants in a journey.
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform, after
            the message is sent.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the SMS message template to use for the message.
            If specified, this value must match the name of an existing message template.
        TemplateVersion:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The unique identifier for the version of the SMS template
            to use for the message. If specified, this value must match the identifier
            for an existing template version. To retrieve a list of versions and version
            identifiers for a template, use the Template Versions resource.


            If you don''t specify a value for this property, Amazon Pinpoint uses
            the _active version_ of the template. The _active version_ is typically
            the version of a template that''s been most recently reviewed and approved
            for use, depending on your workflow. It isn''t necessarily the latest
            version of a template.'
      description: Specifies the settings for an SMS activity in a journey. This type
        of activity sends a text message to participants.
    SMSTemplateRequest:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body to use in text messages that are based on
            the message template.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A JSON object that specifies the default values to use for
            message variables in the message template. This object is a set of key-value
            pairs. Each key defines a message variable in the template. The corresponding
            value defines the default value for that variable. When you create a message
            that's based on the template, you can override these defaults with message-specific
            and address-specific variables and values.
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model to use for
            the message template. Amazon Pinpoint uses this value to determine how
            to retrieve and process data from a recommender model when it sends messages
            that use the template, if the template contains message variables for
            recommendation data.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'As of **22-05-2023** tags has been deprecated for update operations.
            After this date any value in tags is not processed and an error code is
            not returned. To manage tags we recommend using either [Tags](https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html)
            in the _API Reference for Amazon Pinpoint_ , [resourcegroupstaggingapi](https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html)
            commands in the _AWS Command Line Interface Documentation_ or [resourcegroupstaggingapi](https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html)
            in the _AWS SDK_.


            (Deprecated) A string-to-string map of key-value pairs that defines the
            tags to associate with the message template. Each tag consists of a required
            tag key and an associated tag value.'
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom description of the message template.
      description: Specifies the content and settings for a message template that
        can be used in text messages that are sent through the SMS channel.
    SMSTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the message template.
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message body that's used in text messages that are based
            on the message template.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            created.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The JSON object that specifies the default values that are
            used for message variables in the message template. This object is a set
            of key-value pairs. Each key defines a message variable in the template.
            The corresponding value defines the default value for that variable.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            last modified.
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model that's used
            by the message template.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that identifies the
            tags that are associated with the message template. Each tag consists
            of a required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: The type of channel that the message template is designed for.
            For an SMS template, this value is SMS.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier, as an integer, for the active version
            of the message template, or the version of the template that you specified
            by using the version parameter in your request.
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      description: Provides information about the content and settings for a message
        template that can be used in text messages that are sent through the SMS channel.
    Schedule:
      type: object
      properties:
        EndTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The scheduled time, in ISO 8601 format, when the campaign ended
            or will end.
        EventFilter:
          allOf:
          - $ref: '#/components/schemas/CampaignEventFilter'
          description: The type of event that causes the campaign to be sent, if the
            value of the Frequency property is EVENT.
        Frequency:
          allOf:
          - $ref: '#/components/schemas/Frequency'
          description: Specifies how often the campaign is sent or whether the campaign
            is sent in response to a specific event.
        IsLocalTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the start and end times for the campaign
            schedule use each recipient's local time. To base the schedule on each
            recipient's local time, set this value to true.
        QuietTime:
          allOf:
          - $ref: '#/components/schemas/QuietTime'
          description: "The default quiet time for the campaign. Quiet time is a specific\
            \ time range when a campaign doesn't send messages to endpoints, if all\
            \ the following conditions are met:\n\n  * The EndpointDemographic.Timezone\
            \ property of the endpoint is set to a valid value.\n\n  * The current\
            \ time in the endpoint's time zone is later than or equal to the time\
            \ specified by the QuietTime.Start property for the campaign.\n\n  * The\
            \ current time in the endpoint's time zone is earlier than or equal to\
            \ the time specified by the QuietTime.End property for the campaign.\n\
            \nIf any of the preceding conditions isn't met, the endpoint will receive\
            \ messages from the campaign, even if quiet time is enabled."
        StartTime:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The scheduled time when the campaign began or will begin.
            Valid values are: IMMEDIATE, to start the campaign immediately; or, a
            specific time in ISO 8601 format.'
        Timezone:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The starting UTC offset for the campaign schedule, if the
            value of the IsLocalTime property is true. Valid values are: UTC, UTC+01,
            UTC+02, UTC+03, UTC+03:30, UTC+04, UTC+04:30, UTC+05, UTC+05:30, UTC+05:45,
            UTC+06, UTC+06:30, UTC+07, UTC+08, UTC+09, UTC+09:30, UTC+10, UTC+10:30,
            UTC+11, UTC+12, UTC+13, UTC-02, UTC-03, UTC-04, UTC-05, UTC-06, UTC-07,
            UTC-08, UTC-09, UTC-10, and UTC-11.'
      required:
      - StartTime
      description: Specifies the schedule settings for a campaign.
    SegmentBehaviors:
      type: object
      properties:
        Recency:
          allOf:
          - $ref: '#/components/schemas/RecencyDimension'
          description: The dimension settings that are based on how recently an endpoint
            was active.
      description: Specifies dimension settings for including or excluding endpoints
        from a segment based on how recently an endpoint was active.
    SegmentCondition:
      type: object
      properties:
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment to associate with the
            activity.
      required:
      - SegmentId
      description: Specifies a segment to associate with an activity in a journey.
    SegmentDemographics:
      type: object
      properties:
        AppVersion:
          allOf:
          - $ref: '#/components/schemas/SetDimension'
          description: The app version criteria for the segment.
        Channel:
          allOf:
          - $ref: '#/components/schemas/SetDimension'
          description: The channel criteria for the segment.
        DeviceType:
          allOf:
          - $ref: '#/components/schemas/SetDimension'
          description: The device type criteria for the segment.
        Make:
          allOf:
          - $ref: '#/components/schemas/SetDimension'
          description: The device make criteria for the segment.
        Model:
          allOf:
          - $ref: '#/components/schemas/SetDimension'
          description: The device model criteria for the segment.
        Platform:
          allOf:
          - $ref: '#/components/schemas/SetDimension'
          description: The device platform criteria for the segment.
      description: Specifies demographic-based dimension settings for including or
        excluding endpoints from a segment. These settings derive from characteristics
        of endpoint devices, such as platform, make, and model.
    SegmentDimensions:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOfAttributeDimension'
          description: One or more custom attributes to use as criteria for the segment.
        Behavior:
          allOf:
          - $ref: '#/components/schemas/SegmentBehaviors'
          description: The behavior-based criteria, such as how recently users have
            used your app, for the segment.
        Demographic:
          allOf:
          - $ref: '#/components/schemas/SegmentDemographics'
          description: The demographic-based criteria, such as device platform, for
            the segment.
        Location:
          allOf:
          - $ref: '#/components/schemas/SegmentLocation'
          description: The location-based criteria, such as region or GPS coordinates,
            for the segment.
        Metrics:
          allOf:
          - $ref: '#/components/schemas/MapOfMetricDimension'
          description: One or more custom metrics to use as criteria for the segment.
        UserAttributes:
          allOf:
          - $ref: '#/components/schemas/MapOfAttributeDimension'
          description: One or more custom user attributes to use as criteria for the
            segment.
      description: Specifies the dimension settings for a segment.
    SegmentGroup:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/ListOfSegmentDimensions'
          description: An array that defines the dimensions for the segment.
        SourceSegments:
          allOf:
          - $ref: '#/components/schemas/ListOfSegmentReference'
          description: 'The base segment to build the segment on. A base segment,
            also referred to as a _source segment_ , defines the initial population
            of endpoints for a segment. When you add dimensions to a segment, Amazon
            Pinpoint filters the base segment by using the dimensions that you specify.


            You can specify more than one dimensional segment or only one imported
            segment. If you specify an imported segment, the Amazon Pinpoint console
            displays a segment size estimate that indicates the size of the imported
            segment without any filters applied to it.'
        SourceType:
          allOf:
          - $ref: '#/components/schemas/SourceType'
          description: Specifies how to handle multiple base segments for the segment.
            For example, if you specify three base segments for the segment, whether
            the resulting segment is based on all, any, or none of the base segments.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          description: Specifies how to handle multiple dimensions for the segment.
            For example, if you specify three dimensions for the segment, whether
            the resulting segment includes endpoints that match all, any, or none
            of the dimensions.
      description: Specifies the base segments and dimensions for a segment, and the
        relationships between these base segments and dimensions.
    SegmentGroupList:
      type: object
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/ListOfSegmentGroup'
          description: An array that defines the set of segment criteria to evaluate
            when handling segment groups for the segment.
        Include:
          allOf:
          - $ref: '#/components/schemas/Include'
          description: Specifies how to handle multiple segment groups for the segment.
            For example, if the segment includes three segment groups, whether the
            resulting segment includes endpoints that match all, any, or none of the
            segment groups.
      description: Specifies the settings that define the relationships between segment
        groups for a segment.
    SegmentImportResource:
      type: object
      properties:
        ChannelCounts:
          allOf:
          - $ref: '#/components/schemas/MapOf__integer'
          description: The number of channel types in the endpoint definitions that
            were imported to create the segment.
        ExternalId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) Your AWS account ID, which you assigned to an
            external ID key in an IAM trust policy. Amazon Pinpoint previously used
            this value to assume an IAM role when importing endpoint definitions,
            but we removed this requirement. We don't recommend use of external IDs
            for IAM roles that are assumed by Amazon Pinpoint.
        Format:
          allOf:
          - $ref: '#/components/schemas/Format'
          description: 'The format of the files that were imported to create the segment.
            Valid values are: CSV, for comma-separated values format; and, JSON, for
            newline-delimited JSON format.'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that authorized Amazon Pinpoint to access the Amazon
            S3 location to import endpoint definitions from.
        S3Url:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The URL of the Amazon Simple Storage Service (Amazon S3) bucket
            that the endpoint definitions were imported from to create the segment.
        Size:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of endpoint definitions that were imported successfully
            to create the segment.
      required:
      - ExternalId
      - Format
      - RoleArn
      - S3Url
      - Size
      description: Provides information about the import job that created a segment.
        An import job is a job that creates a user segment by importing endpoint definitions.
    SegmentLocation:
      type: object
      properties:
        Country:
          allOf:
          - $ref: '#/components/schemas/SetDimension'
          description: The country or region code, in ISO 3166-1 alpha-2 format, for
            the segment.
        GPSPoint:
          allOf:
          - $ref: '#/components/schemas/GPSPointDimension'
          description: The GPS location and range for the segment.
      description: Specifies geographical dimension settings for a segment.
    SegmentReference:
      type: object
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The version number of the segment.
      required:
      - Id
      description: Specifies the segment identifier and version of a segment.
    SegmentResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the segment
            is associated with.
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the segment.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the segment was created.
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/SegmentDimensions'
          description: The dimension settings for the segment.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
        ImportDefinition:
          allOf:
          - $ref: '#/components/schemas/SegmentImportResource'
          description: The settings for the import job that's associated with the
            segment.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the segment was last modified.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the segment.
        SegmentGroups:
          allOf:
          - $ref: '#/components/schemas/SegmentGroupList'
          description: A list of one or more segment groups that apply to the segment.
            Each segment group consists of zero or more base segments and the dimensions
            that are applied to those base segments.
        SegmentType:
          allOf:
          - $ref: '#/components/schemas/SegmentType'
          description: "The segment type. Valid values are:\n\n  * DIMENSIONAL - A\
            \ dynamic segment, which is a segment that uses selection criteria that\
            \ you specify and is based on endpoint data that's reported by your app.\
            \ Dynamic segments can change over time.\n\n  * IMPORT - A static segment,\
            \ which is a segment that uses selection criteria that you specify and\
            \ is based on endpoint definitions that you import from a file. Imported\
            \ segments are static; they don't change over time."
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that identifies the
            tags that are associated with the segment. Each tag consists of a required
            tag key and an associated tag value.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The version number of the segment.
      required:
      - ApplicationId
      - Arn
      - CreationDate
      - Id
      - SegmentType
      description: Provides information about the configuration, dimension, and other
        settings for a segment.
    SegmentType:
      type: string
      enum:
      - DIMENSIONAL
      - IMPORT
    SegmentsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfSegmentResponse'
          description: An array of responses, one for each segment that's associated
            with the application (Segments resource) or each version of a segment
            that's associated with the application (Segment Versions resource).
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information about all the segments that are associated
        with an application.
    SendMessagesRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        MessageRequest:
          $ref: '#/components/schemas/MessageRequest'
      required:
      - ApplicationId
      - MessageRequest
    SendMessagesResponse:
      type: object
      properties:
        MessageResponse:
          $ref: '#/components/schemas/MessageResponse'
      required:
      - MessageResponse
    SendOTPMessageRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of your Amazon Pinpoint application.
        SendOTPMessageRequestParameters:
          $ref: '#/components/schemas/SendOTPMessageRequestParameters'
      required:
      - ApplicationId
      - SendOTPMessageRequestParameters
    SendOTPMessageRequestParameters:
      type: object
      properties:
        AllowedAttempts:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The attempts allowed to validate an OTP.
        BrandName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The brand name that will be substituted into the OTP message
            body. Should be owned by calling AWS account.
        Channel:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'Channel type for the OTP message. Supported values: [SMS].'
        CodeLength:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The number of characters in the generated OTP.
        DestinationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The destination identity to send OTP to.
        EntityId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A unique Entity ID received from DLT after entity registration
            is approved.
        Language:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The language to be used for the outgoing message body containing
            the OTP.
        OriginationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The origination identity used to send OTP from.
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: Developer-specified reference identifier. Required to match
            during OTP verification.
        TemplateId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A unique Template ID received from DLT after entity registration
            is approved.
        ValidityPeriod:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The time in minutes before the OTP is no longer valid.
      required:
      - BrandName
      - Channel
      - DestinationIdentity
      - OriginationIdentity
      - ReferenceId
      description: Send OTP message request parameters.
    SendOTPMessageResponse:
      type: object
      properties:
        MessageResponse:
          $ref: '#/components/schemas/MessageResponse'
      required:
      - MessageResponse
    SendUsersMessageRequest:
      type: object
      properties:
        Context:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A map of custom attribute-value pairs. For a push notification,
            Amazon Pinpoint adds these attributes to the data.pinpoint object in the
            body of the notification payload. Amazon Pinpoint also provides these
            attributes in the events that it generates for users-messages deliveries.
        MessageConfiguration:
          allOf:
          - $ref: '#/components/schemas/DirectMessageConfiguration'
          description: The settings and content for the default message and any default
            messages that you defined for specific channels.
        TemplateConfiguration:
          allOf:
          - $ref: '#/components/schemas/TemplateConfiguration'
          description: The message template to use for the message.
        TraceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for tracing the message. This identifier
            is visible to message recipients.
        Users:
          allOf:
          - $ref: '#/components/schemas/MapOfEndpointSendConfiguration'
          description: A map that associates user IDs with [EndpointSendConfiguration](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration)
            objects. You can use an [EndpointSendConfiguration](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-messages.html#apps-application-id-messages-model-endpointsendconfiguration)
            object to tailor the message for a user by specifying settings such as
            content overrides and message variables.
      required:
      - MessageConfiguration
      - Users
      description: Specifies the configuration and other settings for a message to
        send to all the endpoints that are associated with a list of users.
    SendUsersMessageResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that was used to
            send the message.
        RequestId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier that was assigned to the message request.
        Result:
          allOf:
          - $ref: '#/components/schemas/MapOfMapOfEndpointMessageResult'
          description: An object that indicates which endpoints the message was sent
            to, for each user. The object lists user IDs and, for each user ID, provides
            the endpoint IDs that the message was sent to. For each endpoint ID, it
            provides an EndpointMessageResult object.
      required:
      - ApplicationId
      description: Provides information about which users and endpoints a message
        was sent to.
    SendUsersMessagesRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        SendUsersMessageRequest:
          $ref: '#/components/schemas/SendUsersMessageRequest'
      required:
      - ApplicationId
      - SendUsersMessageRequest
    SendUsersMessagesResponse:
      type: object
      properties:
        SendUsersMessageResponse:
          $ref: '#/components/schemas/SendUsersMessageResponse'
      required:
      - SendUsersMessageResponse
    Session:
      type: object
      properties:
        Duration:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The duration of the session, in milliseconds.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the session.
        StartTimestamp:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the session began.
        StopTimestamp:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time when the session ended.
      required:
      - Id
      - StartTimestamp
      description: Provides information about a session.
    SetDimension:
      type: object
      properties:
        DimensionType:
          allOf:
          - $ref: '#/components/schemas/DimensionType'
          description: 'The type of segment dimension to use. Valid values are: INCLUSIVE,
            endpoints that match the criteria are included in the segment; and, EXCLUSIVE,
            endpoints that match the criteria are excluded from the segment.'
        Values:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: The criteria values to use for the segment dimension. Depending
            on the value of the DimensionType property, endpoints are included or
            excluded from the segment if their values match the criteria values.
      required:
      - Values
      description: Specifies the dimension type and values for a segment dimension.
    SimpleCondition:
      type: object
      properties:
        EventCondition:
          allOf:
          - $ref: '#/components/schemas/EventCondition'
          description: The dimension settings for the event that's associated with
            the activity.
        SegmentCondition:
          allOf:
          - $ref: '#/components/schemas/SegmentCondition'
          description: The segment that's associated with the activity.
        SegmentDimensions:
          allOf:
          - $ref: '#/components/schemas/SegmentDimensions'
          description: The dimension settings for the segment that's associated with
            the activity.
      description: Specifies a condition to evaluate for an activity in a journey.
    SimpleEmail:
      type: object
      properties:
        HtmlPart:
          allOf:
          - $ref: '#/components/schemas/SimpleEmailPart'
          description: The body of the email message, in HTML format. We recommend
            using HTML format for email clients that render HTML content. You can
            include links, formatted text, and more in an HTML message.
        Subject:
          allOf:
          - $ref: '#/components/schemas/SimpleEmailPart'
          description: The subject line, or title, of the email.
        TextPart:
          allOf:
          - $ref: '#/components/schemas/SimpleEmailPart'
          description: The body of the email message, in plain text format. We recommend
            using plain text format for email clients that don't render HTML content
            and clients that are connected to high-latency networks, such as mobile
            devices.
        Headers:
          allOf:
          - $ref: '#/components/schemas/ListOfMessageHeader'
          description: The list of MessageHeaders for the email. You can have up to
            15 Headers.
      description: Specifies the contents of an email message, composed of a subject,
        a text part, and an HTML part.
    SimpleEmailPart:
      type: object
      properties:
        Charset:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The applicable character set for the message content.
        Data:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The textual data of the message content.
      description: Specifies the subject or body of an email message, represented
        as textual email data and the applicable character set.
    SourceType:
      type: string
      enum:
      - ALL
      - ANY
      - NONE
    StartCondition:
      type: object
      properties:
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the condition.
        EventStartCondition:
          $ref: '#/components/schemas/EventStartCondition'
        SegmentStartCondition:
          allOf:
          - $ref: '#/components/schemas/SegmentCondition'
          description: The segment that's associated with the first activity in the
            journey. This segment determines which users are participants in the journey.
      description: Specifies the conditions for the first activity in a journey. This
        activity and its conditions determine which users are participants in a journey.
    State:
      type: string
      enum:
      - DRAFT
      - ACTIVE
      - COMPLETED
      - CANCELLED
      - CLOSED
      - PAUSED
    TagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource.
        TagsModel:
          $ref: '#/components/schemas/TagsModel'
      required:
      - ResourceArn
      - TagsModel
    TagsModel:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'A string-to-string map of key-value pairs that defines the
            tags for an application, campaign, message template, or segment. Each
            of these resources can have a maximum of 50 tags.


            Each tag consists of a required tag key and an associated tag value. The
            maximum length of a tag key is 128 characters. The maximum length of a
            tag value is 256 characters.'
      required:
      - tags
      description: Specifies the tags (keys and values) for an application, campaign,
        message template, or segment.
    Template:
      type: object
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template to use for the message. If
            specified, this value must match the name of an existing message template.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The unique identifier for the version of the message template
            to use for the message. If specified, this value must match the identifier
            for an existing template version. To retrieve a list of versions and version
            identifiers for a template, use the Template Versions resource.


            If you don''t specify a value for this property, Amazon Pinpoint uses
            the _active version_ of the template. The _active version_ is typically
            the version of a template that''s been most recently reviewed and approved
            for use, depending on your workflow. It isn''t necessarily the latest
            version of a template.'
      description: Specifies the name and version of the message template to use for
        the message.
    TemplateActiveVersionRequest:
      type: object
      properties:
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The version of the message template to use as the active version
            of the template. Valid values are: latest, for the most recent version
            of the template; or, the unique identifier for any existing version of
            the template. If you specify an identifier, the value must match the identifier
            for an existing template version. To retrieve a list of versions and version
            identifiers for a template, use the Template Versions resource.'
      description: Specifies which version of a message template to use as the active
        version of the template.
    TemplateConfiguration:
      type: object
      properties:
        EmailTemplate:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: The email template to use for the message.
        PushTemplate:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: The push notification template to use for the message.
        SMSTemplate:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: The SMS template to use for the message.
        VoiceTemplate:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: The voice template to use for the message. This object isn't
            supported for campaigns.
        InAppTemplate:
          allOf:
          - $ref: '#/components/schemas/Template'
          description: The InApp template to use for the message. The InApp template
            object is not supported for SendMessages.
      description: Specifies the message template to use for the message, for each
        type of channel.
    TemplateCreateMessageBody:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the message template that
            was created.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API for the request to
            create the message template.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request to create the message
            template.
      description: Provides information about a request to create a message template.
    TemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the message template. This
            value isn't included in a TemplateResponse object. To retrieve the ARN
            of a template, use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate,
            or GetVoiceTemplate operation, depending on the type of template that
            you want to retrieve the ARN for.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            created.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The JSON object that specifies the default values that are
            used for message variables in the message template. This object isn't
            included in a TemplateResponse object. To retrieve this object for a template,
            use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate, or GetVoiceTemplate
            operation, depending on the type of template that you want to retrieve
            the object for.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            last modified.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A map of key-value pairs that identifies the tags that are
            associated with the message template. This object isn't included in a
            TemplateResponse object. To retrieve this object for a template, use the
            GetEmailTemplate, GetPushTemplate, GetSmsTemplate, or GetVoiceTemplate
            operation, depending on the type of template that you want to retrieve
            the object for.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the message template. This value
            isn't included in a TemplateResponse object. To retrieve the description
            of a template, use the GetEmailTemplate, GetPushTemplate, GetSmsTemplate,
            or GetVoiceTemplate operation, depending on the type of template that
            you want to retrieve the description for.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: 'The type of channel that the message template is designed
            for. Possible values are: EMAIL, PUSH, SMS, INAPP, and VOICE.'
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier, as an integer, for the active version
            of the message template.
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      description: Provides information about a message template that's associated
        with your Amazon Pinpoint account.
    TemplateType:
      type: string
      enum:
      - EMAIL
      - SMS
      - VOICE
      - PUSH
      - INAPP
    TemplateVersionResponse:
      type: object
      properties:
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the version of the message
            template was created.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A JSON object that specifies the default values that are used
            for message variables in the version of the message template. This object
            is a set of key-value pairs. Each key defines a message variable in the
            template. The corresponding value defines the default value for that variable.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the version of the message
            template was last modified.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the version of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The type of channel that the message template is designed
            for. Possible values are: EMAIL, PUSH, SMS, INAPP, and VOICE.'
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the version of the message template.
            This value is an integer that Amazon Pinpoint automatically increments
            and assigns to each new version of a template.
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      description: Provides information about a specific version of a message template.
    TemplateVersionsResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfTemplateVersionResponse'
          description: An array of responses, one for each version of the message
            template.
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API for the request to
            retrieve information about all the versions of the message template.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request to retrieve information
            about all the versions of the message template.
      required:
      - Item
      description: Provides information about all the versions of a specific message
        template.
    TemplatesResponse:
      type: object
      properties:
        Item:
          allOf:
          - $ref: '#/components/schemas/ListOfTemplateResponse'
          description: An array of responses, one for each message template that's
            associated with your Amazon Pinpoint account and meets any filter criteria
            that you specified in the request.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The string to use in a subsequent request to get the next page
            of results in a paginated response. This value is null if there are no
            additional pages.
      required:
      - Item
      description: Provides information about all the message templates that are associated
        with your Amazon Pinpoint account.
    TooManyRequestsException:
      type: object
      properties:
        Message:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The message that's returned from the API.
        RequestID:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the request or response.
      description: Provides information about an API request or response.
    TreatmentResource:
      type: object
      properties:
        CustomDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/CustomDeliveryConfiguration'
          description: The delivery configuration settings for sending the treatment
            through a custom channel. This object is required if the MessageConfiguration
            object for the treatment specifies a CustomMessage object.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the treatment.
        MessageConfiguration:
          allOf:
          - $ref: '#/components/schemas/MessageConfiguration'
          description: The message configuration settings for the treatment.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/Schedule'
          description: The schedule settings for the treatment.
        SizePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The allocated percentage of users (segment members) that the
            treatment is sent to.
        State:
          allOf:
          - $ref: '#/components/schemas/CampaignState'
          description: The current status of the treatment.
        TemplateConfiguration:
          allOf:
          - $ref: '#/components/schemas/TemplateConfiguration'
          description: The message template to use for the treatment.
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the treatment.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom name of the treatment.
      required:
      - Id
      - SizePercent
      description: Specifies the settings for a campaign treatment. A _treatment_
        is a variation of a campaign that's used for A/B testing of a campaign.
    Type:
      type: string
      enum:
      - ALL
      - ANY
      - NONE
    UntagResourceRequest:
      type: object
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the resource.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: The key of the tag to remove from the resource. To remove multiple
            tags, append the tagKeys parameter and argument for each additional tag
            to remove, separated by an ampersand (&).
      required:
      - ResourceArn
      - TagKeys
    UpdateAdmChannelRequest:
      type: object
      properties:
        ADMChannelRequest:
          $ref: '#/components/schemas/ADMChannelRequest'
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - ADMChannelRequest
      - ApplicationId
    UpdateAdmChannelResponse:
      type: object
      properties:
        ADMChannelResponse:
          $ref: '#/components/schemas/ADMChannelResponse'
      required:
      - ADMChannelResponse
    UpdateApnsChannelRequest:
      type: object
      properties:
        APNSChannelRequest:
          $ref: '#/components/schemas/APNSChannelRequest'
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - APNSChannelRequest
      - ApplicationId
    UpdateApnsChannelResponse:
      type: object
      properties:
        APNSChannelResponse:
          $ref: '#/components/schemas/APNSChannelResponse'
      required:
      - APNSChannelResponse
    UpdateApnsSandboxChannelRequest:
      type: object
      properties:
        APNSSandboxChannelRequest:
          $ref: '#/components/schemas/APNSSandboxChannelRequest'
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - APNSSandboxChannelRequest
      - ApplicationId
    UpdateApnsSandboxChannelResponse:
      type: object
      properties:
        APNSSandboxChannelResponse:
          $ref: '#/components/schemas/APNSSandboxChannelResponse'
      required:
      - APNSSandboxChannelResponse
    UpdateApnsVoipChannelRequest:
      type: object
      properties:
        APNSVoipChannelRequest:
          $ref: '#/components/schemas/APNSVoipChannelRequest'
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - APNSVoipChannelRequest
      - ApplicationId
    UpdateApnsVoipChannelResponse:
      type: object
      properties:
        APNSVoipChannelResponse:
          $ref: '#/components/schemas/APNSVoipChannelResponse'
      required:
      - APNSVoipChannelResponse
    UpdateApnsVoipSandboxChannelRequest:
      type: object
      properties:
        APNSVoipSandboxChannelRequest:
          $ref: '#/components/schemas/APNSVoipSandboxChannelRequest'
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
      required:
      - APNSVoipSandboxChannelRequest
      - ApplicationId
    UpdateApnsVoipSandboxChannelResponse:
      type: object
      properties:
        APNSVoipSandboxChannelResponse:
          $ref: '#/components/schemas/APNSVoipSandboxChannelResponse'
      required:
      - APNSVoipSandboxChannelResponse
    UpdateApplicationSettingsRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        WriteApplicationSettingsRequest:
          $ref: '#/components/schemas/WriteApplicationSettingsRequest'
      required:
      - ApplicationId
      - WriteApplicationSettingsRequest
    UpdateApplicationSettingsResponse:
      type: object
      properties:
        ApplicationSettingsResource:
          $ref: '#/components/schemas/ApplicationSettingsResource'
      required:
      - ApplicationSettingsResource
    UpdateAttributesRequest:
      type: object
      properties:
        Blacklist:
          allOf:
          - $ref: '#/components/schemas/ListOf__string'
          description: An array of the attributes to remove from all the endpoints
            that are associated with the application. The array can specify the complete,
            exact name of each attribute to remove or it can specify a glob pattern
            that an attribute name must match in order for the attribute to be removed.
      description: Specifies one or more attributes to remove from all the endpoints
        that are associated with an application.
    UpdateBaiduChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        BaiduChannelRequest:
          $ref: '#/components/schemas/BaiduChannelRequest'
      required:
      - ApplicationId
      - BaiduChannelRequest
    UpdateBaiduChannelResponse:
      type: object
      properties:
        BaiduChannelResponse:
          $ref: '#/components/schemas/BaiduChannelResponse'
      required:
      - BaiduChannelResponse
    UpdateCampaignRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        CampaignId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the campaign.
        WriteCampaignRequest:
          $ref: '#/components/schemas/WriteCampaignRequest'
      required:
      - ApplicationId
      - CampaignId
      - WriteCampaignRequest
    UpdateCampaignResponse:
      type: object
      properties:
        CampaignResponse:
          $ref: '#/components/schemas/CampaignResponse'
      required:
      - CampaignResponse
    UpdateEmailChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EmailChannelRequest:
          $ref: '#/components/schemas/EmailChannelRequest'
      required:
      - ApplicationId
      - EmailChannelRequest
    UpdateEmailChannelResponse:
      type: object
      properties:
        EmailChannelResponse:
          $ref: '#/components/schemas/EmailChannelResponse'
      required:
      - EmailChannelResponse
    UpdateEmailTemplateRequest:
      type: object
      properties:
        CreateNewVersion:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'Specifies whether to save the updates as a new version of
            the message template. Valid values are: true, save the updates as a new
            version; and, false, save the updates to (overwrite) the latest existing
            version of the template.


            If you don''t specify a value for this parameter, Amazon Pinpoint saves
            the updates to (overwrites) the latest existing version of the template.
            If you specify a value of true for this parameter, don''t specify a value
            for the version parameter. Otherwise, an error will occur.'
        EmailTemplateRequest:
          $ref: '#/components/schemas/EmailTemplateRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - EmailTemplateRequest
      - TemplateName
    UpdateEmailTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    UpdateEndpointRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EndpointId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The case insensitive unique identifier for the endpoint. The
            identifier can't contain `$`, `{` or `}`.
        EndpointRequest:
          $ref: '#/components/schemas/EndpointRequest'
      required:
      - ApplicationId
      - EndpointId
      - EndpointRequest
    UpdateEndpointResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    UpdateEndpointsBatchRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        EndpointBatchRequest:
          $ref: '#/components/schemas/EndpointBatchRequest'
      required:
      - ApplicationId
      - EndpointBatchRequest
    UpdateEndpointsBatchResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    UpdateGcmChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        GCMChannelRequest:
          $ref: '#/components/schemas/GCMChannelRequest'
      required:
      - ApplicationId
      - GCMChannelRequest
    UpdateGcmChannelResponse:
      type: object
      properties:
        GCMChannelResponse:
          $ref: '#/components/schemas/GCMChannelResponse'
      required:
      - GCMChannelResponse
    UpdateInAppTemplateRequest:
      type: object
      properties:
        CreateNewVersion:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'Specifies whether to save the updates as a new version of
            the message template. Valid values are: true, save the updates as a new
            version; and, false, save the updates to (overwrite) the latest existing
            version of the template.


            If you don''t specify a value for this parameter, Amazon Pinpoint saves
            the updates to (overwrites) the latest existing version of the template.
            If you specify a value of true for this parameter, don''t specify a value
            for the version parameter. Otherwise, an error will occur.'
        InAppTemplateRequest:
          $ref: '#/components/schemas/InAppTemplateRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - InAppTemplateRequest
      - TemplateName
    UpdateInAppTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    UpdateJourneyRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        WriteJourneyRequest:
          $ref: '#/components/schemas/WriteJourneyRequest'
      required:
      - ApplicationId
      - JourneyId
      - WriteJourneyRequest
    UpdateJourneyResponse:
      type: object
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
    UpdateJourneyStateRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        JourneyId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the journey.
        JourneyStateRequest:
          $ref: '#/components/schemas/JourneyStateRequest'
      required:
      - ApplicationId
      - JourneyId
      - JourneyStateRequest
    UpdateJourneyStateResponse:
      type: object
      properties:
        JourneyResponse:
          $ref: '#/components/schemas/JourneyResponse'
      required:
      - JourneyResponse
    UpdatePushTemplateRequest:
      type: object
      properties:
        CreateNewVersion:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'Specifies whether to save the updates as a new version of
            the message template. Valid values are: true, save the updates as a new
            version; and, false, save the updates to (overwrite) the latest existing
            version of the template.


            If you don''t specify a value for this parameter, Amazon Pinpoint saves
            the updates to (overwrites) the latest existing version of the template.
            If you specify a value of true for this parameter, don''t specify a value
            for the version parameter. Otherwise, an error will occur.'
        PushNotificationTemplateRequest:
          $ref: '#/components/schemas/PushNotificationTemplateRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - PushNotificationTemplateRequest
      - TemplateName
    UpdatePushTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    UpdateRecommenderConfigurationRequest:
      type: object
      properties:
        RecommenderId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the recommender model configuration.
            This identifier is displayed as the **Recommender ID** on the Amazon Pinpoint
            console.
        UpdateRecommenderConfiguration:
          $ref: '#/components/schemas/UpdateRecommenderConfigurationShape'
      required:
      - RecommenderId
      - UpdateRecommenderConfiguration
    UpdateRecommenderConfigurationResponse:
      type: object
      properties:
        RecommenderConfigurationResponse:
          $ref: '#/components/schemas/RecommenderConfigurationResponse'
      required:
      - RecommenderConfigurationResponse
    UpdateRecommenderConfigurationShape:
      type: object
      properties:
        Attributes:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: "A map of key-value pairs that defines 1-10 custom endpoint\
            \ or user attributes, depending on the value for the RecommendationProviderIdType\
            \ property. Each of these attributes temporarily stores a recommended\
            \ item that's retrieved from the recommender model and sent to an AWS\
            \ Lambda function for additional processing. Each attribute can be used\
            \ as a message variable in a message template.\n\nIn the map, the key\
            \ is the name of a custom attribute and the value is a custom display\
            \ name for that attribute. The display name appears in the **Attribute\
            \ finder** of the template editor on the Amazon Pinpoint console. The\
            \ following restrictions apply to these names:\n\n  * An attribute name\
            \ must start with a letter or number and it can contain up to 50 characters.\
            \ The characters can be letters, numbers, underscores (_), or hyphens\
            \ (-). Attribute names are case sensitive and must be unique.\n\n  * An\
            \ attribute display name must start with a letter or number and it can\
            \ contain up to 25 characters. The characters can be letters, numbers,\
            \ spaces, underscores (_), or hyphens (-).\n\nThis object is required\
            \ if the configuration invokes an AWS Lambda function (RecommendationTransformerUri)\
            \ to process recommendation data. Otherwise, don't include this object\
            \ in your request."
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'A custom description of the configuration for the recommender
            model. The description can contain up to 128 characters. The characters
            can be letters, numbers, spaces, or the following symbols: _ ; () , ‐.'
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom name of the configuration for the recommender model.
            The name must start with a letter or number and it can contain up to 128
            characters. The characters can be letters, numbers, spaces, underscores
            (_), or hyphens (-).
        RecommendationProviderIdType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The type of Amazon Pinpoint ID to associate with unique user\
            \ IDs in the recommender model. This value enables the model to use attribute\
            \ and event data that’s specific to a particular endpoint or user in an\
            \ Amazon Pinpoint application. Valid values are:\n\n  * PINPOINT_ENDPOINT_ID\
            \ - Associate each user in the model with a particular endpoint in Amazon\
            \ Pinpoint. The data is correlated based on endpoint IDs in Amazon Pinpoint.\
            \ This is the default value.\n\n  * PINPOINT_USER_ID - Associate each\
            \ user in the model with a particular user and endpoint in Amazon Pinpoint.\
            \ The data is correlated based on user IDs in Amazon Pinpoint. If you\
            \ specify this value, an endpoint definition in Amazon Pinpoint has to\
            \ specify both a user ID (UserId) and an endpoint ID. Otherwise, messages\
            \ won’t be sent to the user's endpoint."
        RecommendationProviderRoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the AWS Identity and Access
            Management (IAM) role that authorizes Amazon Pinpoint to retrieve recommendation
            data from the recommender model.
        RecommendationProviderUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the recommender model to
            retrieve recommendation data from. This value must match the ARN of an
            Amazon Personalize campaign.
        RecommendationTransformerUri:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name or Amazon Resource Name (ARN) of the AWS Lambda function
            to invoke for additional processing of recommendation data that's retrieved
            from the recommender model.
        RecommendationsDisplayName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'A custom display name for the standard endpoint or user attribute
            (RecommendationItems) that temporarily stores recommended items for each
            endpoint or user, depending on the value for the RecommendationProviderIdType
            property. This value is required if the configuration doesn''t invoke
            an AWS Lambda function (RecommendationTransformerUri) to perform additional
            processing of recommendation data.


            This name appears in the **Attribute finder** of the template editor on
            the Amazon Pinpoint console. The name can contain up to 25 characters.
            The characters can be letters, numbers, spaces, underscores (_), or hyphens
            (-). These restrictions don''t apply to attribute values.'
        RecommendationsPerMessage:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: 'The number of recommended items to retrieve from the model
            for each endpoint or user, depending on the value for the RecommendationProviderIdType
            property. This number determines how many recommended items are available
            for use in message variables. The minimum value is 1. The maximum value
            is 5. The default value is 5.


            To use multiple recommended items and custom attributes with message variables,
            you have to use an AWS Lambda function (RecommendationTransformerUri)
            to perform additional processing of recommendation data.'
      required:
      - RecommendationProviderRoleArn
      - RecommendationProviderUri
      description: Specifies Amazon Pinpoint configuration settings for retrieving
        and processing recommendation data from a recommender model.
    UpdateSegmentRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment.
        WriteSegmentRequest:
          $ref: '#/components/schemas/WriteSegmentRequest'
      required:
      - ApplicationId
      - SegmentId
      - WriteSegmentRequest
    UpdateSegmentResponse:
      type: object
      properties:
        SegmentResponse:
          $ref: '#/components/schemas/SegmentResponse'
      required:
      - SegmentResponse
    UpdateSmsChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        SMSChannelRequest:
          $ref: '#/components/schemas/SMSChannelRequest'
      required:
      - ApplicationId
      - SMSChannelRequest
    UpdateSmsChannelResponse:
      type: object
      properties:
        SMSChannelResponse:
          $ref: '#/components/schemas/SMSChannelResponse'
      required:
      - SMSChannelResponse
    UpdateSmsTemplateRequest:
      type: object
      properties:
        CreateNewVersion:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'Specifies whether to save the updates as a new version of
            the message template. Valid values are: true, save the updates as a new
            version; and, false, save the updates to (overwrite) the latest existing
            version of the template.


            If you don''t specify a value for this parameter, Amazon Pinpoint saves
            the updates to (overwrites) the latest existing version of the template.
            If you specify a value of true for this parameter, don''t specify a value
            for the version parameter. Otherwise, an error will occur.'
        SMSTemplateRequest:
          $ref: '#/components/schemas/SMSTemplateRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
      required:
      - SMSTemplateRequest
      - TemplateName
    UpdateSmsTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    UpdateTemplateActiveVersionRequest:
      type: object
      properties:
        TemplateActiveVersionRequest:
          $ref: '#/components/schemas/TemplateActiveVersionRequest'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The type of channel that the message template is designed
            for. Valid values are: EMAIL, PUSH, SMS, and VOICE.'
      required:
      - TemplateActiveVersionRequest
      - TemplateName
      - TemplateType
    UpdateTemplateActiveVersionResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    UpdateVoiceChannelRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application. This identifier
            is displayed as the **Project ID** on the Amazon Pinpoint console.
        VoiceChannelRequest:
          $ref: '#/components/schemas/VoiceChannelRequest'
      required:
      - ApplicationId
      - VoiceChannelRequest
    UpdateVoiceChannelResponse:
      type: object
      properties:
        VoiceChannelResponse:
          $ref: '#/components/schemas/VoiceChannelResponse'
      required:
      - VoiceChannelResponse
    UpdateVoiceTemplateRequest:
      type: object
      properties:
        CreateNewVersion:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: 'Specifies whether to save the updates as a new version of
            the message template. Valid values are: true, save the updates as a new
            version; and, false, save the updates to (overwrite) the latest existing
            version of the template.


            If you don''t specify a value for this parameter, Amazon Pinpoint saves
            the updates to (overwrites) the latest existing version of the template.
            If you specify a value of true for this parameter, don''t specify a value
            for the version parameter. Otherwise, an error will occur.'
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template. A template name must start
            with an alphanumeric character and can contain a maximum of 128 characters.
            The characters can be alphanumeric characters, underscores (_), or hyphens
            (-). Template names are case sensitive.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: "The unique identifier for the version of the message template\
            \ to update, retrieve information about, or delete. To retrieve identifiers\
            \ and other information for all the versions of a template, use the Template\
            \ Versions resource.\n\nIf specified, this value must match the identifier\
            \ for an existing template version. If specified for an update operation,\
            \ this value must match the identifier for the latest existing version\
            \ of the template. This restriction helps ensure that race conditions\
            \ don't occur.\n\nIf you don't specify a value for this parameter, Amazon\
            \ Pinpoint does the following:\n\n  * For a get operation, retrieves information\
            \ about the active version of the template.\n\n  * For an update operation,\
            \ saves the updates to (overwrites) the latest existing version of the\
            \ template, if the create-new-version parameter isn't used or is set to\
            \ false.\n\n  * For a delete operation, deletes the template, including\
            \ all versions of the template."
        VoiceTemplateRequest:
          $ref: '#/components/schemas/VoiceTemplateRequest'
      required:
      - TemplateName
      - VoiceTemplateRequest
    UpdateVoiceTemplateResponse:
      type: object
      properties:
        MessageBody:
          $ref: '#/components/schemas/MessageBody'
      required:
      - MessageBody
    VerificationResponse:
      type: object
      properties:
        Valid:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the OTP is valid or not.
      description: Verify OTP Message Response.
    VerifyOTPMessageRequest:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique ID of your Amazon Pinpoint application.
        VerifyOTPMessageRequestParameters:
          $ref: '#/components/schemas/VerifyOTPMessageRequestParameters'
      required:
      - ApplicationId
      - VerifyOTPMessageRequestParameters
    VerifyOTPMessageRequestParameters:
      type: object
      properties:
        DestinationIdentity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The destination identity to send OTP to.
        Otp:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The OTP the end user provided for verification.
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The reference identifier provided when the OTP was previously
            sent.
      required:
      - DestinationIdentity
      - Otp
      - ReferenceId
      description: Verify OTP message request.
    VerifyOTPMessageResponse:
      type: object
      properties:
        VerificationResponse:
          $ref: '#/components/schemas/VerificationResponse'
      required:
      - VerificationResponse
    VoiceChannelRequest:
      type: object
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable the voice channel for the application.
      description: Specifies the status and settings of the voice channel for an application.
    VoiceChannelResponse:
      type: object
      properties:
        ApplicationId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the application that the voice channel
            applies to.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the voice channel
            was enabled.
        Enabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the voice channel is enabled for the application.
        HasCredential:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: (Not used) This property is retained only for backward compatibility.
        Id:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: (Deprecated) An identifier for the voice channel. This property
            is retained only for backward compatibility.
        IsArchived:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the voice channel is archived.
        LastModifiedBy:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The user who last modified the voice channel.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when the voice channel
            was last modified.
        Platform:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The type of messaging or notification platform for the channel.
            For the voice channel, this value is VOICE.
        Version:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The current version of the voice channel.
      required:
      - Platform
      description: Provides information about the status and settings of the voice
        channel for an application.
    VoiceMessage:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The text of the script to use for the voice message.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The code for the language to use when synthesizing the text
            of the message script. For a list of supported languages and the code
            for each one, see the [Amazon Polly Developer Guide](https://docs.aws.amazon.com/polly/latest/dg/what-is.html).
        OriginationNumber:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The long code to send the voice message from. This value should
            be one of the dedicated long codes that's assigned to your AWS account.
            Although it isn't required, we recommend that you specify the long code
            in E.164 format, for example +12065550100, to ensure prompt and accurate
            delivery of the message.
        Substitutions:
          allOf:
          - $ref: '#/components/schemas/MapOfListOf__string'
          description: The default message variables to use in the voice message.
            You can override the default variables with individual address variables.
        VoiceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the voice to use when delivering the message. For
            a list of supported voices, see the [Amazon Polly Developer Guide](https://docs.aws.amazon.com/polly/latest/dg/what-is.html).
      description: Specifies the settings for a one-time voice message that's sent
        directly to an endpoint through the voice channel.
    VoiceTemplateRequest:
      type: object
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The text of the script to use in messages that are based on
            the message template, in plain text format.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A JSON object that specifies the default values to use for
            message variables in the message template. This object is a set of key-value
            pairs. Each key defines a message variable in the template. The corresponding
            value defines the default value for that variable. When you create a message
            that's based on the template, you can override these defaults with message-specific
            and address-specific variables and values.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The code for the language to use when synthesizing the text
            of the script in messages that are based on the message template. For
            a list of supported languages and the code for each one, see the [Amazon
            Polly Developer Guide](https://docs.aws.amazon.com/polly/latest/dg/what-is.html).
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'As of **22-05-2023** tags has been deprecated for update operations.
            After this date any value in tags is not processed and an error code is
            not returned. To manage tags we recommend using either [Tags](https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html)
            in the _API Reference for Amazon Pinpoint_ , [resourcegroupstaggingapi](https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html)
            commands in the _AWS Command Line Interface Documentation_ or [resourcegroupstaggingapi](https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html)
            in the _AWS SDK_.


            (Deprecated) A string-to-string map of key-value pairs that defines the
            tags to associate with the message template. Each tag consists of a required
            tag key and an associated tag value.'
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom description of the message template.
        VoiceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the voice to use when delivering messages that
            are based on the message template. For a list of supported voices, see
            the [Amazon Polly Developer Guide](https://docs.aws.amazon.com/polly/latest/dg/what-is.html).
      description: Specifies the content and settings for a message template that
        can be used in messages that are sent through the voice channel.
    VoiceTemplateResponse:
      type: object
      properties:
        Arn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The Amazon Resource Name (ARN) of the message template.
        Body:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The text of the script that's used in messages that are based
            on the message template, in plain text format.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            created.
        DefaultSubstitutions:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The JSON object that specifies the default values that are
            used for message variables in the message template. This object is a set
            of key-value pairs. Each key defines a message variable in the template.
            The corresponding value defines the default value for that variable.
        LanguageCode:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The code for the language that's used when synthesizing the
            text of the script in messages that are based on the message template.
            For a list of supported languages and the code for each one, see the [Amazon
            Polly Developer Guide](https://docs.aws.amazon.com/polly/latest/dg/what-is.html).
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the message template was
            last modified.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: A string-to-string map of key-value pairs that identifies the
            tags that are associated with the message template. Each tag consists
            of a required tag key and an associated tag value.
        TemplateDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The custom description of the message template.
        TemplateName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the message template.
        TemplateType:
          allOf:
          - $ref: '#/components/schemas/TemplateType'
          description: The type of channel that the message template is designed for.
            For a voice template, this value is VOICE.
        Version:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier, as an integer, for the active version
            of the message template, or the version of the template that you specified
            by using the version parameter in your request.
        VoiceId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the voice that's used when delivering messages
            that are based on the message template. For a list of supported voices,
            see the [Amazon Polly Developer Guide](https://docs.aws.amazon.com/polly/latest/dg/what-is.html).
      required:
      - CreationDate
      - LastModifiedDate
      - TemplateName
      - TemplateType
      description: Provides information about the content and settings for a message
        template that can be used in messages that are sent through the voice channel.
    WaitActivity:
      type: object
      properties:
        NextActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the next activity to perform, after
            performing the wait activity.
        WaitTime:
          allOf:
          - $ref: '#/components/schemas/WaitTime'
          description: The amount of time to wait or the date and time when the activity
            moves participants to the next activity in the journey.
      description: Specifies the settings for a wait activity in a journey. This type
        of activity waits for a certain amount of time or until a specific date and
        time before moving participants to the next activity in a journey.
    WaitTime:
      type: object
      properties:
        WaitFor:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The amount of time to wait, as a duration in ISO 8601 format,
            before determining whether the activity's conditions have been met or
            moving participants to the next activity in the journey.
        WaitUntil:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date and time, in ISO 8601 format, when Amazon Pinpoint
            determines whether the activity's conditions have been met or the activity
            moves participants to the next activity in the journey.
      description: Specifies a duration or a date and time that indicates when Amazon
        Pinpoint determines whether an activity's conditions have been met or an activity
        moves participants to the next activity in a journey.
    WriteApplicationSettingsRequest:
      type: object
      properties:
        CampaignHook:
          allOf:
          - $ref: '#/components/schemas/CampaignHook'
          description: 'The settings for the AWS Lambda function to invoke by default
            as a code hook for campaigns in the application. You can use this hook
            to customize segments that are used by campaigns in the application.


            To override these settings and define custom settings for a specific campaign,
            use the CampaignHook object of the Campaign resource.'
        CloudWatchMetricsEnabled:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to enable application-related alarms in Amazon
            CloudWatch.
        EventTaggingEnabled:
          $ref: '#/components/schemas/__boolean'
        Limits:
          allOf:
          - $ref: '#/components/schemas/CampaignLimits'
          description: The default sending limits for campaigns in the application.
            To override these limits and define custom limits for a specific campaign
            or journey, use the Campaign resource or the Journey resource, respectively.
        QuietTime:
          allOf:
          - $ref: '#/components/schemas/QuietTime'
          description: "The default quiet time for campaigns in the application. Quiet\
            \ time is a specific time range when messages aren't sent to endpoints,\
            \ if all the following conditions are met:\n\n  * The EndpointDemographic.Timezone\
            \ property of the endpoint is set to a valid value.\n\n  * The current\
            \ time in the endpoint's time zone is later than or equal to the time\
            \ specified by the QuietTime.Start property for the application (or a\
            \ campaign or journey that has custom quiet time settings).\n\n  * The\
            \ current time in the endpoint's time zone is earlier than or equal to\
            \ the time specified by the QuietTime.End property for the application\
            \ (or a campaign or journey that has custom quiet time settings).\n\n\
            If any of the preceding conditions isn't met, the endpoint will receive\
            \ messages from a campaign or journey, even if quiet time is enabled.\n\
            \nTo override the default quiet time settings for a specific campaign\
            \ or journey, use the Campaign resource or the Journey resource to define\
            \ a custom quiet time for the campaign or journey."
        JourneyLimits:
          allOf:
          - $ref: '#/components/schemas/ApplicationSettingsJourneyLimits'
          description: The default sending limits for journeys in the application.
            These limits apply to each journey for the application but can be overridden,
            on a per journey basis, with the JourneyLimits resource.
      description: Specifies the default settings for an application.
    WriteCampaignRequest:
      type: object
      properties:
        AdditionalTreatments:
          allOf:
          - $ref: '#/components/schemas/ListOfWriteTreatmentResource'
          description: An array of requests that defines additional treatments for
            the campaign, in addition to the default treatment for the campaign.
        CustomDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/CustomDeliveryConfiguration'
          description: The delivery configuration settings for sending the campaign
            through a custom channel. This object is required if the MessageConfiguration
            object for the campaign specifies a CustomMessage object.
        Description:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom description of the campaign.
        HoldoutPercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The allocated percentage of users (segment members) who shouldn't
            receive messages from the campaign.
        Hook:
          allOf:
          - $ref: '#/components/schemas/CampaignHook'
          description: The settings for the AWS Lambda function to invoke as a code
            hook for the campaign. You can use this hook to customize the segment
            that's used by the campaign.
        IsPaused:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether to pause the campaign. A paused campaign
            doesn't run unless you resume it by changing this value to false.
        Limits:
          allOf:
          - $ref: '#/components/schemas/CampaignLimits'
          description: The messaging limits for the campaign.
        MessageConfiguration:
          allOf:
          - $ref: '#/components/schemas/MessageConfiguration'
          description: The message configuration settings for the campaign.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom name for the campaign.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/Schedule'
          description: The schedule settings for the campaign.
        SegmentId:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the segment to associate with the
            campaign.
        SegmentVersion:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The version of the segment to associate with the campaign.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'As of **22-05-2023** tags has been deprecated for update operations.
            After this date any value in tags is not processed and an error code is
            not returned. To manage tags we recommend using either [Tags](https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html)
            in the _API Reference for Amazon Pinpoint_ , [resourcegroupstaggingapi](https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html)
            commands in the _AWS Command Line Interface Documentation_ or [resourcegroupstaggingapi](https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html)
            in the _AWS SDK_.


            (Deprecated) A string-to-string map of key-value pairs that defines the
            tags to associate with the campaign. Each tag consists of a required tag
            key and an associated tag value.'
        TemplateConfiguration:
          allOf:
          - $ref: '#/components/schemas/TemplateConfiguration'
          description: The message template to use for the campaign.
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom description of the default treatment for the campaign.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom name of the default treatment for the campaign, if
            the campaign has multiple treatments. A _treatment_ is a variation of
            a campaign that's used for A/B testing.
        Priority:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: Defines the priority of the campaign, used to decide the order
            of messages displayed to user if there are multiple messages scheduled
            to be displayed at the same moment.
      description: Specifies the configuration and other settings for a campaign.
    WriteEventStream:
      type: object
      properties:
        DestinationStreamArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: 'The Amazon Resource Name (ARN) of the Amazon Kinesis data
            stream or Amazon Kinesis Data Firehose delivery stream that you want to
            publish event data to.


            For a Kinesis data stream, the ARN format is: arn:aws:kinesis:region:account-id:stream/stream_name


            For a Kinesis Data Firehose delivery stream, the ARN format is: arn:aws:firehose:region:account-id:deliverystream/stream_name'
        RoleArn:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The AWS Identity and Access Management (IAM) role that authorizes
            Amazon Pinpoint to publish event data to the stream in your AWS account.
      required:
      - DestinationStreamArn
      - RoleArn
      description: Specifies the Amazon Resource Name (ARN) of an event stream to
        publish events to and the AWS Identity and Access Management (IAM) role to
        use when publishing those events.
    WriteJourneyRequest:
      type: object
      properties:
        Activities:
          allOf:
          - $ref: '#/components/schemas/MapOfActivity'
          description: A map that contains a set of Activity objects, one object for
            each activity in the journey. For each Activity object, the key is the
            unique identifier (string) for an activity and the value is the settings
            for the activity. An activity identifier can contain a maximum of 100
            characters. The characters must be alphanumeric characters.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the journey was created.
        LastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The date, in ISO 8601 format, when the journey was last modified.
        Limits:
          allOf:
          - $ref: '#/components/schemas/JourneyLimits'
          description: The messaging and entry limits for the journey.
        LocalTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether the journey's scheduled start and end times
            use each participant's local time. To base the schedule on each participant's
            local time, set this value to true.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the journey. A journey name can contain a maximum
            of 150 characters. The characters can be alphanumeric characters or symbols,
            such as underscores (_) or hyphens (-). A journey name can't contain any
            spaces.
        QuietTime:
          allOf:
          - $ref: '#/components/schemas/QuietTime'
          description: "The quiet time settings for the journey. Quiet time is a specific\
            \ time range when a journey doesn't send messages to participants, if\
            \ all the following conditions are met:\n\n  * The EndpointDemographic.Timezone\
            \ property of the endpoint for the participant is set to a valid value.\n\
            \n  * The current time in the participant's time zone is later than or\
            \ equal to the time specified by the QuietTime.Start property for the\
            \ journey.\n\n  * The current time in the participant's time zone is earlier\
            \ than or equal to the time specified by the QuietTime.End property for\
            \ the journey.\n\nIf any of the preceding conditions isn't met, the participant\
            \ will receive messages from the journey, even if quiet time is enabled."
        RefreshFrequency:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The frequency with which Amazon Pinpoint evaluates segment
            and event data for the journey, as a duration in ISO 8601 format.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/JourneySchedule'
          description: The schedule settings for the journey.
        StartActivity:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The unique identifier for the first activity in the journey.
            The identifier for this activity can contain a maximum of 128 characters.
            The characters must be alphanumeric characters.
        StartCondition:
          allOf:
          - $ref: '#/components/schemas/StartCondition'
          description: The segment that defines which users are participants in the
            journey.
        State:
          allOf:
          - $ref: '#/components/schemas/State'
          description: "The status of the journey. Valid values are:\n\n  * DRAFT\
            \ - Saves the journey and doesn't publish it.\n\n  * ACTIVE - Saves and\
            \ publishes the journey. Depending on the journey's schedule, the journey\
            \ starts running immediately or at the scheduled start time. If a journey's\
            \ status is ACTIVE, you can't add, change, or remove activities from it.\n\
            \nPAUSED, CANCELLED, COMPLETED, and CLOSED states are not supported in\
            \ requests to create or update a journey. To cancel, pause, or resume\
            \ a journey, use the Journey State resource."
        WaitForQuietTime:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Specifies whether endpoints in quiet hours should enter a wait
            till the end of their quiet hours.
        RefreshOnSegmentUpdate:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates whether the journey participants should be refreshed
            when a segment is updated.
        JourneyChannelSettings:
          allOf:
          - $ref: '#/components/schemas/JourneyChannelSettings'
          description: The channel-specific configurations for the journey.
        SendingSchedule:
          allOf:
          - $ref: '#/components/schemas/__boolean'
          description: Indicates if journey has Advance Quiet Time enabled. This flag
            should be set to true in order to allow using OpenHours and ClosedDays.
        OpenHours:
          allOf:
          - $ref: '#/components/schemas/OpenHours'
          description: The time when journey allow to send messages. QuietTime should
            be configured first and SendingSchedule should be set to true.
        ClosedDays:
          allOf:
          - $ref: '#/components/schemas/ClosedDays'
          description: The time when journey will stop sending messages. QuietTime
            should be configured first and SendingSchedule should be set to true.
        TimezoneEstimationMethods:
          allOf:
          - $ref: '#/components/schemas/ListOf__TimezoneEstimationMethodsElement'
          description: "An array of time zone estimation methods, if any, to use for\
            \ determining an [Endpoints](https://docs.aws.amazon.com/pinpoint/latest/apireference/apps-application-id-endpoints-endpoint-id.html)\
            \ time zone if the Endpoint does not have a value for the Demographic.Timezone\
            \ attribute.\n\n  * PHONE_NUMBER - A time zone is determined based on\
            \ the Endpoint.Address and Endpoint.Location.Country.\n\n  * POSTAL_CODE\
            \ - A time zone is determined based on the Endpoint.Location.PostalCode\
            \ and Endpoint.Location.Country.\n\nPOSTAL_CODE detection is only supported\
            \ in the United States, United Kingdom, Australia, New Zealand, Canada,\
            \ France, Italy, Spain, Germany and in regions where Amazon Pinpoint is\
            \ available."
      required:
      - Name
      description: Specifies the configuration and other settings for a journey.
    WriteSegmentRequest:
      type: object
      properties:
        Dimensions:
          allOf:
          - $ref: '#/components/schemas/SegmentDimensions'
          description: The criteria that define the dimensions for the segment.
        Name:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: The name of the segment.
        SegmentGroups:
          allOf:
          - $ref: '#/components/schemas/SegmentGroupList'
          description: The segment group to use and the dimensions to apply to the
            group's base segments in order to build the segment. A segment group can
            consist of zero or more base segments. Your request can include only one
            segment group.
        tags:
          allOf:
          - $ref: '#/components/schemas/MapOf__string'
          description: 'As of **22-05-2023** tags has been deprecated for update operations.
            After this date any value in tags is not processed and an error code is
            not returned. To manage tags we recommend using either [Tags](https://docs.aws.amazon.com/pinpoint/latest/apireference/tags-resource-arn.html)
            in the _API Reference for Amazon Pinpoint_ , [resourcegroupstaggingapi](https://docs.aws.amazon.com/cli/latest/reference/resourcegroupstaggingapi/index.html)
            commands in the _AWS Command Line Interface Documentation_ or [resourcegroupstaggingapi](https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/resourcegroupstaggingapi/package-summary.html)
            in the _AWS SDK_.


            (Deprecated) A string-to-string map of key-value pairs that defines the
            tags to associate with the segment. Each tag consists of a required tag
            key and an associated tag value.'
      description: Specifies the configuration, dimension, and other settings for
        a segment. A WriteSegmentRequest object can include a Dimensions object or
        a SegmentGroups object, but not both.
    WriteTreatmentResource:
      type: object
      properties:
        CustomDeliveryConfiguration:
          allOf:
          - $ref: '#/components/schemas/CustomDeliveryConfiguration'
          description: The delivery configuration settings for sending the treatment
            through a custom channel. This object is required if the MessageConfiguration
            object for the treatment specifies a CustomMessage object.
        MessageConfiguration:
          allOf:
          - $ref: '#/components/schemas/MessageConfiguration'
          description: The message configuration settings for the treatment.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/Schedule'
          description: The schedule settings for the treatment.
        SizePercent:
          allOf:
          - $ref: '#/components/schemas/__integer'
          description: The allocated percentage of users (segment members) to send
            the treatment to.
        TemplateConfiguration:
          allOf:
          - $ref: '#/components/schemas/TemplateConfiguration'
          description: The message template to use for the treatment.
        TreatmentDescription:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom description of the treatment.
        TreatmentName:
          allOf:
          - $ref: '#/components/schemas/__string'
          description: A custom name for the treatment.
      required:
      - SizePercent
      description: Specifies the settings for a campaign treatment. A _treatment_
        is a variation of a campaign that's used for A/B testing of a campaign.
    __EndpointTypesElement:
      type: string
      enum:
      - PUSH
      - GCM
      - APNS
      - APNS_SANDBOX
      - APNS_VOIP
      - APNS_VOIP_SANDBOX
      - ADM
      - SMS
      - VOICE
      - EMAIL
      - BAIDU
      - CUSTOM
      - IN_APP
    __TimezoneEstimationMethodsElement:
      type: string
      enum:
      - PHONE_NUMBER
      - POSTAL_CODE
    __blob:
      type: string
      format: byte
    __boolean:
      type: boolean
    __double:
      type: number
      format: double
    __integer:
      type: integer
    __string:
      type: string
    __timestampIso8601:
      type: string
      format: date-time
