openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: emr_serverless
  x-aws-serviceName: emrserverless
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2021-07-13'
  title: EMR Serverless
  description: |-
    Amazon EMR Serverless is a new deployment option for Amazon EMR. Amazon EMR Serverless provides a serverless runtime environment that simplifies running analytics applications using the latest open source frameworks such as Apache Spark and Apache Hive. With Amazon EMR Serverless, you donâ€™t have to configure, optimize, secure, or operate clusters to run applications with these frameworks.

    The API reference to Amazon EMR Serverless is `emr-serverless`. The `emr-serverless` prefix is used in the following scenarios:

      * It is the prefix in the CLI commands for Amazon EMR Serverless. For example, `aws emr-serverless start-job-run`.

      * It is the prefix before IAM policy actions for Amazon EMR Serverless. For example, `"Action": ["emr-serverless:StartJobRun"]`. For more information, see [Policy actions for Amazon EMR Serverless](https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/security_iam_service-with-iam.html#security_iam_service-with-iam-id-based-policies-actions).

      * It is the prefix used in Amazon EMR Serverless service endpoints. For example, `emr-serverless.us-east-2.amazonaws.com`.
servers:
- description: The EMR Serverless regional endpoint
  url: https://emr-serverless.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /applications/{applicationId}/jobruns/{jobRunId}:
    delete:
      operationId: CancelJobRun
      description: |-
        Cancels a job run.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      - name: jobRunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobRunId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetJobRun
      description: |-
        Displays detailed information about a job run.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      - name: jobRunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobRunId'
      - name: attempt
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AttemptNumber'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /applications:
    post:
      operationId: CreateApplication
      description: |-
        Creates an application.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  $ref: '#/components/schemas/ApplicationName'
                releaseLabel:
                  $ref: '#/components/schemas/ReleaseLabel'
                type:
                  $ref: '#/components/schemas/EngineType'
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                initialCapacity:
                  $ref: '#/components/schemas/InitialCapacityConfigMap'
                maximumCapacity:
                  $ref: '#/components/schemas/MaximumAllowedResources'
                tags:
                  $ref: '#/components/schemas/TagMap'
                autoStartConfiguration:
                  $ref: '#/components/schemas/AutoStartConfig'
                autoStopConfiguration:
                  $ref: '#/components/schemas/AutoStopConfig'
                networkConfiguration:
                  $ref: '#/components/schemas/NetworkConfiguration'
                architecture:
                  $ref: '#/components/schemas/Architecture'
                imageConfiguration:
                  $ref: '#/components/schemas/ImageConfigurationInput'
                workerTypeSpecifications:
                  $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
                runtimeConfiguration:
                  $ref: '#/components/schemas/ConfigurationList'
                monitoringConfiguration:
                  $ref: '#/components/schemas/MonitoringConfiguration'
                interactiveConfiguration:
                  $ref: '#/components/schemas/InteractiveConfiguration'
                schedulerConfiguration:
                  $ref: '#/components/schemas/SchedulerConfiguration'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: ListApplications
      description: |-
        Lists applications based on a set of parameters.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: states
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ApplicationStateSet'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /applications/{applicationId}:
    delete:
      operationId: DeleteApplication
      description: |-
        Deletes an application. An application has to be in a stopped or created state in order to be deleted.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    get:
      operationId: GetApplication
      description: |-
        Displays detailed information about a specified application.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateApplication
      description: |-
        Updates a specified application. An application has to be in a stopped or created state in order to be updated.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                initialCapacity:
                  $ref: '#/components/schemas/InitialCapacityConfigMap'
                maximumCapacity:
                  $ref: '#/components/schemas/MaximumAllowedResources'
                autoStartConfiguration:
                  $ref: '#/components/schemas/AutoStartConfig'
                autoStopConfiguration:
                  $ref: '#/components/schemas/AutoStopConfig'
                networkConfiguration:
                  $ref: '#/components/schemas/NetworkConfiguration'
                architecture:
                  $ref: '#/components/schemas/Architecture'
                imageConfiguration:
                  $ref: '#/components/schemas/ImageConfigurationInput'
                workerTypeSpecifications:
                  $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
                interactiveConfiguration:
                  $ref: '#/components/schemas/InteractiveConfiguration'
                releaseLabel:
                  $ref: '#/components/schemas/ReleaseLabel'
                runtimeConfiguration:
                  $ref: '#/components/schemas/ConfigurationList'
                monitoringConfiguration:
                  $ref: '#/components/schemas/MonitoringConfiguration'
                schedulerConfiguration:
                  $ref: '#/components/schemas/SchedulerConfiguration'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /applications/{applicationId}/jobruns/{jobRunId}/dashboard:
    get:
      operationId: GetDashboardForJobRun
      description: |-
        Creates and returns a URL that you can use to access the application UIs for a job run.

        For jobs in a running state, the application UI is a live user interface such as the Spark or Tez web UI. For completed jobs, the application UI is a persistent application user interface such as the Spark History Server or persistent Tez UI.

        The URL is valid for one hour after you generate it. To access the application UI after that hour elapses, you must invoke the API again to generate a new URL.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      - name: jobRunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobRunId'
      - name: attempt
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AttemptNumber'
      - name: accessSystemProfileLogs
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Boolean'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /applications/{applicationId}/jobruns/{jobRunId}/attempts:
    get:
      operationId: ListJobRunAttempts
      description: |-
        Lists all attempt of a job run.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      - name: jobRunId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/JobRunId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /applications/{applicationId}/jobruns:
    get:
      operationId: ListJobRuns
      description: |-
        Lists job runs based on a set of parameters.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/NextToken'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Integer'
      - name: createdAtAfter
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Date'
      - name: createdAtBefore
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/Date'
      - name: states
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobRunStateSet'
      - name: mode
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/JobRunMode'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartJobRun
      description: |-
        Starts a job run.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                clientToken:
                  $ref: '#/components/schemas/ClientToken'
                executionRoleArn:
                  $ref: '#/components/schemas/IAMRoleArn'
                jobDriver:
                  $ref: '#/components/schemas/JobDriver'
                configurationOverrides:
                  $ref: '#/components/schemas/ConfigurationOverrides'
                tags:
                  $ref: '#/components/schemas/TagMap'
                executionTimeoutMinutes:
                  $ref: '#/components/schemas/Duration'
                name:
                  $ref: '#/components/schemas/String256'
                mode:
                  $ref: '#/components/schemas/JobRunMode'
                retryPolicy:
                  $ref: '#/components/schemas/RetryPolicy'
      responses:
        '200': {}
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /tags/{resourceArn}:
    get:
      operationId: ListTagsForResource
      description: |-
        Lists the tags assigned to the resources.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: TagResource
      description: |-
        Assigns tags to resources. A tag is a label that you assign to an Amazon Web Services resource. Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize your Amazon Web Services resources by attributes such as purpose, owner, or environment. When you have many resources of the same type, you can quickly identify a specific resource based on the tags you've assigned to it.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                tags:
                  $ref: '#/components/schemas/TagMap'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    delete:
      operationId: UntagResource
      description: |-
        Removes tags from resources.
      parameters:
      - name: resourceArn
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceArn'
      - name: tagKeys
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/TagKeyList'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /applications/{applicationId}/start:
    post:
      operationId: StartApplication
      description: |-
        Starts a specified application and initializes initial capacity if configured.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '402':
          description: |-
            The maximum number of resources per account has been reached.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /applications/{applicationId}/stop:
    post:
      operationId: StopApplication
      description: |-
        Stops a specified application and releases initial capacity if configured. All scheduled and running jobs must be completed or cancelled before stopping an application.
      parameters:
      - name: applicationId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ApplicationId'
      responses:
        '200': {}
        '500':
          description: |-
            Request processing failed because of an error or failure with the service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The specified resource was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    Application:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The name of the application.
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          description: The ARN of the application.
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          description: The Amazon EMR release associated with the application.
        type:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          description: The type of application, such as Spark or Hive.
        state:
          allOf:
          - $ref: '#/components/schemas/ApplicationState'
          description: The state of the application.
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The state details of the application.
        initialCapacity:
          allOf:
          - $ref: '#/components/schemas/InitialCapacityConfigMap'
          description: The initial capacity of the application.
        maximumCapacity:
          allOf:
          - $ref: '#/components/schemas/MaximumAllowedResources'
          description: The maximum capacity of the application. This is cumulative
            across all workers at any given point in time during the lifespan of the
            application is created. No new resources will be created once any one
            of the defined limits is hit.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the application run was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the application run was last updated.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the application.
        autoStartConfiguration:
          allOf:
          - $ref: '#/components/schemas/AutoStartConfig'
          description: The configuration for an application to automatically start
            on job submission.
        autoStopConfiguration:
          allOf:
          - $ref: '#/components/schemas/AutoStopConfig'
          description: The configuration for an application to automatically stop
            after a certain amount of time being idle.
        networkConfiguration:
          allOf:
          - $ref: '#/components/schemas/NetworkConfiguration'
          description: The network configuration for customer VPC connectivity for
            the application.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The CPU architecture of an application.
        imageConfiguration:
          allOf:
          - $ref: '#/components/schemas/ImageConfiguration'
          description: The image configuration applied to all worker types.
        workerTypeSpecifications:
          allOf:
          - $ref: '#/components/schemas/WorkerTypeSpecificationMap'
          description: The specification applied to each worker type.
        runtimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConfigurationList'
          description: The [Configuration](https://docs.aws.amazon.com/emr-serverless/latest/APIReference/API_Configuration.html)
            specifications of an application. Each configuration consists of a classification
            and properties. You use this parameter when creating or updating an application.
            To see the runtimeConfiguration object of an application, run the [GetApplication](https://docs.aws.amazon.com/emr-serverless/latest/APIReference/API_GetApplication.html)
            API operation.
        monitoringConfiguration:
          $ref: '#/components/schemas/MonitoringConfiguration'
        interactiveConfiguration:
          allOf:
          - $ref: '#/components/schemas/InteractiveConfiguration'
          description: The interactive configuration object that enables the interactive
            use cases for an application.
        schedulerConfiguration:
          allOf:
          - $ref: '#/components/schemas/SchedulerConfiguration'
          description: The scheduler configuration for batch and streaming jobs running
            on this application. Supported with release labels emr-7.0.0 and above.
      required:
      - applicationId
      - arn
      - releaseLabel
      - type
      - state
      - createdAt
      - updatedAt
      description: Information about an application. Amazon EMR Serverless uses applications
        to run jobs.
    ApplicationArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\d{12}):\/applications\/[0-9a-zA-Z]+$
      minLength: 60
      maxLength: 1024
    ApplicationId:
      type: string
      pattern: ^[0-9a-z]+$
      minLength: 1
      maxLength: 64
    ApplicationList:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationSummary'
    ApplicationName:
      type: string
      pattern: ^[A-Za-z0-9._/#-]+$
      minLength: 1
      maxLength: 64
    ApplicationState:
      type: string
      enum:
      - CREATING
      - CREATED
      - STARTING
      - STARTED
      - STOPPING
      - STOPPED
      - TERMINATED
    ApplicationStateSet:
      type: array
      items:
        $ref: '#/components/schemas/ApplicationState'
    ApplicationSummary:
      type: object
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The name of the application.
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          description: The ARN of the application.
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          description: The Amazon EMR release associated with the application.
        type:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          description: The type of application, such as Spark or Hive.
        state:
          allOf:
          - $ref: '#/components/schemas/ApplicationState'
          description: The state of the application.
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The state details of the application.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the application was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the application was last updated.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The CPU architecture of an application.
      required:
      - id
      - arn
      - releaseLabel
      - type
      - state
      - createdAt
      - updatedAt
      description: The summary of attributes associated with an application.
    Architecture:
      type: string
      enum:
      - ARM64
      - X86_64
    AttemptNumber:
      type: integer
      minimum: 1
    AutoStartConfig:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables the application to automatically start on job submission.
            Defaults to true.
      description: The configuration for an application to automatically start on
        job submission.
    AutoStopConfig:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables the application to automatically stop after a certain
            amount of time being idle. Defaults to true.
        idleTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The amount of idle time in minutes after which your application
            will automatically stop. Defaults to 15 minutes.
      description: The configuration for an application to automatically stop after
        a certain amount of time being idle.
    CancelJobRunRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application on which the job run will be canceled.
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run to cancel.
      required:
      - applicationId
      - jobRunId
    CancelJobRunResponse:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The output contains the application ID on which the job run
            is cancelled.
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The output contains the ID of the cancelled job run.
      required:
      - applicationId
      - jobRunId
    ClientToken:
      type: string
      pattern: ^[A-Za-z0-9._-]+$
      minLength: 1
      maxLength: 64
    CloudWatchLoggingConfiguration:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables CloudWatch logging.
        logGroupName:
          allOf:
          - $ref: '#/components/schemas/LogGroupName'
          description: The name of the log group in Amazon CloudWatch Logs where you
            want to publish your logs.
        logStreamNamePrefix:
          allOf:
          - $ref: '#/components/schemas/LogStreamNamePrefix'
          description: Prefix for the CloudWatch log stream name.
        encryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The Key Management Service (KMS) key ARN to encrypt the logs
            that you store in CloudWatch Logs.
        logTypes:
          allOf:
          - $ref: '#/components/schemas/LogTypeMap'
          description: "The types of logs that you want to publish to CloudWatch.\
            \ If you don't specify any log types, driver STDOUT and STDERR logs will\
            \ be published to CloudWatch Logs by default. For more information including\
            \ the supported worker types for Hive and Spark, see [Logging for EMR\
            \ Serverless with CloudWatch](https://docs.aws.amazon.com/emr/latest/EMR-Serverless-UserGuide/logging.html#jobs-log-storage-cw).\n\
            \n  * **Key Valid Values** : `SPARK_DRIVER`, `SPARK_EXECUTOR`, `HIVE_DRIVER`,\
            \ `TEZ_TASK`\n\n  * **Array Members Valid Values** : `STDOUT`, `STDERR`,\
            \ `HIVE_LOG`, `TEZ_AM`, `SYSTEM_LOGS`"
      required:
      - enabled
      description: The Amazon CloudWatch configuration for monitoring logs. You can
        configure your jobs to send log information to CloudWatch.
    Configuration:
      type: object
      properties:
        classification:
          allOf:
          - $ref: '#/components/schemas/String1024'
          description: The classification within a configuration.
        properties:
          allOf:
          - $ref: '#/components/schemas/SensitivePropertiesMap'
          description: A set of properties specified within a configuration classification.
        configurations:
          allOf:
          - $ref: '#/components/schemas/ConfigurationList'
          description: A list of additional configurations to apply within a configuration
            object.
      required:
      - classification
      description: A configuration specification to be used when provisioning an application.
        A configuration consists of a classification, properties, and optional nested
        configurations. A classification refers to an application-specific configuration
        file. Properties are the settings you want to change in that file.
    ConfigurationList:
      type: array
      items:
        $ref: '#/components/schemas/Configuration'
    ConfigurationOverrides:
      type: object
      properties:
        applicationConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConfigurationList'
          description: The override configurations for the application.
        monitoringConfiguration:
          allOf:
          - $ref: '#/components/schemas/MonitoringConfiguration'
          description: The override configurations for monitoring.
      description: A configuration specification to be used to override existing configurations.
    ConfigurationPropertyKey:
      type: string
      pattern: ^.*\S.*$
      minLength: 1
      maxLength: 1024
    ConfigurationPropertyValue:
      type: string
      pattern: ^.*\S.*$
      minLength: 0
      maxLength: 1024
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String1024'
      required:
      - message
      description: The request could not be processed because of conflict in the current
        state of the resource.
    CpuSize:
      type: string
      pattern: ^[1-9][0-9]*(\s)?(vCPU|vcpu|VCPU)?$
      minLength: 1
      maxLength: 15
    CreateApplicationRequest:
      type: object
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The name of the application.
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          description: The Amazon EMR release associated with the application.
        type:
          allOf:
          - $ref: '#/components/schemas/EngineType'
          description: The type of application you want to start, such as Spark or
            Hive.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client idempotency token of the application to create.
            Its value must be unique for each request.
        initialCapacity:
          allOf:
          - $ref: '#/components/schemas/InitialCapacityConfigMap'
          description: The capacity to initialize when the application is created.
        maximumCapacity:
          allOf:
          - $ref: '#/components/schemas/MaximumAllowedResources'
          description: The maximum capacity to allocate when the application is created.
            This is cumulative across all workers at any given point in time, not
            just when an application is created. No new resources will be created
            once any one of the defined limits is hit.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the application.
        autoStartConfiguration:
          allOf:
          - $ref: '#/components/schemas/AutoStartConfig'
          description: The configuration for an application to automatically start
            on job submission.
        autoStopConfiguration:
          allOf:
          - $ref: '#/components/schemas/AutoStopConfig'
          description: The configuration for an application to automatically stop
            after a certain amount of time being idle.
        networkConfiguration:
          allOf:
          - $ref: '#/components/schemas/NetworkConfiguration'
          description: The network configuration for customer VPC connectivity.
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The CPU architecture of an application.
        imageConfiguration:
          allOf:
          - $ref: '#/components/schemas/ImageConfigurationInput'
          description: The image configuration for all worker types. You can either
            set this parameter or `imageConfiguration` for each worker type in `workerTypeSpecifications`.
        workerTypeSpecifications:
          allOf:
          - $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
          description: The key-value pairs that specify worker type to `WorkerTypeSpecificationInput`.
            This parameter must contain all valid worker types for a Spark or Hive
            application. Valid worker types include `Driver` and `Executor` for Spark
            applications and `HiveDriver` and `TezTask` for Hive applications. You
            can either set image details in this parameter for each worker type, or
            in `imageConfiguration` for all worker types.
        runtimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConfigurationList'
          description: The [Configuration](https://docs.aws.amazon.com/emr-serverless/latest/APIReference/API_Configuration.html)
            specifications to use when creating an application. Each configuration
            consists of a classification and properties. This configuration is applied
            to all the job runs submitted under the application.
        monitoringConfiguration:
          allOf:
          - $ref: '#/components/schemas/MonitoringConfiguration'
          description: The configuration setting for monitoring.
        interactiveConfiguration:
          allOf:
          - $ref: '#/components/schemas/InteractiveConfiguration'
          description: The interactive configuration object that enables the interactive
            use cases to use when running an application.
        schedulerConfiguration:
          allOf:
          - $ref: '#/components/schemas/SchedulerConfiguration'
          description: The scheduler configuration for batch and streaming jobs running
            on this application. Supported with release labels emr-7.0.0 and above.
      required:
      - releaseLabel
      - type
      - clientToken
    CreateApplicationResponse:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The output contains the application ID.
        name:
          allOf:
          - $ref: '#/components/schemas/ApplicationName'
          description: The output contains the name of the application.
        arn:
          allOf:
          - $ref: '#/components/schemas/ApplicationArn'
          description: The output contains the ARN of the application.
      required:
      - applicationId
      - arn
    Date:
      type: string
      format: date-time
    DeleteApplicationRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application that will be deleted.
      required:
      - applicationId
    DeleteApplicationResponse:
      type: object
      properties: {}
    DiskSize:
      type: string
      pattern: ^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)$
      minLength: 1
      maxLength: 15
    DiskType:
      type: string
      pattern: ^(SHUFFLE_OPTIMIZED|[Ss]huffle_[Oo]ptimized|STANDARD|[Ss]tandard)$
    Duration:
      type: integer
      format: int64
      default: 0
      minimum: 0
      maximum: 1000000
    EncryptionKeyArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):kms:[a-zA-Z0-9\-]*:([0-9]{12}):key\/[a-zA-Z0-9-]+$
      minLength: 20
      maxLength: 2048
    EngineType:
      type: string
      minLength: 1
      maxLength: 64
    EntryPointArgument:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 10280
    EntryPointArguments:
      type: array
      items:
        $ref: '#/components/schemas/EntryPointArgument'
    EntryPointPath:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 4096
    GetApplicationRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application that will be described.
      required:
      - applicationId
    GetApplicationResponse:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          description: The output displays information about the specified application.
      required:
      - application
    GetDashboardForJobRunRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application.
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run.
        attempt:
          allOf:
          - $ref: '#/components/schemas/AttemptNumber'
          description: An optimal parameter that indicates the amount of attempts
            for the job. If not specified, this value defaults to the attempt of the
            latest job.
        accessSystemProfileLogs:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Allows access to system profile logs for Lake Formation-enabled
            jobs. Default is false.
      required:
      - applicationId
      - jobRunId
    GetDashboardForJobRunResponse:
      type: object
      properties:
        url:
          allOf:
          - $ref: '#/components/schemas/Url'
          description: The URL to view job run's dashboard.
    GetJobRunRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application on which the job run is submitted.
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run.
        attempt:
          allOf:
          - $ref: '#/components/schemas/AttemptNumber'
          description: An optimal parameter that indicates the amount of attempts
            for the job. If not specified, this value defaults to the attempt of the
            latest job.
      required:
      - applicationId
      - jobRunId
    GetJobRunResponse:
      type: object
      properties:
        jobRun:
          allOf:
          - $ref: '#/components/schemas/JobRun'
          description: The output displays information about the job run.
      required:
      - jobRun
    Hive:
      type: object
      properties:
        query:
          allOf:
          - $ref: '#/components/schemas/Query'
          description: The query for the Hive job run.
        initQueryFile:
          allOf:
          - $ref: '#/components/schemas/InitScriptPath'
          description: The query file for the Hive job run.
        parameters:
          allOf:
          - $ref: '#/components/schemas/HiveCliParameters'
          description: The parameters for the Hive job run.
      required:
      - query
      description: The configurations for the Hive job driver.
    HiveCliParameters:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 102400
    IAMRoleArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):iam::([0-9]{12}):(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$
      minLength: 20
      maxLength: 2048
    ImageConfiguration:
      type: object
      properties:
        imageUri:
          allOf:
          - $ref: '#/components/schemas/ImageUri'
          description: The image URI.
        resolvedImageDigest:
          allOf:
          - $ref: '#/components/schemas/ImageDigest'
          description: The SHA256 digest of the image URI. This indicates which specific
            image the application is configured for. The image digest doesn't exist
            until an application has started.
      required:
      - imageUri
      description: The applied image configuration.
    ImageConfigurationInput:
      type: object
      properties:
        imageUri:
          allOf:
          - $ref: '#/components/schemas/ImageUri'
          description: The URI of an image in the Amazon ECR registry. This field
            is required when you create a new application. If you leave this field
            blank in an update, Amazon EMR will remove the image configuration.
      description: The image configuration.
    ImageDigest:
      type: string
      pattern: ^sha256:[0-9a-f]{64}$
    ImageUri:
      type: string
      pattern: ^([0-9]{12})\.dkr\.ecr\.([a-z0-9-]+).([a-z0-9._-]+)\/((?:[a-z0-9]+(?:[-._][a-z0-9]+)*/)*[a-z0-9]+(?:[-._][a-z0-9]+)*)(?::([a-zA-Z0-9_]+[a-zA-Z0-9-._]*)|@(sha256:[0-9a-f]{64}))$
      minLength: 1
      maxLength: 1024
    InitScriptPath:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 256
    InitialCapacityConfig:
      type: object
      properties:
        workerCount:
          allOf:
          - $ref: '#/components/schemas/WorkerCounts'
          description: The number of workers in the initial capacity configuration.
        workerConfiguration:
          allOf:
          - $ref: '#/components/schemas/WorkerResourceConfig'
          description: The resource configuration of the initial capacity configuration.
      required:
      - workerCount
      description: The initial capacity configuration per worker.
    InitialCapacityConfigMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/InitialCapacityConfig'
    InteractiveConfiguration:
      type: object
      properties:
        studioEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables you to connect an application to Amazon EMR Studio
            to run interactive workloads in a notebook.
        livyEndpointEnabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables an Apache Livy endpoint that you can connect to and
            run interactive jobs.
      description: The configuration to use to enable the different types of interactive
        use cases in an application.
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String1024'
      required:
      - message
      description: Request processing failed because of an error or failure with the
        service.
    JobArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\d{12}):\/applications\/[0-9a-zA-Z]+\/jobruns\/[0-9a-zA-Z]+$
      minLength: 60
      maxLength: 1024
    JobDriver:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/SparkSubmit'
        description: |-
          The job driver parameters specified for Spark.
      - allOf:
        - $ref: '#/components/schemas/Hive'
        description: |-
          The job driver parameters specified for Hive.
      description: |-
        The driver that the job runs on.
    JobRun:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application the job is running on.
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run.
        name:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The optional job run name. This doesn't have to be unique.
        arn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: The execution role ARN of the job run.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/RequestIdentityUserArn'
          description: The user who created the job run.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job run was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job run was updated.
        executionRole:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The execution role ARN of the job run.
        state:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          description: The state of the job run.
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The state details of the job run.
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          description: The Amazon EMR release associated with the application your
            job is running on.
        configurationOverrides:
          allOf:
          - $ref: '#/components/schemas/ConfigurationOverrides'
          description: The configuration settings that are used to override default
            configuration.
        jobDriver:
          allOf:
          - $ref: '#/components/schemas/JobDriver'
          description: The job driver for the job run.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the job run.
        totalResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/TotalResourceUtilization'
          description: The aggregate vCPU, memory, and storage resources used from
            the time the job starts to execute, until the time the job terminates,
            rounded up to the nearest second.
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        totalExecutionDurationSeconds:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The job run total execution duration in seconds. This field
            is only available for job runs in a `COMPLETED`, `FAILED`, or `CANCELLED`
            state.
        executionTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/Duration'
          description: Returns the job run timeout value from the `StartJobRun` call.
            If no timeout was specified, then it returns the default timeout of 720
            minutes.
        billedResourceUtilization:
          allOf:
          - $ref: '#/components/schemas/ResourceUtilization'
          description: The aggregate vCPU, memory, and storage that Amazon Web Services
            has billed for the job run. The billed resources include a 1-minute minimum
            usage for workers, plus additional storage over 20 GB per worker. Note
            that billed resources do not include usage for idle pre-initialized workers.
        mode:
          allOf:
          - $ref: '#/components/schemas/JobRunMode'
          description: The mode of the job run.
        retryPolicy:
          allOf:
          - $ref: '#/components/schemas/RetryPolicy'
          description: The retry policy of the job run.
        attempt:
          allOf:
          - $ref: '#/components/schemas/AttemptNumber'
          description: The attempt of the job run.
        attemptCreatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time of when the job run attempt was created.
        attemptUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time of when the job run attempt was last updated.
        startedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job moved to the RUNNING state.
        endedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job was terminated.
        queuedDurationMilliseconds:
          allOf:
          - $ref: '#/components/schemas/Long'
          description: The total time for a job in the QUEUED state in milliseconds.
      required:
      - applicationId
      - jobRunId
      - arn
      - createdBy
      - createdAt
      - updatedAt
      - executionRole
      - state
      - stateDetails
      - releaseLabel
      - jobDriver
      description: Information about a job run. A job run is a unit of work, such
        as a Spark JAR, Hive query, or SparkSQL query, that you submit to an Amazon
        EMR Serverless application.
    JobRunAttemptSummary:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application the job is running on.
        id:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run attempt.
        name:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The name of the job run attempt.
        mode:
          allOf:
          - $ref: '#/components/schemas/JobRunMode'
          description: The mode of the job run attempt.
        arn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: The Amazon Resource Name (ARN) of the job run.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/RequestIdentityUserArn'
          description: The user who created the job run.
        jobCreatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time of when the job run was created.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job run attempt was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time of when the job run attempt was last updated.
        executionRole:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The Amazon Resource Name (ARN) of the execution role of the
            job run..
        state:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          description: The state of the job run attempt.
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The state details of the job run attempt.
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          description: The Amazon EMR release label of the job run attempt.
        type:
          allOf:
          - $ref: '#/components/schemas/JobRunType'
          description: The type of the job run, such as Spark or Hive.
        attempt:
          allOf:
          - $ref: '#/components/schemas/AttemptNumber'
          description: The attempt number of the job run execution.
      required:
      - applicationId
      - id
      - arn
      - createdBy
      - jobCreatedAt
      - createdAt
      - updatedAt
      - executionRole
      - state
      - stateDetails
      - releaseLabel
      description: The summary of attributes associated with a job run attempt.
    JobRunAttempts:
      type: array
      items:
        $ref: '#/components/schemas/JobRunAttemptSummary'
    JobRunId:
      type: string
      pattern: ^[0-9a-z]+$
      minLength: 1
      maxLength: 64
    JobRunMode:
      type: string
      enum:
      - BATCH
      - STREAMING
    JobRunState:
      type: string
      enum:
      - SUBMITTED
      - PENDING
      - SCHEDULED
      - RUNNING
      - SUCCESS
      - FAILED
      - CANCELLING
      - CANCELLED
      - QUEUED
    JobRunStateSet:
      type: array
      items:
        $ref: '#/components/schemas/JobRunState'
    JobRunSummary:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application the job is running on.
        id:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run.
        name:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The optional job run name. This doesn't have to be unique.
        mode:
          allOf:
          - $ref: '#/components/schemas/JobRunMode'
          description: The mode of the job run.
        arn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: The ARN of the job run.
        createdBy:
          allOf:
          - $ref: '#/components/schemas/RequestIdentityUserArn'
          description: The user who created the job run.
        createdAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job run was created.
        updatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time when the job run was last updated.
        executionRole:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The execution role ARN of the job run.
        state:
          allOf:
          - $ref: '#/components/schemas/JobRunState'
          description: The state of the job run.
        stateDetails:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The state details of the job run.
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          description: The Amazon EMR release associated with the application your
            job is running on.
        type:
          allOf:
          - $ref: '#/components/schemas/JobRunType'
          description: The type of job run, such as Spark or Hive.
        attempt:
          allOf:
          - $ref: '#/components/schemas/AttemptNumber'
          description: The attempt number of the job run execution.
        attemptCreatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time of when the job run attempt was created.
        attemptUpdatedAt:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The date and time of when the job run attempt was last updated.
      required:
      - applicationId
      - id
      - arn
      - createdBy
      - createdAt
      - updatedAt
      - executionRole
      - state
      - stateDetails
      - releaseLabel
      description: The summary of attributes associated with a job run.
    JobRunType:
      type: string
    JobRuns:
      type: array
      items:
        $ref: '#/components/schemas/JobRunSummary'
    ListApplicationsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of application results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of applications that can be listed.
        states:
          allOf:
          - $ref: '#/components/schemas/ApplicationStateSet'
          description: An optional filter for application states. Note that if this
            filter contains multiple states, the resulting list will be grouped by
            the state.
    ListApplicationsResponse:
      type: object
      properties:
        applications:
          allOf:
          - $ref: '#/components/schemas/ApplicationList'
          description: The output lists the specified applications.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The output displays the token for the next set of application
            results. This is required for pagination and is available as a response
            of the previous request.
      required:
      - applications
    ListJobRunAttemptsRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application for which to list job runs.
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The ID of the job run to list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of job run attempt results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of job run attempts to list.
      required:
      - applicationId
      - jobRunId
    ListJobRunAttemptsResponse:
      type: object
      properties:
        jobRunAttempts:
          allOf:
          - $ref: '#/components/schemas/JobRunAttempts'
          description: The array of the listed job run attempt objects.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The output displays the token for the next set of application
            results. This is required for pagination and is available as a response
            of the previous request.
      required:
      - jobRunAttempts
    ListJobRunsRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application for which to list the job run.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The token for the next set of job run results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum number of job runs that can be listed.
        createdAtAfter:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The lower bound of the option to filter by creation date and
            time.
        createdAtBefore:
          allOf:
          - $ref: '#/components/schemas/Date'
          description: The upper bound of the option to filter by creation date and
            time.
        states:
          allOf:
          - $ref: '#/components/schemas/JobRunStateSet'
          description: An optional filter for job run states. Note that if this filter
            contains multiple states, the resulting list will be grouped by the state.
        mode:
          allOf:
          - $ref: '#/components/schemas/JobRunMode'
          description: The mode of the job runs to list.
      required:
      - applicationId
    ListJobRunsResponse:
      type: object
      properties:
        jobRuns:
          allOf:
          - $ref: '#/components/schemas/JobRuns'
          description: The output lists information about the specified job runs.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          description: The output displays the token for the next set of job run results.
            This is required for pagination and is available as a response of the
            previous request.
      required:
      - jobRuns
    ListTagsForResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) that identifies the resource
            to list the tags for. Currently, the supported resources are Amazon EMR
            Serverless applications and job runs.
      required:
      - resourceArn
    ListTagsForResourceResponse:
      type: object
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags for the resource.
    LogGroupName:
      type: string
      pattern: ^[\.\-_/#A-Za-z0-9]+$
      minLength: 1
      maxLength: 512
    LogStreamNamePrefix:
      type: string
      pattern: ^[^:*]*$
      minLength: 1
      maxLength: 512
    LogTypeList:
      type: array
      items:
        $ref: '#/components/schemas/LogTypeString'
    LogTypeMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/LogTypeList'
    LogTypeString:
      type: string
      pattern: ^[a-zA-Z]+[-_]*[a-zA-Z]+$
      minLength: 1
      maxLength: 50
    ManagedPersistenceMonitoringConfiguration:
      type: object
      properties:
        enabled:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          description: Enables managed logging and defaults to true. If set to false,
            managed logging will be turned off.
        encryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The KMS key ARN to encrypt the logs stored in managed log persistence.
      description: The managed log persistence configuration for a job run.
    MaximumAllowedResources:
      type: object
      properties:
        cpu:
          allOf:
          - $ref: '#/components/schemas/CpuSize'
          description: The maximum allowed CPU for an application.
        memory:
          allOf:
          - $ref: '#/components/schemas/MemorySize'
          description: The maximum allowed resources for an application.
        disk:
          allOf:
          - $ref: '#/components/schemas/DiskSize'
          description: The maximum allowed disk for an application.
      required:
      - cpu
      - memory
      description: The maximum allowed cumulative resources for an application. No
        new resources will be created once the limit is hit.
    MemorySize:
      type: string
      pattern: ^[1-9][0-9]*(\s)?(GB|gb|gB|Gb)?$
      minLength: 1
      maxLength: 15
    MonitoringConfiguration:
      type: object
      properties:
        s3MonitoringConfiguration:
          allOf:
          - $ref: '#/components/schemas/S3MonitoringConfiguration'
          description: The Amazon S3 configuration for monitoring log publishing.
        managedPersistenceMonitoringConfiguration:
          allOf:
          - $ref: '#/components/schemas/ManagedPersistenceMonitoringConfiguration'
          description: The managed log persistence configuration for a job run.
        cloudWatchLoggingConfiguration:
          allOf:
          - $ref: '#/components/schemas/CloudWatchLoggingConfiguration'
          description: The Amazon CloudWatch configuration for monitoring logs. You
            can configure your jobs to send log information to CloudWatch.
        prometheusMonitoringConfiguration:
          allOf:
          - $ref: '#/components/schemas/PrometheusMonitoringConfiguration'
          description: The monitoring configuration object you can configure to send
            metrics to Amazon Managed Service for Prometheus for a job run.
      description: The configuration setting for monitoring.
    NetworkConfiguration:
      type: object
      properties:
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          description: The array of subnet Ids for customer VPC connectivity.
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          description: The array of security group Ids for customer VPC connectivity.
      description: The network configuration for customer VPC connectivity.
    NextToken:
      type: string
      pattern: ^[A-Za-z0-9_=-]+$
      minLength: 1
      maxLength: 1024
    PrometheusMonitoringConfiguration:
      type: object
      properties:
        remoteWriteUrl:
          allOf:
          - $ref: '#/components/schemas/PrometheusUrlString'
          description: The remote write URL in the Amazon Managed Service for Prometheus
            workspace to send metrics to.
      description: The monitoring configuration object you can configure to send metrics
        to Amazon Managed Service for Prometheus for a job run.
    PrometheusUrlString:
      type: string
      pattern: ^https://aps-workspaces.([a-z]{2}-[a-z-]{1,20}-[1-9]).amazonaws(.[0-9A-Za-z]{2,4})+/workspaces/[-_.0-9A-Za-z]{1,100}/api/v1/remote_write$
      minLength: 1
      maxLength: 10280
    Query:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 10280
    ReleaseLabel:
      type: string
      pattern: ^[A-Za-z0-9._/-]+$
      minLength: 1
      maxLength: 64
    RequestIdentityUserArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):(iam|sts)::(\d{12})?:[\w/+=,.@-]+$
      minLength: 20
      maxLength: 2048
    ResourceArn:
      type: string
      pattern: ^arn:(aws[a-zA-Z0-9-]*):emr-serverless:.+:(\d{12}):\/applications\/[0-9a-zA-Z]+(\/jobruns\/[0-9a-zA-Z]+)?$
      minLength: 60
      maxLength: 1024
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String1024'
      required:
      - message
      description: The specified resource was not found.
    ResourceUtilization:
      type: object
      properties:
        vCPUHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The aggregated vCPU used per hour from the time the job starts
            executing until the job is terminated.
        memoryGBHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The aggregated memory used per hour from the time the job starts
            executing until the job is terminated.
        storageGBHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The aggregated storage used per hour from the time the job
            starts executing until the job is terminated.
      description: The resource utilization for memory, storage, and vCPU for jobs.
    RetryPolicy:
      type: object
      properties:
        maxAttempts:
          allOf:
          - $ref: '#/components/schemas/AttemptNumber'
          description: Maximum number of attempts for the job run. This parameter
            is only applicable for `BATCH` mode.
        maxFailedAttemptsPerHour:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: Maximum number of failed attempts per hour. This [arameter
            is only applicable for `STREAMING` mode.
      description: The retry policy to use for a job run.
    S3MonitoringConfiguration:
      type: object
      properties:
        logUri:
          allOf:
          - $ref: '#/components/schemas/UriString'
          description: The Amazon S3 destination URI for log publishing.
        encryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyArn'
          description: The KMS key ARN to encrypt the logs published to the given
            Amazon S3 destination.
      description: The Amazon S3 configuration for monitoring log publishing. You
        can configure your jobs to send log information to Amazon S3.
    SchedulerConfiguration:
      type: object
      properties:
        queueTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum duration in minutes for the job in QUEUED state.
            If scheduler configuration is enabled on your application, the default
            value is 360 minutes (6 hours). The valid range is from 15 to 720.
        maxConcurrentRuns:
          allOf:
          - $ref: '#/components/schemas/Integer'
          description: The maximum concurrent job runs on this application. If scheduler
            configuration is enabled on your application, the default value is 15.
            The valid range is 1 to 1000.
      description: The scheduler configuration for batch and streaming jobs running
        on this application. Supported with release labels emr-7.0.0 and above.
    SecurityGroupIds:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupString'
    SecurityGroupString:
      type: string
      pattern: ^[-0-9a-zA-Z]+
      minLength: 1
      maxLength: 32
    SensitivePropertiesMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/ConfigurationPropertyValue'
    ServiceQuotaExceededException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String1024'
      required:
      - message
      description: The maximum number of resources per account has been reached.
    SparkSubmit:
      type: object
      properties:
        entryPoint:
          allOf:
          - $ref: '#/components/schemas/EntryPointPath'
          description: The entry point for the Spark submit job run.
        entryPointArguments:
          allOf:
          - $ref: '#/components/schemas/EntryPointArguments'
          description: The arguments for the Spark submit job run.
        sparkSubmitParameters:
          allOf:
          - $ref: '#/components/schemas/SparkSubmitParameters'
          description: The parameters for the Spark submit job run.
      required:
      - entryPoint
      description: The configurations for the Spark submit job driver.
    SparkSubmitParameters:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 102400
    StartApplicationRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application to start.
      required:
      - applicationId
    StartApplicationResponse:
      type: object
      properties: {}
    StartJobRunRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application on which to run the job.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client idempotency token of the job run to start. Its value
            must be unique for each request.
        executionRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          description: The execution role ARN for the job run.
        jobDriver:
          allOf:
          - $ref: '#/components/schemas/JobDriver'
          description: The job driver for the job run.
        configurationOverrides:
          allOf:
          - $ref: '#/components/schemas/ConfigurationOverrides'
          description: The configuration overrides for the job run.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags assigned to the job run.
        executionTimeoutMinutes:
          allOf:
          - $ref: '#/components/schemas/Duration'
          description: The maximum duration for the job run to run. If the job run
            runs beyond this duration, it will be automatically cancelled.
        name:
          allOf:
          - $ref: '#/components/schemas/String256'
          description: The optional job run name. This doesn't have to be unique.
        mode:
          allOf:
          - $ref: '#/components/schemas/JobRunMode'
          description: The mode of the job run when it starts.
        retryPolicy:
          allOf:
          - $ref: '#/components/schemas/RetryPolicy'
          description: The retry policy when job run starts.
      required:
      - applicationId
      - clientToken
      - executionRoleArn
    StartJobRunResponse:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: This output displays the application ID on which the job run
            was submitted.
        jobRunId:
          allOf:
          - $ref: '#/components/schemas/JobRunId'
          description: The output contains the ID of the started job run.
        arn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          description: This output displays the ARN of the job run..
      required:
      - applicationId
      - jobRunId
      - arn
    StopApplicationRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application to stop.
      required:
      - applicationId
    StopApplicationResponse:
      type: object
      properties: {}
    String1024:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 1024
    String256:
      type: string
      pattern: .*\S.*
      minLength: 1
      maxLength: 256
    SubnetIds:
      type: array
      items:
        $ref: '#/components/schemas/SubnetString'
    SubnetString:
      type: string
      pattern: ^[-0-9a-zA-Z]+
      minLength: 1
      maxLength: 32
    TagKey:
      type: string
      pattern: ^[A-Za-z0-9 /_.:=+@-]+$
      minLength: 1
      maxLength: 128
    TagKeyList:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) that identifies the resource
            to list the tags for. Currently, the supported resources are Amazon EMR
            Serverless applications and job runs.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagMap'
          description: The tags to add to the resource. A tag is an array of key-value
            pairs.
      required:
      - resourceArn
      - tags
    TagResourceResponse:
      type: object
      properties: {}
    TagValue:
      type: string
      pattern: ^[A-Za-z0-9 /_.:=+@-]*$
      minLength: 0
      maxLength: 256
    TotalResourceUtilization:
      type: object
      properties:
        vCPUHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The aggregated vCPU used per hour from the time job start executing
            till the time job is terminated.
        memoryGBHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The aggregated memory used per hour from the time job start
            executing till the time job is terminated.
        storageGBHour:
          allOf:
          - $ref: '#/components/schemas/Double'
          description: The aggregated storage used per hour from the time job start
            executing till the time job is terminated.
      description: The aggregate vCPU, memory, and storage resources used from the
        time job start executing till the time job is terminated, rounded up to the
        nearest second.
    UntagResourceRequest:
      type: object
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) that identifies the resource
            to list the tags for. Currently, the supported resources are Amazon EMR
            Serverless applications and job runs.
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          description: The keys of the tags to be removed.
      required:
      - resourceArn
      - tagKeys
    UntagResourceResponse:
      type: object
      properties: {}
    UpdateApplicationRequest:
      type: object
      properties:
        applicationId:
          allOf:
          - $ref: '#/components/schemas/ApplicationId'
          description: The ID of the application to update.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          description: The client idempotency token of the application to update.
            Its value must be unique for each request.
        initialCapacity:
          allOf:
          - $ref: '#/components/schemas/InitialCapacityConfigMap'
          description: The capacity to initialize when the application is updated.
        maximumCapacity:
          allOf:
          - $ref: '#/components/schemas/MaximumAllowedResources'
          description: The maximum capacity to allocate when the application is updated.
            This is cumulative across all workers at any given point in time during
            the lifespan of the application. No new resources will be created once
            any one of the defined limits is hit.
        autoStartConfiguration:
          allOf:
          - $ref: '#/components/schemas/AutoStartConfig'
          description: The configuration for an application to automatically start
            on job submission.
        autoStopConfiguration:
          allOf:
          - $ref: '#/components/schemas/AutoStopConfig'
          description: The configuration for an application to automatically stop
            after a certain amount of time being idle.
        networkConfiguration:
          $ref: '#/components/schemas/NetworkConfiguration'
        architecture:
          allOf:
          - $ref: '#/components/schemas/Architecture'
          description: The CPU architecture of an application.
        imageConfiguration:
          allOf:
          - $ref: '#/components/schemas/ImageConfigurationInput'
          description: The image configuration to be used for all worker types. You
            can either set this parameter or `imageConfiguration` for each worker
            type in `WorkerTypeSpecificationInput`.
        workerTypeSpecifications:
          allOf:
          - $ref: '#/components/schemas/WorkerTypeSpecificationInputMap'
          description: The key-value pairs that specify worker type to `WorkerTypeSpecificationInput`.
            This parameter must contain all valid worker types for a Spark or Hive
            application. Valid worker types include `Driver` and `Executor` for Spark
            applications and `HiveDriver` and `TezTask` for Hive applications. You
            can either set image details in this parameter for each worker type, or
            in `imageConfiguration` for all worker types.
        interactiveConfiguration:
          allOf:
          - $ref: '#/components/schemas/InteractiveConfiguration'
          description: The interactive configuration object that contains new interactive
            use cases when the application is updated.
        releaseLabel:
          allOf:
          - $ref: '#/components/schemas/ReleaseLabel'
          description: The Amazon EMR release label for the application. You can change
            the release label to use a different release of Amazon EMR.
        runtimeConfiguration:
          allOf:
          - $ref: '#/components/schemas/ConfigurationList'
          description: The [Configuration](https://docs.aws.amazon.com/emr-serverless/latest/APIReference/API_Configuration.html)
            specifications to use when updating an application. Each configuration
            consists of a classification and properties. This configuration is applied
            across all the job runs submitted under the application.
        monitoringConfiguration:
          allOf:
          - $ref: '#/components/schemas/MonitoringConfiguration'
          description: The configuration setting for monitoring.
        schedulerConfiguration:
          allOf:
          - $ref: '#/components/schemas/SchedulerConfiguration'
          description: The scheduler configuration for batch and streaming jobs running
            on this application. Supported with release labels emr-7.0.0 and above.
      required:
      - applicationId
      - clientToken
    UpdateApplicationResponse:
      type: object
      properties:
        application:
          allOf:
          - $ref: '#/components/schemas/Application'
          description: Information about the updated application.
      required:
      - application
    UriString:
      type: string
      pattern: '[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\r\n\t]*'
      minLength: 1
      maxLength: 10280
    Url:
      type: string
      minLength: 1
      maxLength: 2048
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String1024'
      required:
      - message
      description: The input fails to satisfy the constraints specified by an Amazon
        Web Services service.
    WorkerCounts:
      type: integer
      format: int64
      default: 0
      minimum: 1
      maximum: 1000000
    WorkerResourceConfig:
      type: object
      properties:
        cpu:
          allOf:
          - $ref: '#/components/schemas/CpuSize'
          description: The CPU requirements for every worker instance of the worker
            type.
        memory:
          allOf:
          - $ref: '#/components/schemas/MemorySize'
          description: The memory requirements for every worker instance of the worker
            type.
        disk:
          allOf:
          - $ref: '#/components/schemas/DiskSize'
          description: The disk requirements for every worker instance of the worker
            type.
        diskType:
          allOf:
          - $ref: '#/components/schemas/DiskType'
          description: The disk type for every worker instance of the work type. Shuffle
            optimized disks have higher performance characteristics and are better
            for shuffle heavy workloads. Default is `STANDARD`.
      required:
      - cpu
      - memory
      description: The cumulative configuration requirements for every worker instance
        of the worker type.
    WorkerTypeSpecification:
      type: object
      properties:
        imageConfiguration:
          allOf:
          - $ref: '#/components/schemas/ImageConfiguration'
          description: The image configuration for a worker type.
      description: The specifications for a worker type.
    WorkerTypeSpecificationInput:
      type: object
      properties:
        imageConfiguration:
          allOf:
          - $ref: '#/components/schemas/ImageConfigurationInput'
          description: The image configuration for a worker type.
      description: The specifications for a worker type.
    WorkerTypeSpecificationInputMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/WorkerTypeSpecificationInput'
    WorkerTypeSpecificationMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/WorkerTypeSpecification'
    WorkerTypeString:
      type: string
      pattern: ^[a-zA-Z]+[-_]*[a-zA-Z]+$
      minLength: 1
      maxLength: 50
