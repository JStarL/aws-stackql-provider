openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: arc_zonal_shift
  x-aws-serviceName: arczonalshift
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-07'
  version: '2022-10-30'
  title: AWS ARC - Zonal Shift
  description: |-
    Welcome to the API Reference Guide for zonal shift and zonal autoshift in Amazon Route 53 Application Recovery Controller (ARC).

    You can start a zonal shift to move traffic for a load balancer resource away from an Availability Zone to help your application recover quickly from an impairment in an Availability Zone. For example, you can recover your application from a developer's bad code deployment or from an Amazon Web Services infrastructure failure in a single Availability Zone.

    You can also configure zonal autoshift for supported load balancer resources. Zonal autoshift is a capability in ARC where you authorize Amazon Web Services to shift away application resource traffic from an Availability Zone during events, on your behalf, to help reduce your time to recovery. Amazon Web Services starts an autoshift when internal telemetry indicates that there is an Availability Zone impairment that could potentially impact customers.

    To help make sure that zonal autoshift is safe for your application, you must also configure practice runs when you enable zonal autoshift for a resource. Practice runs start weekly zonal shifts for a resource, to shift traffic for the resource away from an Availability Zone. Practice runs help you to make sure, on a regular basis, that you have enough capacity in all the Availability Zones in an Amazon Web Services Region for your application to continue to operate normally when traffic for a resource is shifted away from one Availability Zone.

    Before you configure practice runs or enable zonal autoshift, we strongly recommend that you prescale your application resource capacity in all Availability Zones in the Region where your application resources are deployed. You should not rely on scaling on demand when an autoshift or practice run starts. Zonal autoshift, including practice runs, works independently, and does not wait for auto scaling actions to complete. Relying on auto scaling, instead of pre-scaling, can result in loss of availability.

    If you use auto scaling to handle regular cycles of traffic, we strongly recommend that you configure the minimum capacity of your auto scaling to continue operating normally with the loss of an Availability Zone.

    Be aware that ARC does not inspect the health of individual resources. Amazon Web Services only starts an autoshift when Amazon Web Services telemetry detects that there is an Availability Zone impairment that could potentially impact customers. In some cases, resources might be shifted away that are not experiencing impact.

    For more information about using zonal shift and zonal autoshift, see the [Amazon Route 53 Application Recovery Controller Developer Guide](https://docs.aws.amazon.com/r53recovery/latest/dg/what-is-route53-recovery.html).
servers:
- description: The AWS ARC - Zonal Shift regional endpoint
  url: https://arc-zonal-shift.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths:
  /zonalshifts/{zonalShiftId}:
    delete:
      operationId: CancelZonalShift
      description: |-
        Cancel a zonal shift in Amazon Route 53 Application Recovery Controller. To cancel the zonal shift, specify the zonal shift ID.

        A zonal shift can be one that you've started for a resource in your Amazon Web Services account in an Amazon Web Services Region, or it can be a zonal shift started by a practice run with zonal autoshift.
      parameters:
      - name: zonalShiftId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ZonalShiftId'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The input requested a resource that was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdateZonalShift
      description: |-
        Update an active zonal shift in Amazon Route 53 Application Recovery Controller in your Amazon Web Services account. You can update a zonal shift to set a new expiration, or edit or replace the comment for the zonal shift.
      parameters:
      - name: zonalShiftId
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ZonalShiftId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment:
                  $ref: '#/components/schemas/ZonalShiftComment'
                expiresIn:
                  $ref: '#/components/schemas/ExpiresIn'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The input requested a resource that was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configuration:
    post:
      operationId: CreatePracticeRunConfiguration
      description: |-
        A practice run configuration for zonal autoshift is required when you enable zonal autoshift. A practice run configuration includes specifications for blocked dates and blocked time windows, and for Amazon CloudWatch alarms that you create to use with practice runs. The alarms that you specify are an _outcome alarm_ , to monitor application health during practice runs and, optionally, a _blocking alarm_ , to block practice runs from starting.

        When a resource has a practice run configuration, ARC starts zonal shifts for the resource weekly, to shift traffic for practice runs. Practice runs help you to ensure that shifting away traffic from an Availability Zone during an autoshift is safe for your application.

        For more information, see [ Considerations when you configure zonal autoshift](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.considerations.html) in the Amazon Route 53 Application Recovery Controller Developer Guide.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceIdentifier:
                  $ref: '#/components/schemas/ResourceIdentifier'
                blockedWindows:
                  $ref: '#/components/schemas/BlockedWindows'
                blockedDates:
                  $ref: '#/components/schemas/BlockedDates'
                blockingAlarms:
                  $ref: '#/components/schemas/ControlConditions'
                outcomeAlarms:
                  $ref: '#/components/schemas/ControlConditions'
      responses:
        '201': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The input requested a resource that was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /configuration/{resourceIdentifier}:
    delete:
      operationId: DeletePracticeRunConfiguration
      description: |-
        Deletes the practice run configuration for a resource. Before you can delete a practice run configuration for a resource., you must disable zonal autoshift for the resource. Practice runs must be configured for zonal autoshift to be enabled.
      parameters:
      - name: resourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The input requested a resource that was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    patch:
      operationId: UpdatePracticeRunConfiguration
      description: |-
        Update a practice run configuration to change one or more of the following: add, change, or remove the blocking alarm; change the outcome alarm; or add, change, or remove blocking dates or time windows.
      parameters:
      - name: resourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                blockedWindows:
                  $ref: '#/components/schemas/BlockedWindows'
                blockedDates:
                  $ref: '#/components/schemas/BlockedDates'
                blockingAlarms:
                  $ref: '#/components/schemas/ControlConditions'
                outcomeAlarms:
                  $ref: '#/components/schemas/ControlConditions'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The input requested a resource that was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /autoshift-observer-notification:
    get:
      operationId: GetAutoshiftObserverNotificationStatus
      description: |-
        Returns the status of the autoshift observer notification. Autoshift observer notifications notify you through Amazon EventBridge when there is an autoshift event for zonal autoshift. The status can be `ENABLED` or `DISABLED`. When `ENABLED`, a notification is sent when an autoshift is triggered. When `DISABLED`, notifications are not sent.
      parameters: []
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
    put:
      operationId: UpdateAutoshiftObserverNotificationStatus
      description: |-
        Update the status of autoshift observer notification. Autoshift observer notification enables you to be notified, through Amazon EventBridge, when there is an autoshift event for zonal autoshift.

        If the status is `ENABLED`, ARC includes all autoshift events when you use the EventBridge pattern `Autoshift In Progress`. When the status is `DISABLED`, ARC includes only autoshift events for autoshifts when one or more of your resources is included in the autoshift.

        For more information, see [ Notifications for practice runs and autoshifts](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.how-it-works.html#ZAShiftNotification) in the Amazon Route 53 Application Recovery Controller Developer Guide.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: '#/components/schemas/AutoshiftObserverNotificationStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /managedresources/{resourceIdentifier}:
    get:
      operationId: GetManagedResource
      description: |-
        Get information about a resource that's been registered for zonal shifts with Amazon Route 53 Application Recovery Controller in this Amazon Web Services Region. Resources that are registered for zonal shifts are managed resources in ARC. You can start zonal shifts and configure zonal autoshift for managed resources.
      parameters:
      - name: resourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The input requested a resource that was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    put:
      operationId: UpdateZonalAutoshiftConfiguration
      description: |-
        The zonal autoshift configuration for a resource includes the practice run configuration and the status for running autoshifts, zonal autoshift status. When a resource has a practice run configuation, Route 53 ARC starts weekly zonal shifts for the resource, to shift traffic away from an Availability Zone. Weekly practice runs help you to make sure that your application can continue to operate normally with the loss of one Availability Zone.

        You can update the zonal autoshift autoshift status to enable or disable zonal autoshift. When zonal autoshift is `ENABLED`, you authorize Amazon Web Services to shift away resource traffic for an application from an Availability Zone during events, on your behalf, to help reduce time to recovery. Traffic is also shifted away for the required weekly practice runs.
      parameters:
      - name: resourceIdentifier
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/ResourceIdentifier'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                zonalAutoshiftStatus:
                  $ref: '#/components/schemas/ZonalAutoshiftStatus'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The input requested a resource that was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /autoshifts:
    get:
      operationId: ListAutoshifts
      description: |-
        Returns the autoshifts for an Amazon Web Services Region. By default, the call returns only `ACTIVE` autoshifts. Optionally, you can specify the `status` parameter to return `COMPLETED` autoshifts.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/AutoshiftExecutionStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /managedresources:
    get:
      operationId: ListManagedResources
      description: |-
        Lists all the resources in your Amazon Web Services account in this Amazon Web Services Region that are managed for zonal shifts in Amazon Route 53 Application Recovery Controller, and information about them. The information includes the zonal autoshift status for the resource, as well as the Amazon Resource Name (ARN), the Availability Zones that each resource is deployed in, and the resource name.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
  /zonalshifts:
    get:
      operationId: ListZonalShifts
      description: |-
        Lists all active and completed zonal shifts in Amazon Route 53 Application Recovery Controller in your Amazon Web Services account in this Amazon Web Services Region.
      parameters:
      - name: nextToken
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/String'
      - name: status
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ZonalShiftStatus'
      - name: maxResults
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/MaxResults'
      - name: resourceIdentifier
        in: query
        required: false
        schema:
          $ref: '#/components/schemas/ResourceIdentifier'
      responses:
        '200': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
    post:
      operationId: StartZonalShift
      description: |-
        You start a zonal shift to temporarily move load balancer traffic away from an Availability Zone in an Amazon Web Services Region, to help your application recover immediately, for example, from a developer's bad code deployment or from an Amazon Web Services infrastructure failure in a single Availability Zone. You can start a zonal shift in ARC only for managed resources in your Amazon Web Services account in an Amazon Web Services Region. Resources are automatically registered with ARC by Amazon Web Services services.

        At this time, you can only start a zonal shift for Network Load Balancers and Application Load Balancers with cross-zone load balancing turned off.

        When you start a zonal shift, traffic for the resource is no longer routed to the Availability Zone. The zonal shift is created immediately in ARC. However, it can take a short time, typically up to a few minutes, for existing, in-progress connections in the Availability Zone to complete.

        For more information, see [Zonal shift](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-shift.html) in the Amazon Route 53 Application Recovery Controller Developer Guide.
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resourceIdentifier:
                  $ref: '#/components/schemas/ResourceIdentifier'
                awayFrom:
                  $ref: '#/components/schemas/AvailabilityZone'
                expiresIn:
                  $ref: '#/components/schemas/ExpiresIn'
                comment:
                  $ref: '#/components/schemas/ZonalShiftComment'
      responses:
        '201': {}
        '403':
          description: |-
            You do not have sufficient access to perform this action.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
        '409':
          description: |-
            The request could not be processed because of conflict in the current state of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
        '500':
          description: |-
            There was an internal server error.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
        '404':
          description: |-
            The input requested a resource that was not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
        '429':
          description: |-
            The request was denied due to request throttling.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
        '400':
          description: |-
            The input fails to satisfy the constraints specified by an Amazon Web Services service.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
components:
  schemas:
    AccessDeniedException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: You do not have sufficient access to perform this action.
    AppliedStatus:
      type: string
      enum:
      - APPLIED
      - NOT_APPLIED
    AppliedWeights:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Weight'
    AutoshiftAppliedStatus:
      type: string
      enum:
      - APPLIED
      - NOT_APPLIED
    AutoshiftExecutionStatus:
      type: string
      enum:
      - ACTIVE
      - COMPLETED
    AutoshiftInResource:
      type: object
      properties:
        appliedStatus:
          allOf:
          - $ref: '#/components/schemas/AutoshiftAppliedStatus'
          description: 'The `appliedStatus` field specifies which application traffic
            shift is in effect for a resource when there is more than one active traffic
            shift. There can be more than one application traffic shift in progress
            at the same time - that is, practice run zonal shifts, customer-initiated
            zonal shifts, or an autoshift. The `appliedStatus` field for a shift that
            is in progress for a resource can have one of two values: `APPLIED` or
            `NOT_APPLIED`. The zonal shift or autoshift that is currently in effect
            for the resource has an `appliedStatus` set to `APPLIED`.


            The overall principle for precedence is that zonal shifts that you start
            as a customer take precedence autoshifts, which take precedence over practice
            runs. That is, customer-initiated zonal shifts > autoshifts > practice
            run zonal shifts.


            For more information, see [How zonal autoshift and practice runs work](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.how-it-works.html)
            in the Amazon Route 53 Application Recovery Controller Developer Guide.'
        awayFrom:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone (for example, `use1-az1`) that traffic
            is shifted away from for a resource, when Amazon Web Services starts an
            autoshift. Until the autoshift ends, traffic for the resource is instead
            directed to other Availability Zones in the Amazon Web Services Region.
            An autoshift can end for a resource, for example, when Amazon Web Services
            ends the autoshift for the Availability Zone or when you disable zonal
            autoshift for the resource.
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          description: The time (UTC) when the autoshift started.
      required:
      - appliedStatus
      - awayFrom
      - startTime
      description: 'A complex structure that lists an autoshift that is currently
        active for a managed resource and information about the autoshift.


        For more information, see [How zonal autoshift and practice runs work](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.how-it-works.html)
        in the Amazon Route 53 Application Recovery Controller Developer Guide.'
    AutoshiftObserverNotificationStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    AutoshiftSummaries:
      type: array
      items:
        $ref: '#/components/schemas/AutoshiftSummary'
    AutoshiftSummary:
      type: object
      properties:
        awayFrom:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone (for example, `use1-az1`) that traffic
            is shifted away from for a resource when Amazon Web Services starts an
            autoshift. Until the autoshift ends, traffic for the resource is instead
            directed to other Availability Zones in the Amazon Web Services Region.
            An autoshift can end for a resource, for example, when Amazon Web Services
            ends the autoshift for the Availability Zone or when you disable zonal
            autoshift for the resource.
        endTime:
          allOf:
          - $ref: '#/components/schemas/ExpiryTime'
          description: The time (in UTC) when the autoshift ended.
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          description: The time (in UTC) when the autoshift started.
        status:
          allOf:
          - $ref: '#/components/schemas/AutoshiftExecutionStatus'
          description: The status for an autoshift.
      required:
      - awayFrom
      - startTime
      - status
      description: 'Information about an autoshift. Amazon Web Services starts an
        autoshift to temporarily move traffic for a resource away from an Availability
        Zone in an Amazon Web Services Region when Amazon Web Services determines
        that there''s an issue in the Availability Zone that could potentially affect
        customers. You can configure zonal autoshift in ARC for managed resources
        in your Amazon Web Services account in a Region. Supported Amazon Web Services
        resources are automatically registered with ARC.


        Autoshifts are temporary. When the Availability Zone recovers, Amazon Web
        Services ends the autoshift, and traffic for the resource is no longer directed
        to the other Availability Zones in the Region.'
    AutoshiftsInResource:
      type: array
      items:
        $ref: '#/components/schemas/AutoshiftInResource'
    AvailabilityZone:
      type: string
      maxLength: 20
    AvailabilityZones:
      type: array
      items:
        $ref: '#/components/schemas/AvailabilityZone'
    BlockedDate:
      type: string
      pattern: ^[0-9]{4}-[0-9]{2}-[0-9]{2}$
      minLength: 10
      maxLength: 10
    BlockedDates:
      type: array
      items:
        $ref: '#/components/schemas/BlockedDate'
    BlockedWindow:
      type: string
      pattern: ^(Mon|Tue|Wed|Thu|Fri|Sat|Sun):[0-9]{2}:[0-9]{2}-(Mon|Tue|Wed|Thu|Fri|Sat|Sun):[0-9]{2}:[0-9]{2}$
      minLength: 19
      maxLength: 19
    BlockedWindows:
      type: array
      items:
        $ref: '#/components/schemas/BlockedWindow'
    CancelZonalShiftRequest:
      type: object
      properties:
        zonalShiftId:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftId'
          description: The internally-generated identifier of a zonal shift.
      required:
      - zonalShiftId
    ConflictException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ConflictExceptionReason'
          description: The reason for the conflict exception.
        zonalShiftId:
          allOf:
          - $ref: '#/components/schemas/String'
          description: The zonal shift ID associated with the conflict exception.
      required:
      - message
      - reason
      description: The request could not be processed because of conflict in the current
        state of the resource.
    ConflictExceptionReason:
      type: string
      enum:
      - ZonalShiftAlreadyExists
      - ZonalShiftStatusNotActive
      - SimultaneousZonalShiftsConflict
      - PracticeConfigurationAlreadyExists
      - AutoShiftEnabled
      - PracticeConfigurationDoesNotExist
      - ZonalAutoshiftActive
    ControlCondition:
      type: object
      properties:
        type:
          allOf:
          - $ref: '#/components/schemas/ControlConditionType'
          description: The type of alarm specified for a practice run. You can only
            specify Amazon CloudWatch alarms for practice runs, so the only valid
            value is `CLOUDWATCH`.
        alarmIdentifier:
          allOf:
          - $ref: '#/components/schemas/MetricIdentifier'
          description: The Amazon Resource Name (ARN) for an Amazon CloudWatch alarm
            that you specify as a control condition for a practice run.
      required:
      - type
      - alarmIdentifier
      description: 'A control condition is an alarm that you specify for a practice
        run. When you configure practice runs with zonal autoshift for a resource,
        you specify Amazon CloudWatch alarms, which you create in CloudWatch to use
        with the practice run. The alarms that you specify are an _outcome alarm_
        , to monitor application health during practice runs and, optionally, a _blocking
        alarm_ , to block practice runs from starting or to interrupt a practice run
        in progress.


        Control condition alarms do not apply for autoshifts.


        For more information, see [ Considerations when you configure zonal autoshift](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.considerations.html)
        in the Amazon Route 53 Application Recovery Controller Developer Guide.'
    ControlConditionType:
      type: string
      enum:
      - CLOUDWATCH
    ControlConditions:
      type: array
      items:
        $ref: '#/components/schemas/ControlCondition'
    CreatePracticeRunConfigurationRequest:
      type: object
      properties:
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: 'The identifier of the resource that Amazon Web Services shifts
            traffic for with a practice run zonal shift. The identifier is the Amazon
            Resource Name (ARN) for the resource.


            At this time, supported resources are Network Load Balancers and Application
            Load Balancers with cross-zone load balancing turned off.'
        blockedWindows:
          allOf:
          - $ref: '#/components/schemas/BlockedWindows'
          description: 'Optionally, you can block ARC from starting practice runs
            for specific windows of days and times.


            The format for blocked windows is: DAY:HH:SS-DAY:HH:SS. Keep in mind,
            when you specify dates, that dates and times for practice runs are in
            UTC. Also, be aware of potential time adjustments that might be required
            for daylight saving time differences. Separate multiple blocked windows
            with spaces.


            For example, say you run business report summaries three days a week.
            For this scenario, you might set the following recurring days and times
            as blocked windows, for example: `MON-20:30-21:30 WED-20:30-21:30 FRI-20:30-21:30`.'
        blockedDates:
          allOf:
          - $ref: '#/components/schemas/BlockedDates'
          description: 'Optionally, you can block ARC from starting practice runs
            for a resource on specific calendar dates.


            The format for blocked dates is: YYYY-MM-DD. Keep in mind, when you specify
            dates, that dates and times for practice runs are in UTC. Separate multiple
            blocked dates with spaces.


            For example, if you have an application update scheduled to launch on
            May 1, 2024, and you don''t want practice runs to shift traffic away at
            that time, you could set a blocked date for `2024-05-01`.'
        blockingAlarms:
          allOf:
          - $ref: '#/components/schemas/ControlConditions'
          description: An Amazon CloudWatch alarm that you can specify for zonal autoshift
            practice runs. This alarm blocks ARC from starting practice run zonal
            shifts, and ends a practice run that's in progress, when the alarm is
            in an `ALARM` state.
        outcomeAlarms:
          allOf:
          - $ref: '#/components/schemas/ControlConditions'
          description: 'The _outcome alarm_ for practice runs is a required Amazon
            CloudWatch alarm that you specify that ends a practice run when the alarm
            is in an `ALARM` state.


            Configure the alarm to monitor the health of your application when traffic
            is shifted away from an Availability Zone during each practice run. You
            should configure the alarm to go into an `ALARM` state if your application
            is impacted by the zonal shift, and you want to stop the zonal shift,
            to let traffic for the resource return to the Availability Zone.'
      required:
      - resourceIdentifier
      - outcomeAlarms
    CreatePracticeRunConfigurationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource that you configured
            the practice run for.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the resource that you configured the practice run
            for.
        zonalAutoshiftStatus:
          allOf:
          - $ref: '#/components/schemas/ZonalAutoshiftStatus'
          description: 'The status for zonal autoshift for a resource. When you specify
            `ENABLED` for the autoshift status, Amazon Web Services shifts traffic
            away from shifts away application resource traffic from an Availability
            Zone, on your behalf, when internal telemetry indicates that there is
            an Availability Zone impairment that could potentially impact customers.


            When you enable zonal autoshift, you must also configure practice runs
            for the resource.'
        practiceRunConfiguration:
          allOf:
          - $ref: '#/components/schemas/PracticeRunConfiguration'
          description: A practice run configuration for a resource. Configurations
            include the outcome alarm that you specify for practice runs, and, optionally,
            a blocking alarm and blocking dates and windows.
      required:
      - arn
      - name
      - zonalAutoshiftStatus
      - practiceRunConfiguration
    DeletePracticeRunConfigurationRequest:
      type: object
      properties:
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: The identifier for the resource that you want to delete the
            practice run configuration for. The identifier is the Amazon Resource
            Name (ARN) for the resource.
      required:
      - resourceIdentifier
    DeletePracticeRunConfigurationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource that you deleted
            the practice run for.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the resource that you deleted the practice run
            for.
        zonalAutoshiftStatus:
          allOf:
          - $ref: '#/components/schemas/ZonalAutoshiftStatus'
          description: The status of zonal autoshift for the resource.
      required:
      - arn
      - name
      - zonalAutoshiftStatus
    ExpiresIn:
      type: string
      pattern: ^([1-9][0-9]*)(m|h)$
      minLength: 2
      maxLength: 5
    ExpiryTime:
      type: string
      format: date-time
    GetAutoshiftObserverNotificationStatusRequest:
      type: object
      properties: {}
    GetAutoshiftObserverNotificationStatusResponse:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AutoshiftObserverNotificationStatus'
          description: The status of autoshift observer notification. If the status
            is `ENABLED`, ARC includes all autoshift events when you use the Amazon
            EventBridge pattern `Autoshift In Progress`. When the status is `DISABLED`,
            ARC includes only autoshift events for autoshifts when one or more of
            your resources is included in the autoshift.
      required:
      - status
    GetManagedResourceRequest:
      type: object
      properties:
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: 'The identifier for the resource that Amazon Web Services shifts
            traffic for. The identifier is the Amazon Resource Name (ARN) for the
            resource.


            At this time, supported resources are Network Load Balancers and Application
            Load Balancers with cross-zone load balancing turned off.'
      required:
      - resourceIdentifier
    GetManagedResourceResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) for the resource.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the resource.
        appliedWeights:
          allOf:
          - $ref: '#/components/schemas/AppliedWeights'
          description: A collection of key-value pairs that indicate whether resources
            are active in Availability Zones or not. The key name is the Availability
            Zone where the resource is deployed. The value is 1 or 0.
        zonalShifts:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftsInResource'
          description: The zonal shifts that are currently active for a resource.
        autoshifts:
          allOf:
          - $ref: '#/components/schemas/AutoshiftsInResource'
          description: An array of the autoshifts that are active for the resource.
        practiceRunConfiguration:
          allOf:
          - $ref: '#/components/schemas/PracticeRunConfiguration'
          description: The practice run configuration for zonal autoshift that's associated
            with the resource.
        zonalAutoshiftStatus:
          allOf:
          - $ref: '#/components/schemas/ZonalAutoshiftStatus'
          description: The status for zonal autoshift for a resource. When the autoshift
            status is `ENABLED`, Amazon Web Services shifts traffic for a resource
            away from an Availability Zone, on your behalf, when Amazon Web Services
            determines that there's an issue in the Availability Zone that could potentially
            affect customers.
      required:
      - appliedWeights
      - zonalShifts
    InternalServerException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: There was an internal server error.
    ListAutoshiftsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `nextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `nextToken` response to request
            the next page of results.
        status:
          allOf:
          - $ref: '#/components/schemas/AutoshiftExecutionStatus'
          description: The status of the autoshift.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of objects that you want to return with this call.
    ListAutoshiftsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/AutoshiftSummaries'
          description: The items in the response list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `nextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `nextToken` response to request
            the next page of results.
    ListManagedResourcesRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `nextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `nextToken` response to request
            the next page of results.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of objects that you want to return with this call.
    ListManagedResourcesResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ManagedResourceSummaries'
          description: The items in the response list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `nextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `nextToken` response to request
            the next page of results.
      required:
      - items
    ListZonalShiftsRequest:
      type: object
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `nextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `nextToken` response to request
            the next page of results.
        status:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftStatus'
          description: "A status for a zonal shift.\n\nThe `Status` for a zonal shift\
            \ can have one of the following values:\n\n  * **ACTIVE** : The zonal\
            \ shift has been started and active.\n\n  * **EXPIRED** : The zonal shift\
            \ has expired (the expiry time was exceeded).\n\n  * **CANCELED** : The\
            \ zonal shift was canceled."
        maxResults:
          allOf:
          - $ref: '#/components/schemas/MaxResults'
          description: The number of objects that you want to return with this call.
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: The identifier for the resource that you want to list zonal
            shifts for. The identifier is the Amazon Resource Name (ARN) for the resource.
    ListZonalShiftsResponse:
      type: object
      properties:
        items:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftSummaries'
          description: The items in the response list.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          description: Specifies that you want to receive the next page of results.
            Valid only if you received a `nextToken` response in the previous request.
            If you did, it indicates that more output is available. Set this parameter
            to the value provided by the previous call's `nextToken` response to request
            the next page of results.
    ManagedResourceSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ManagedResourceSummary'
    ManagedResourceSummary:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) for the managed resource.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the managed resource.
        availabilityZones:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZones'
          description: The Availability Zones that a resource is deployed in.
        appliedWeights:
          allOf:
          - $ref: '#/components/schemas/AppliedWeights'
          description: A collection of key-value pairs that indicate whether resources
            are active in Availability Zones or not. The key name is the Availability
            Zone where the resource is deployed. The value is 1 or 0.
        zonalShifts:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftsInResource'
          description: An array of the zonal shifts for a resource.
        autoshifts:
          allOf:
          - $ref: '#/components/schemas/AutoshiftsInResource'
          description: An array of the autoshifts that have been completed for a resource.
        zonalAutoshiftStatus:
          allOf:
          - $ref: '#/components/schemas/ZonalAutoshiftStatus'
          description: The status of autoshift for a resource. When you configure
            zonal autoshift for a resource, you can set the value of the status to
            `ENABLED` or `DISABLED`.
        practiceRunStatus:
          allOf:
          - $ref: '#/components/schemas/ZonalAutoshiftStatus'
          description: 'This status tracks whether a practice run configuration exists
            for a resource. When you configure a practice run for a resource so that
            a practice run configuration exists, ARC sets this value to `ENABLED`.
            If a you have not configured a practice run for the resource, or delete
            a practice run configuration, ARC sets the value to `DISABLED`.


            ARC updates this status; you can''t set a practice run status to `ENABLED`
            or `DISABLED`.'
      required:
      - availabilityZones
      description: 'A complex structure for a managed resource in an Amazon Web Services
        account with information about zonal shifts and autoshifts.


        A managed resource is a load balancer that has been registered with ARC by
        Elastic Load Balancing. You can start a zonal shift in ARC for a managed resource
        to temporarily move traffic for the resource away from an Availability Zone
        in an Amazon Web Services Region. You can also configure zonal autoshift for
        a managed resource.


        At this time, managed resources are Network Load Balancers and Application
        Load Balancers with cross-zone load balancing turned off.'
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    MetricIdentifier:
      type: string
      pattern: ^.*$
      minLength: 8
      maxLength: 1024
    PracticeRunConfiguration:
      type: object
      properties:
        blockingAlarms:
          allOf:
          - $ref: '#/components/schemas/ControlConditions'
          description: The _blocking alarm_ for practice runs is an optional alarm
            that you can specify that blocks practice runs when the alarm is in an
            `ALARM` state.
        outcomeAlarms:
          allOf:
          - $ref: '#/components/schemas/ControlConditions'
          description: The _outcome alarm_ for practice runs is an alarm that you
            specify that ends a practice run when the alarm is in an `ALARM` state.
        blockedWindows:
          allOf:
          - $ref: '#/components/schemas/BlockedWindows'
          description: 'An array of one or more windows of days and times that you
            can block ARC from starting practice runs for a resource.


            Specify the blocked windows in UTC, using the format `DAY:HH:MM-DAY:HH:MM`,
            separated by spaces. For example, `MON:18:30-MON:19:30 TUE:18:30-TUE:19:30`.'
        blockedDates:
          allOf:
          - $ref: '#/components/schemas/BlockedDates'
          description: 'An array of one or more dates that you can specify when Amazon
            Web Services does not start practice runs for a resource.


            Specify blocked dates, in UTC, in the format `YYYY-MM-DD`, separated by
            spaces.'
      required:
      - outcomeAlarms
      description: 'A practice run configuration for a resource includes the Amazon
        CloudWatch alarms that you''ve specified for a practice run, as well as any
        blocked dates or blocked windows for the practice run. When a resource has
        a practice run configuration, ARC shifts traffic for the resource weekly for
        practice runs.


        Practice runs are required for zonal autoshift. The zonal shifts that ARC
        starts for practice runs help you to ensure that shifting away traffic from
        an Availability Zone during an autoshift is safe for your application.


        You can update or delete a practice run configuration. Before you delete a
        practice run configuration, you must disable zonal autoshift for the resource.
        A practice run configuration is required when zonal autoshift is enabled.'
    PracticeRunOutcome:
      type: string
      enum:
      - FAILED
      - INTERRUPTED
      - PENDING
      - SUCCEEDED
    ResourceArn:
      type: string
      pattern: ^arn:.*$
      minLength: 8
      maxLength: 1024
    ResourceIdentifier:
      type: string
      minLength: 8
      maxLength: 1024
    ResourceName:
      type: string
      minLength: 1
      maxLength: 256
    ResourceNotFoundException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      required:
      - message
      description: The input requested a resource that was not found.
    ShiftType:
      type: string
      enum:
      - ZONAL_SHIFT
      - PRACTICE_RUN
      - FIS_EXPERIMENT
      - ZONAL_AUTOSHIFT
    StartTime:
      type: string
      format: date-time
    StartZonalShiftRequest:
      type: object
      properties:
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: 'The identifier for the resource that Amazon Web Services shifts
            traffic for. The identifier is the Amazon Resource Name (ARN) for the
            resource.


            At this time, supported resources are Network Load Balancers and Application
            Load Balancers with cross-zone load balancing turned off.'
        awayFrom:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone (for example, `use1-az1`) that traffic
            is moved away from for a resource when you start a zonal shift. Until
            the zonal shift expires or you cancel it, traffic for the resource is
            instead moved to other Availability Zones in the Amazon Web Services Region.
        expiresIn:
          allOf:
          - $ref: '#/components/schemas/ExpiresIn'
          description: "The length of time that you want a zonal shift to be active,\
            \ which ARC converts to an expiry time (expiration time). Zonal shifts\
            \ are temporary. You can set a zonal shift to be active initially for\
            \ up to three days (72 hours).\n\nIf you want to still keep traffic away\
            \ from an Availability Zone, you can update the zonal shift and set a\
            \ new expiration. You can also cancel a zonal shift, before it expires,\
            \ for example, if you're ready to restore traffic to the Availability\
            \ Zone.\n\nTo set a length of time for a zonal shift to be active, specify\
            \ a whole number, and then one of the following, with no space:\n\n  *\
            \ **A lowercase letter m:** To specify that the value is in minutes.\n\
            \n  * **A lowercase letter h:** To specify that the value is in hours.\n\
            \nFor example: `20h` means the zonal shift expires in 20 hours. `120m`\
            \ means the zonal shift expires in 120 minutes (2 hours)."
        comment:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftComment'
          description: A comment that you enter about the zonal shift. Only the latest
            comment is retained; no comment history is maintained. A new comment overwrites
            any existing comment string.
      required:
      - resourceIdentifier
      - awayFrom
      - expiresIn
      - comment
    ThrottlingException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
      description: The request was denied due to request throttling.
    UpdateAutoshiftObserverNotificationStatusRequest:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AutoshiftObserverNotificationStatus'
          description: The status to set for autoshift observer notification. If the
            status is `ENABLED`, ARC includes all autoshift events when you use the
            Amazon EventBridge pattern `Autoshift In Progress`. When the status is
            `DISABLED`, ARC includes only autoshift events for autoshifts when one
            or more of your resources is included in the autoshift.
      required:
      - status
    UpdateAutoshiftObserverNotificationStatusResponse:
      type: object
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/AutoshiftObserverNotificationStatus'
          description: The status for autoshift observer notification.
      required:
      - status
    UpdatePracticeRunConfigurationRequest:
      type: object
      properties:
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: The identifier for the resource that you want to update the
            practice run configuration for. The identifier is the Amazon Resource
            Name (ARN) for the resource.
        blockedWindows:
          allOf:
          - $ref: '#/components/schemas/BlockedWindows'
          description: 'Add, change, or remove windows of days and times for when
            you can, optionally, block ARC from starting a practice run for a resource.


            The format for blocked windows is: DAY:HH:SS-DAY:HH:SS. Keep in mind,
            when you specify dates, that dates and times for practice runs are in
            UTC. Also, be aware of potential time adjustments that might be required
            for daylight saving time differences. Separate multiple blocked windows
            with spaces.


            For example, say you run business report summaries three days a week.
            For this scenario, you might set the following recurring days and times
            as blocked windows, for example: `MON-20:30-21:30 WED-20:30-21:30 FRI-20:30-21:30`.'
        blockedDates:
          allOf:
          - $ref: '#/components/schemas/BlockedDates'
          description: 'Add, change, or remove blocked dates for a practice run in
            zonal autoshift.


            Optionally, you can block practice runs for specific calendar dates. The
            format for blocked dates is: YYYY-MM-DD. Keep in mind, when you specify
            dates, that dates and times for practice runs are in UTC. Separate multiple
            blocked dates with spaces.


            For example, if you have an application update scheduled to launch on
            May 1, 2024, and you don''t want practice runs to shift traffic away at
            that time, you could set a blocked date for `2024-05-01`.'
        blockingAlarms:
          allOf:
          - $ref: '#/components/schemas/ControlConditions'
          description: Add, change, or remove the Amazon CloudWatch alarm that you
            optionally specify as the blocking alarm for practice runs.
        outcomeAlarms:
          allOf:
          - $ref: '#/components/schemas/ControlConditions'
          description: Specify a new the Amazon CloudWatch alarm as the outcome alarm
            for practice runs.
      required:
      - resourceIdentifier
    UpdatePracticeRunConfigurationResponse:
      type: object
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/ResourceArn'
          description: The Amazon Resource Name (ARN) of the resource that you updated
            the practice run for.
        name:
          allOf:
          - $ref: '#/components/schemas/ResourceName'
          description: The name of the resource that you updated the practice run
            for.
        zonalAutoshiftStatus:
          allOf:
          - $ref: '#/components/schemas/ZonalAutoshiftStatus'
          description: The zonal autoshift status for the resource that you updated
            the practice run for.
        practiceRunConfiguration:
          allOf:
          - $ref: '#/components/schemas/PracticeRunConfiguration'
          description: The practice run configuration that was updated.
      required:
      - arn
      - name
      - zonalAutoshiftStatus
      - practiceRunConfiguration
    UpdateZonalAutoshiftConfigurationRequest:
      type: object
      properties:
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: The identifier for the resource that you want to update the
            zonal autoshift configuration for. The identifier is the Amazon Resource
            Name (ARN) for the resource.
        zonalAutoshiftStatus:
          allOf:
          - $ref: '#/components/schemas/ZonalAutoshiftStatus'
          description: The zonal autoshift status for the resource that you want to
            update the zonal autoshift configuration for. Choose `ENABLED` to authorize
            Amazon Web Services to shift away resource traffic for an application
            from an Availability Zone during events, on your behalf, to help reduce
            time to recovery.
      required:
      - resourceIdentifier
      - zonalAutoshiftStatus
    UpdateZonalAutoshiftConfigurationResponse:
      type: object
      properties:
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: The identifier for the resource that you updated the zonal
            autoshift configuration for. The identifier is the Amazon Resource Name
            (ARN) for the resource.
        zonalAutoshiftStatus:
          allOf:
          - $ref: '#/components/schemas/ZonalAutoshiftStatus'
          description: The updated zonal autoshift status for the resource.
      required:
      - resourceIdentifier
      - zonalAutoshiftStatus
    UpdateZonalShiftRequest:
      type: object
      properties:
        zonalShiftId:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftId'
          description: The identifier of a zonal shift.
        comment:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftComment'
          description: A comment that you enter about the zonal shift. Only the latest
            comment is retained; no comment history is maintained. A new comment overwrites
            any existing comment string.
        expiresIn:
          allOf:
          - $ref: '#/components/schemas/ExpiresIn'
          description: "The length of time that you want a zonal shift to be active,\
            \ which ARC converts to an expiry time (expiration time). Zonal shifts\
            \ are temporary. You can set a zonal shift to be active initially for\
            \ up to three days (72 hours).\n\nIf you want to still keep traffic away\
            \ from an Availability Zone, you can update the zonal shift and set a\
            \ new expiration. You can also cancel a zonal shift, before it expires,\
            \ for example, if you're ready to restore traffic to the Availability\
            \ Zone.\n\nTo set a length of time for a zonal shift to be active, specify\
            \ a whole number, and then one of the following, with no space:\n\n  *\
            \ **A lowercase letter m:** To specify that the value is in minutes.\n\
            \n  * **A lowercase letter h:** To specify that the value is in hours.\n\
            \nFor example: `20h` means the zonal shift expires in 20 hours. `120m`\
            \ means the zonal shift expires in 120 minutes (2 hours)."
      required:
      - zonalShiftId
    ValidationException:
      type: object
      properties:
        message:
          $ref: '#/components/schemas/String'
        reason:
          allOf:
          - $ref: '#/components/schemas/ValidationExceptionReason'
          description: The reason for the validation exception.
      required:
      - message
      - reason
      description: The input fails to satisfy the constraints specified by an Amazon
        Web Services service.
    ValidationExceptionReason:
      type: string
      enum:
      - InvalidExpiresIn
      - InvalidStatus
      - MissingValue
      - InvalidToken
      - InvalidResourceIdentifier
      - InvalidAz
      - UnsupportedAz
      - InvalidAlarmCondition
      - InvalidConditionType
      - InvalidPracticeBlocker
      - FISExperimentUpdateNotAllowed
      - AutoshiftUpdateNotAllowed
    Weight:
      type: number
      format: float
      minimum: 0.0
      maximum: 1.0
    ZonalAutoshiftStatus:
      type: string
      enum:
      - ENABLED
      - DISABLED
    ZonalShift:
      type: object
      properties:
        zonalShiftId:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftId'
          description: The identifier of a zonal shift.
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: 'The identifier for the resource that Amazon Web Services shifts
            traffic for. The identifier is the Amazon Resource Name (ARN) for the
            resource.


            At this time, supported resources are Network Load Balancers and Application
            Load Balancers with cross-zone load balancing turned off.'
        awayFrom:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone (for example, `use1-az1`) that traffic
            is moved away from for a resource when you start a zonal shift. Until
            the zonal shift expires or you cancel it, traffic for the resource is
            instead moved to other Availability Zones in the Amazon Web Services Region.
        expiryTime:
          allOf:
          - $ref: '#/components/schemas/ExpiryTime'
          description: 'The expiry time (expiration time) for a customer-initiated
            zonal shift. A zonal shift is temporary and must be set to expire when
            you start the zonal shift. You can initially set a zonal shift to expire
            in a maximum of three days (72 hours). However, you can update a zonal
            shift to set a new expiration at any time.


            When you start a zonal shift, you specify how long you want it to be active,
            which ARC converts to an expiry time (expiration time). You can cancel
            a zonal shift when you''re ready to restore traffic to the Availability
            Zone, or just wait for it to expire. Or you can update the zonal shift
            to specify another length of time to expire in.'
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          description: The time (UTC) when the zonal shift starts.
        status:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftStatus'
          description: "A status for a zonal shift.\n\nThe `Status` for a zonal shift\
            \ can have one of the following values:\n\n  * **ACTIVE:** The zonal shift\
            \ has been started and active.\n\n  * **EXPIRED:** The zonal shift has\
            \ expired (the expiry time was exceeded).\n\n  * **CANCELED:** The zonal\
            \ shift was canceled."
        comment:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftComment'
          description: A comment that you enter about the zonal shift. Only the latest
            comment is retained; no comment history is maintained. A new comment overwrites
            any existing comment string.
      required:
      - zonalShiftId
      - resourceIdentifier
      - awayFrom
      - expiryTime
      - startTime
      - status
      - comment
    ZonalShiftComment:
      type: string
      maxLength: 128
    ZonalShiftId:
      type: string
      pattern: ^[A-Za-z0-9-]+$
      minLength: 6
      maxLength: 36
    ZonalShiftInResource:
      type: object
      properties:
        appliedStatus:
          allOf:
          - $ref: '#/components/schemas/AppliedStatus'
          description: 'The `appliedStatus` field specifies which application traffic
            shift is in effect for a resource when there is more than one active traffic
            shift. There can be more than one application traffic shift in progress
            at the same time - that is, practice run zonal shifts, customer-initiated
            zonal shifts, or an autoshift. The `appliedStatus` field for a shift that
            is in progress for a resource can have one of two values: `APPLIED` or
            `NOT_APPLIED`. The zonal shift or autoshift that is currently in effect
            for the resource has an `appliedStatus` set to `APPLIED`.


            The overall principle for precedence is that zonal shifts that you start
            as a customer take precedence autoshifts, which take precedence over practice
            runs. That is, customer-initiated zonal shifts > autoshifts > practice
            run zonal shifts.


            For more information, see [How zonal autoshift and practice runs work](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.how-it-works.html)
            in the Amazon Route 53 Application Recovery Controller Developer Guide.'
        zonalShiftId:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftId'
          description: The identifier of a zonal shift.
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: 'The identifier for the resource to include in a zonal shift.
            The identifier is the Amazon Resource Name (ARN) for the resource.


            At this time, you can only start a zonal shift for Network Load Balancers
            and Application Load Balancers with cross-zone load balancing turned off.'
        awayFrom:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone (for example, `use1-az1`) that traffic
            is moved away from for a resource when you start a zonal shift. Until
            the zonal shift expires or you cancel it, traffic for the resource is
            instead moved to other Availability Zones in the Amazon Web Services Region.
        expiryTime:
          allOf:
          - $ref: '#/components/schemas/ExpiryTime'
          description: 'The expiry time (expiration time) for a customer-initiated
            zonal shift. A zonal shift is temporary and must be set to expire when
            you start the zonal shift. You can initially set a zonal shift to expire
            in a maximum of three days (72 hours). However, you can update a zonal
            shift to set a new expiration at any time.


            When you start a zonal shift, you specify how long you want it to be active,
            which ARC converts to an expiry time (expiration time). You can cancel
            a zonal shift when you''re ready to restore traffic to the Availability
            Zone, or just wait for it to expire. Or you can update the zonal shift
            to specify another length of time to expire in.'
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          description: The time (UTC) when the zonal shift starts.
        comment:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftComment'
          description: A comment that you enter for a customer-initiated zonal shift.
            Only the latest comment is retained; no comment history is maintained.
            That is, a new comment overwrites any existing comment string.
        shiftType:
          allOf:
          - $ref: '#/components/schemas/ShiftType'
          description: Defines the zonal shift type.
        practiceRunOutcome:
          allOf:
          - $ref: '#/components/schemas/PracticeRunOutcome'
          description: "The outcome, or end state, returned for a practice run. The\
            \ following values can be returned:\n\n  * **PENDING:** Outcome value\
            \ when a practice run is in progress.\n\n  * **SUCCEEDED:** Outcome value\
            \ when the outcome alarm specified for the practice run configuration\
            \ does not go into an `ALARM` state during the practice run, and the practice\
            \ run was not interrupted before it completed the expected 30 minute zonal\
            \ shift.\n\n  * **INTERRUPTED:** Outcome value when the practice run was\
            \ stopped before the expected 30 minute zonal shift duration, or there\
            \ was another problem with the practice run that created an inconclusive\
            \ outcome.\n\n  * **FAILED:** Outcome value when the outcome alarm specified\
            \ for the practice run configuration goes into an `ALARM` state during\
            \ the practice run, and the practice run was not interrupted before it\
            \ completed.\n\nFor more information about practice run outcomes, see\
            \ [ Considerations when you configure zonal autoshift](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.configure.html)\
            \ in the Amazon Route 53 Application Recovery Controller Developer Guide."
      required:
      - appliedStatus
      - zonalShiftId
      - resourceIdentifier
      - awayFrom
      - expiryTime
      - startTime
      - comment
      description: A complex structure that lists the zonal shifts for a managed resource
        and their statuses for the resource.
    ZonalShiftStatus:
      type: string
      enum:
      - ACTIVE
      - EXPIRED
      - CANCELED
    ZonalShiftSummaries:
      type: array
      items:
        $ref: '#/components/schemas/ZonalShiftSummary'
    ZonalShiftSummary:
      type: object
      properties:
        zonalShiftId:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftId'
          description: The identifier of a zonal shift.
        resourceIdentifier:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifier'
          description: 'The identifier for the resource to include in a zonal shift.
            The identifier is the Amazon Resource Name (ARN) for the resource.


            At this time, you can only start a zonal shift for Network Load Balancers
            and Application Load Balancers with cross-zone load balancing turned off.'
        awayFrom:
          allOf:
          - $ref: '#/components/schemas/AvailabilityZone'
          description: The Availability Zone (for example, `use1-az1`) that traffic
            is moved away from for a resource when you start a zonal shift. Until
            the zonal shift expires or you cancel it, traffic for the resource is
            instead moved to other Availability Zones in the Amazon Web Services Region.
        expiryTime:
          allOf:
          - $ref: '#/components/schemas/ExpiryTime'
          description: 'The expiry time (expiration time) for a customer-initiated
            zonal shift. A zonal shift is temporary and must be set to expire when
            you start the zonal shift. You can initially set a zonal shift to expire
            in a maximum of three days (72 hours). However, you can update a zonal
            shift to set a new expiration at any time.


            When you start a zonal shift, you specify how long you want it to be active,
            which ARC converts to an expiry time (expiration time). You can cancel
            a zonal shift when you''re ready to restore traffic to the Availability
            Zone, or just wait for it to expire. Or you can update the zonal shift
            to specify another length of time to expire in.'
        startTime:
          allOf:
          - $ref: '#/components/schemas/StartTime'
          description: The time (UTC) when the zonal shift starts.
        status:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftStatus'
          description: "A status for a zonal shift.\n\nThe `Status` for a zonal shift\
            \ can have one of the following values:\n\n  * **ACTIVE:** The zonal shift\
            \ has been started and active.\n\n  * **EXPIRED:** The zonal shift has\
            \ expired (the expiry time was exceeded).\n\n  * **CANCELED:** The zonal\
            \ shift was canceled."
        comment:
          allOf:
          - $ref: '#/components/schemas/ZonalShiftComment'
          description: A comment that you enter about the zonal shift. Only the latest
            comment is retained; no comment history is maintained. That is, a new
            comment overwrites any existing comment string.
        shiftType:
          allOf:
          - $ref: '#/components/schemas/ShiftType'
          description: Defines the zonal shift type.
        practiceRunOutcome:
          allOf:
          - $ref: '#/components/schemas/PracticeRunOutcome'
          description: "The outcome, or end state, of a practice run. The following\
            \ values can be returned:\n\n  * **PENDING:** Outcome value when the practice\
            \ run is in progress.\n\n  * **SUCCEEDED:** Outcome value when the outcome\
            \ alarm specified for the practice run configuration does not go into\
            \ an `ALARM` state during the practice run, and the practice run was not\
            \ interrupted before it completed.\n\n  * **INTERRUPTED:** Outcome value\
            \ when the practice run did not run for the expected 30 minutes or there\
            \ was another problem with the practice run that created an inconclusive\
            \ outcome.\n\n  * **FAILED:** Outcome value when the outcome alarm specified\
            \ for the practice run configuration goes into an `ALARM` state during\
            \ the practice run, and the practice run was not interrupted before it\
            \ completed.\n\nFor more information about practice run outcomes, see\
            \ [ Considerations when you configure zonal autoshift](https://docs.aws.amazon.com/r53recovery/latest/dg/arc-zonal-autoshift.configure.html)\
            \ in the Amazon Route 53 Application Recovery Controller Developer Guide."
      required:
      - zonalShiftId
      - resourceIdentifier
      - awayFrom
      - expiryTime
      - startTime
      - status
      - comment
      description: 'Lists information about zonal shifts in Amazon Route 53 Application
        Recovery Controller, including zonal shifts that you start yourself and zonal
        shifts that ARC starts on your behalf for practice runs with zonal autoshift.


        Zonal shifts are temporary, including customer-initiated zonal shifts and
        the zonal autoshift practice run zonal shifts that ARC starts weekly, on your
        behalf. A zonal shift that a customer starts can be active for up to three
        days (72 hours). A practice run zonal shift has a 30 minute duration.'
    ZonalShiftsInResource:
      type: array
      items:
        $ref: '#/components/schemas/ZonalShiftInResource'
