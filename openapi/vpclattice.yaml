openapi: 3.1.0
info:
  contact:
    name: StackQL Studios
    url: https://stackql.io/
    email: info@stackql.io
  x-stackql-serviceName: vpc_lattice
  x-aws-serviceName: vpclattice
  x-aws-protocol: aws.protocols#restJson1
  x-dateGenerated: '2025-05-05'
  version: '2022-11-30'
  title: Amazon VPC Lattice
  description: |-
    Amazon VPC Lattice is a fully managed application networking service that you use to connect, secure, and monitor all of your services across multiple accounts and virtual private clouds (VPCs). Amazon VPC Lattice interconnects your microservices and legacy services within a logical boundary, so that you can discover and manage them more efficiently. For more information, see the [Amazon VPC Lattice User Guide](https://docs.aws.amazon.com/vpc-lattice/latest/ug/)
servers:
- description: The Amazon VPC Lattice regional endpoint
  url: https://vpc-lattice.{region}.amazonaws.com
  variables:
    region:
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
      default: us-east-1
paths: {}
components:
  schemas:
    AccessLogDestinationArn:
      type: string
      pattern: ^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$
      minLength: 20
      maxLength: 2048
    AccessLogSubscriptionArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:accesslogsubscription/als-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    AccessLogSubscriptionId:
      type: string
      pattern: ^als-[0-9a-z]{17}$
      minLength: 21
      maxLength: 21
    AccessLogSubscriptionIdentifier:
      type: string
      pattern: ^((als-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:accesslogsubscription/als-[0-9a-z]{17}))$
      minLength: 17
      maxLength: 2048
    AccessLogSubscriptionList:
      type: array
      items:
        $ref: '#/components/schemas/AccessLogSubscriptionSummary'
    AccountId:
      type: string
      pattern: ^[0-9]{12}$
      minLength: 1
      maxLength: 12
    Arn:
      type: string
      pattern: ^arn:[a-z0-9][-.a-z0-9]{0,62}:vpc-lattice:([a-z0-9][-.a-z0-9]{0,62})?:\d{12}?:[^/].{0,1023}$
      maxLength: 1224
    AuthPolicyState:
      type: string
      enum:
      - Active
      - Inactive
    AuthPolicyString:
      type: string
      maxLength: 10000
    AuthType:
      type: string
      enum:
      - NONE
      - AWS_IAM
    Boolean:
      type: boolean
    CertificateArn:
      type: string
      pattern: ^(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:certificate/[0-9a-z-]+)?$
      maxLength: 2048
    ClientToken:
      type: string
      pattern: '[!-~]+'
      minLength: 1
      maxLength: 64
    DomainName:
      type: string
      minLength: 3
      maxLength: 255
    FailureCode:
      type: string
    FailureMessage:
      type: string
    HeaderMatchContains:
      type: string
      minLength: 1
      maxLength: 200
    HeaderMatchExact:
      type: string
      minLength: 1
      maxLength: 200
    HeaderMatchList:
      type: array
      items:
        $ref: '#/components/schemas/HeaderMatch'
    HeaderMatchName:
      type: string
      minLength: 1
      maxLength: 100
    HeaderMatchPrefix:
      type: string
      minLength: 1
      maxLength: 200
    HeaderMatchType:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/HeaderMatchExact'
        description: |-
          An exact type match.
      - allOf:
        - $ref: '#/components/schemas/HeaderMatchPrefix'
        description: |-
          A prefix type match. Matches the value with the prefix.
      - allOf:
        - $ref: '#/components/schemas/HeaderMatchContains'
        description: |-
          A contains type match.
      description: |-
        Describes a header match type.
    HealthCheckIntervalSeconds:
      type: integer
      minimum: 0
      maximum: 300
    HealthCheckPath:
      type: string
      pattern: (^/[a-zA-Z0-9@:%_+.~#?&/=-]*$|(^$))
      minLength: 0
      maxLength: 2048
    HealthCheckPort:
      type: integer
      minimum: 0
      maximum: 65535
    HealthCheckProtocolVersion:
      type: string
      enum:
      - HTTP1
      - HTTP2
    HealthCheckTimeoutSeconds:
      type: integer
      minimum: 0
      maximum: 120
    HealthyThresholdCount:
      type: integer
      minimum: 0
      maximum: 10
    HttpCodeMatcher:
      type: string
      pattern: (^[0-9-,]+$|(^$))
      minLength: 0
      maxLength: 2000
    HttpMethod:
      type: string
      maxLength: 16
    HttpStatusCode:
      type: integer
      minimum: 100
      maximum: 599
    IpAddress:
      type: string
      minLength: 4
      maxLength: 39
    IpAddressType:
      type: string
      enum:
      - IPV4
      - IPV6
    LambdaEventStructureVersion:
      type: string
      enum:
      - V1
      - V2
    ListenerArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    ListenerId:
      type: string
      pattern: ^listener-[0-9a-z]{17}$
      minLength: 26
      maxLength: 26
    ListenerIdentifier:
      type: string
      pattern: ^((listener-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}$))$
      minLength: 20
      maxLength: 2048
    ListenerName:
      type: string
      pattern: ^(?!listener-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$
      minLength: 3
      maxLength: 63
    ListenerProtocol:
      type: string
      enum:
      - HTTP
      - HTTPS
      - TLS_PASSTHROUGH
    ListenerSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ListenerSummary'
    Matcher:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/HttpCodeMatcher'
        description: |-
          The HTTP code to use when checking for a successful response from a target.
      description: |-
        Describes the codes to use when checking for a successful response from a target for health checks.
    MaxResults:
      type: integer
      minimum: 1
      maximum: 100
    NextToken:
      type: string
      minLength: 1
      maxLength: 2048
    PathMatchExact:
      type: string
      pattern: ^/[a-zA-Z0-9@:%_+.~#?&/=-]*$
      minLength: 1
      maxLength: 200
    PathMatchPrefix:
      type: string
      pattern: ^/[a-zA-Z0-9@:%_+.~#?&/=-]*$
      minLength: 1
      maxLength: 200
    PathMatchType:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/PathMatchExact'
        description: |-
          An exact match of the path.
      - allOf:
        - $ref: '#/components/schemas/PathMatchPrefix'
        description: |-
          A prefix match of the path.
      description: |-
        Describes a path match type. Each rule can include only one of the following types of paths.
    PolicyString:
      type: string
      pattern: ^.*\S.*$
      minLength: 1
      maxLength: 10000
    Port:
      type: integer
      minimum: 1
      maximum: 65535
    PortRange:
      type: string
      pattern: ^((\d{1,5}\-\d{1,5})|(\d+))$
      minLength: 1
      maxLength: 11
    PortRangeList:
      type: array
      items:
        $ref: '#/components/schemas/PortRange'
    ProtocolType:
      type: string
      enum:
      - TCP
    ResourceArn:
      type: string
      pattern: ^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(service/svc)|(resourceconfiguration/rcfg))-[0-9a-z]{17}$
      minLength: 20
      maxLength: 200
    ResourceConfigurationArn:
      type: string
      pattern: ^arn:[a-z0-9f\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:resourceconfiguration/rcfg-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    ResourceConfigurationDefinition:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/DnsResource'
        description: |-
          The DNS name of the resource.
      - allOf:
        - $ref: '#/components/schemas/IpResource'
        description: |-
          The IP resource.
      - allOf:
        - $ref: '#/components/schemas/ArnResource'
        description: |-
          The Amazon Resource Name (ARN) of the resource.
      description: |-
        Describes a resource configuration.
    ResourceConfigurationId:
      type: string
      pattern: ^rcfg-[0-9a-z]{17}$
      minLength: 22
      maxLength: 22
    ResourceConfigurationIdentifier:
      type: string
      pattern: ^((rcfg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:resourceconfiguration/rcfg-[0-9a-z]{17}))$
      minLength: 20
      maxLength: 2048
    ResourceConfigurationIpAddressType:
      type: string
      enum:
      - IPV4
      - IPV6
      - DUALSTACK
    ResourceConfigurationName:
      type: string
      pattern: ^(?!rcfg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$
      minLength: 3
      maxLength: 40
    ResourceConfigurationStatus:
      type: string
      enum:
      - ACTIVE
      - CREATE_IN_PROGRESS
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - UPDATE_FAILED
      - DELETE_FAILED
    ResourceConfigurationSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceConfigurationSummary'
    ResourceConfigurationType:
      type: string
      enum:
      - GROUP
      - CHILD
      - SINGLE
      - ARN
    ResourceEndpointAssociationArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:resourceendpointassociation/rea-[0-9a-f]{17}$
      minLength: 21
      maxLength: 2048
    ResourceEndpointAssociationId:
      type: string
      pattern: ^rea-[0-9a-f]{17}$
      minLength: 21
      maxLength: 21
    ResourceEndpointAssociationIdentifier:
      type: string
      pattern: ^((rea-[0-9a-f]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:resourceendpointassociation/rea-[0-9a-f]{17}))$
      minLength: 21
      maxLength: 2048
    ResourceEndpointAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceEndpointAssociationSummary'
    ResourceGatewayArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:resourcegateway/rgw-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    ResourceGatewayId:
      type: string
      pattern: ^rgw-[0-9a-z]{17}$
      minLength: 21
      maxLength: 21
    ResourceGatewayIdentifier:
      type: string
      pattern: ^((rgw-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:resourcegateway/rgw-[0-9a-z]{17}))$
      minLength: 17
      maxLength: 2048
    ResourceGatewayIpAddressType:
      type: string
      enum:
      - IPV4
      - IPV6
      - DUALSTACK
    ResourceGatewayList:
      type: array
      items:
        $ref: '#/components/schemas/ResourceGatewaySummary'
    ResourceGatewayName:
      type: string
      pattern: ^(?!rgw-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$
      minLength: 3
      maxLength: 40
    ResourceGatewayStatus:
      type: string
      enum:
      - ACTIVE
      - CREATE_IN_PROGRESS
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - UPDATE_FAILED
      - DELETE_FAILED
    ResourceId:
      type: string
      pattern: ^((sn)|(svc))-[0-9a-z]{17}$
      minLength: 20
      maxLength: 50
    ResourceIdentifier:
      type: string
      pattern: ^((((sn)|(svc)|(rcfg))-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:((servicenetwork/sn)|(resourceconfiguration/rcfg)|(service/svc))-[0-9a-z]{17}))$
      minLength: 17
      maxLength: 200
    RuleAction:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/ForwardAction'
        description: |-
          The forward action. Traffic that matches the rule is forwarded to the specified target groups.
      - allOf:
        - $ref: '#/components/schemas/FixedResponseAction'
        description: |-
          The fixed response action. The rule returns a custom HTTP response.
      description: |-
        Describes the action for a rule.
    RuleArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    RuleId:
      type: string
      pattern: ^rule-[0-9a-z]{17}$
      minLength: 5
      maxLength: 22
    RuleIdentifier:
      type: string
      pattern: ^((rule-[0-9a-z]{17})|(^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}/rule/rule-[0-9a-z]{17}$))$
      minLength: 20
      maxLength: 2048
    RuleMatch:
      allOf:
      - allOf:
        - $ref: '#/components/schemas/HttpMatch'
        description: |-
          The HTTP criteria that a rule must match.
      description: |-
        Describes a rule match.
    RuleName:
      type: string
      pattern: ^(?!rule-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$
      minLength: 3
      maxLength: 63
    RulePriority:
      type: integer
      minimum: 1
      maximum: 100
    RuleSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/RuleSummary'
    RuleUpdateFailureList:
      type: array
      items:
        $ref: '#/components/schemas/RuleUpdateFailure'
    RuleUpdateList:
      type: array
      items:
        $ref: '#/components/schemas/RuleUpdate'
    RuleUpdateSuccessList:
      type: array
      items:
        $ref: '#/components/schemas/RuleUpdateSuccess'
    SecurityGroupId:
      type: string
      pattern: ^sg-(([0-9a-z]{8})|([0-9a-z]{17}))$
      minLength: 5
      maxLength: 200
    SecurityGroupList:
      type: array
      items:
        $ref: '#/components/schemas/SecurityGroupId'
    ServiceArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    ServiceArnList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceArn'
    ServiceCustomDomainName:
      type: string
      minLength: 3
      maxLength: 255
    ServiceId:
      type: string
      pattern: ^svc-[0-9a-z]{17}$
      minLength: 21
      maxLength: 21
    ServiceIdentifier:
      type: string
      pattern: ^((svc-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:service/svc-[0-9a-z]{17}))$
      minLength: 17
      maxLength: 2048
    ServiceList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceSummary'
    ServiceLoadBalancerAssociationIdentifier:
      type: string
      pattern: ^((slba-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:serviceloadbalancerassociation/slba-[0-9a-z]{17}))$
      minLength: 17
      maxLength: 200
    ServiceName:
      type: string
      pattern: ^(?!svc-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$
      minLength: 3
      maxLength: 40
    ServiceNetworkArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}$
      minLength: 32
      maxLength: 2048
    ServiceNetworkArnWithoutRegex:
      type: string
      minLength: 10
      maxLength: 2048
    ServiceNetworkId:
      type: string
      pattern: ^sn-[0-9a-z]{17}$
      minLength: 20
      maxLength: 20
    ServiceNetworkIdentifier:
      type: string
      pattern: ^((sn-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetwork/sn-[0-9a-z]{17}))$
      minLength: 3
      maxLength: 2048
    ServiceNetworkIdentifierWithoutRegex:
      type: string
      minLength: 3
      maxLength: 2048
    ServiceNetworkList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNetworkSummary'
    ServiceNetworkLogType:
      type: string
      enum:
      - SERVICE
      - RESOURCE
    ServiceNetworkName:
      type: string
      pattern: ^(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$
      minLength: 3
      maxLength: 63
    ServiceNetworkNameWithoutRegex:
      type: string
      minLength: 3
      maxLength: 100
    ServiceNetworkResourceAssociationArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkresourceassociation/snra-[0-9a-f]{17}$
      minLength: 22
      maxLength: 2048
    ServiceNetworkResourceAssociationId:
      type: string
      pattern: ^snra-[0-9a-f]{17}$
      minLength: 22
      maxLength: 22
    ServiceNetworkResourceAssociationIdentifier:
      type: string
      pattern: ^((snra-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkresourceassociation/snra-[0-9a-f]{17}))$
      minLength: 22
      maxLength: 2048
    ServiceNetworkResourceAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNetworkResourceAssociationSummary'
    ServiceNetworkResourceAssociationStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - ACTIVE
      - PARTIAL
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
    ServiceNetworkServiceAssociationArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    ServiceNetworkServiceAssociationIdentifier:
      type: string
      pattern: ^((snsa-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkserviceassociation/snsa-[0-9a-z]{17}))$
      minLength: 17
      maxLength: 2048
    ServiceNetworkServiceAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNetworkServiceAssociationSummary'
    ServiceNetworkServiceAssociationStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - ACTIVE
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
    ServiceNetworkVpcAssociationArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    ServiceNetworkVpcAssociationId:
      type: string
      pattern: ^snva-[0-9a-z]{17}$
      minLength: 22
      maxLength: 22
    ServiceNetworkVpcAssociationIdentifier:
      type: string
      pattern: ^((snva-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:servicenetworkvpcassociation/snva-[0-9a-z]{17}))$
      minLength: 17
      maxLength: 2048
    ServiceNetworkVpcAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNetworkVpcAssociationSummary'
    ServiceNetworkVpcAssociationStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - ACTIVE
      - UPDATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
      - UPDATE_FAILED
    ServiceNetworkVpcEndpointAssociationList:
      type: array
      items:
        $ref: '#/components/schemas/ServiceNetworkEndpointAssociation'
    ServiceStatus:
      type: string
      enum:
      - ACTIVE
      - CREATE_IN_PROGRESS
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
    SubnetId:
      type: string
      minLength: 5
      maxLength: 200
    SubnetList:
      type: array
      items:
        $ref: '#/components/schemas/SubnetId'
    TagKey:
      type: string
      minLength: 1
      maxLength: 128
    TagKeys:
      type: array
      items:
        $ref: '#/components/schemas/TagKey'
    TagMap:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
    TagValue:
      type: string
      minLength: 0
      maxLength: 256
    TargetFailureList:
      type: array
      items:
        $ref: '#/components/schemas/TargetFailure'
    TargetGroupArn:
      type: string
      pattern: ^arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}$
      minLength: 20
      maxLength: 2048
    TargetGroupId:
      type: string
      pattern: ^tg-[0-9a-z]{17}$
      minLength: 20
      maxLength: 20
    TargetGroupIdentifier:
      type: string
      pattern: ^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$
      minLength: 17
      maxLength: 2048
    TargetGroupList:
      type: array
      items:
        $ref: '#/components/schemas/TargetGroupSummary'
    TargetGroupName:
      type: string
      pattern: ^(?!tg-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$
      minLength: 3
      maxLength: 128
    TargetGroupProtocol:
      type: string
      enum:
      - HTTP
      - HTTPS
      - TCP
    TargetGroupProtocolVersion:
      type: string
      enum:
      - HTTP1
      - HTTP2
      - GRPC
    TargetGroupStatus:
      type: string
      enum:
      - CREATE_IN_PROGRESS
      - ACTIVE
      - DELETE_IN_PROGRESS
      - CREATE_FAILED
      - DELETE_FAILED
    TargetGroupType:
      type: string
      enum:
      - IP
      - LAMBDA
      - INSTANCE
      - ALB
    TargetGroupWeight:
      type: integer
      minimum: 0
      maximum: 999
    TargetList:
      type: array
      items:
        $ref: '#/components/schemas/Target'
    TargetStatus:
      type: string
      enum:
      - DRAINING
      - UNAVAILABLE
      - HEALTHY
      - UNHEALTHY
      - INITIAL
      - UNUSED
    TargetSummaryList:
      type: array
      items:
        $ref: '#/components/schemas/TargetSummary'
    Timestamp:
      type: string
      format: date-time
    UnhealthyThresholdCount:
      type: integer
      minimum: 0
      maximum: 10
    ValidationExceptionFieldList:
      type: array
      items:
        $ref: '#/components/schemas/ValidationExceptionField'
    ValidationExceptionReason:
      type: string
      enum:
      - unknownOperation
      - cannotParse
      - fieldValidationFailed
      - other
    VpcEndpointId:
      type: string
      pattern: ^vpce-[0-9a-f]{17}$
      minLength: 22
      maxLength: 22
    VpcEndpointOwner:
      type: string
      pattern: ^\d{12}$
      minLength: 12
      maxLength: 12
    VpcId:
      type: string
      pattern: ^vpc-(([0-9a-z]{8})|([0-9a-z]{17}))$
      minLength: 5
      maxLength: 50
    WeightedTargetGroupList:
      type: array
      items:
        $ref: '#/components/schemas/WeightedTargetGroup'
    WildcardArn:
      type: string
      pattern: ^arn:[a-z0-9][-.a-z0-9]{0,62}:[a-z0-9][-.a-z0-9]{0,62}:([a-z0-9][-.a-z0-9]{0,62})?:\d{12}?:[^/].{0,1023}$
      minLength: 20
      maxLength: 2048
